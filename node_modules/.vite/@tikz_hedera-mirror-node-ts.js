import {
  require_axios
} from "./chunk-FNDCWHCY.js";
import {
  __commonJS
} from "./chunk-2HKET77T.js";

// node_modules/@tikz/hedera-mirror-node-ts/dist/RestMirrorNode/baseClasses/BaseMirrorClient.js
var require_BaseMirrorClient = __commonJS({
  "node_modules/@tikz/hedera-mirror-node-ts/dist/RestMirrorNode/baseClasses/BaseMirrorClient.js"(exports) {
    "use strict";
    Object.defineProperty(exports, "__esModule", { value: true });
  }
});

// node_modules/@tikz/hedera-mirror-node-ts/dist/RestMirrorNode/baseClasses/BaseMirrorNode.js
var require_BaseMirrorNode = __commonJS({
  "node_modules/@tikz/hedera-mirror-node-ts/dist/RestMirrorNode/baseClasses/BaseMirrorNode.js"(exports) {
    "use strict";
    Object.defineProperty(exports, "__esModule", { value: true });
    exports.BaseMirrorNode = void 0;
    var BaseMirrorNode = class {
      constructor(mirrorClient) {
        this.mirrorClient = mirrorClient;
        this.fetch = (url) => {
          return this.mirrorClient.fetch(url, {});
        };
      }
    };
    exports.BaseMirrorNode = BaseMirrorNode;
  }
});

// node_modules/@tikz/hedera-mirror-node-ts/dist/RestMirrorNode/baseClasses/HasMoreMirrorNode.js
var require_HasMoreMirrorNode = __commonJS({
  "node_modules/@tikz/hedera-mirror-node-ts/dist/RestMirrorNode/baseClasses/HasMoreMirrorNode.js"(exports) {
    "use strict";
    Object.defineProperty(exports, "__esModule", { value: true });
    exports.HasMoreMirrorNode = void 0;
    var __1 = require_RestMirrorNode();
    var BaseMirrorNode_1 = require_BaseMirrorNode();
    var HasMoreMirrorNode = class extends BaseMirrorNode_1.BaseMirrorNode {
      constructor() {
        super(...arguments);
        this.basicParams = {};
        this.fetch = async (url) => {
          var _a;
          const res = await this.mirrorClient.fetch(url, this.completeParams);
          this.nextLink = (_a = res.links) === null || _a === void 0 ? void 0 : _a.next;
          return res;
        };
      }
      order(order) {
        this.basicParams[__1.filterKeys.ORDER] = order;
        return this;
      }
      setLimit(limit) {
        this.basicParams[__1.filterKeys.LIMIT] = limit;
        return this;
      }
      timestamp(timestamp) {
        this.basicParams[__1.filterKeys.TIMESTAMP] = timestamp;
        return this;
      }
      get completeParams() {
        return Object.assign(Object.assign({}, this.basicParams), this.params);
      }
      async next() {
        var _a;
        if (!this.nextLink)
          return null;
        const res = await this.mirrorClient.fetch(this.nextLink, {});
        this.nextLink = (_a = res.links) === null || _a === void 0 ? void 0 : _a.next;
        return res;
      }
    };
    exports.HasMoreMirrorNode = HasMoreMirrorNode;
  }
});

// node_modules/@tikz/hedera-mirror-node-ts/dist/RestMirrorNode/baseClasses/BasicParams.js
var require_BasicParams = __commonJS({
  "node_modules/@tikz/hedera-mirror-node-ts/dist/RestMirrorNode/baseClasses/BasicParams.js"(exports) {
    "use strict";
    Object.defineProperty(exports, "__esModule", { value: true });
    var __1 = require_RestMirrorNode();
  }
});

// node_modules/@tikz/hedera-mirror-node-ts/dist/RestMirrorNode/baseClasses/index.js
var require_baseClasses = __commonJS({
  "node_modules/@tikz/hedera-mirror-node-ts/dist/RestMirrorNode/baseClasses/index.js"(exports) {
    "use strict";
    var __createBinding = exports && exports.__createBinding || (Object.create ? function(o, m, k, k2) {
      if (k2 === void 0)
        k2 = k;
      Object.defineProperty(o, k2, { enumerable: true, get: function() {
        return m[k];
      } });
    } : function(o, m, k, k2) {
      if (k2 === void 0)
        k2 = k;
      o[k2] = m[k];
    });
    var __exportStar = exports && exports.__exportStar || function(m, exports2) {
      for (var p in m)
        if (p !== "default" && !Object.prototype.hasOwnProperty.call(exports2, p))
          __createBinding(exports2, m, p);
    };
    Object.defineProperty(exports, "__esModule", { value: true });
    __exportStar(require_BaseMirrorClient(), exports);
    __exportStar(require_BaseMirrorNode(), exports);
    __exportStar(require_HasMoreMirrorNode(), exports);
    __exportStar(require_BasicParams(), exports);
  }
});

// node_modules/@tikz/hedera-mirror-node-ts/dist/RestMirrorNode/helpers/TransactionType.js
var require_TransactionType = __commonJS({
  "node_modules/@tikz/hedera-mirror-node-ts/dist/RestMirrorNode/helpers/TransactionType.js"(exports) {
    "use strict";
    Object.defineProperty(exports, "__esModule", { value: true });
    exports.TransactionType = void 0;
    var TransactionType;
    (function(TransactionType2) {
      TransactionType2["CONSENSUSCREATETOPIC"] = "CONSENSUSCREATETOPIC";
      TransactionType2["CONSENSUSDELETETOPIC"] = "CONSENSUSDELETETOPIC";
      TransactionType2["CONSENSUSSUBMITMESSAGE"] = "CONSENSUSSUBMITMESSAGE";
      TransactionType2["CONSENSUSUPDATETOPIC"] = "CONSENSUSUPDATETOPIC";
      TransactionType2["CONTRACTCALL"] = "CONTRACTCALL";
      TransactionType2["CONTRACTCREATEINSTANCE"] = "CONTRACTCREATEINSTANCE";
      TransactionType2["CONTRACTDELETEINSTANCE"] = "CONTRACTDELETEINSTANCE";
      TransactionType2["CONTRACTUPDATEINSTANCE"] = "CONTRACTUPDATEINSTANCE";
      TransactionType2["CRYPTOADDLIVEHASH"] = "CRYPTOADDLIVEHASH";
      TransactionType2["CRYPTOCREATEACCOUNT"] = "CRYPTOCREATEACCOUNT";
      TransactionType2["CRYPTODELETE"] = "CRYPTODELETE";
      TransactionType2["CRYPTODELETELIVEHASH"] = "CRYPTODELETELIVEHASH";
      TransactionType2["CRYPTOTRANSFER"] = "CRYPTOTRANSFER";
      TransactionType2["CRYPTOUPDATEACCOUNT"] = "CRYPTOUPDATEACCOUNT";
      TransactionType2["FILEAPPEND"] = "FILEAPPEND";
      TransactionType2["FILECREATE"] = "FILECREATE";
      TransactionType2["FILEDELETE"] = "FILEDELETE";
      TransactionType2["FILEUPDATE"] = "FILEUPDATE";
      TransactionType2["FREEZE"] = "FREEZE";
      TransactionType2["SCHEDULECREATE"] = "SCHEDULECREATE";
      TransactionType2["SCHEDULEDELETE"] = "SCHEDULEDELETE";
      TransactionType2["SCHEDULESIGN"] = "SCHEDULESIGN";
      TransactionType2["SYSTEMDELETE"] = "SYSTEMDELETE";
      TransactionType2["SYSTEMUNDELETE"] = "SYSTEMUNDELETE";
      TransactionType2["TOKENASSOCIATE"] = "TOKENASSOCIATE";
      TransactionType2["TOKENBURN"] = "TOKENBURN";
      TransactionType2["TOKENCREATION"] = "TOKENCREATION";
      TransactionType2["TOKENDELETION"] = "TOKENDELETION";
      TransactionType2["TOKENDISSOCIATE"] = "TOKENDISSOCIATE";
      TransactionType2["TOKENFEESCHEDULEUPDATE"] = "TOKENFEESCHEDULEUPDATE";
      TransactionType2["TOKENFREEZE"] = "TOKENFREEZE";
      TransactionType2["TOKENGRANTKYC"] = "TOKENGRANTKYC";
      TransactionType2["TOKENMINT"] = "TOKENMINT";
      TransactionType2["TOKENPAUSE"] = "TOKENPAUSE";
      TransactionType2["TOKENREVOKEKYC"] = "TOKENREVOKEKYC";
      TransactionType2["TOKENUNFREEZE"] = "TOKENUNFREEZE";
      TransactionType2["TOKENUNPAUSE"] = "TOKENUNPAUSE";
      TransactionType2["TOKENUPDATE"] = "TOKENUPDATE";
      TransactionType2["TOKENWIPE"] = "TOKENWIPE";
      TransactionType2["UNCHECKEDSUBMIT"] = "UNCHECKEDSUBMIT";
    })(TransactionType = exports.TransactionType || (exports.TransactionType = {}));
  }
});

// node_modules/@tikz/hedera-mirror-node-ts/dist/RestMirrorNode/helpers/OptionalFilters.js
var require_OptionalFilters = __commonJS({
  "node_modules/@tikz/hedera-mirror-node-ts/dist/RestMirrorNode/helpers/OptionalFilters.js"(exports) {
    "use strict";
    Object.defineProperty(exports, "__esModule", { value: true });
    exports.optionalFilters = void 0;
    exports.optionalFilters = {
      greaterThan(val) {
        return `gt:${val}`;
      },
      greaterThanEqualTo(val) {
        return `gte:${val}`;
      },
      lessThan(val) {
        return `lt:${val}`;
      },
      lessThanEqualTo(val) {
        return `lte:${val}`;
      },
      notEqualTo(val) {
        return `ne:${val}`;
      },
      equalTo(val) {
        return `eq:${val}`;
      }
    };
  }
});

// node_modules/@tikz/hedera-mirror-node-ts/dist/RestMirrorNode/helpers/filterKeys.js
var require_filterKeys = __commonJS({
  "node_modules/@tikz/hedera-mirror-node-ts/dist/RestMirrorNode/helpers/filterKeys.js"(exports) {
    "use strict";
    Object.defineProperty(exports, "__esModule", { value: true });
    exports.filterKeys = void 0;
    var filterKeys;
    (function(filterKeys2) {
      filterKeys2["ACCOUNT_ID"] = "account.id";
      filterKeys2["ACCOUNT_BALANCE"] = "account.balance";
      filterKeys2["ACCOUNT_PUBLICKEY"] = "account.publickey";
      filterKeys2["BALANCE"] = "balance";
      filterKeys2["CONTRACTID"] = "contractid";
      filterKeys2["CONTRACT_ID"] = "contract.id";
      filterKeys2["CREDIT_TYPE"] = "type";
      filterKeys2["ENCODING"] = "encoding";
      filterKeys2["FROM"] = "from";
      filterKeys2["ENTITY_PUBLICKEY"] = "publickey";
      filterKeys2["INDEX"] = "index";
      filterKeys2["LIMIT"] = "limit";
      filterKeys2["NONCE"] = "nonce";
      filterKeys2["ORDER"] = "order";
      filterKeys2["RESULT"] = "result";
      filterKeys2["SCHEDULED"] = "scheduled";
      filterKeys2["SCHEDULEID"] = "scheduleid";
      filterKeys2["SCHEDULE_ID"] = "schedule.id";
      filterKeys2["SERIAL_NUMBER"] = "serialnumber";
      filterKeys2["SEQUENCE_NUMBER"] = "sequencenumber";
      filterKeys2["TIMESTAMP"] = "timestamp";
      filterKeys2["TOKENID"] = "tokenid";
      filterKeys2["TOKEN_ID"] = "token.id";
      filterKeys2["TOKEN_TYPE"] = "type";
      filterKeys2["TOPIC_ID"] = "topic.id";
      filterKeys2["TRANSACTION_TYPE"] = "transactiontype";
    })(filterKeys = exports.filterKeys || (exports.filterKeys = {}));
  }
});

// node_modules/@tikz/hedera-mirror-node-ts/dist/RestMirrorNode/helpers/TokenTypeFilter.js
var require_TokenTypeFilter = __commonJS({
  "node_modules/@tikz/hedera-mirror-node-ts/dist/RestMirrorNode/helpers/TokenTypeFilter.js"(exports) {
    "use strict";
    Object.defineProperty(exports, "__esModule", { value: true });
    exports.TokenTypeFilter = void 0;
    var TokenTypeFilter;
    (function(TokenTypeFilter2) {
      TokenTypeFilter2["ALL"] = "all";
      TokenTypeFilter2["FUNGIBLE_COMMON"] = "fungible_common";
      TokenTypeFilter2["NON_FUNGIBLE_UNIQUE"] = "non_fungible_unique";
    })(TokenTypeFilter = exports.TokenTypeFilter || (exports.TokenTypeFilter = {}));
  }
});

// node_modules/@tikz/hedera-mirror-node-ts/dist/RestMirrorNode/helpers/index.js
var require_helpers = __commonJS({
  "node_modules/@tikz/hedera-mirror-node-ts/dist/RestMirrorNode/helpers/index.js"(exports) {
    "use strict";
    var __createBinding = exports && exports.__createBinding || (Object.create ? function(o, m, k, k2) {
      if (k2 === void 0)
        k2 = k;
      Object.defineProperty(o, k2, { enumerable: true, get: function() {
        return m[k];
      } });
    } : function(o, m, k, k2) {
      if (k2 === void 0)
        k2 = k;
      o[k2] = m[k];
    });
    var __exportStar = exports && exports.__exportStar || function(m, exports2) {
      for (var p in m)
        if (p !== "default" && !Object.prototype.hasOwnProperty.call(exports2, p))
          __createBinding(exports2, m, p);
    };
    Object.defineProperty(exports, "__esModule", { value: true });
    __exportStar(require_TransactionType(), exports);
    __exportStar(require_OptionalFilters(), exports);
    __exportStar(require_filterKeys(), exports);
    __exportStar(require_TokenTypeFilter(), exports);
  }
});

// node_modules/@tikz/hedera-mirror-node-ts/dist/RestMirrorNode/Accounts.js
var require_Accounts = __commonJS({
  "node_modules/@tikz/hedera-mirror-node-ts/dist/RestMirrorNode/Accounts.js"(exports) {
    "use strict";
    Object.defineProperty(exports, "__esModule", { value: true });
    exports.Accounts = void 0;
    var _1 = require_RestMirrorNode();
    var {} = _1.TransactionType;
    var Accounts = class extends _1.HasMoreMirrorNode {
      constructor(mirrorNodeClient, url, accountId) {
        super(mirrorNodeClient);
        this.url = url;
        this.params = {};
        if (accountId)
          this.setAccountId(accountId);
      }
      static v1(mirrorNodeClient, accountId) {
        return new this(mirrorNodeClient, "/api/v1/accounts", accountId);
      }
      setBalance(val) {
        this.params[_1.filterKeys.ACCOUNT_BALANCE] = val;
        return this;
      }
      setAccountId(val) {
        this.params[_1.filterKeys.ACCOUNT_ID] = val;
        return this;
      }
      setPublicKey(val) {
        this.params[_1.filterKeys.ACCOUNT_PUBLICKEY] = val;
        return this;
      }
      setTransactionType(val) {
        this.params[_1.filterKeys.TRANSACTION_TYPE] = val;
        return this;
      }
      async get() {
        return this.fetch(this.url);
      }
    };
    exports.Accounts = Accounts;
  }
});

// node_modules/@tikz/hedera-mirror-node-ts/dist/RestMirrorNode/NetworkSupply.js
var require_NetworkSupply = __commonJS({
  "node_modules/@tikz/hedera-mirror-node-ts/dist/RestMirrorNode/NetworkSupply.js"(exports) {
    "use strict";
    Object.defineProperty(exports, "__esModule", { value: true });
    exports.NetworkSupply = void 0;
    var _1 = require_RestMirrorNode();
    var NetworkSupply = class extends _1.BaseMirrorNode {
      constructor(mirrorNodeClient, url) {
        super(mirrorNodeClient);
        this.url = url;
        this.params = {};
      }
      static v1(mirrorNodeClient) {
        return new this(mirrorNodeClient, `/api/v1/network/supply`);
      }
      async get() {
        return this.fetch(this.url);
      }
    };
    exports.NetworkSupply = NetworkSupply;
  }
});

// node_modules/@tikz/hedera-mirror-node-ts/dist/RestMirrorNode/Transactions.js
var require_Transactions = __commonJS({
  "node_modules/@tikz/hedera-mirror-node-ts/dist/RestMirrorNode/Transactions.js"(exports) {
    "use strict";
    Object.defineProperty(exports, "__esModule", { value: true });
    exports.Transactions = void 0;
    var _1 = require_RestMirrorNode();
    var Transactions = class extends _1.HasMoreMirrorNode {
      constructor(mirrorNodeClient, url, accountId) {
        super(mirrorNodeClient);
        this.url = url;
        this.params = {};
        if (accountId)
          this.setAccountId(accountId);
      }
      static v1(mirrorNodeClient, accountId) {
        return new this(mirrorNodeClient, "/api/v1/transactions", accountId);
      }
      setAccountId(val) {
        this.params[_1.filterKeys.ACCOUNT_ID] = val;
        return this;
      }
      setResult(val) {
        this.params[_1.filterKeys.RESULT] = val;
        return this;
      }
      setType(val) {
        this.params[_1.filterKeys.CREDIT_TYPE] = val;
        return this;
      }
      setTransactionType(val) {
        this.params[_1.filterKeys.TRANSACTION_TYPE] = val;
        return this;
      }
      async get() {
        return this.fetch(this.url);
      }
    };
    exports.Transactions = Transactions;
  }
});

// node_modules/@tikz/hedera-mirror-node-ts/dist/RestMirrorNode/TopicMessages.js
var require_TopicMessages = __commonJS({
  "node_modules/@tikz/hedera-mirror-node-ts/dist/RestMirrorNode/TopicMessages.js"(exports) {
    "use strict";
    Object.defineProperty(exports, "__esModule", { value: true });
    exports.TopicMessages = void 0;
    var filterKeys_1 = require_filterKeys();
    var HasMoreMirrorNode_1 = require_HasMoreMirrorNode();
    var TopicMessages = class extends HasMoreMirrorNode_1.HasMoreMirrorNode {
      constructor(mirrorNodeClient, url, topicId) {
        super(mirrorNodeClient);
        this.url = url;
        this.topicId = topicId;
        this.params = {};
      }
      static v1(mirrorNodeClient, topicId) {
        return new this(mirrorNodeClient, `/api/v1/topics`, topicId);
      }
      sequenceNumber(val) {
        this.params[filterKeys_1.filterKeys.SEQUENCE_NUMBER] = val;
        return this;
      }
      setTopicId(val) {
        this.topicId = val;
        return this;
      }
      async get() {
        return this.fetch(`${this.url}/${this.topicId}/messages`);
      }
    };
    exports.TopicMessages = TopicMessages;
  }
});

// node_modules/@tikz/hedera-mirror-node-ts/dist/RestMirrorNode/SmartContract.js
var require_SmartContract = __commonJS({
  "node_modules/@tikz/hedera-mirror-node-ts/dist/RestMirrorNode/SmartContract.js"(exports) {
    "use strict";
    Object.defineProperty(exports, "__esModule", { value: true });
    exports.SmartContracts = void 0;
    var filterKeys_1 = require_filterKeys();
    var HasMoreMirrorNode_1 = require_HasMoreMirrorNode();
    var SmartContracts = class extends HasMoreMirrorNode_1.HasMoreMirrorNode {
      constructor(mirrorNodeClient, url, topicId) {
        super(mirrorNodeClient);
        this.url = url;
        this.topicId = topicId;
        this.params = {};
      }
      static v1(mirrorNodeClient, topicId) {
        return new this(mirrorNodeClient, `/api/v1/contracts`, topicId);
      }
      setSmartContractId(val) {
        this.params[filterKeys_1.filterKeys.CONTRACT_ID] = val;
        return this;
      }
      async get() {
        return this.fetch(this.url);
      }
    };
    exports.SmartContracts = SmartContracts;
  }
});

// node_modules/@tikz/hedera-mirror-node-ts/dist/RestMirrorNode/tokenBaseClasses/Tokens.js
var require_Tokens = __commonJS({
  "node_modules/@tikz/hedera-mirror-node-ts/dist/RestMirrorNode/tokenBaseClasses/Tokens.js"(exports) {
    "use strict";
    Object.defineProperty(exports, "__esModule", { value: true });
    exports.Tokens = void 0;
    var __1 = require_RestMirrorNode();
    var Tokens = class extends __1.HasMoreMirrorNode {
      constructor(mirrorClient, url) {
        super(mirrorClient);
        this.url = url;
        this.params = {};
      }
      static v1(mirrorClient) {
        return new this(mirrorClient, "/api/v1/tokens");
      }
      setPublicKey(val) {
        this.params[__1.filterKeys.ACCOUNT_PUBLICKEY] = val;
        return this;
      }
      setTokenId(val) {
        this.params[__1.filterKeys.TOKEN_ID] = val;
        return this;
      }
      setTokenType(val) {
        this.params["type"] = val;
        return this;
      }
      setAccountId(val) {
        this.params[__1.filterKeys.ACCOUNT_ID] = val;
        return this;
      }
      get() {
        return this.fetch(this.url);
      }
    };
    exports.Tokens = Tokens;
  }
});

// node_modules/@tikz/hedera-mirror-node-ts/dist/RestMirrorNode/tokenBaseClasses/TokenBalances.js
var require_TokenBalances = __commonJS({
  "node_modules/@tikz/hedera-mirror-node-ts/dist/RestMirrorNode/tokenBaseClasses/TokenBalances.js"(exports) {
    "use strict";
    Object.defineProperty(exports, "__esModule", { value: true });
    exports.TokenBalances = void 0;
    var __1 = require_RestMirrorNode();
    var TokenBalances = class extends __1.HasMoreMirrorNode {
      constructor(mirrorClient, url, tokenId) {
        super(mirrorClient);
        this.url = url;
        this.params = {};
        this.tokenId = "";
        if (tokenId)
          this.tokenId = tokenId;
      }
      static v1(mirrorClient, tokenId) {
        return new this(mirrorClient, `/api/v1/tokens`, tokenId);
      }
      setPublicKey(val) {
        this.params[__1.filterKeys.ACCOUNT_PUBLICKEY] = val;
        return this;
      }
      setAccountBalance(val) {
        this.params[__1.filterKeys.ACCOUNT_BALANCE] = val;
        return this;
      }
      setAccountId(val) {
        this.params[__1.filterKeys.ACCOUNT_ID] = val;
        return this;
      }
      setTokenId(val) {
        this.tokenId = val;
        return this;
      }
      get() {
        if (!this.tokenId)
          throw new Error("no token id");
        return this.fetch(`${this.url}/${this.tokenId}/balances`);
      }
    };
    exports.TokenBalances = TokenBalances;
  }
});

// node_modules/@tikz/hedera-mirror-node-ts/dist/RestMirrorNode/tokenBaseClasses/TokenInfo.js
var require_TokenInfo = __commonJS({
  "node_modules/@tikz/hedera-mirror-node-ts/dist/RestMirrorNode/tokenBaseClasses/TokenInfo.js"(exports) {
    "use strict";
    Object.defineProperty(exports, "__esModule", { value: true });
    exports.TokenInfo = void 0;
    var _1 = require_tokenBaseClasses();
    var __1 = require_RestMirrorNode();
    var TokenInfo = class extends __1.BaseMirrorNode {
      constructor(mirrorNodeClient, url, tokenId) {
        super(mirrorNodeClient);
        this.url = url;
        this.tokenId = "";
        if (tokenId)
          this.tokenId = tokenId;
      }
      static v1(mirrorNodeClient, tokenId) {
        return new this(mirrorNodeClient, "/api/v1/tokens", tokenId);
      }
      async get() {
        if (!this.tokenId)
          throw new Error("no token id");
        return this.fetch(`${this.url}/${this.tokenId}`);
      }
      get TokenBalances() {
        return new _1.TokenBalances(this.mirrorClient, this.url, this.tokenId);
      }
      setTokenId(val) {
        this.tokenId = val;
        return this;
      }
    };
    exports.TokenInfo = TokenInfo;
  }
});

// node_modules/@tikz/hedera-mirror-node-ts/dist/RestMirrorNode/tokenBaseClasses/index.js
var require_tokenBaseClasses = __commonJS({
  "node_modules/@tikz/hedera-mirror-node-ts/dist/RestMirrorNode/tokenBaseClasses/index.js"(exports) {
    "use strict";
    var __createBinding = exports && exports.__createBinding || (Object.create ? function(o, m, k, k2) {
      if (k2 === void 0)
        k2 = k;
      Object.defineProperty(o, k2, { enumerable: true, get: function() {
        return m[k];
      } });
    } : function(o, m, k, k2) {
      if (k2 === void 0)
        k2 = k;
      o[k2] = m[k];
    });
    var __exportStar = exports && exports.__exportStar || function(m, exports2) {
      for (var p in m)
        if (p !== "default" && !Object.prototype.hasOwnProperty.call(exports2, p))
          __createBinding(exports2, m, p);
    };
    Object.defineProperty(exports, "__esModule", { value: true });
    __exportStar(require_Tokens(), exports);
    __exportStar(require_TokenBalances(), exports);
    __exportStar(require_TokenInfo(), exports);
  }
});

// node_modules/@tikz/hedera-mirror-node-ts/dist/RestMirrorNode/TokenUtils.js
var require_TokenUtils = __commonJS({
  "node_modules/@tikz/hedera-mirror-node-ts/dist/RestMirrorNode/TokenUtils.js"(exports) {
    "use strict";
    Object.defineProperty(exports, "__esModule", { value: true });
    exports.TokenUtils = void 0;
    var tokenBaseClasses_1 = require_tokenBaseClasses();
    var TokenUtils = class {
      constructor(mirrorClient, url) {
        this.mirrorClient = mirrorClient;
        this.url = url;
      }
      static v1(mirrorClient) {
        return new this(mirrorClient, "/api/v1/tokens");
      }
      get Tokens() {
        return new tokenBaseClasses_1.Tokens(this.mirrorClient, this.url);
      }
      get TokenBalance() {
        return new tokenBaseClasses_1.TokenBalances(this.mirrorClient, this.url);
      }
      get TokenInfo() {
        return new tokenBaseClasses_1.TokenInfo(this.mirrorClient, this.url);
      }
    };
    exports.TokenUtils = TokenUtils;
  }
});

// node_modules/@tikz/hedera-mirror-node-ts/dist/RestMirrorNode/nftBaseClasses/NFTInfo.js
var require_NFTInfo = __commonJS({
  "node_modules/@tikz/hedera-mirror-node-ts/dist/RestMirrorNode/nftBaseClasses/NFTInfo.js"(exports) {
    "use strict";
    Object.defineProperty(exports, "__esModule", { value: true });
    exports.NFTInfo = void 0;
    var __1 = require_RestMirrorNode();
    var _1 = require_nftBaseClasses();
    var NFTInfo = class extends __1.BaseMirrorNode {
      constructor(mirrorClient, url, tokenId, serialNumber) {
        super(mirrorClient);
        this.url = url;
        this.tokenId = "";
        this.serialNumber = 1;
        if (tokenId)
          this.tokenId = tokenId;
        if (serialNumber)
          this.serialNumber = serialNumber;
      }
      static v1(mirrorClient, tokenId, serialNumber) {
        return new this(mirrorClient, `/api/v1/tokens`, tokenId, serialNumber);
      }
      setTokenId(val) {
        this.tokenId = val;
        return this;
      }
      setSerialNumber(val) {
        this.serialNumber = val;
        return this;
      }
      get() {
        if (!this.tokenId || !this.setSerialNumber)
          throw new Error("token id or serial number not set");
        return this.fetch(`${this.url}/${this.tokenId}/nfts/${this.serialNumber}`);
      }
      get getNFTTransactionHistory() {
        return new _1.NFTTransactionHistory(this.mirrorClient, this.url, this.tokenId, this.serialNumber);
      }
    };
    exports.NFTInfo = NFTInfo;
  }
});

// node_modules/@tikz/hedera-mirror-node-ts/dist/RestMirrorNode/nftBaseClasses/NFTs.js
var require_NFTs = __commonJS({
  "node_modules/@tikz/hedera-mirror-node-ts/dist/RestMirrorNode/nftBaseClasses/NFTs.js"(exports) {
    "use strict";
    Object.defineProperty(exports, "__esModule", { value: true });
    exports.NFTs = void 0;
    var __1 = require_RestMirrorNode();
    var NFTs = class extends __1.HasMoreMirrorNode {
      constructor(mirrorClient, url, tokenId) {
        super(mirrorClient);
        this.url = url;
        this.params = {};
        this.tokenId = "";
        if (tokenId)
          this.tokenId = tokenId;
      }
      static v1(mirrorClient, tokenId) {
        return new this(mirrorClient, `/api/v1/tokens`, tokenId);
      }
      setAccountId(val) {
        this.params[__1.filterKeys.ACCOUNT_ID] = val;
        return this;
      }
      setTokenId(val) {
        this.tokenId = val;
        return this;
      }
      get() {
        if (!this.tokenId)
          throw new Error("no token id");
        return this.fetch(`${this.url}/${this.tokenId}/nfts`);
      }
    };
    exports.NFTs = NFTs;
  }
});

// node_modules/@tikz/hedera-mirror-node-ts/dist/RestMirrorNode/nftBaseClasses/NFTTransactionHistory.js
var require_NFTTransactionHistory = __commonJS({
  "node_modules/@tikz/hedera-mirror-node-ts/dist/RestMirrorNode/nftBaseClasses/NFTTransactionHistory.js"(exports) {
    "use strict";
    Object.defineProperty(exports, "__esModule", { value: true });
    exports.NFTTransactionHistory = void 0;
    var __1 = require_RestMirrorNode();
    var NFTTransactionHistory = class extends __1.HasMoreMirrorNode {
      constructor(mirrorClient, url, tokenId, serialNumber) {
        super(mirrorClient);
        this.url = url;
        this.tokenId = "";
        this.serialNumber = 1;
        this.params = {};
        if (tokenId)
          this.tokenId = tokenId;
        if (serialNumber)
          this.serialNumber = serialNumber;
      }
      static v1(mirrorClient, tokenId, serialNumber) {
        return new this(mirrorClient, `/api/v1/tokens`, tokenId, serialNumber);
      }
      setTokenId(val) {
        this.tokenId = val;
        return this;
      }
      setSerialNumber(val) {
        this.serialNumber = val;
        return this;
      }
      get() {
        if (!this.tokenId || !this.serialNumber)
          throw new Error("token id or serial number not set");
        return this.fetch(`${this.url}/${this.tokenId}/nfts/${this.serialNumber}/transactions`);
      }
    };
    exports.NFTTransactionHistory = NFTTransactionHistory;
  }
});

// node_modules/@tikz/hedera-mirror-node-ts/dist/RestMirrorNode/nftBaseClasses/index.js
var require_nftBaseClasses = __commonJS({
  "node_modules/@tikz/hedera-mirror-node-ts/dist/RestMirrorNode/nftBaseClasses/index.js"(exports) {
    "use strict";
    var __createBinding = exports && exports.__createBinding || (Object.create ? function(o, m, k, k2) {
      if (k2 === void 0)
        k2 = k;
      Object.defineProperty(o, k2, { enumerable: true, get: function() {
        return m[k];
      } });
    } : function(o, m, k, k2) {
      if (k2 === void 0)
        k2 = k;
      o[k2] = m[k];
    });
    var __exportStar = exports && exports.__exportStar || function(m, exports2) {
      for (var p in m)
        if (p !== "default" && !Object.prototype.hasOwnProperty.call(exports2, p))
          __createBinding(exports2, m, p);
    };
    Object.defineProperty(exports, "__esModule", { value: true });
    __exportStar(require_NFTInfo(), exports);
    __exportStar(require_NFTs(), exports);
    __exportStar(require_NFTs(), exports);
    __exportStar(require_NFTInfo(), exports);
    __exportStar(require_NFTTransactionHistory(), exports);
  }
});

// node_modules/@tikz/hedera-mirror-node-ts/dist/RestMirrorNode/NFTUtils.js
var require_NFTUtils = __commonJS({
  "node_modules/@tikz/hedera-mirror-node-ts/dist/RestMirrorNode/NFTUtils.js"(exports) {
    "use strict";
    Object.defineProperty(exports, "__esModule", { value: true });
    exports.NFTUtils = void 0;
    var nftBaseClasses_1 = require_nftBaseClasses();
    var NFTUtils = class {
      constructor(mirrorClient, url) {
        this.mirrorClient = mirrorClient;
        this.url = url;
      }
      static v1(mirrorClient) {
        return new this(mirrorClient, "/api/v1/tokens");
      }
      get NFTs() {
        return new nftBaseClasses_1.NFTs(this.mirrorClient, this.url);
      }
      get NFTInfo() {
        return new nftBaseClasses_1.NFTInfo(this.mirrorClient, this.url);
      }
      get NFTTransactionHistory() {
        return new nftBaseClasses_1.NFTTransactionHistory(this.mirrorClient, this.url);
      }
    };
    exports.NFTUtils = NFTUtils;
  }
});

// node_modules/@tikz/hedera-mirror-node-ts/dist/RestMirrorNode/index.js
var require_RestMirrorNode = __commonJS({
  "node_modules/@tikz/hedera-mirror-node-ts/dist/RestMirrorNode/index.js"(exports) {
    "use strict";
    var __createBinding = exports && exports.__createBinding || (Object.create ? function(o, m, k, k2) {
      if (k2 === void 0)
        k2 = k;
      Object.defineProperty(o, k2, { enumerable: true, get: function() {
        return m[k];
      } });
    } : function(o, m, k, k2) {
      if (k2 === void 0)
        k2 = k;
      o[k2] = m[k];
    });
    var __exportStar = exports && exports.__exportStar || function(m, exports2) {
      for (var p in m)
        if (p !== "default" && !Object.prototype.hasOwnProperty.call(exports2, p))
          __createBinding(exports2, m, p);
    };
    Object.defineProperty(exports, "__esModule", { value: true });
    __exportStar(require_baseClasses(), exports);
    __exportStar(require_helpers(), exports);
    __exportStar(require_Accounts(), exports);
    __exportStar(require_NetworkSupply(), exports);
    __exportStar(require_Transactions(), exports);
    __exportStar(require_TopicMessages(), exports);
    __exportStar(require_SmartContract(), exports);
    __exportStar(require_TokenUtils(), exports);
    __exportStar(require_NFTUtils(), exports);
  }
});

// node_modules/@tikz/hedera-mirror-node-ts/dist/AxiosMirrorNodeClient.js
var require_AxiosMirrorNodeClient = __commonJS({
  "node_modules/@tikz/hedera-mirror-node-ts/dist/AxiosMirrorNodeClient.js"(exports) {
    "use strict";
    var __importDefault = exports && exports.__importDefault || function(mod) {
      return mod && mod.__esModule ? mod : { "default": mod };
    };
    Object.defineProperty(exports, "__esModule", { value: true });
    exports.Client = void 0;
    var axios_1 = __importDefault(require_axios());
    var AxiosClient = class {
      constructor(baseURL) {
        this.baseURL = baseURL;
        this.baseApi = axios_1.default.create({ baseURL: this.baseURL });
      }
      async fetch(url, params) {
        if (!this.baseURL)
          throw new Error("no url set");
        const response = await this.baseApi.get(url, { params });
        return response.data;
      }
    };
    exports.Client = AxiosClient;
  }
});

// node_modules/@tikz/hedera-mirror-node-ts/dist/index.js
var require_dist = __commonJS({
  "node_modules/@tikz/hedera-mirror-node-ts/dist/index.js"(exports) {
    "use strict";
    var __createBinding = exports && exports.__createBinding || (Object.create ? function(o, m, k, k2) {
      if (k2 === void 0)
        k2 = k;
      Object.defineProperty(o, k2, { enumerable: true, get: function() {
        return m[k];
      } });
    } : function(o, m, k, k2) {
      if (k2 === void 0)
        k2 = k;
      o[k2] = m[k];
    });
    var __exportStar = exports && exports.__exportStar || function(m, exports2) {
      for (var p in m)
        if (p !== "default" && !Object.prototype.hasOwnProperty.call(exports2, p))
          __createBinding(exports2, m, p);
    };
    Object.defineProperty(exports, "__esModule", { value: true });
    exports.smartContract = exports.nftUtils = exports.tokenUtils = exports.transactions = exports.networkSupply = exports.topicMessages = exports.accounts = void 0;
    __exportStar(require_RestMirrorNode(), exports);
    __exportStar(require_AxiosMirrorNodeClient(), exports);
    var _1 = require_dist();
    var RestMirrorNode_1 = require_RestMirrorNode();
    var accounts = (client) => _1.Accounts.v1(client);
    exports.accounts = accounts;
    var topicMessages = (client) => _1.TopicMessages.v1(client);
    exports.topicMessages = topicMessages;
    var networkSupply = (client) => _1.NetworkSupply.v1(client);
    exports.networkSupply = networkSupply;
    var transactions = (client) => _1.Transactions.v1(client);
    exports.transactions = transactions;
    var tokenUtils = (client) => RestMirrorNode_1.TokenUtils.v1(client);
    exports.tokenUtils = tokenUtils;
    var nftUtils = (client) => RestMirrorNode_1.NFTUtils.v1(client);
    exports.nftUtils = nftUtils;
    var smartContract = (client) => RestMirrorNode_1.SmartContracts.v1(client);
    exports.smartContract = smartContract;
  }
});

// dep:@tikz_hedera-mirror-node-ts
var tikz_hedera_mirror_node_ts_default = require_dist();
export {
  tikz_hedera_mirror_node_ts_default as default
};
//# sourceMappingURL=@tikz_hedera-mirror-node-ts.js.map
