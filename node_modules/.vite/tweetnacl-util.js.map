{
  "version": 3,
  "sources": ["../tweetnacl-util/nacl-util.js", "dep:tweetnacl-util"],
  "sourcesContent": ["// Written in 2014-2016 by Dmitry Chestnykh and Devi Mandiri.\n// Public domain.\n(function(root, f) {\n  'use strict';\n  if (typeof module !== 'undefined' && module.exports) module.exports = f();\n  else if (root.nacl) root.nacl.util = f();\n  else {\n    root.nacl = {};\n    root.nacl.util = f();\n  }\n}(this, function() {\n  'use strict';\n\n  var util = {};\n\n  function validateBase64(s) {\n    if (!(/^(?:[A-Za-z0-9+\\/]{2}[A-Za-z0-9+\\/]{2})*(?:[A-Za-z0-9+\\/]{2}==|[A-Za-z0-9+\\/]{3}=)?$/.test(s))) {\n      throw new TypeError('invalid encoding');\n    }\n  }\n\n  util.decodeUTF8 = function(s) {\n    if (typeof s !== 'string') throw new TypeError('expected string');\n    var i, d = unescape(encodeURIComponent(s)), b = new Uint8Array(d.length);\n    for (i = 0; i < d.length; i++) b[i] = d.charCodeAt(i);\n    return b;\n  };\n\n  util.encodeUTF8 = function(arr) {\n    var i, s = [];\n    for (i = 0; i < arr.length; i++) s.push(String.fromCharCode(arr[i]));\n    return decodeURIComponent(escape(s.join('')));\n  };\n\n  if (typeof atob === 'undefined') {\n    // Node.js\n\n    if (typeof Buffer.from !== 'undefined') {\n       // Node v6 and later\n      util.encodeBase64 = function (arr) { // v6 and later\n          return Buffer.from(arr).toString('base64');\n      };\n\n      util.decodeBase64 = function (s) {\n        validateBase64(s);\n        return new Uint8Array(Array.prototype.slice.call(Buffer.from(s, 'base64'), 0));\n      };\n\n    } else {\n      // Node earlier than v6\n      util.encodeBase64 = function (arr) { // v6 and later\n        return (new Buffer(arr)).toString('base64');\n      };\n\n      util.decodeBase64 = function(s) {\n        validateBase64(s);\n        return new Uint8Array(Array.prototype.slice.call(new Buffer(s, 'base64'), 0));\n      };\n    }\n\n  } else {\n    // Browsers\n\n    util.encodeBase64 = function(arr) {\n      var i, s = [], len = arr.length;\n      for (i = 0; i < len; i++) s.push(String.fromCharCode(arr[i]));\n      return btoa(s.join(''));\n    };\n\n    util.decodeBase64 = function(s) {\n      validateBase64(s);\n      var i, d = atob(s), b = new Uint8Array(d.length);\n      for (i = 0; i < d.length; i++) b[i] = d.charCodeAt(i);\n      return b;\n    };\n\n  }\n\n  return util;\n\n}));\n", "export default require(\"./node_modules/tweetnacl-util/nacl-util.js\");"],
  "mappings": ";;;;;AAAA;AAAA;AAEA,IAAC,UAAS,MAAM,GAAG;AACjB;AACA,UAAI,OAAO,WAAW,eAAe,OAAO;AAAS,eAAO,UAAU;AAAA,eAC7D,KAAK;AAAM,aAAK,KAAK,OAAO;AAAA,WAChC;AACH,aAAK,OAAO;AACZ,aAAK,KAAK,OAAO;AAAA;AAAA,OAEnB,SAAM,WAAW;AACjB;AAEA,UAAI,OAAO;AAEX,8BAAwB,GAAG;AACzB,YAAI,CAAE,uFAAuF,KAAK,IAAK;AACrG,gBAAM,IAAI,UAAU;AAAA;AAAA;AAIxB,WAAK,aAAa,SAAS,GAAG;AAC5B,YAAI,OAAO,MAAM;AAAU,gBAAM,IAAI,UAAU;AAC/C,YAAI,GAAG,IAAI,SAAS,mBAAmB,KAAK,IAAI,IAAI,WAAW,EAAE;AACjE,aAAK,IAAI,GAAG,IAAI,EAAE,QAAQ;AAAK,YAAE,KAAK,EAAE,WAAW;AACnD,eAAO;AAAA;AAGT,WAAK,aAAa,SAAS,KAAK;AAC9B,YAAI,GAAG,IAAI;AACX,aAAK,IAAI,GAAG,IAAI,IAAI,QAAQ;AAAK,YAAE,KAAK,OAAO,aAAa,IAAI;AAChE,eAAO,mBAAmB,OAAO,EAAE,KAAK;AAAA;AAG1C,UAAI,OAAO,SAAS,aAAa;AAG/B,YAAI,OAAO,OAAO,SAAS,aAAa;AAEtC,eAAK,eAAe,SAAU,KAAK;AAC/B,mBAAO,OAAO,KAAK,KAAK,SAAS;AAAA;AAGrC,eAAK,eAAe,SAAU,GAAG;AAC/B,2BAAe;AACf,mBAAO,IAAI,WAAW,MAAM,UAAU,MAAM,KAAK,OAAO,KAAK,GAAG,WAAW;AAAA;AAAA,eAGxE;AAEL,eAAK,eAAe,SAAU,KAAK;AACjC,mBAAQ,IAAI,OAAO,KAAM,SAAS;AAAA;AAGpC,eAAK,eAAe,SAAS,GAAG;AAC9B,2BAAe;AACf,mBAAO,IAAI,WAAW,MAAM,UAAU,MAAM,KAAK,IAAI,OAAO,GAAG,WAAW;AAAA;AAAA;AAAA,aAIzE;AAGL,aAAK,eAAe,SAAS,KAAK;AAChC,cAAI,GAAG,IAAI,IAAI,MAAM,IAAI;AACzB,eAAK,IAAI,GAAG,IAAI,KAAK;AAAK,cAAE,KAAK,OAAO,aAAa,IAAI;AACzD,iBAAO,KAAK,EAAE,KAAK;AAAA;AAGrB,aAAK,eAAe,SAAS,GAAG;AAC9B,yBAAe;AACf,cAAI,GAAG,IAAI,KAAK,IAAI,IAAI,IAAI,WAAW,EAAE;AACzC,eAAK,IAAI,GAAG,IAAI,EAAE,QAAQ;AAAK,cAAE,KAAK,EAAE,WAAW;AACnD,iBAAO;AAAA;AAAA;AAKX,aAAO;AAAA;AAAA;AAAA;;;AC9ET,IAAO,yBAAQ;",
  "names": []
}
