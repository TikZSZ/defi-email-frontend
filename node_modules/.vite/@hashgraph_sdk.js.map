{
  "version": 3,
  "sources": ["../@hashgraph/cryptography/node_modules/tweetnacl/nacl-fast.js", "browser-external:buffer", "../bn.js/lib/bn.js", "../minimalistic-assert/index.js", "../minimalistic-crypto-utils/lib/utils.js", "../elliptic/lib/elliptic/utils.js", "../brorand/index.js", "../elliptic/lib/elliptic/curve/base.js", "../inherits/inherits_browser.js", "../elliptic/lib/elliptic/curve/short.js", "../elliptic/lib/elliptic/curve/mont.js", "../elliptic/lib/elliptic/curve/edwards.js", "../elliptic/lib/elliptic/curve/index.js", "../hash.js/lib/hash/utils.js", "../hash.js/lib/hash/common.js", "../hash.js/lib/hash/sha/common.js", "../hash.js/lib/hash/sha/1.js", "../hash.js/lib/hash/sha/256.js", "../hash.js/lib/hash/sha/224.js", "../hash.js/lib/hash/sha/512.js", "../hash.js/lib/hash/sha/384.js", "../hash.js/lib/hash/sha.js", "../hash.js/lib/hash/ripemd.js", "../hash.js/lib/hash/hmac.js", "../hash.js/lib/hash.js", "../elliptic/lib/elliptic/precomputed/secp256k1.js", "../elliptic/lib/elliptic/curves.js", "../hmac-drbg/lib/hmac-drbg.js", "../elliptic/lib/elliptic/ec/key.js", "../elliptic/lib/elliptic/ec/signature.js", "../elliptic/lib/elliptic/ec/index.js", "../elliptic/lib/elliptic/eddsa/key.js", "../elliptic/lib/elliptic/eddsa/signature.js", "../elliptic/lib/elliptic/eddsa/index.js", "../elliptic/lib/elliptic.js", "../long/src/long.js", "../@protobufjs/aspromise/index.js", "../@protobufjs/base64/index.js", "../@protobufjs/eventemitter/index.js", "../@protobufjs/float/index.js", "../@protobufjs/inquire/index.js", "../@protobufjs/utf8/index.js", "../@protobufjs/pool/index.js", "../protobufjs/src/util/longbits.js", "../protobufjs/src/util/minimal.js", "../protobufjs/src/writer.js", "../protobufjs/src/writer_buffer.js", "../protobufjs/src/reader.js", "../protobufjs/src/reader_buffer.js", "../protobufjs/src/rpc/service.js", "../protobufjs/src/rpc.js", "../protobufjs/src/roots.js", "../protobufjs/src/index-minimal.js", "../protobufjs/minimal.js", "../@hashgraph/proto/lib/proto.js", "../@hashgraph/proto/lib/index.js", "../@hashgraph/cryptography/src/Key.js", "../@hashgraph/cryptography/src/KeyList.js", "../@hashgraph/cryptography/src/BadKeyError.js", "../@hashgraph/cryptography/src/Ed25519PublicKey.js", "../@hashgraph/cryptography/src/util/array.js", "../@hashgraph/cryptography/src/encoding/hex.browser.js", "../@hashgraph/cryptography/src/Ed25519PrivateKey.js", "../@hashgraph/cryptography/src/primitive/random.js", "../@hashgraph/cryptography/src/BadMnemonicReason.js", "../@hashgraph/cryptography/src/BadMnemonicError.js", "../@hashgraph/cryptography/src/words/legacy.js", "../@hashgraph/cryptography/src/words/bip39.js", "../@hashgraph/cryptography/src/Mnemonic.js", "../@hashgraph/cryptography/src/primitive/sha256.browser.js", "../@hashgraph/cryptography/src/encoding/utf8.browser.js", "../@hashgraph/cryptography/src/primitive/pbkdf2.browser.js", "../@hashgraph/cryptography/src/primitive/hmac.browser.js", "../@hashgraph/cryptography/src/primitive/slip10.js", "../bignumber.js/bignumber.mjs", "../@hashgraph/cryptography/src/util/entropy.js", "../@hashgraph/cryptography/src/primitive/keccak.js", "../@hashgraph/cryptography/src/primitive/ecdsa.js", "../@hashgraph/cryptography/src/EcdsaPublicKey.js", "../@hashgraph/cryptography/src/EcdsaPrivateKey.js", "../@hashgraph/cryptography/src/PublicKey.js", "../@hashgraph/cryptography/src/primitive/aes.browser.js", "../@hashgraph/cryptography/src/primitive/keystore.js", "../@hashgraph/cryptography/src/encoding/der.js", "../@hashgraph/cryptography/src/primitive/pkcs.js", "../@hashgraph/cryptography/src/encoding/base64.browser.js", "../@hashgraph/cryptography/src/encoding/pem.js", "../@hashgraph/cryptography/src/util/derive.js", "../@hashgraph/cryptography/src/PrivateKey.js", "../@hashgraph/sdk/src/Cache.js", "../@hashgraph/sdk/src/Mnemonic.js", "../@hashgraph/sdk/src/array.js", "../@hashgraph/sdk/src/Key.js", "../@hashgraph/sdk/src/PublicKey.js", "../@hashgraph/sdk/src/PrivateKey.js", "../@hashgraph/sdk/src/KeyList.js", "../@hashgraph/sdk/src/Status.js", "../@hashgraph/sdk/src/account/AccountId.js", "../@hashgraph/sdk/src/EntityIdHelper.js", "../@hashgraph/sdk/src/encoding/hex.browser.js", "../@hashgraph/sdk/src/BadEntityIdError.js", "../@hashgraph/sdk/src/util.js", "../@hashgraph/sdk/src/long.js", "../@hashgraph/sdk/src/HbarUnit.js", "../@hashgraph/sdk/src/Hbar.js", "../@hashgraph/sdk/src/grpc/GrpcStatus.js", "../@hashgraph/sdk/src/grpc/GrpcServiceError.js", "../@hashgraph/sdk/src/Executable.js", "../@hashgraph/sdk/src/Timestamp.js", "../@hashgraph/sdk/src/transaction/TransactionId.js", "../@hashgraph/sdk/src/query/Query.js", "../@hashgraph/sdk/src/StatusError.js", "../@hashgraph/sdk/src/PrecheckStatusError.js", "../@hashgraph/sdk/src/MaxQueryPaymentExceeded.js", "../@hashgraph/sdk/src/contract/ContractId.js", "../@hashgraph/sdk/src/account/AccountBalance.js", "../@hashgraph/sdk/src/token/TokenId.js", "../@hashgraph/sdk/src/ObjectMap.js", "../@hashgraph/sdk/src/account/TokenBalanceMap.js", "../@hashgraph/sdk/src/account/TokenDecimalMap.js", "../@hashgraph/sdk/src/account/AccountBalanceQuery.js", "../@hashgraph/sdk/src/ReceiptStatusError.js", "../@hashgraph/sdk/src/file/FileId.js", "../@hashgraph/sdk/src/topic/TopicId.js", "../@hashgraph/sdk/src/schedule/ScheduleId.js", "../@hashgraph/sdk/src/ExchangeRate.js", "../@hashgraph/sdk/src/transaction/TransactionReceipt.js", "../@hashgraph/sdk/src/transaction/TransactionReceiptQuery.js", "../@hashgraph/sdk/src/Transfer.js", "../@hashgraph/sdk/src/contract/ContractLogInfo.js", "../@hashgraph/sdk/src/encoding/utf8.browser.js", "../@hashgraph/sdk/src/contract/ContractFunctionResult.js", "../@hashgraph/sdk/src/account/TokenTransferAccountMap.js", "../@hashgraph/sdk/src/account/TokenTransferMap.js", "../@hashgraph/sdk/src/account/TokenNftTransferMap.js", "../@hashgraph/sdk/src/transaction/TransactionRecord.js", "../@hashgraph/sdk/src/token/AssessedCustomFee.js", "../@hashgraph/sdk/src/token/TokenAssociation.js", "../@hashgraph/sdk/src/transaction/TransactionRecordQuery.js", "../@hashgraph/sdk/src/transaction/TransactionResponse.js", "../@hashgraph/sdk/src/cryptography/sha384.browser.js", "../@hashgraph/sdk/src/transaction/TransactionHashMap.js", "../@hashgraph/sdk/src/transaction/NodeAccountIdSignatureMap.js", "../@hashgraph/sdk/src/transaction/SignatureMap.js", "../@hashgraph/sdk/src/transaction/Transaction.js", "../@hashgraph/sdk/src/Duration.js", "../@hashgraph/sdk/src/account/AccountCreateTransaction.js", "../@hashgraph/sdk/src/account/AccountDeleteTransaction.js", "../@hashgraph/sdk/src/account/LiveHash.js", "../@hashgraph/sdk/src/account/AccountInfo.js", "../@hashgraph/sdk/src/account/TokenRelationship.js", "../@hashgraph/sdk/src/account/TokenRelationshipMap.js", "../@hashgraph/sdk/src/account/AccountInfoQuery.js", "../@hashgraph/sdk/src/account/AccountRecordsQuery.js", "../@hashgraph/sdk/src/account/ProxyStaker.js", "../@hashgraph/sdk/src/account/AccountStakersQuery.js", "../@hashgraph/sdk/src/account/AccountUpdateTransaction.js", "../@hashgraph/sdk/src/contract/ContractByteCodeQuery.js", "../@hashgraph/sdk/src/cryptography/keccak.js", "../@hashgraph/sdk/src/contract/ContractFunctionSelector.js", "../@hashgraph/sdk/src/contract/ContractFunctionParameters.js", "../@hashgraph/sdk/src/contract/ContractCallQuery.js", "../@hashgraph/sdk/src/contract/ContractCreateTransaction.js", "../@hashgraph/sdk/src/contract/ContractDeleteTransaction.js", "../@hashgraph/sdk/src/contract/ContractExecuteTransaction.js", "../@hashgraph/sdk/src/contract/ContractInfo.js", "../@hashgraph/sdk/src/contract/ContractInfoQuery.js", "../@hashgraph/sdk/src/contract/ContractUpdateTransaction.js", "../@hashgraph/sdk/src/file/FileAppendTransaction.js", "../@hashgraph/sdk/src/file/FileContentsQuery.js", "../@hashgraph/sdk/src/file/FileCreateTransaction.js", "../@hashgraph/sdk/src/file/FileDeleteTransaction.js", "../@hashgraph/sdk/src/file/FileInfo.js", "../@hashgraph/sdk/src/file/FileInfoQuery.js", "../@hashgraph/sdk/src/file/FileUpdateTransaction.js", "../@hashgraph/sdk/src/FreezeType.js", "../@hashgraph/sdk/src/system/FreezeTransaction.js", "../@hashgraph/sdk/src/account/LiveHashAddTransaction.js", "../@hashgraph/sdk/src/account/LiveHashDeleteTransaction.js", "../@hashgraph/sdk/src/account/LiveHashQuery.js", "../@hashgraph/sdk/src/NetworkName.js", "../@hashgraph/sdk/src/network/SemanticVersion.js", "../@hashgraph/sdk/src/network/NetworkVersionInfo.js", "../@hashgraph/sdk/src/network/NetworkVersionInfoQuery.js", "../@hashgraph/sdk/src/schedule/ScheduleCreateTransaction.js", "../@hashgraph/sdk/src/schedule/ScheduleDeleteTransaction.js", "../@hashgraph/sdk/src/schedule/ScheduleInfo.js", "../@hashgraph/sdk/src/schedule/ScheduleInfoQuery.js", "../@hashgraph/sdk/src/schedule/ScheduleSignTransaction.js", "../@hashgraph/sdk/src/system/SystemDeleteTransaction.js", "../@hashgraph/sdk/src/system/SystemUndeleteTransaction.js", "../@hashgraph/sdk/src/token/CustomFee.js", "../@hashgraph/sdk/src/token/CustomFixedFee.js", "../@hashgraph/sdk/src/token/CustomRoyaltyFee.js", "../@hashgraph/sdk/src/token/CustomFractionalFee.js", "../@hashgraph/sdk/src/token/NftId.js", "../@hashgraph/sdk/src/token/TokenAssociateTransaction.js", "../@hashgraph/sdk/src/token/TokenBurnTransaction.js", "../@hashgraph/sdk/src/token/TokenCreateTransaction.js", "../@hashgraph/sdk/src/token/TokenType.js", "../@hashgraph/sdk/src/token/TokenSupplyType.js", "../@hashgraph/sdk/src/token/TokenDeleteTransaction.js", "../@hashgraph/sdk/src/token/TokenDissociateTransaction.js", "../@hashgraph/sdk/src/token/TokenFeeScheduleUpdateTransaction.js", "../@hashgraph/sdk/src/token/TokenFreezeTransaction.js", "../@hashgraph/sdk/src/token/TokenPauseTransaction.js", "../@hashgraph/sdk/src/token/TokenGrantKycTransaction.js", "../@hashgraph/sdk/src/token/TokenInfo.js", "../@hashgraph/sdk/src/token/TokenInfoQuery.js", "../@hashgraph/sdk/src/token/TokenMintTransaction.js", "../@hashgraph/sdk/src/token/TokenNftInfo.js", "../@hashgraph/sdk/src/token/TokenNftInfoQuery.js", "../@hashgraph/sdk/src/token/TokenRevokeKycTransaction.js", "../@hashgraph/sdk/src/token/TokenUnfreezeTransaction.js", "../@hashgraph/sdk/src/token/TokenUnpauseTransaction.js", "../@hashgraph/sdk/src/token/TokenUpdateTransaction.js", "../@hashgraph/sdk/src/token/TokenWipeTransaction.js", "../@hashgraph/sdk/src/topic/TopicCreateTransaction.js", "../@hashgraph/sdk/src/topic/TopicDeleteTransaction.js", "../@hashgraph/sdk/src/topic/TopicInfo.js", "../@hashgraph/sdk/src/topic/TopicInfoQuery.js", "../@hashgraph/sdk/src/topic/TopicMessageChunk.js", "../@hashgraph/sdk/src/topic/TopicMessage.js", "../@hashgraph/sdk/src/topic/SubscriptionHandle.js", "../@hashgraph/sdk/src/topic/TopicMessageQuery.js", "../@hashgraph/sdk/src/topic/TopicMessageSubmitTransaction.js", "../@hashgraph/sdk/src/topic/TopicUpdateTransaction.js", "../@hashgraph/sdk/src/account/TransferTransaction.js", "../@hashgraph/sdk/src/account/HbarTransferMap.js", "../@hashgraph/sdk/src/query/CostQuery.js", "../@hashgraph/sdk/src/ManagedNodeAddress.js", "../@hashgraph/sdk/src/ManagedNode.js", "../@hashgraph/sdk/src/NodeCerts.js", "../@hashgraph/sdk/src/Node.js", "../@hashgraph/sdk/src/address_book/IPv4AddressPart.js", "../@hashgraph/sdk/src/address_book/IPv4Address.js", "../@hashgraph/sdk/src/address_book/Endpoint.js", "../@hashgraph/sdk/src/address_book/NodeAddress.js", "../@hashgraph/sdk/src/address_book/NodeAddressBook.js", "../@hashgraph/sdk/src/address_book/AddressBooks.js", "../@hashgraph/sdk/src/client/ManagedNetwork.js", "../@hashgraph/sdk/src/client/Network.js", "../@hashgraph/sdk/src/MirrorNode.js", "../@hashgraph/sdk/src/client/MirrorNetwork.js", "../@hashgraph/sdk/src/client/Client.js", "../@hashgraph/sdk/src/channel/Channel.js", "../@hashgraph/sdk/src/channel/WebChannel.js", "../@hashgraph/sdk/src/client/WebClient.js"],
  "sourcesContent": ["(function(nacl) {\n'use strict';\n\n// Ported in 2014 by Dmitry Chestnykh and Devi Mandiri.\n// Public domain.\n//\n// Implementation derived from TweetNaCl version 20140427.\n// See for details: http://tweetnacl.cr.yp.to/\n\nvar gf = function(init) {\n  var i, r = new Float64Array(16);\n  if (init) for (i = 0; i < init.length; i++) r[i] = init[i];\n  return r;\n};\n\n//  Pluggable, initialized in high-level API below.\nvar randombytes = function(/* x, n */) { throw new Error('no PRNG'); };\n\nvar _0 = new Uint8Array(16);\nvar _9 = new Uint8Array(32); _9[0] = 9;\n\nvar gf0 = gf(),\n    gf1 = gf([1]),\n    _121665 = gf([0xdb41, 1]),\n    D = gf([0x78a3, 0x1359, 0x4dca, 0x75eb, 0xd8ab, 0x4141, 0x0a4d, 0x0070, 0xe898, 0x7779, 0x4079, 0x8cc7, 0xfe73, 0x2b6f, 0x6cee, 0x5203]),\n    D2 = gf([0xf159, 0x26b2, 0x9b94, 0xebd6, 0xb156, 0x8283, 0x149a, 0x00e0, 0xd130, 0xeef3, 0x80f2, 0x198e, 0xfce7, 0x56df, 0xd9dc, 0x2406]),\n    X = gf([0xd51a, 0x8f25, 0x2d60, 0xc956, 0xa7b2, 0x9525, 0xc760, 0x692c, 0xdc5c, 0xfdd6, 0xe231, 0xc0a4, 0x53fe, 0xcd6e, 0x36d3, 0x2169]),\n    Y = gf([0x6658, 0x6666, 0x6666, 0x6666, 0x6666, 0x6666, 0x6666, 0x6666, 0x6666, 0x6666, 0x6666, 0x6666, 0x6666, 0x6666, 0x6666, 0x6666]),\n    I = gf([0xa0b0, 0x4a0e, 0x1b27, 0xc4ee, 0xe478, 0xad2f, 0x1806, 0x2f43, 0xd7a7, 0x3dfb, 0x0099, 0x2b4d, 0xdf0b, 0x4fc1, 0x2480, 0x2b83]);\n\nfunction ts64(x, i, h, l) {\n  x[i]   = (h >> 24) & 0xff;\n  x[i+1] = (h >> 16) & 0xff;\n  x[i+2] = (h >>  8) & 0xff;\n  x[i+3] = h & 0xff;\n  x[i+4] = (l >> 24)  & 0xff;\n  x[i+5] = (l >> 16)  & 0xff;\n  x[i+6] = (l >>  8)  & 0xff;\n  x[i+7] = l & 0xff;\n}\n\nfunction vn(x, xi, y, yi, n) {\n  var i,d = 0;\n  for (i = 0; i < n; i++) d |= x[xi+i]^y[yi+i];\n  return (1 & ((d - 1) >>> 8)) - 1;\n}\n\nfunction crypto_verify_16(x, xi, y, yi) {\n  return vn(x,xi,y,yi,16);\n}\n\nfunction crypto_verify_32(x, xi, y, yi) {\n  return vn(x,xi,y,yi,32);\n}\n\nfunction core_salsa20(o, p, k, c) {\n  var j0  = c[ 0] & 0xff | (c[ 1] & 0xff)<<8 | (c[ 2] & 0xff)<<16 | (c[ 3] & 0xff)<<24,\n      j1  = k[ 0] & 0xff | (k[ 1] & 0xff)<<8 | (k[ 2] & 0xff)<<16 | (k[ 3] & 0xff)<<24,\n      j2  = k[ 4] & 0xff | (k[ 5] & 0xff)<<8 | (k[ 6] & 0xff)<<16 | (k[ 7] & 0xff)<<24,\n      j3  = k[ 8] & 0xff | (k[ 9] & 0xff)<<8 | (k[10] & 0xff)<<16 | (k[11] & 0xff)<<24,\n      j4  = k[12] & 0xff | (k[13] & 0xff)<<8 | (k[14] & 0xff)<<16 | (k[15] & 0xff)<<24,\n      j5  = c[ 4] & 0xff | (c[ 5] & 0xff)<<8 | (c[ 6] & 0xff)<<16 | (c[ 7] & 0xff)<<24,\n      j6  = p[ 0] & 0xff | (p[ 1] & 0xff)<<8 | (p[ 2] & 0xff)<<16 | (p[ 3] & 0xff)<<24,\n      j7  = p[ 4] & 0xff | (p[ 5] & 0xff)<<8 | (p[ 6] & 0xff)<<16 | (p[ 7] & 0xff)<<24,\n      j8  = p[ 8] & 0xff | (p[ 9] & 0xff)<<8 | (p[10] & 0xff)<<16 | (p[11] & 0xff)<<24,\n      j9  = p[12] & 0xff | (p[13] & 0xff)<<8 | (p[14] & 0xff)<<16 | (p[15] & 0xff)<<24,\n      j10 = c[ 8] & 0xff | (c[ 9] & 0xff)<<8 | (c[10] & 0xff)<<16 | (c[11] & 0xff)<<24,\n      j11 = k[16] & 0xff | (k[17] & 0xff)<<8 | (k[18] & 0xff)<<16 | (k[19] & 0xff)<<24,\n      j12 = k[20] & 0xff | (k[21] & 0xff)<<8 | (k[22] & 0xff)<<16 | (k[23] & 0xff)<<24,\n      j13 = k[24] & 0xff | (k[25] & 0xff)<<8 | (k[26] & 0xff)<<16 | (k[27] & 0xff)<<24,\n      j14 = k[28] & 0xff | (k[29] & 0xff)<<8 | (k[30] & 0xff)<<16 | (k[31] & 0xff)<<24,\n      j15 = c[12] & 0xff | (c[13] & 0xff)<<8 | (c[14] & 0xff)<<16 | (c[15] & 0xff)<<24;\n\n  var x0 = j0, x1 = j1, x2 = j2, x3 = j3, x4 = j4, x5 = j5, x6 = j6, x7 = j7,\n      x8 = j8, x9 = j9, x10 = j10, x11 = j11, x12 = j12, x13 = j13, x14 = j14,\n      x15 = j15, u;\n\n  for (var i = 0; i < 20; i += 2) {\n    u = x0 + x12 | 0;\n    x4 ^= u<<7 | u>>>(32-7);\n    u = x4 + x0 | 0;\n    x8 ^= u<<9 | u>>>(32-9);\n    u = x8 + x4 | 0;\n    x12 ^= u<<13 | u>>>(32-13);\n    u = x12 + x8 | 0;\n    x0 ^= u<<18 | u>>>(32-18);\n\n    u = x5 + x1 | 0;\n    x9 ^= u<<7 | u>>>(32-7);\n    u = x9 + x5 | 0;\n    x13 ^= u<<9 | u>>>(32-9);\n    u = x13 + x9 | 0;\n    x1 ^= u<<13 | u>>>(32-13);\n    u = x1 + x13 | 0;\n    x5 ^= u<<18 | u>>>(32-18);\n\n    u = x10 + x6 | 0;\n    x14 ^= u<<7 | u>>>(32-7);\n    u = x14 + x10 | 0;\n    x2 ^= u<<9 | u>>>(32-9);\n    u = x2 + x14 | 0;\n    x6 ^= u<<13 | u>>>(32-13);\n    u = x6 + x2 | 0;\n    x10 ^= u<<18 | u>>>(32-18);\n\n    u = x15 + x11 | 0;\n    x3 ^= u<<7 | u>>>(32-7);\n    u = x3 + x15 | 0;\n    x7 ^= u<<9 | u>>>(32-9);\n    u = x7 + x3 | 0;\n    x11 ^= u<<13 | u>>>(32-13);\n    u = x11 + x7 | 0;\n    x15 ^= u<<18 | u>>>(32-18);\n\n    u = x0 + x3 | 0;\n    x1 ^= u<<7 | u>>>(32-7);\n    u = x1 + x0 | 0;\n    x2 ^= u<<9 | u>>>(32-9);\n    u = x2 + x1 | 0;\n    x3 ^= u<<13 | u>>>(32-13);\n    u = x3 + x2 | 0;\n    x0 ^= u<<18 | u>>>(32-18);\n\n    u = x5 + x4 | 0;\n    x6 ^= u<<7 | u>>>(32-7);\n    u = x6 + x5 | 0;\n    x7 ^= u<<9 | u>>>(32-9);\n    u = x7 + x6 | 0;\n    x4 ^= u<<13 | u>>>(32-13);\n    u = x4 + x7 | 0;\n    x5 ^= u<<18 | u>>>(32-18);\n\n    u = x10 + x9 | 0;\n    x11 ^= u<<7 | u>>>(32-7);\n    u = x11 + x10 | 0;\n    x8 ^= u<<9 | u>>>(32-9);\n    u = x8 + x11 | 0;\n    x9 ^= u<<13 | u>>>(32-13);\n    u = x9 + x8 | 0;\n    x10 ^= u<<18 | u>>>(32-18);\n\n    u = x15 + x14 | 0;\n    x12 ^= u<<7 | u>>>(32-7);\n    u = x12 + x15 | 0;\n    x13 ^= u<<9 | u>>>(32-9);\n    u = x13 + x12 | 0;\n    x14 ^= u<<13 | u>>>(32-13);\n    u = x14 + x13 | 0;\n    x15 ^= u<<18 | u>>>(32-18);\n  }\n   x0 =  x0 +  j0 | 0;\n   x1 =  x1 +  j1 | 0;\n   x2 =  x2 +  j2 | 0;\n   x3 =  x3 +  j3 | 0;\n   x4 =  x4 +  j4 | 0;\n   x5 =  x5 +  j5 | 0;\n   x6 =  x6 +  j6 | 0;\n   x7 =  x7 +  j7 | 0;\n   x8 =  x8 +  j8 | 0;\n   x9 =  x9 +  j9 | 0;\n  x10 = x10 + j10 | 0;\n  x11 = x11 + j11 | 0;\n  x12 = x12 + j12 | 0;\n  x13 = x13 + j13 | 0;\n  x14 = x14 + j14 | 0;\n  x15 = x15 + j15 | 0;\n\n  o[ 0] = x0 >>>  0 & 0xff;\n  o[ 1] = x0 >>>  8 & 0xff;\n  o[ 2] = x0 >>> 16 & 0xff;\n  o[ 3] = x0 >>> 24 & 0xff;\n\n  o[ 4] = x1 >>>  0 & 0xff;\n  o[ 5] = x1 >>>  8 & 0xff;\n  o[ 6] = x1 >>> 16 & 0xff;\n  o[ 7] = x1 >>> 24 & 0xff;\n\n  o[ 8] = x2 >>>  0 & 0xff;\n  o[ 9] = x2 >>>  8 & 0xff;\n  o[10] = x2 >>> 16 & 0xff;\n  o[11] = x2 >>> 24 & 0xff;\n\n  o[12] = x3 >>>  0 & 0xff;\n  o[13] = x3 >>>  8 & 0xff;\n  o[14] = x3 >>> 16 & 0xff;\n  o[15] = x3 >>> 24 & 0xff;\n\n  o[16] = x4 >>>  0 & 0xff;\n  o[17] = x4 >>>  8 & 0xff;\n  o[18] = x4 >>> 16 & 0xff;\n  o[19] = x4 >>> 24 & 0xff;\n\n  o[20] = x5 >>>  0 & 0xff;\n  o[21] = x5 >>>  8 & 0xff;\n  o[22] = x5 >>> 16 & 0xff;\n  o[23] = x5 >>> 24 & 0xff;\n\n  o[24] = x6 >>>  0 & 0xff;\n  o[25] = x6 >>>  8 & 0xff;\n  o[26] = x6 >>> 16 & 0xff;\n  o[27] = x6 >>> 24 & 0xff;\n\n  o[28] = x7 >>>  0 & 0xff;\n  o[29] = x7 >>>  8 & 0xff;\n  o[30] = x7 >>> 16 & 0xff;\n  o[31] = x7 >>> 24 & 0xff;\n\n  o[32] = x8 >>>  0 & 0xff;\n  o[33] = x8 >>>  8 & 0xff;\n  o[34] = x8 >>> 16 & 0xff;\n  o[35] = x8 >>> 24 & 0xff;\n\n  o[36] = x9 >>>  0 & 0xff;\n  o[37] = x9 >>>  8 & 0xff;\n  o[38] = x9 >>> 16 & 0xff;\n  o[39] = x9 >>> 24 & 0xff;\n\n  o[40] = x10 >>>  0 & 0xff;\n  o[41] = x10 >>>  8 & 0xff;\n  o[42] = x10 >>> 16 & 0xff;\n  o[43] = x10 >>> 24 & 0xff;\n\n  o[44] = x11 >>>  0 & 0xff;\n  o[45] = x11 >>>  8 & 0xff;\n  o[46] = x11 >>> 16 & 0xff;\n  o[47] = x11 >>> 24 & 0xff;\n\n  o[48] = x12 >>>  0 & 0xff;\n  o[49] = x12 >>>  8 & 0xff;\n  o[50] = x12 >>> 16 & 0xff;\n  o[51] = x12 >>> 24 & 0xff;\n\n  o[52] = x13 >>>  0 & 0xff;\n  o[53] = x13 >>>  8 & 0xff;\n  o[54] = x13 >>> 16 & 0xff;\n  o[55] = x13 >>> 24 & 0xff;\n\n  o[56] = x14 >>>  0 & 0xff;\n  o[57] = x14 >>>  8 & 0xff;\n  o[58] = x14 >>> 16 & 0xff;\n  o[59] = x14 >>> 24 & 0xff;\n\n  o[60] = x15 >>>  0 & 0xff;\n  o[61] = x15 >>>  8 & 0xff;\n  o[62] = x15 >>> 16 & 0xff;\n  o[63] = x15 >>> 24 & 0xff;\n}\n\nfunction core_hsalsa20(o,p,k,c) {\n  var j0  = c[ 0] & 0xff | (c[ 1] & 0xff)<<8 | (c[ 2] & 0xff)<<16 | (c[ 3] & 0xff)<<24,\n      j1  = k[ 0] & 0xff | (k[ 1] & 0xff)<<8 | (k[ 2] & 0xff)<<16 | (k[ 3] & 0xff)<<24,\n      j2  = k[ 4] & 0xff | (k[ 5] & 0xff)<<8 | (k[ 6] & 0xff)<<16 | (k[ 7] & 0xff)<<24,\n      j3  = k[ 8] & 0xff | (k[ 9] & 0xff)<<8 | (k[10] & 0xff)<<16 | (k[11] & 0xff)<<24,\n      j4  = k[12] & 0xff | (k[13] & 0xff)<<8 | (k[14] & 0xff)<<16 | (k[15] & 0xff)<<24,\n      j5  = c[ 4] & 0xff | (c[ 5] & 0xff)<<8 | (c[ 6] & 0xff)<<16 | (c[ 7] & 0xff)<<24,\n      j6  = p[ 0] & 0xff | (p[ 1] & 0xff)<<8 | (p[ 2] & 0xff)<<16 | (p[ 3] & 0xff)<<24,\n      j7  = p[ 4] & 0xff | (p[ 5] & 0xff)<<8 | (p[ 6] & 0xff)<<16 | (p[ 7] & 0xff)<<24,\n      j8  = p[ 8] & 0xff | (p[ 9] & 0xff)<<8 | (p[10] & 0xff)<<16 | (p[11] & 0xff)<<24,\n      j9  = p[12] & 0xff | (p[13] & 0xff)<<8 | (p[14] & 0xff)<<16 | (p[15] & 0xff)<<24,\n      j10 = c[ 8] & 0xff | (c[ 9] & 0xff)<<8 | (c[10] & 0xff)<<16 | (c[11] & 0xff)<<24,\n      j11 = k[16] & 0xff | (k[17] & 0xff)<<8 | (k[18] & 0xff)<<16 | (k[19] & 0xff)<<24,\n      j12 = k[20] & 0xff | (k[21] & 0xff)<<8 | (k[22] & 0xff)<<16 | (k[23] & 0xff)<<24,\n      j13 = k[24] & 0xff | (k[25] & 0xff)<<8 | (k[26] & 0xff)<<16 | (k[27] & 0xff)<<24,\n      j14 = k[28] & 0xff | (k[29] & 0xff)<<8 | (k[30] & 0xff)<<16 | (k[31] & 0xff)<<24,\n      j15 = c[12] & 0xff | (c[13] & 0xff)<<8 | (c[14] & 0xff)<<16 | (c[15] & 0xff)<<24;\n\n  var x0 = j0, x1 = j1, x2 = j2, x3 = j3, x4 = j4, x5 = j5, x6 = j6, x7 = j7,\n      x8 = j8, x9 = j9, x10 = j10, x11 = j11, x12 = j12, x13 = j13, x14 = j14,\n      x15 = j15, u;\n\n  for (var i = 0; i < 20; i += 2) {\n    u = x0 + x12 | 0;\n    x4 ^= u<<7 | u>>>(32-7);\n    u = x4 + x0 | 0;\n    x8 ^= u<<9 | u>>>(32-9);\n    u = x8 + x4 | 0;\n    x12 ^= u<<13 | u>>>(32-13);\n    u = x12 + x8 | 0;\n    x0 ^= u<<18 | u>>>(32-18);\n\n    u = x5 + x1 | 0;\n    x9 ^= u<<7 | u>>>(32-7);\n    u = x9 + x5 | 0;\n    x13 ^= u<<9 | u>>>(32-9);\n    u = x13 + x9 | 0;\n    x1 ^= u<<13 | u>>>(32-13);\n    u = x1 + x13 | 0;\n    x5 ^= u<<18 | u>>>(32-18);\n\n    u = x10 + x6 | 0;\n    x14 ^= u<<7 | u>>>(32-7);\n    u = x14 + x10 | 0;\n    x2 ^= u<<9 | u>>>(32-9);\n    u = x2 + x14 | 0;\n    x6 ^= u<<13 | u>>>(32-13);\n    u = x6 + x2 | 0;\n    x10 ^= u<<18 | u>>>(32-18);\n\n    u = x15 + x11 | 0;\n    x3 ^= u<<7 | u>>>(32-7);\n    u = x3 + x15 | 0;\n    x7 ^= u<<9 | u>>>(32-9);\n    u = x7 + x3 | 0;\n    x11 ^= u<<13 | u>>>(32-13);\n    u = x11 + x7 | 0;\n    x15 ^= u<<18 | u>>>(32-18);\n\n    u = x0 + x3 | 0;\n    x1 ^= u<<7 | u>>>(32-7);\n    u = x1 + x0 | 0;\n    x2 ^= u<<9 | u>>>(32-9);\n    u = x2 + x1 | 0;\n    x3 ^= u<<13 | u>>>(32-13);\n    u = x3 + x2 | 0;\n    x0 ^= u<<18 | u>>>(32-18);\n\n    u = x5 + x4 | 0;\n    x6 ^= u<<7 | u>>>(32-7);\n    u = x6 + x5 | 0;\n    x7 ^= u<<9 | u>>>(32-9);\n    u = x7 + x6 | 0;\n    x4 ^= u<<13 | u>>>(32-13);\n    u = x4 + x7 | 0;\n    x5 ^= u<<18 | u>>>(32-18);\n\n    u = x10 + x9 | 0;\n    x11 ^= u<<7 | u>>>(32-7);\n    u = x11 + x10 | 0;\n    x8 ^= u<<9 | u>>>(32-9);\n    u = x8 + x11 | 0;\n    x9 ^= u<<13 | u>>>(32-13);\n    u = x9 + x8 | 0;\n    x10 ^= u<<18 | u>>>(32-18);\n\n    u = x15 + x14 | 0;\n    x12 ^= u<<7 | u>>>(32-7);\n    u = x12 + x15 | 0;\n    x13 ^= u<<9 | u>>>(32-9);\n    u = x13 + x12 | 0;\n    x14 ^= u<<13 | u>>>(32-13);\n    u = x14 + x13 | 0;\n    x15 ^= u<<18 | u>>>(32-18);\n  }\n\n  o[ 0] = x0 >>>  0 & 0xff;\n  o[ 1] = x0 >>>  8 & 0xff;\n  o[ 2] = x0 >>> 16 & 0xff;\n  o[ 3] = x0 >>> 24 & 0xff;\n\n  o[ 4] = x5 >>>  0 & 0xff;\n  o[ 5] = x5 >>>  8 & 0xff;\n  o[ 6] = x5 >>> 16 & 0xff;\n  o[ 7] = x5 >>> 24 & 0xff;\n\n  o[ 8] = x10 >>>  0 & 0xff;\n  o[ 9] = x10 >>>  8 & 0xff;\n  o[10] = x10 >>> 16 & 0xff;\n  o[11] = x10 >>> 24 & 0xff;\n\n  o[12] = x15 >>>  0 & 0xff;\n  o[13] = x15 >>>  8 & 0xff;\n  o[14] = x15 >>> 16 & 0xff;\n  o[15] = x15 >>> 24 & 0xff;\n\n  o[16] = x6 >>>  0 & 0xff;\n  o[17] = x6 >>>  8 & 0xff;\n  o[18] = x6 >>> 16 & 0xff;\n  o[19] = x6 >>> 24 & 0xff;\n\n  o[20] = x7 >>>  0 & 0xff;\n  o[21] = x7 >>>  8 & 0xff;\n  o[22] = x7 >>> 16 & 0xff;\n  o[23] = x7 >>> 24 & 0xff;\n\n  o[24] = x8 >>>  0 & 0xff;\n  o[25] = x8 >>>  8 & 0xff;\n  o[26] = x8 >>> 16 & 0xff;\n  o[27] = x8 >>> 24 & 0xff;\n\n  o[28] = x9 >>>  0 & 0xff;\n  o[29] = x9 >>>  8 & 0xff;\n  o[30] = x9 >>> 16 & 0xff;\n  o[31] = x9 >>> 24 & 0xff;\n}\n\nfunction crypto_core_salsa20(out,inp,k,c) {\n  core_salsa20(out,inp,k,c);\n}\n\nfunction crypto_core_hsalsa20(out,inp,k,c) {\n  core_hsalsa20(out,inp,k,c);\n}\n\nvar sigma = new Uint8Array([101, 120, 112, 97, 110, 100, 32, 51, 50, 45, 98, 121, 116, 101, 32, 107]);\n            // \"expand 32-byte k\"\n\nfunction crypto_stream_salsa20_xor(c,cpos,m,mpos,b,n,k) {\n  var z = new Uint8Array(16), x = new Uint8Array(64);\n  var u, i;\n  for (i = 0; i < 16; i++) z[i] = 0;\n  for (i = 0; i < 8; i++) z[i] = n[i];\n  while (b >= 64) {\n    crypto_core_salsa20(x,z,k,sigma);\n    for (i = 0; i < 64; i++) c[cpos+i] = m[mpos+i] ^ x[i];\n    u = 1;\n    for (i = 8; i < 16; i++) {\n      u = u + (z[i] & 0xff) | 0;\n      z[i] = u & 0xff;\n      u >>>= 8;\n    }\n    b -= 64;\n    cpos += 64;\n    mpos += 64;\n  }\n  if (b > 0) {\n    crypto_core_salsa20(x,z,k,sigma);\n    for (i = 0; i < b; i++) c[cpos+i] = m[mpos+i] ^ x[i];\n  }\n  return 0;\n}\n\nfunction crypto_stream_salsa20(c,cpos,b,n,k) {\n  var z = new Uint8Array(16), x = new Uint8Array(64);\n  var u, i;\n  for (i = 0; i < 16; i++) z[i] = 0;\n  for (i = 0; i < 8; i++) z[i] = n[i];\n  while (b >= 64) {\n    crypto_core_salsa20(x,z,k,sigma);\n    for (i = 0; i < 64; i++) c[cpos+i] = x[i];\n    u = 1;\n    for (i = 8; i < 16; i++) {\n      u = u + (z[i] & 0xff) | 0;\n      z[i] = u & 0xff;\n      u >>>= 8;\n    }\n    b -= 64;\n    cpos += 64;\n  }\n  if (b > 0) {\n    crypto_core_salsa20(x,z,k,sigma);\n    for (i = 0; i < b; i++) c[cpos+i] = x[i];\n  }\n  return 0;\n}\n\nfunction crypto_stream(c,cpos,d,n,k) {\n  var s = new Uint8Array(32);\n  crypto_core_hsalsa20(s,n,k,sigma);\n  var sn = new Uint8Array(8);\n  for (var i = 0; i < 8; i++) sn[i] = n[i+16];\n  return crypto_stream_salsa20(c,cpos,d,sn,s);\n}\n\nfunction crypto_stream_xor(c,cpos,m,mpos,d,n,k) {\n  var s = new Uint8Array(32);\n  crypto_core_hsalsa20(s,n,k,sigma);\n  var sn = new Uint8Array(8);\n  for (var i = 0; i < 8; i++) sn[i] = n[i+16];\n  return crypto_stream_salsa20_xor(c,cpos,m,mpos,d,sn,s);\n}\n\n/*\n* Port of Andrew Moon's Poly1305-donna-16. Public domain.\n* https://github.com/floodyberry/poly1305-donna\n*/\n\nvar poly1305 = function(key) {\n  this.buffer = new Uint8Array(16);\n  this.r = new Uint16Array(10);\n  this.h = new Uint16Array(10);\n  this.pad = new Uint16Array(8);\n  this.leftover = 0;\n  this.fin = 0;\n\n  var t0, t1, t2, t3, t4, t5, t6, t7;\n\n  t0 = key[ 0] & 0xff | (key[ 1] & 0xff) << 8; this.r[0] = ( t0                     ) & 0x1fff;\n  t1 = key[ 2] & 0xff | (key[ 3] & 0xff) << 8; this.r[1] = ((t0 >>> 13) | (t1 <<  3)) & 0x1fff;\n  t2 = key[ 4] & 0xff | (key[ 5] & 0xff) << 8; this.r[2] = ((t1 >>> 10) | (t2 <<  6)) & 0x1f03;\n  t3 = key[ 6] & 0xff | (key[ 7] & 0xff) << 8; this.r[3] = ((t2 >>>  7) | (t3 <<  9)) & 0x1fff;\n  t4 = key[ 8] & 0xff | (key[ 9] & 0xff) << 8; this.r[4] = ((t3 >>>  4) | (t4 << 12)) & 0x00ff;\n  this.r[5] = ((t4 >>>  1)) & 0x1ffe;\n  t5 = key[10] & 0xff | (key[11] & 0xff) << 8; this.r[6] = ((t4 >>> 14) | (t5 <<  2)) & 0x1fff;\n  t6 = key[12] & 0xff | (key[13] & 0xff) << 8; this.r[7] = ((t5 >>> 11) | (t6 <<  5)) & 0x1f81;\n  t7 = key[14] & 0xff | (key[15] & 0xff) << 8; this.r[8] = ((t6 >>>  8) | (t7 <<  8)) & 0x1fff;\n  this.r[9] = ((t7 >>>  5)) & 0x007f;\n\n  this.pad[0] = key[16] & 0xff | (key[17] & 0xff) << 8;\n  this.pad[1] = key[18] & 0xff | (key[19] & 0xff) << 8;\n  this.pad[2] = key[20] & 0xff | (key[21] & 0xff) << 8;\n  this.pad[3] = key[22] & 0xff | (key[23] & 0xff) << 8;\n  this.pad[4] = key[24] & 0xff | (key[25] & 0xff) << 8;\n  this.pad[5] = key[26] & 0xff | (key[27] & 0xff) << 8;\n  this.pad[6] = key[28] & 0xff | (key[29] & 0xff) << 8;\n  this.pad[7] = key[30] & 0xff | (key[31] & 0xff) << 8;\n};\n\npoly1305.prototype.blocks = function(m, mpos, bytes) {\n  var hibit = this.fin ? 0 : (1 << 11);\n  var t0, t1, t2, t3, t4, t5, t6, t7, c;\n  var d0, d1, d2, d3, d4, d5, d6, d7, d8, d9;\n\n  var h0 = this.h[0],\n      h1 = this.h[1],\n      h2 = this.h[2],\n      h3 = this.h[3],\n      h4 = this.h[4],\n      h5 = this.h[5],\n      h6 = this.h[6],\n      h7 = this.h[7],\n      h8 = this.h[8],\n      h9 = this.h[9];\n\n  var r0 = this.r[0],\n      r1 = this.r[1],\n      r2 = this.r[2],\n      r3 = this.r[3],\n      r4 = this.r[4],\n      r5 = this.r[5],\n      r6 = this.r[6],\n      r7 = this.r[7],\n      r8 = this.r[8],\n      r9 = this.r[9];\n\n  while (bytes >= 16) {\n    t0 = m[mpos+ 0] & 0xff | (m[mpos+ 1] & 0xff) << 8; h0 += ( t0                     ) & 0x1fff;\n    t1 = m[mpos+ 2] & 0xff | (m[mpos+ 3] & 0xff) << 8; h1 += ((t0 >>> 13) | (t1 <<  3)) & 0x1fff;\n    t2 = m[mpos+ 4] & 0xff | (m[mpos+ 5] & 0xff) << 8; h2 += ((t1 >>> 10) | (t2 <<  6)) & 0x1fff;\n    t3 = m[mpos+ 6] & 0xff | (m[mpos+ 7] & 0xff) << 8; h3 += ((t2 >>>  7) | (t3 <<  9)) & 0x1fff;\n    t4 = m[mpos+ 8] & 0xff | (m[mpos+ 9] & 0xff) << 8; h4 += ((t3 >>>  4) | (t4 << 12)) & 0x1fff;\n    h5 += ((t4 >>>  1)) & 0x1fff;\n    t5 = m[mpos+10] & 0xff | (m[mpos+11] & 0xff) << 8; h6 += ((t4 >>> 14) | (t5 <<  2)) & 0x1fff;\n    t6 = m[mpos+12] & 0xff | (m[mpos+13] & 0xff) << 8; h7 += ((t5 >>> 11) | (t6 <<  5)) & 0x1fff;\n    t7 = m[mpos+14] & 0xff | (m[mpos+15] & 0xff) << 8; h8 += ((t6 >>>  8) | (t7 <<  8)) & 0x1fff;\n    h9 += ((t7 >>> 5)) | hibit;\n\n    c = 0;\n\n    d0 = c;\n    d0 += h0 * r0;\n    d0 += h1 * (5 * r9);\n    d0 += h2 * (5 * r8);\n    d0 += h3 * (5 * r7);\n    d0 += h4 * (5 * r6);\n    c = (d0 >>> 13); d0 &= 0x1fff;\n    d0 += h5 * (5 * r5);\n    d0 += h6 * (5 * r4);\n    d0 += h7 * (5 * r3);\n    d0 += h8 * (5 * r2);\n    d0 += h9 * (5 * r1);\n    c += (d0 >>> 13); d0 &= 0x1fff;\n\n    d1 = c;\n    d1 += h0 * r1;\n    d1 += h1 * r0;\n    d1 += h2 * (5 * r9);\n    d1 += h3 * (5 * r8);\n    d1 += h4 * (5 * r7);\n    c = (d1 >>> 13); d1 &= 0x1fff;\n    d1 += h5 * (5 * r6);\n    d1 += h6 * (5 * r5);\n    d1 += h7 * (5 * r4);\n    d1 += h8 * (5 * r3);\n    d1 += h9 * (5 * r2);\n    c += (d1 >>> 13); d1 &= 0x1fff;\n\n    d2 = c;\n    d2 += h0 * r2;\n    d2 += h1 * r1;\n    d2 += h2 * r0;\n    d2 += h3 * (5 * r9);\n    d2 += h4 * (5 * r8);\n    c = (d2 >>> 13); d2 &= 0x1fff;\n    d2 += h5 * (5 * r7);\n    d2 += h6 * (5 * r6);\n    d2 += h7 * (5 * r5);\n    d2 += h8 * (5 * r4);\n    d2 += h9 * (5 * r3);\n    c += (d2 >>> 13); d2 &= 0x1fff;\n\n    d3 = c;\n    d3 += h0 * r3;\n    d3 += h1 * r2;\n    d3 += h2 * r1;\n    d3 += h3 * r0;\n    d3 += h4 * (5 * r9);\n    c = (d3 >>> 13); d3 &= 0x1fff;\n    d3 += h5 * (5 * r8);\n    d3 += h6 * (5 * r7);\n    d3 += h7 * (5 * r6);\n    d3 += h8 * (5 * r5);\n    d3 += h9 * (5 * r4);\n    c += (d3 >>> 13); d3 &= 0x1fff;\n\n    d4 = c;\n    d4 += h0 * r4;\n    d4 += h1 * r3;\n    d4 += h2 * r2;\n    d4 += h3 * r1;\n    d4 += h4 * r0;\n    c = (d4 >>> 13); d4 &= 0x1fff;\n    d4 += h5 * (5 * r9);\n    d4 += h6 * (5 * r8);\n    d4 += h7 * (5 * r7);\n    d4 += h8 * (5 * r6);\n    d4 += h9 * (5 * r5);\n    c += (d4 >>> 13); d4 &= 0x1fff;\n\n    d5 = c;\n    d5 += h0 * r5;\n    d5 += h1 * r4;\n    d5 += h2 * r3;\n    d5 += h3 * r2;\n    d5 += h4 * r1;\n    c = (d5 >>> 13); d5 &= 0x1fff;\n    d5 += h5 * r0;\n    d5 += h6 * (5 * r9);\n    d5 += h7 * (5 * r8);\n    d5 += h8 * (5 * r7);\n    d5 += h9 * (5 * r6);\n    c += (d5 >>> 13); d5 &= 0x1fff;\n\n    d6 = c;\n    d6 += h0 * r6;\n    d6 += h1 * r5;\n    d6 += h2 * r4;\n    d6 += h3 * r3;\n    d6 += h4 * r2;\n    c = (d6 >>> 13); d6 &= 0x1fff;\n    d6 += h5 * r1;\n    d6 += h6 * r0;\n    d6 += h7 * (5 * r9);\n    d6 += h8 * (5 * r8);\n    d6 += h9 * (5 * r7);\n    c += (d6 >>> 13); d6 &= 0x1fff;\n\n    d7 = c;\n    d7 += h0 * r7;\n    d7 += h1 * r6;\n    d7 += h2 * r5;\n    d7 += h3 * r4;\n    d7 += h4 * r3;\n    c = (d7 >>> 13); d7 &= 0x1fff;\n    d7 += h5 * r2;\n    d7 += h6 * r1;\n    d7 += h7 * r0;\n    d7 += h8 * (5 * r9);\n    d7 += h9 * (5 * r8);\n    c += (d7 >>> 13); d7 &= 0x1fff;\n\n    d8 = c;\n    d8 += h0 * r8;\n    d8 += h1 * r7;\n    d8 += h2 * r6;\n    d8 += h3 * r5;\n    d8 += h4 * r4;\n    c = (d8 >>> 13); d8 &= 0x1fff;\n    d8 += h5 * r3;\n    d8 += h6 * r2;\n    d8 += h7 * r1;\n    d8 += h8 * r0;\n    d8 += h9 * (5 * r9);\n    c += (d8 >>> 13); d8 &= 0x1fff;\n\n    d9 = c;\n    d9 += h0 * r9;\n    d9 += h1 * r8;\n    d9 += h2 * r7;\n    d9 += h3 * r6;\n    d9 += h4 * r5;\n    c = (d9 >>> 13); d9 &= 0x1fff;\n    d9 += h5 * r4;\n    d9 += h6 * r3;\n    d9 += h7 * r2;\n    d9 += h8 * r1;\n    d9 += h9 * r0;\n    c += (d9 >>> 13); d9 &= 0x1fff;\n\n    c = (((c << 2) + c)) | 0;\n    c = (c + d0) | 0;\n    d0 = c & 0x1fff;\n    c = (c >>> 13);\n    d1 += c;\n\n    h0 = d0;\n    h1 = d1;\n    h2 = d2;\n    h3 = d3;\n    h4 = d4;\n    h5 = d5;\n    h6 = d6;\n    h7 = d7;\n    h8 = d8;\n    h9 = d9;\n\n    mpos += 16;\n    bytes -= 16;\n  }\n  this.h[0] = h0;\n  this.h[1] = h1;\n  this.h[2] = h2;\n  this.h[3] = h3;\n  this.h[4] = h4;\n  this.h[5] = h5;\n  this.h[6] = h6;\n  this.h[7] = h7;\n  this.h[8] = h8;\n  this.h[9] = h9;\n};\n\npoly1305.prototype.finish = function(mac, macpos) {\n  var g = new Uint16Array(10);\n  var c, mask, f, i;\n\n  if (this.leftover) {\n    i = this.leftover;\n    this.buffer[i++] = 1;\n    for (; i < 16; i++) this.buffer[i] = 0;\n    this.fin = 1;\n    this.blocks(this.buffer, 0, 16);\n  }\n\n  c = this.h[1] >>> 13;\n  this.h[1] &= 0x1fff;\n  for (i = 2; i < 10; i++) {\n    this.h[i] += c;\n    c = this.h[i] >>> 13;\n    this.h[i] &= 0x1fff;\n  }\n  this.h[0] += (c * 5);\n  c = this.h[0] >>> 13;\n  this.h[0] &= 0x1fff;\n  this.h[1] += c;\n  c = this.h[1] >>> 13;\n  this.h[1] &= 0x1fff;\n  this.h[2] += c;\n\n  g[0] = this.h[0] + 5;\n  c = g[0] >>> 13;\n  g[0] &= 0x1fff;\n  for (i = 1; i < 10; i++) {\n    g[i] = this.h[i] + c;\n    c = g[i] >>> 13;\n    g[i] &= 0x1fff;\n  }\n  g[9] -= (1 << 13);\n\n  mask = (c ^ 1) - 1;\n  for (i = 0; i < 10; i++) g[i] &= mask;\n  mask = ~mask;\n  for (i = 0; i < 10; i++) this.h[i] = (this.h[i] & mask) | g[i];\n\n  this.h[0] = ((this.h[0]       ) | (this.h[1] << 13)                    ) & 0xffff;\n  this.h[1] = ((this.h[1] >>>  3) | (this.h[2] << 10)                    ) & 0xffff;\n  this.h[2] = ((this.h[2] >>>  6) | (this.h[3] <<  7)                    ) & 0xffff;\n  this.h[3] = ((this.h[3] >>>  9) | (this.h[4] <<  4)                    ) & 0xffff;\n  this.h[4] = ((this.h[4] >>> 12) | (this.h[5] <<  1) | (this.h[6] << 14)) & 0xffff;\n  this.h[5] = ((this.h[6] >>>  2) | (this.h[7] << 11)                    ) & 0xffff;\n  this.h[6] = ((this.h[7] >>>  5) | (this.h[8] <<  8)                    ) & 0xffff;\n  this.h[7] = ((this.h[8] >>>  8) | (this.h[9] <<  5)                    ) & 0xffff;\n\n  f = this.h[0] + this.pad[0];\n  this.h[0] = f & 0xffff;\n  for (i = 1; i < 8; i++) {\n    f = (((this.h[i] + this.pad[i]) | 0) + (f >>> 16)) | 0;\n    this.h[i] = f & 0xffff;\n  }\n\n  mac[macpos+ 0] = (this.h[0] >>> 0) & 0xff;\n  mac[macpos+ 1] = (this.h[0] >>> 8) & 0xff;\n  mac[macpos+ 2] = (this.h[1] >>> 0) & 0xff;\n  mac[macpos+ 3] = (this.h[1] >>> 8) & 0xff;\n  mac[macpos+ 4] = (this.h[2] >>> 0) & 0xff;\n  mac[macpos+ 5] = (this.h[2] >>> 8) & 0xff;\n  mac[macpos+ 6] = (this.h[3] >>> 0) & 0xff;\n  mac[macpos+ 7] = (this.h[3] >>> 8) & 0xff;\n  mac[macpos+ 8] = (this.h[4] >>> 0) & 0xff;\n  mac[macpos+ 9] = (this.h[4] >>> 8) & 0xff;\n  mac[macpos+10] = (this.h[5] >>> 0) & 0xff;\n  mac[macpos+11] = (this.h[5] >>> 8) & 0xff;\n  mac[macpos+12] = (this.h[6] >>> 0) & 0xff;\n  mac[macpos+13] = (this.h[6] >>> 8) & 0xff;\n  mac[macpos+14] = (this.h[7] >>> 0) & 0xff;\n  mac[macpos+15] = (this.h[7] >>> 8) & 0xff;\n};\n\npoly1305.prototype.update = function(m, mpos, bytes) {\n  var i, want;\n\n  if (this.leftover) {\n    want = (16 - this.leftover);\n    if (want > bytes)\n      want = bytes;\n    for (i = 0; i < want; i++)\n      this.buffer[this.leftover + i] = m[mpos+i];\n    bytes -= want;\n    mpos += want;\n    this.leftover += want;\n    if (this.leftover < 16)\n      return;\n    this.blocks(this.buffer, 0, 16);\n    this.leftover = 0;\n  }\n\n  if (bytes >= 16) {\n    want = bytes - (bytes % 16);\n    this.blocks(m, mpos, want);\n    mpos += want;\n    bytes -= want;\n  }\n\n  if (bytes) {\n    for (i = 0; i < bytes; i++)\n      this.buffer[this.leftover + i] = m[mpos+i];\n    this.leftover += bytes;\n  }\n};\n\nfunction crypto_onetimeauth(out, outpos, m, mpos, n, k) {\n  var s = new poly1305(k);\n  s.update(m, mpos, n);\n  s.finish(out, outpos);\n  return 0;\n}\n\nfunction crypto_onetimeauth_verify(h, hpos, m, mpos, n, k) {\n  var x = new Uint8Array(16);\n  crypto_onetimeauth(x,0,m,mpos,n,k);\n  return crypto_verify_16(h,hpos,x,0);\n}\n\nfunction crypto_secretbox(c,m,d,n,k) {\n  var i;\n  if (d < 32) return -1;\n  crypto_stream_xor(c,0,m,0,d,n,k);\n  crypto_onetimeauth(c, 16, c, 32, d - 32, c);\n  for (i = 0; i < 16; i++) c[i] = 0;\n  return 0;\n}\n\nfunction crypto_secretbox_open(m,c,d,n,k) {\n  var i;\n  var x = new Uint8Array(32);\n  if (d < 32) return -1;\n  crypto_stream(x,0,32,n,k);\n  if (crypto_onetimeauth_verify(c, 16,c, 32,d - 32,x) !== 0) return -1;\n  crypto_stream_xor(m,0,c,0,d,n,k);\n  for (i = 0; i < 32; i++) m[i] = 0;\n  return 0;\n}\n\nfunction set25519(r, a) {\n  var i;\n  for (i = 0; i < 16; i++) r[i] = a[i]|0;\n}\n\nfunction car25519(o) {\n  var i, v, c = 1;\n  for (i = 0; i < 16; i++) {\n    v = o[i] + c + 65535;\n    c = Math.floor(v / 65536);\n    o[i] = v - c * 65536;\n  }\n  o[0] += c-1 + 37 * (c-1);\n}\n\nfunction sel25519(p, q, b) {\n  var t, c = ~(b-1);\n  for (var i = 0; i < 16; i++) {\n    t = c & (p[i] ^ q[i]);\n    p[i] ^= t;\n    q[i] ^= t;\n  }\n}\n\nfunction pack25519(o, n) {\n  var i, j, b;\n  var m = gf(), t = gf();\n  for (i = 0; i < 16; i++) t[i] = n[i];\n  car25519(t);\n  car25519(t);\n  car25519(t);\n  for (j = 0; j < 2; j++) {\n    m[0] = t[0] - 0xffed;\n    for (i = 1; i < 15; i++) {\n      m[i] = t[i] - 0xffff - ((m[i-1]>>16) & 1);\n      m[i-1] &= 0xffff;\n    }\n    m[15] = t[15] - 0x7fff - ((m[14]>>16) & 1);\n    b = (m[15]>>16) & 1;\n    m[14] &= 0xffff;\n    sel25519(t, m, 1-b);\n  }\n  for (i = 0; i < 16; i++) {\n    o[2*i] = t[i] & 0xff;\n    o[2*i+1] = t[i]>>8;\n  }\n}\n\nfunction neq25519(a, b) {\n  var c = new Uint8Array(32), d = new Uint8Array(32);\n  pack25519(c, a);\n  pack25519(d, b);\n  return crypto_verify_32(c, 0, d, 0);\n}\n\nfunction par25519(a) {\n  var d = new Uint8Array(32);\n  pack25519(d, a);\n  return d[0] & 1;\n}\n\nfunction unpack25519(o, n) {\n  var i;\n  for (i = 0; i < 16; i++) o[i] = n[2*i] + (n[2*i+1] << 8);\n  o[15] &= 0x7fff;\n}\n\nfunction A(o, a, b) {\n  for (var i = 0; i < 16; i++) o[i] = a[i] + b[i];\n}\n\nfunction Z(o, a, b) {\n  for (var i = 0; i < 16; i++) o[i] = a[i] - b[i];\n}\n\nfunction M(o, a, b) {\n  var v, c,\n     t0 = 0,  t1 = 0,  t2 = 0,  t3 = 0,  t4 = 0,  t5 = 0,  t6 = 0,  t7 = 0,\n     t8 = 0,  t9 = 0, t10 = 0, t11 = 0, t12 = 0, t13 = 0, t14 = 0, t15 = 0,\n    t16 = 0, t17 = 0, t18 = 0, t19 = 0, t20 = 0, t21 = 0, t22 = 0, t23 = 0,\n    t24 = 0, t25 = 0, t26 = 0, t27 = 0, t28 = 0, t29 = 0, t30 = 0,\n    b0 = b[0],\n    b1 = b[1],\n    b2 = b[2],\n    b3 = b[3],\n    b4 = b[4],\n    b5 = b[5],\n    b6 = b[6],\n    b7 = b[7],\n    b8 = b[8],\n    b9 = b[9],\n    b10 = b[10],\n    b11 = b[11],\n    b12 = b[12],\n    b13 = b[13],\n    b14 = b[14],\n    b15 = b[15];\n\n  v = a[0];\n  t0 += v * b0;\n  t1 += v * b1;\n  t2 += v * b2;\n  t3 += v * b3;\n  t4 += v * b4;\n  t5 += v * b5;\n  t6 += v * b6;\n  t7 += v * b7;\n  t8 += v * b8;\n  t9 += v * b9;\n  t10 += v * b10;\n  t11 += v * b11;\n  t12 += v * b12;\n  t13 += v * b13;\n  t14 += v * b14;\n  t15 += v * b15;\n  v = a[1];\n  t1 += v * b0;\n  t2 += v * b1;\n  t3 += v * b2;\n  t4 += v * b3;\n  t5 += v * b4;\n  t6 += v * b5;\n  t7 += v * b6;\n  t8 += v * b7;\n  t9 += v * b8;\n  t10 += v * b9;\n  t11 += v * b10;\n  t12 += v * b11;\n  t13 += v * b12;\n  t14 += v * b13;\n  t15 += v * b14;\n  t16 += v * b15;\n  v = a[2];\n  t2 += v * b0;\n  t3 += v * b1;\n  t4 += v * b2;\n  t5 += v * b3;\n  t6 += v * b4;\n  t7 += v * b5;\n  t8 += v * b6;\n  t9 += v * b7;\n  t10 += v * b8;\n  t11 += v * b9;\n  t12 += v * b10;\n  t13 += v * b11;\n  t14 += v * b12;\n  t15 += v * b13;\n  t16 += v * b14;\n  t17 += v * b15;\n  v = a[3];\n  t3 += v * b0;\n  t4 += v * b1;\n  t5 += v * b2;\n  t6 += v * b3;\n  t7 += v * b4;\n  t8 += v * b5;\n  t9 += v * b6;\n  t10 += v * b7;\n  t11 += v * b8;\n  t12 += v * b9;\n  t13 += v * b10;\n  t14 += v * b11;\n  t15 += v * b12;\n  t16 += v * b13;\n  t17 += v * b14;\n  t18 += v * b15;\n  v = a[4];\n  t4 += v * b0;\n  t5 += v * b1;\n  t6 += v * b2;\n  t7 += v * b3;\n  t8 += v * b4;\n  t9 += v * b5;\n  t10 += v * b6;\n  t11 += v * b7;\n  t12 += v * b8;\n  t13 += v * b9;\n  t14 += v * b10;\n  t15 += v * b11;\n  t16 += v * b12;\n  t17 += v * b13;\n  t18 += v * b14;\n  t19 += v * b15;\n  v = a[5];\n  t5 += v * b0;\n  t6 += v * b1;\n  t7 += v * b2;\n  t8 += v * b3;\n  t9 += v * b4;\n  t10 += v * b5;\n  t11 += v * b6;\n  t12 += v * b7;\n  t13 += v * b8;\n  t14 += v * b9;\n  t15 += v * b10;\n  t16 += v * b11;\n  t17 += v * b12;\n  t18 += v * b13;\n  t19 += v * b14;\n  t20 += v * b15;\n  v = a[6];\n  t6 += v * b0;\n  t7 += v * b1;\n  t8 += v * b2;\n  t9 += v * b3;\n  t10 += v * b4;\n  t11 += v * b5;\n  t12 += v * b6;\n  t13 += v * b7;\n  t14 += v * b8;\n  t15 += v * b9;\n  t16 += v * b10;\n  t17 += v * b11;\n  t18 += v * b12;\n  t19 += v * b13;\n  t20 += v * b14;\n  t21 += v * b15;\n  v = a[7];\n  t7 += v * b0;\n  t8 += v * b1;\n  t9 += v * b2;\n  t10 += v * b3;\n  t11 += v * b4;\n  t12 += v * b5;\n  t13 += v * b6;\n  t14 += v * b7;\n  t15 += v * b8;\n  t16 += v * b9;\n  t17 += v * b10;\n  t18 += v * b11;\n  t19 += v * b12;\n  t20 += v * b13;\n  t21 += v * b14;\n  t22 += v * b15;\n  v = a[8];\n  t8 += v * b0;\n  t9 += v * b1;\n  t10 += v * b2;\n  t11 += v * b3;\n  t12 += v * b4;\n  t13 += v * b5;\n  t14 += v * b6;\n  t15 += v * b7;\n  t16 += v * b8;\n  t17 += v * b9;\n  t18 += v * b10;\n  t19 += v * b11;\n  t20 += v * b12;\n  t21 += v * b13;\n  t22 += v * b14;\n  t23 += v * b15;\n  v = a[9];\n  t9 += v * b0;\n  t10 += v * b1;\n  t11 += v * b2;\n  t12 += v * b3;\n  t13 += v * b4;\n  t14 += v * b5;\n  t15 += v * b6;\n  t16 += v * b7;\n  t17 += v * b8;\n  t18 += v * b9;\n  t19 += v * b10;\n  t20 += v * b11;\n  t21 += v * b12;\n  t22 += v * b13;\n  t23 += v * b14;\n  t24 += v * b15;\n  v = a[10];\n  t10 += v * b0;\n  t11 += v * b1;\n  t12 += v * b2;\n  t13 += v * b3;\n  t14 += v * b4;\n  t15 += v * b5;\n  t16 += v * b6;\n  t17 += v * b7;\n  t18 += v * b8;\n  t19 += v * b9;\n  t20 += v * b10;\n  t21 += v * b11;\n  t22 += v * b12;\n  t23 += v * b13;\n  t24 += v * b14;\n  t25 += v * b15;\n  v = a[11];\n  t11 += v * b0;\n  t12 += v * b1;\n  t13 += v * b2;\n  t14 += v * b3;\n  t15 += v * b4;\n  t16 += v * b5;\n  t17 += v * b6;\n  t18 += v * b7;\n  t19 += v * b8;\n  t20 += v * b9;\n  t21 += v * b10;\n  t22 += v * b11;\n  t23 += v * b12;\n  t24 += v * b13;\n  t25 += v * b14;\n  t26 += v * b15;\n  v = a[12];\n  t12 += v * b0;\n  t13 += v * b1;\n  t14 += v * b2;\n  t15 += v * b3;\n  t16 += v * b4;\n  t17 += v * b5;\n  t18 += v * b6;\n  t19 += v * b7;\n  t20 += v * b8;\n  t21 += v * b9;\n  t22 += v * b10;\n  t23 += v * b11;\n  t24 += v * b12;\n  t25 += v * b13;\n  t26 += v * b14;\n  t27 += v * b15;\n  v = a[13];\n  t13 += v * b0;\n  t14 += v * b1;\n  t15 += v * b2;\n  t16 += v * b3;\n  t17 += v * b4;\n  t18 += v * b5;\n  t19 += v * b6;\n  t20 += v * b7;\n  t21 += v * b8;\n  t22 += v * b9;\n  t23 += v * b10;\n  t24 += v * b11;\n  t25 += v * b12;\n  t26 += v * b13;\n  t27 += v * b14;\n  t28 += v * b15;\n  v = a[14];\n  t14 += v * b0;\n  t15 += v * b1;\n  t16 += v * b2;\n  t17 += v * b3;\n  t18 += v * b4;\n  t19 += v * b5;\n  t20 += v * b6;\n  t21 += v * b7;\n  t22 += v * b8;\n  t23 += v * b9;\n  t24 += v * b10;\n  t25 += v * b11;\n  t26 += v * b12;\n  t27 += v * b13;\n  t28 += v * b14;\n  t29 += v * b15;\n  v = a[15];\n  t15 += v * b0;\n  t16 += v * b1;\n  t17 += v * b2;\n  t18 += v * b3;\n  t19 += v * b4;\n  t20 += v * b5;\n  t21 += v * b6;\n  t22 += v * b7;\n  t23 += v * b8;\n  t24 += v * b9;\n  t25 += v * b10;\n  t26 += v * b11;\n  t27 += v * b12;\n  t28 += v * b13;\n  t29 += v * b14;\n  t30 += v * b15;\n\n  t0  += 38 * t16;\n  t1  += 38 * t17;\n  t2  += 38 * t18;\n  t3  += 38 * t19;\n  t4  += 38 * t20;\n  t5  += 38 * t21;\n  t6  += 38 * t22;\n  t7  += 38 * t23;\n  t8  += 38 * t24;\n  t9  += 38 * t25;\n  t10 += 38 * t26;\n  t11 += 38 * t27;\n  t12 += 38 * t28;\n  t13 += 38 * t29;\n  t14 += 38 * t30;\n  // t15 left as is\n\n  // first car\n  c = 1;\n  v =  t0 + c + 65535; c = Math.floor(v / 65536);  t0 = v - c * 65536;\n  v =  t1 + c + 65535; c = Math.floor(v / 65536);  t1 = v - c * 65536;\n  v =  t2 + c + 65535; c = Math.floor(v / 65536);  t2 = v - c * 65536;\n  v =  t3 + c + 65535; c = Math.floor(v / 65536);  t3 = v - c * 65536;\n  v =  t4 + c + 65535; c = Math.floor(v / 65536);  t4 = v - c * 65536;\n  v =  t5 + c + 65535; c = Math.floor(v / 65536);  t5 = v - c * 65536;\n  v =  t6 + c + 65535; c = Math.floor(v / 65536);  t6 = v - c * 65536;\n  v =  t7 + c + 65535; c = Math.floor(v / 65536);  t7 = v - c * 65536;\n  v =  t8 + c + 65535; c = Math.floor(v / 65536);  t8 = v - c * 65536;\n  v =  t9 + c + 65535; c = Math.floor(v / 65536);  t9 = v - c * 65536;\n  v = t10 + c + 65535; c = Math.floor(v / 65536); t10 = v - c * 65536;\n  v = t11 + c + 65535; c = Math.floor(v / 65536); t11 = v - c * 65536;\n  v = t12 + c + 65535; c = Math.floor(v / 65536); t12 = v - c * 65536;\n  v = t13 + c + 65535; c = Math.floor(v / 65536); t13 = v - c * 65536;\n  v = t14 + c + 65535; c = Math.floor(v / 65536); t14 = v - c * 65536;\n  v = t15 + c + 65535; c = Math.floor(v / 65536); t15 = v - c * 65536;\n  t0 += c-1 + 37 * (c-1);\n\n  // second car\n  c = 1;\n  v =  t0 + c + 65535; c = Math.floor(v / 65536);  t0 = v - c * 65536;\n  v =  t1 + c + 65535; c = Math.floor(v / 65536);  t1 = v - c * 65536;\n  v =  t2 + c + 65535; c = Math.floor(v / 65536);  t2 = v - c * 65536;\n  v =  t3 + c + 65535; c = Math.floor(v / 65536);  t3 = v - c * 65536;\n  v =  t4 + c + 65535; c = Math.floor(v / 65536);  t4 = v - c * 65536;\n  v =  t5 + c + 65535; c = Math.floor(v / 65536);  t5 = v - c * 65536;\n  v =  t6 + c + 65535; c = Math.floor(v / 65536);  t6 = v - c * 65536;\n  v =  t7 + c + 65535; c = Math.floor(v / 65536);  t7 = v - c * 65536;\n  v =  t8 + c + 65535; c = Math.floor(v / 65536);  t8 = v - c * 65536;\n  v =  t9 + c + 65535; c = Math.floor(v / 65536);  t9 = v - c * 65536;\n  v = t10 + c + 65535; c = Math.floor(v / 65536); t10 = v - c * 65536;\n  v = t11 + c + 65535; c = Math.floor(v / 65536); t11 = v - c * 65536;\n  v = t12 + c + 65535; c = Math.floor(v / 65536); t12 = v - c * 65536;\n  v = t13 + c + 65535; c = Math.floor(v / 65536); t13 = v - c * 65536;\n  v = t14 + c + 65535; c = Math.floor(v / 65536); t14 = v - c * 65536;\n  v = t15 + c + 65535; c = Math.floor(v / 65536); t15 = v - c * 65536;\n  t0 += c-1 + 37 * (c-1);\n\n  o[ 0] = t0;\n  o[ 1] = t1;\n  o[ 2] = t2;\n  o[ 3] = t3;\n  o[ 4] = t4;\n  o[ 5] = t5;\n  o[ 6] = t6;\n  o[ 7] = t7;\n  o[ 8] = t8;\n  o[ 9] = t9;\n  o[10] = t10;\n  o[11] = t11;\n  o[12] = t12;\n  o[13] = t13;\n  o[14] = t14;\n  o[15] = t15;\n}\n\nfunction S(o, a) {\n  M(o, a, a);\n}\n\nfunction inv25519(o, i) {\n  var c = gf();\n  var a;\n  for (a = 0; a < 16; a++) c[a] = i[a];\n  for (a = 253; a >= 0; a--) {\n    S(c, c);\n    if(a !== 2 && a !== 4) M(c, c, i);\n  }\n  for (a = 0; a < 16; a++) o[a] = c[a];\n}\n\nfunction pow2523(o, i) {\n  var c = gf();\n  var a;\n  for (a = 0; a < 16; a++) c[a] = i[a];\n  for (a = 250; a >= 0; a--) {\n      S(c, c);\n      if(a !== 1) M(c, c, i);\n  }\n  for (a = 0; a < 16; a++) o[a] = c[a];\n}\n\nfunction crypto_scalarmult(q, n, p) {\n  var z = new Uint8Array(32);\n  var x = new Float64Array(80), r, i;\n  var a = gf(), b = gf(), c = gf(),\n      d = gf(), e = gf(), f = gf();\n  for (i = 0; i < 31; i++) z[i] = n[i];\n  z[31]=(n[31]&127)|64;\n  z[0]&=248;\n  unpack25519(x,p);\n  for (i = 0; i < 16; i++) {\n    b[i]=x[i];\n    d[i]=a[i]=c[i]=0;\n  }\n  a[0]=d[0]=1;\n  for (i=254; i>=0; --i) {\n    r=(z[i>>>3]>>>(i&7))&1;\n    sel25519(a,b,r);\n    sel25519(c,d,r);\n    A(e,a,c);\n    Z(a,a,c);\n    A(c,b,d);\n    Z(b,b,d);\n    S(d,e);\n    S(f,a);\n    M(a,c,a);\n    M(c,b,e);\n    A(e,a,c);\n    Z(a,a,c);\n    S(b,a);\n    Z(c,d,f);\n    M(a,c,_121665);\n    A(a,a,d);\n    M(c,c,a);\n    M(a,d,f);\n    M(d,b,x);\n    S(b,e);\n    sel25519(a,b,r);\n    sel25519(c,d,r);\n  }\n  for (i = 0; i < 16; i++) {\n    x[i+16]=a[i];\n    x[i+32]=c[i];\n    x[i+48]=b[i];\n    x[i+64]=d[i];\n  }\n  var x32 = x.subarray(32);\n  var x16 = x.subarray(16);\n  inv25519(x32,x32);\n  M(x16,x16,x32);\n  pack25519(q,x16);\n  return 0;\n}\n\nfunction crypto_scalarmult_base(q, n) {\n  return crypto_scalarmult(q, n, _9);\n}\n\nfunction crypto_box_keypair(y, x) {\n  randombytes(x, 32);\n  return crypto_scalarmult_base(y, x);\n}\n\nfunction crypto_box_beforenm(k, y, x) {\n  var s = new Uint8Array(32);\n  crypto_scalarmult(s, x, y);\n  return crypto_core_hsalsa20(k, _0, s, sigma);\n}\n\nvar crypto_box_afternm = crypto_secretbox;\nvar crypto_box_open_afternm = crypto_secretbox_open;\n\nfunction crypto_box(c, m, d, n, y, x) {\n  var k = new Uint8Array(32);\n  crypto_box_beforenm(k, y, x);\n  return crypto_box_afternm(c, m, d, n, k);\n}\n\nfunction crypto_box_open(m, c, d, n, y, x) {\n  var k = new Uint8Array(32);\n  crypto_box_beforenm(k, y, x);\n  return crypto_box_open_afternm(m, c, d, n, k);\n}\n\nvar K = [\n  0x428a2f98, 0xd728ae22, 0x71374491, 0x23ef65cd,\n  0xb5c0fbcf, 0xec4d3b2f, 0xe9b5dba5, 0x8189dbbc,\n  0x3956c25b, 0xf348b538, 0x59f111f1, 0xb605d019,\n  0x923f82a4, 0xaf194f9b, 0xab1c5ed5, 0xda6d8118,\n  0xd807aa98, 0xa3030242, 0x12835b01, 0x45706fbe,\n  0x243185be, 0x4ee4b28c, 0x550c7dc3, 0xd5ffb4e2,\n  0x72be5d74, 0xf27b896f, 0x80deb1fe, 0x3b1696b1,\n  0x9bdc06a7, 0x25c71235, 0xc19bf174, 0xcf692694,\n  0xe49b69c1, 0x9ef14ad2, 0xefbe4786, 0x384f25e3,\n  0x0fc19dc6, 0x8b8cd5b5, 0x240ca1cc, 0x77ac9c65,\n  0x2de92c6f, 0x592b0275, 0x4a7484aa, 0x6ea6e483,\n  0x5cb0a9dc, 0xbd41fbd4, 0x76f988da, 0x831153b5,\n  0x983e5152, 0xee66dfab, 0xa831c66d, 0x2db43210,\n  0xb00327c8, 0x98fb213f, 0xbf597fc7, 0xbeef0ee4,\n  0xc6e00bf3, 0x3da88fc2, 0xd5a79147, 0x930aa725,\n  0x06ca6351, 0xe003826f, 0x14292967, 0x0a0e6e70,\n  0x27b70a85, 0x46d22ffc, 0x2e1b2138, 0x5c26c926,\n  0x4d2c6dfc, 0x5ac42aed, 0x53380d13, 0x9d95b3df,\n  0x650a7354, 0x8baf63de, 0x766a0abb, 0x3c77b2a8,\n  0x81c2c92e, 0x47edaee6, 0x92722c85, 0x1482353b,\n  0xa2bfe8a1, 0x4cf10364, 0xa81a664b, 0xbc423001,\n  0xc24b8b70, 0xd0f89791, 0xc76c51a3, 0x0654be30,\n  0xd192e819, 0xd6ef5218, 0xd6990624, 0x5565a910,\n  0xf40e3585, 0x5771202a, 0x106aa070, 0x32bbd1b8,\n  0x19a4c116, 0xb8d2d0c8, 0x1e376c08, 0x5141ab53,\n  0x2748774c, 0xdf8eeb99, 0x34b0bcb5, 0xe19b48a8,\n  0x391c0cb3, 0xc5c95a63, 0x4ed8aa4a, 0xe3418acb,\n  0x5b9cca4f, 0x7763e373, 0x682e6ff3, 0xd6b2b8a3,\n  0x748f82ee, 0x5defb2fc, 0x78a5636f, 0x43172f60,\n  0x84c87814, 0xa1f0ab72, 0x8cc70208, 0x1a6439ec,\n  0x90befffa, 0x23631e28, 0xa4506ceb, 0xde82bde9,\n  0xbef9a3f7, 0xb2c67915, 0xc67178f2, 0xe372532b,\n  0xca273ece, 0xea26619c, 0xd186b8c7, 0x21c0c207,\n  0xeada7dd6, 0xcde0eb1e, 0xf57d4f7f, 0xee6ed178,\n  0x06f067aa, 0x72176fba, 0x0a637dc5, 0xa2c898a6,\n  0x113f9804, 0xbef90dae, 0x1b710b35, 0x131c471b,\n  0x28db77f5, 0x23047d84, 0x32caab7b, 0x40c72493,\n  0x3c9ebe0a, 0x15c9bebc, 0x431d67c4, 0x9c100d4c,\n  0x4cc5d4be, 0xcb3e42b6, 0x597f299c, 0xfc657e2a,\n  0x5fcb6fab, 0x3ad6faec, 0x6c44198c, 0x4a475817\n];\n\nfunction crypto_hashblocks_hl(hh, hl, m, n) {\n  var wh = new Int32Array(16), wl = new Int32Array(16),\n      bh0, bh1, bh2, bh3, bh4, bh5, bh6, bh7,\n      bl0, bl1, bl2, bl3, bl4, bl5, bl6, bl7,\n      th, tl, i, j, h, l, a, b, c, d;\n\n  var ah0 = hh[0],\n      ah1 = hh[1],\n      ah2 = hh[2],\n      ah3 = hh[3],\n      ah4 = hh[4],\n      ah5 = hh[5],\n      ah6 = hh[6],\n      ah7 = hh[7],\n\n      al0 = hl[0],\n      al1 = hl[1],\n      al2 = hl[2],\n      al3 = hl[3],\n      al4 = hl[4],\n      al5 = hl[5],\n      al6 = hl[6],\n      al7 = hl[7];\n\n  var pos = 0;\n  while (n >= 128) {\n    for (i = 0; i < 16; i++) {\n      j = 8 * i + pos;\n      wh[i] = (m[j+0] << 24) | (m[j+1] << 16) | (m[j+2] << 8) | m[j+3];\n      wl[i] = (m[j+4] << 24) | (m[j+5] << 16) | (m[j+6] << 8) | m[j+7];\n    }\n    for (i = 0; i < 80; i++) {\n      bh0 = ah0;\n      bh1 = ah1;\n      bh2 = ah2;\n      bh3 = ah3;\n      bh4 = ah4;\n      bh5 = ah5;\n      bh6 = ah6;\n      bh7 = ah7;\n\n      bl0 = al0;\n      bl1 = al1;\n      bl2 = al2;\n      bl3 = al3;\n      bl4 = al4;\n      bl5 = al5;\n      bl6 = al6;\n      bl7 = al7;\n\n      // add\n      h = ah7;\n      l = al7;\n\n      a = l & 0xffff; b = l >>> 16;\n      c = h & 0xffff; d = h >>> 16;\n\n      // Sigma1\n      h = ((ah4 >>> 14) | (al4 << (32-14))) ^ ((ah4 >>> 18) | (al4 << (32-18))) ^ ((al4 >>> (41-32)) | (ah4 << (32-(41-32))));\n      l = ((al4 >>> 14) | (ah4 << (32-14))) ^ ((al4 >>> 18) | (ah4 << (32-18))) ^ ((ah4 >>> (41-32)) | (al4 << (32-(41-32))));\n\n      a += l & 0xffff; b += l >>> 16;\n      c += h & 0xffff; d += h >>> 16;\n\n      // Ch\n      h = (ah4 & ah5) ^ (~ah4 & ah6);\n      l = (al4 & al5) ^ (~al4 & al6);\n\n      a += l & 0xffff; b += l >>> 16;\n      c += h & 0xffff; d += h >>> 16;\n\n      // K\n      h = K[i*2];\n      l = K[i*2+1];\n\n      a += l & 0xffff; b += l >>> 16;\n      c += h & 0xffff; d += h >>> 16;\n\n      // w\n      h = wh[i%16];\n      l = wl[i%16];\n\n      a += l & 0xffff; b += l >>> 16;\n      c += h & 0xffff; d += h >>> 16;\n\n      b += a >>> 16;\n      c += b >>> 16;\n      d += c >>> 16;\n\n      th = c & 0xffff | d << 16;\n      tl = a & 0xffff | b << 16;\n\n      // add\n      h = th;\n      l = tl;\n\n      a = l & 0xffff; b = l >>> 16;\n      c = h & 0xffff; d = h >>> 16;\n\n      // Sigma0\n      h = ((ah0 >>> 28) | (al0 << (32-28))) ^ ((al0 >>> (34-32)) | (ah0 << (32-(34-32)))) ^ ((al0 >>> (39-32)) | (ah0 << (32-(39-32))));\n      l = ((al0 >>> 28) | (ah0 << (32-28))) ^ ((ah0 >>> (34-32)) | (al0 << (32-(34-32)))) ^ ((ah0 >>> (39-32)) | (al0 << (32-(39-32))));\n\n      a += l & 0xffff; b += l >>> 16;\n      c += h & 0xffff; d += h >>> 16;\n\n      // Maj\n      h = (ah0 & ah1) ^ (ah0 & ah2) ^ (ah1 & ah2);\n      l = (al0 & al1) ^ (al0 & al2) ^ (al1 & al2);\n\n      a += l & 0xffff; b += l >>> 16;\n      c += h & 0xffff; d += h >>> 16;\n\n      b += a >>> 16;\n      c += b >>> 16;\n      d += c >>> 16;\n\n      bh7 = (c & 0xffff) | (d << 16);\n      bl7 = (a & 0xffff) | (b << 16);\n\n      // add\n      h = bh3;\n      l = bl3;\n\n      a = l & 0xffff; b = l >>> 16;\n      c = h & 0xffff; d = h >>> 16;\n\n      h = th;\n      l = tl;\n\n      a += l & 0xffff; b += l >>> 16;\n      c += h & 0xffff; d += h >>> 16;\n\n      b += a >>> 16;\n      c += b >>> 16;\n      d += c >>> 16;\n\n      bh3 = (c & 0xffff) | (d << 16);\n      bl3 = (a & 0xffff) | (b << 16);\n\n      ah1 = bh0;\n      ah2 = bh1;\n      ah3 = bh2;\n      ah4 = bh3;\n      ah5 = bh4;\n      ah6 = bh5;\n      ah7 = bh6;\n      ah0 = bh7;\n\n      al1 = bl0;\n      al2 = bl1;\n      al3 = bl2;\n      al4 = bl3;\n      al5 = bl4;\n      al6 = bl5;\n      al7 = bl6;\n      al0 = bl7;\n\n      if (i%16 === 15) {\n        for (j = 0; j < 16; j++) {\n          // add\n          h = wh[j];\n          l = wl[j];\n\n          a = l & 0xffff; b = l >>> 16;\n          c = h & 0xffff; d = h >>> 16;\n\n          h = wh[(j+9)%16];\n          l = wl[(j+9)%16];\n\n          a += l & 0xffff; b += l >>> 16;\n          c += h & 0xffff; d += h >>> 16;\n\n          // sigma0\n          th = wh[(j+1)%16];\n          tl = wl[(j+1)%16];\n          h = ((th >>> 1) | (tl << (32-1))) ^ ((th >>> 8) | (tl << (32-8))) ^ (th >>> 7);\n          l = ((tl >>> 1) | (th << (32-1))) ^ ((tl >>> 8) | (th << (32-8))) ^ ((tl >>> 7) | (th << (32-7)));\n\n          a += l & 0xffff; b += l >>> 16;\n          c += h & 0xffff; d += h >>> 16;\n\n          // sigma1\n          th = wh[(j+14)%16];\n          tl = wl[(j+14)%16];\n          h = ((th >>> 19) | (tl << (32-19))) ^ ((tl >>> (61-32)) | (th << (32-(61-32)))) ^ (th >>> 6);\n          l = ((tl >>> 19) | (th << (32-19))) ^ ((th >>> (61-32)) | (tl << (32-(61-32)))) ^ ((tl >>> 6) | (th << (32-6)));\n\n          a += l & 0xffff; b += l >>> 16;\n          c += h & 0xffff; d += h >>> 16;\n\n          b += a >>> 16;\n          c += b >>> 16;\n          d += c >>> 16;\n\n          wh[j] = (c & 0xffff) | (d << 16);\n          wl[j] = (a & 0xffff) | (b << 16);\n        }\n      }\n    }\n\n    // add\n    h = ah0;\n    l = al0;\n\n    a = l & 0xffff; b = l >>> 16;\n    c = h & 0xffff; d = h >>> 16;\n\n    h = hh[0];\n    l = hl[0];\n\n    a += l & 0xffff; b += l >>> 16;\n    c += h & 0xffff; d += h >>> 16;\n\n    b += a >>> 16;\n    c += b >>> 16;\n    d += c >>> 16;\n\n    hh[0] = ah0 = (c & 0xffff) | (d << 16);\n    hl[0] = al0 = (a & 0xffff) | (b << 16);\n\n    h = ah1;\n    l = al1;\n\n    a = l & 0xffff; b = l >>> 16;\n    c = h & 0xffff; d = h >>> 16;\n\n    h = hh[1];\n    l = hl[1];\n\n    a += l & 0xffff; b += l >>> 16;\n    c += h & 0xffff; d += h >>> 16;\n\n    b += a >>> 16;\n    c += b >>> 16;\n    d += c >>> 16;\n\n    hh[1] = ah1 = (c & 0xffff) | (d << 16);\n    hl[1] = al1 = (a & 0xffff) | (b << 16);\n\n    h = ah2;\n    l = al2;\n\n    a = l & 0xffff; b = l >>> 16;\n    c = h & 0xffff; d = h >>> 16;\n\n    h = hh[2];\n    l = hl[2];\n\n    a += l & 0xffff; b += l >>> 16;\n    c += h & 0xffff; d += h >>> 16;\n\n    b += a >>> 16;\n    c += b >>> 16;\n    d += c >>> 16;\n\n    hh[2] = ah2 = (c & 0xffff) | (d << 16);\n    hl[2] = al2 = (a & 0xffff) | (b << 16);\n\n    h = ah3;\n    l = al3;\n\n    a = l & 0xffff; b = l >>> 16;\n    c = h & 0xffff; d = h >>> 16;\n\n    h = hh[3];\n    l = hl[3];\n\n    a += l & 0xffff; b += l >>> 16;\n    c += h & 0xffff; d += h >>> 16;\n\n    b += a >>> 16;\n    c += b >>> 16;\n    d += c >>> 16;\n\n    hh[3] = ah3 = (c & 0xffff) | (d << 16);\n    hl[3] = al3 = (a & 0xffff) | (b << 16);\n\n    h = ah4;\n    l = al4;\n\n    a = l & 0xffff; b = l >>> 16;\n    c = h & 0xffff; d = h >>> 16;\n\n    h = hh[4];\n    l = hl[4];\n\n    a += l & 0xffff; b += l >>> 16;\n    c += h & 0xffff; d += h >>> 16;\n\n    b += a >>> 16;\n    c += b >>> 16;\n    d += c >>> 16;\n\n    hh[4] = ah4 = (c & 0xffff) | (d << 16);\n    hl[4] = al4 = (a & 0xffff) | (b << 16);\n\n    h = ah5;\n    l = al5;\n\n    a = l & 0xffff; b = l >>> 16;\n    c = h & 0xffff; d = h >>> 16;\n\n    h = hh[5];\n    l = hl[5];\n\n    a += l & 0xffff; b += l >>> 16;\n    c += h & 0xffff; d += h >>> 16;\n\n    b += a >>> 16;\n    c += b >>> 16;\n    d += c >>> 16;\n\n    hh[5] = ah5 = (c & 0xffff) | (d << 16);\n    hl[5] = al5 = (a & 0xffff) | (b << 16);\n\n    h = ah6;\n    l = al6;\n\n    a = l & 0xffff; b = l >>> 16;\n    c = h & 0xffff; d = h >>> 16;\n\n    h = hh[6];\n    l = hl[6];\n\n    a += l & 0xffff; b += l >>> 16;\n    c += h & 0xffff; d += h >>> 16;\n\n    b += a >>> 16;\n    c += b >>> 16;\n    d += c >>> 16;\n\n    hh[6] = ah6 = (c & 0xffff) | (d << 16);\n    hl[6] = al6 = (a & 0xffff) | (b << 16);\n\n    h = ah7;\n    l = al7;\n\n    a = l & 0xffff; b = l >>> 16;\n    c = h & 0xffff; d = h >>> 16;\n\n    h = hh[7];\n    l = hl[7];\n\n    a += l & 0xffff; b += l >>> 16;\n    c += h & 0xffff; d += h >>> 16;\n\n    b += a >>> 16;\n    c += b >>> 16;\n    d += c >>> 16;\n\n    hh[7] = ah7 = (c & 0xffff) | (d << 16);\n    hl[7] = al7 = (a & 0xffff) | (b << 16);\n\n    pos += 128;\n    n -= 128;\n  }\n\n  return n;\n}\n\nfunction crypto_hash(out, m, n) {\n  var hh = new Int32Array(8),\n      hl = new Int32Array(8),\n      x = new Uint8Array(256),\n      i, b = n;\n\n  hh[0] = 0x6a09e667;\n  hh[1] = 0xbb67ae85;\n  hh[2] = 0x3c6ef372;\n  hh[3] = 0xa54ff53a;\n  hh[4] = 0x510e527f;\n  hh[5] = 0x9b05688c;\n  hh[6] = 0x1f83d9ab;\n  hh[7] = 0x5be0cd19;\n\n  hl[0] = 0xf3bcc908;\n  hl[1] = 0x84caa73b;\n  hl[2] = 0xfe94f82b;\n  hl[3] = 0x5f1d36f1;\n  hl[4] = 0xade682d1;\n  hl[5] = 0x2b3e6c1f;\n  hl[6] = 0xfb41bd6b;\n  hl[7] = 0x137e2179;\n\n  crypto_hashblocks_hl(hh, hl, m, n);\n  n %= 128;\n\n  for (i = 0; i < n; i++) x[i] = m[b-n+i];\n  x[n] = 128;\n\n  n = 256-128*(n<112?1:0);\n  x[n-9] = 0;\n  ts64(x, n-8,  (b / 0x20000000) | 0, b << 3);\n  crypto_hashblocks_hl(hh, hl, x, n);\n\n  for (i = 0; i < 8; i++) ts64(out, 8*i, hh[i], hl[i]);\n\n  return 0;\n}\n\nfunction add(p, q) {\n  var a = gf(), b = gf(), c = gf(),\n      d = gf(), e = gf(), f = gf(),\n      g = gf(), h = gf(), t = gf();\n\n  Z(a, p[1], p[0]);\n  Z(t, q[1], q[0]);\n  M(a, a, t);\n  A(b, p[0], p[1]);\n  A(t, q[0], q[1]);\n  M(b, b, t);\n  M(c, p[3], q[3]);\n  M(c, c, D2);\n  M(d, p[2], q[2]);\n  A(d, d, d);\n  Z(e, b, a);\n  Z(f, d, c);\n  A(g, d, c);\n  A(h, b, a);\n\n  M(p[0], e, f);\n  M(p[1], h, g);\n  M(p[2], g, f);\n  M(p[3], e, h);\n}\n\nfunction cswap(p, q, b) {\n  var i;\n  for (i = 0; i < 4; i++) {\n    sel25519(p[i], q[i], b);\n  }\n}\n\nfunction pack(r, p) {\n  var tx = gf(), ty = gf(), zi = gf();\n  inv25519(zi, p[2]);\n  M(tx, p[0], zi);\n  M(ty, p[1], zi);\n  pack25519(r, ty);\n  r[31] ^= par25519(tx) << 7;\n}\n\nfunction scalarmult(p, q, s) {\n  var b, i;\n  set25519(p[0], gf0);\n  set25519(p[1], gf1);\n  set25519(p[2], gf1);\n  set25519(p[3], gf0);\n  for (i = 255; i >= 0; --i) {\n    b = (s[(i/8)|0] >> (i&7)) & 1;\n    cswap(p, q, b);\n    add(q, p);\n    add(p, p);\n    cswap(p, q, b);\n  }\n}\n\nfunction scalarbase(p, s) {\n  var q = [gf(), gf(), gf(), gf()];\n  set25519(q[0], X);\n  set25519(q[1], Y);\n  set25519(q[2], gf1);\n  M(q[3], X, Y);\n  scalarmult(p, q, s);\n}\n\nfunction crypto_sign_keypair(pk, sk, seeded) {\n  var d = new Uint8Array(64);\n  var p = [gf(), gf(), gf(), gf()];\n  var i;\n\n  if (!seeded) randombytes(sk, 32);\n  crypto_hash(d, sk, 32);\n  d[0] &= 248;\n  d[31] &= 127;\n  d[31] |= 64;\n\n  scalarbase(p, d);\n  pack(pk, p);\n\n  for (i = 0; i < 32; i++) sk[i+32] = pk[i];\n  return 0;\n}\n\nvar L = new Float64Array([0xed, 0xd3, 0xf5, 0x5c, 0x1a, 0x63, 0x12, 0x58, 0xd6, 0x9c, 0xf7, 0xa2, 0xde, 0xf9, 0xde, 0x14, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0x10]);\n\nfunction modL(r, x) {\n  var carry, i, j, k;\n  for (i = 63; i >= 32; --i) {\n    carry = 0;\n    for (j = i - 32, k = i - 12; j < k; ++j) {\n      x[j] += carry - 16 * x[i] * L[j - (i - 32)];\n      carry = Math.floor((x[j] + 128) / 256);\n      x[j] -= carry * 256;\n    }\n    x[j] += carry;\n    x[i] = 0;\n  }\n  carry = 0;\n  for (j = 0; j < 32; j++) {\n    x[j] += carry - (x[31] >> 4) * L[j];\n    carry = x[j] >> 8;\n    x[j] &= 255;\n  }\n  for (j = 0; j < 32; j++) x[j] -= carry * L[j];\n  for (i = 0; i < 32; i++) {\n    x[i+1] += x[i] >> 8;\n    r[i] = x[i] & 255;\n  }\n}\n\nfunction reduce(r) {\n  var x = new Float64Array(64), i;\n  for (i = 0; i < 64; i++) x[i] = r[i];\n  for (i = 0; i < 64; i++) r[i] = 0;\n  modL(r, x);\n}\n\n// Note: difference from C - smlen returned, not passed as argument.\nfunction crypto_sign(sm, m, n, sk) {\n  var d = new Uint8Array(64), h = new Uint8Array(64), r = new Uint8Array(64);\n  var i, j, x = new Float64Array(64);\n  var p = [gf(), gf(), gf(), gf()];\n\n  crypto_hash(d, sk, 32);\n  d[0] &= 248;\n  d[31] &= 127;\n  d[31] |= 64;\n\n  var smlen = n + 64;\n  for (i = 0; i < n; i++) sm[64 + i] = m[i];\n  for (i = 0; i < 32; i++) sm[32 + i] = d[32 + i];\n\n  crypto_hash(r, sm.subarray(32), n+32);\n  reduce(r);\n  scalarbase(p, r);\n  pack(sm, p);\n\n  for (i = 32; i < 64; i++) sm[i] = sk[i];\n  crypto_hash(h, sm, n + 64);\n  reduce(h);\n\n  for (i = 0; i < 64; i++) x[i] = 0;\n  for (i = 0; i < 32; i++) x[i] = r[i];\n  for (i = 0; i < 32; i++) {\n    for (j = 0; j < 32; j++) {\n      x[i+j] += h[i] * d[j];\n    }\n  }\n\n  modL(sm.subarray(32), x);\n  return smlen;\n}\n\nfunction unpackneg(r, p) {\n  var t = gf(), chk = gf(), num = gf(),\n      den = gf(), den2 = gf(), den4 = gf(),\n      den6 = gf();\n\n  set25519(r[2], gf1);\n  unpack25519(r[1], p);\n  S(num, r[1]);\n  M(den, num, D);\n  Z(num, num, r[2]);\n  A(den, r[2], den);\n\n  S(den2, den);\n  S(den4, den2);\n  M(den6, den4, den2);\n  M(t, den6, num);\n  M(t, t, den);\n\n  pow2523(t, t);\n  M(t, t, num);\n  M(t, t, den);\n  M(t, t, den);\n  M(r[0], t, den);\n\n  S(chk, r[0]);\n  M(chk, chk, den);\n  if (neq25519(chk, num)) M(r[0], r[0], I);\n\n  S(chk, r[0]);\n  M(chk, chk, den);\n  if (neq25519(chk, num)) return -1;\n\n  if (par25519(r[0]) === (p[31]>>7)) Z(r[0], gf0, r[0]);\n\n  M(r[3], r[0], r[1]);\n  return 0;\n}\n\nfunction crypto_sign_open(m, sm, n, pk) {\n  var i;\n  var t = new Uint8Array(32), h = new Uint8Array(64);\n  var p = [gf(), gf(), gf(), gf()],\n      q = [gf(), gf(), gf(), gf()];\n\n  if (n < 64) return -1;\n\n  if (unpackneg(q, pk)) return -1;\n\n  for (i = 0; i < n; i++) m[i] = sm[i];\n  for (i = 0; i < 32; i++) m[i+32] = pk[i];\n  crypto_hash(h, m, n);\n  reduce(h);\n  scalarmult(p, q, h);\n\n  scalarbase(q, sm.subarray(32));\n  add(p, q);\n  pack(t, p);\n\n  n -= 64;\n  if (crypto_verify_32(sm, 0, t, 0)) {\n    for (i = 0; i < n; i++) m[i] = 0;\n    return -1;\n  }\n\n  for (i = 0; i < n; i++) m[i] = sm[i + 64];\n  return n;\n}\n\nvar crypto_secretbox_KEYBYTES = 32,\n    crypto_secretbox_NONCEBYTES = 24,\n    crypto_secretbox_ZEROBYTES = 32,\n    crypto_secretbox_BOXZEROBYTES = 16,\n    crypto_scalarmult_BYTES = 32,\n    crypto_scalarmult_SCALARBYTES = 32,\n    crypto_box_PUBLICKEYBYTES = 32,\n    crypto_box_SECRETKEYBYTES = 32,\n    crypto_box_BEFORENMBYTES = 32,\n    crypto_box_NONCEBYTES = crypto_secretbox_NONCEBYTES,\n    crypto_box_ZEROBYTES = crypto_secretbox_ZEROBYTES,\n    crypto_box_BOXZEROBYTES = crypto_secretbox_BOXZEROBYTES,\n    crypto_sign_BYTES = 64,\n    crypto_sign_PUBLICKEYBYTES = 32,\n    crypto_sign_SECRETKEYBYTES = 64,\n    crypto_sign_SEEDBYTES = 32,\n    crypto_hash_BYTES = 64;\n\nnacl.lowlevel = {\n  crypto_core_hsalsa20: crypto_core_hsalsa20,\n  crypto_stream_xor: crypto_stream_xor,\n  crypto_stream: crypto_stream,\n  crypto_stream_salsa20_xor: crypto_stream_salsa20_xor,\n  crypto_stream_salsa20: crypto_stream_salsa20,\n  crypto_onetimeauth: crypto_onetimeauth,\n  crypto_onetimeauth_verify: crypto_onetimeauth_verify,\n  crypto_verify_16: crypto_verify_16,\n  crypto_verify_32: crypto_verify_32,\n  crypto_secretbox: crypto_secretbox,\n  crypto_secretbox_open: crypto_secretbox_open,\n  crypto_scalarmult: crypto_scalarmult,\n  crypto_scalarmult_base: crypto_scalarmult_base,\n  crypto_box_beforenm: crypto_box_beforenm,\n  crypto_box_afternm: crypto_box_afternm,\n  crypto_box: crypto_box,\n  crypto_box_open: crypto_box_open,\n  crypto_box_keypair: crypto_box_keypair,\n  crypto_hash: crypto_hash,\n  crypto_sign: crypto_sign,\n  crypto_sign_keypair: crypto_sign_keypair,\n  crypto_sign_open: crypto_sign_open,\n\n  crypto_secretbox_KEYBYTES: crypto_secretbox_KEYBYTES,\n  crypto_secretbox_NONCEBYTES: crypto_secretbox_NONCEBYTES,\n  crypto_secretbox_ZEROBYTES: crypto_secretbox_ZEROBYTES,\n  crypto_secretbox_BOXZEROBYTES: crypto_secretbox_BOXZEROBYTES,\n  crypto_scalarmult_BYTES: crypto_scalarmult_BYTES,\n  crypto_scalarmult_SCALARBYTES: crypto_scalarmult_SCALARBYTES,\n  crypto_box_PUBLICKEYBYTES: crypto_box_PUBLICKEYBYTES,\n  crypto_box_SECRETKEYBYTES: crypto_box_SECRETKEYBYTES,\n  crypto_box_BEFORENMBYTES: crypto_box_BEFORENMBYTES,\n  crypto_box_NONCEBYTES: crypto_box_NONCEBYTES,\n  crypto_box_ZEROBYTES: crypto_box_ZEROBYTES,\n  crypto_box_BOXZEROBYTES: crypto_box_BOXZEROBYTES,\n  crypto_sign_BYTES: crypto_sign_BYTES,\n  crypto_sign_PUBLICKEYBYTES: crypto_sign_PUBLICKEYBYTES,\n  crypto_sign_SECRETKEYBYTES: crypto_sign_SECRETKEYBYTES,\n  crypto_sign_SEEDBYTES: crypto_sign_SEEDBYTES,\n  crypto_hash_BYTES: crypto_hash_BYTES,\n\n  gf: gf,\n  D: D,\n  L: L,\n  pack25519: pack25519,\n  unpack25519: unpack25519,\n  M: M,\n  A: A,\n  S: S,\n  Z: Z,\n  pow2523: pow2523,\n  add: add,\n  set25519: set25519,\n  modL: modL,\n  scalarmult: scalarmult,\n  scalarbase: scalarbase,\n};\n\n/* High-level API */\n\nfunction checkLengths(k, n) {\n  if (k.length !== crypto_secretbox_KEYBYTES) throw new Error('bad key size');\n  if (n.length !== crypto_secretbox_NONCEBYTES) throw new Error('bad nonce size');\n}\n\nfunction checkBoxLengths(pk, sk) {\n  if (pk.length !== crypto_box_PUBLICKEYBYTES) throw new Error('bad public key size');\n  if (sk.length !== crypto_box_SECRETKEYBYTES) throw new Error('bad secret key size');\n}\n\nfunction checkArrayTypes() {\n  for (var i = 0; i < arguments.length; i++) {\n    if (!(arguments[i] instanceof Uint8Array))\n      throw new TypeError('unexpected type, use Uint8Array');\n  }\n}\n\nfunction cleanup(arr) {\n  for (var i = 0; i < arr.length; i++) arr[i] = 0;\n}\n\nnacl.randomBytes = function(n) {\n  var b = new Uint8Array(n);\n  randombytes(b, n);\n  return b;\n};\n\nnacl.secretbox = function(msg, nonce, key) {\n  checkArrayTypes(msg, nonce, key);\n  checkLengths(key, nonce);\n  var m = new Uint8Array(crypto_secretbox_ZEROBYTES + msg.length);\n  var c = new Uint8Array(m.length);\n  for (var i = 0; i < msg.length; i++) m[i+crypto_secretbox_ZEROBYTES] = msg[i];\n  crypto_secretbox(c, m, m.length, nonce, key);\n  return c.subarray(crypto_secretbox_BOXZEROBYTES);\n};\n\nnacl.secretbox.open = function(box, nonce, key) {\n  checkArrayTypes(box, nonce, key);\n  checkLengths(key, nonce);\n  var c = new Uint8Array(crypto_secretbox_BOXZEROBYTES + box.length);\n  var m = new Uint8Array(c.length);\n  for (var i = 0; i < box.length; i++) c[i+crypto_secretbox_BOXZEROBYTES] = box[i];\n  if (c.length < 32) return null;\n  if (crypto_secretbox_open(m, c, c.length, nonce, key) !== 0) return null;\n  return m.subarray(crypto_secretbox_ZEROBYTES);\n};\n\nnacl.secretbox.keyLength = crypto_secretbox_KEYBYTES;\nnacl.secretbox.nonceLength = crypto_secretbox_NONCEBYTES;\nnacl.secretbox.overheadLength = crypto_secretbox_BOXZEROBYTES;\n\nnacl.scalarMult = function(n, p) {\n  checkArrayTypes(n, p);\n  if (n.length !== crypto_scalarmult_SCALARBYTES) throw new Error('bad n size');\n  if (p.length !== crypto_scalarmult_BYTES) throw new Error('bad p size');\n  var q = new Uint8Array(crypto_scalarmult_BYTES);\n  crypto_scalarmult(q, n, p);\n  return q;\n};\n\nnacl.scalarMult.base = function(n) {\n  checkArrayTypes(n);\n  if (n.length !== crypto_scalarmult_SCALARBYTES) throw new Error('bad n size');\n  var q = new Uint8Array(crypto_scalarmult_BYTES);\n  crypto_scalarmult_base(q, n);\n  return q;\n};\n\nnacl.scalarMult.scalarLength = crypto_scalarmult_SCALARBYTES;\nnacl.scalarMult.groupElementLength = crypto_scalarmult_BYTES;\n\nnacl.box = function(msg, nonce, publicKey, secretKey) {\n  var k = nacl.box.before(publicKey, secretKey);\n  return nacl.secretbox(msg, nonce, k);\n};\n\nnacl.box.before = function(publicKey, secretKey) {\n  checkArrayTypes(publicKey, secretKey);\n  checkBoxLengths(publicKey, secretKey);\n  var k = new Uint8Array(crypto_box_BEFORENMBYTES);\n  crypto_box_beforenm(k, publicKey, secretKey);\n  return k;\n};\n\nnacl.box.after = nacl.secretbox;\n\nnacl.box.open = function(msg, nonce, publicKey, secretKey) {\n  var k = nacl.box.before(publicKey, secretKey);\n  return nacl.secretbox.open(msg, nonce, k);\n};\n\nnacl.box.open.after = nacl.secretbox.open;\n\nnacl.box.keyPair = function() {\n  var pk = new Uint8Array(crypto_box_PUBLICKEYBYTES);\n  var sk = new Uint8Array(crypto_box_SECRETKEYBYTES);\n  crypto_box_keypair(pk, sk);\n  return {publicKey: pk, secretKey: sk};\n};\n\nnacl.box.keyPair.fromSecretKey = function(secretKey) {\n  checkArrayTypes(secretKey);\n  if (secretKey.length !== crypto_box_SECRETKEYBYTES)\n    throw new Error('bad secret key size');\n  var pk = new Uint8Array(crypto_box_PUBLICKEYBYTES);\n  crypto_scalarmult_base(pk, secretKey);\n  return {publicKey: pk, secretKey: new Uint8Array(secretKey)};\n};\n\nnacl.box.publicKeyLength = crypto_box_PUBLICKEYBYTES;\nnacl.box.secretKeyLength = crypto_box_SECRETKEYBYTES;\nnacl.box.sharedKeyLength = crypto_box_BEFORENMBYTES;\nnacl.box.nonceLength = crypto_box_NONCEBYTES;\nnacl.box.overheadLength = nacl.secretbox.overheadLength;\n\nnacl.sign = function(msg, secretKey) {\n  checkArrayTypes(msg, secretKey);\n  if (secretKey.length !== crypto_sign_SECRETKEYBYTES)\n    throw new Error('bad secret key size');\n  var signedMsg = new Uint8Array(crypto_sign_BYTES+msg.length);\n  crypto_sign(signedMsg, msg, msg.length, secretKey);\n  return signedMsg;\n};\n\nnacl.sign.open = function(signedMsg, publicKey) {\n  checkArrayTypes(signedMsg, publicKey);\n  if (publicKey.length !== crypto_sign_PUBLICKEYBYTES)\n    throw new Error('bad public key size');\n  var tmp = new Uint8Array(signedMsg.length);\n  var mlen = crypto_sign_open(tmp, signedMsg, signedMsg.length, publicKey);\n  if (mlen < 0) return null;\n  var m = new Uint8Array(mlen);\n  for (var i = 0; i < m.length; i++) m[i] = tmp[i];\n  return m;\n};\n\nnacl.sign.detached = function(msg, secretKey) {\n  var signedMsg = nacl.sign(msg, secretKey);\n  var sig = new Uint8Array(crypto_sign_BYTES);\n  for (var i = 0; i < sig.length; i++) sig[i] = signedMsg[i];\n  return sig;\n};\n\nnacl.sign.detached.verify = function(msg, sig, publicKey) {\n  checkArrayTypes(msg, sig, publicKey);\n  if (sig.length !== crypto_sign_BYTES)\n    throw new Error('bad signature size');\n  if (publicKey.length !== crypto_sign_PUBLICKEYBYTES)\n    throw new Error('bad public key size');\n  var sm = new Uint8Array(crypto_sign_BYTES + msg.length);\n  var m = new Uint8Array(crypto_sign_BYTES + msg.length);\n  var i;\n  for (i = 0; i < crypto_sign_BYTES; i++) sm[i] = sig[i];\n  for (i = 0; i < msg.length; i++) sm[i+crypto_sign_BYTES] = msg[i];\n  return (crypto_sign_open(m, sm, sm.length, publicKey) >= 0);\n};\n\nnacl.sign.keyPair = function() {\n  var pk = new Uint8Array(crypto_sign_PUBLICKEYBYTES);\n  var sk = new Uint8Array(crypto_sign_SECRETKEYBYTES);\n  crypto_sign_keypair(pk, sk);\n  return {publicKey: pk, secretKey: sk};\n};\n\nnacl.sign.keyPair.fromSecretKey = function(secretKey) {\n  checkArrayTypes(secretKey);\n  if (secretKey.length !== crypto_sign_SECRETKEYBYTES)\n    throw new Error('bad secret key size');\n  var pk = new Uint8Array(crypto_sign_PUBLICKEYBYTES);\n  for (var i = 0; i < pk.length; i++) pk[i] = secretKey[32+i];\n  return {publicKey: pk, secretKey: new Uint8Array(secretKey)};\n};\n\nnacl.sign.keyPair.fromSeed = function(seed) {\n  checkArrayTypes(seed);\n  if (seed.length !== crypto_sign_SEEDBYTES)\n    throw new Error('bad seed size');\n  var pk = new Uint8Array(crypto_sign_PUBLICKEYBYTES);\n  var sk = new Uint8Array(crypto_sign_SECRETKEYBYTES);\n  for (var i = 0; i < 32; i++) sk[i] = seed[i];\n  crypto_sign_keypair(pk, sk, true);\n  return {publicKey: pk, secretKey: sk};\n};\n\nnacl.sign.publicKeyLength = crypto_sign_PUBLICKEYBYTES;\nnacl.sign.secretKeyLength = crypto_sign_SECRETKEYBYTES;\nnacl.sign.seedLength = crypto_sign_SEEDBYTES;\nnacl.sign.signatureLength = crypto_sign_BYTES;\n\nnacl.hash = function(msg) {\n  checkArrayTypes(msg);\n  var h = new Uint8Array(crypto_hash_BYTES);\n  crypto_hash(h, msg, msg.length);\n  return h;\n};\n\nnacl.hash.hashLength = crypto_hash_BYTES;\n\nnacl.verify = function(x, y) {\n  checkArrayTypes(x, y);\n  // Zero length arguments are considered not equal.\n  if (x.length === 0 || y.length === 0) return false;\n  if (x.length !== y.length) return false;\n  return (vn(x, 0, y, 0, x.length) === 0) ? true : false;\n};\n\nnacl.setPRNG = function(fn) {\n  randombytes = fn;\n};\n\n(function() {\n  // Initialize PRNG if environment provides CSPRNG.\n  // If not, methods calling randombytes will throw.\n  var crypto = typeof self !== 'undefined' ? (self.crypto || self.msCrypto) : null;\n  if (crypto && crypto.getRandomValues) {\n    // Browsers.\n    var QUOTA = 65536;\n    nacl.setPRNG(function(x, n) {\n      var i, v = new Uint8Array(n);\n      for (i = 0; i < n; i += QUOTA) {\n        crypto.getRandomValues(v.subarray(i, i + Math.min(n - i, QUOTA)));\n      }\n      for (i = 0; i < n; i++) x[i] = v[i];\n      cleanup(v);\n    });\n  } else if (typeof require !== 'undefined') {\n    // Node.js.\n    crypto = require('crypto');\n    if (crypto && crypto.randomBytes) {\n      nacl.setPRNG(function(x, n) {\n        var i, v = crypto.randomBytes(n);\n        for (i = 0; i < n; i++) x[i] = v[i];\n        cleanup(v);\n      });\n    }\n  }\n})();\n\n})(typeof module !== 'undefined' && module.exports ? module.exports : (self.nacl = self.nacl || {}));\n", "export default new Proxy({}, {\n  get() {\n    throw new Error('Module \"buffer\" has been externalized for browser compatibility and cannot be accessed in client code.')\n  }\n})", "(function (module, exports) {\n  'use strict';\n\n  // Utils\n  function assert (val, msg) {\n    if (!val) throw new Error(msg || 'Assertion failed');\n  }\n\n  // Could use `inherits` module, but don't want to move from single file\n  // architecture yet.\n  function inherits (ctor, superCtor) {\n    ctor.super_ = superCtor;\n    var TempCtor = function () {};\n    TempCtor.prototype = superCtor.prototype;\n    ctor.prototype = new TempCtor();\n    ctor.prototype.constructor = ctor;\n  }\n\n  // BN\n\n  function BN (number, base, endian) {\n    if (BN.isBN(number)) {\n      return number;\n    }\n\n    this.negative = 0;\n    this.words = null;\n    this.length = 0;\n\n    // Reduction context\n    this.red = null;\n\n    if (number !== null) {\n      if (base === 'le' || base === 'be') {\n        endian = base;\n        base = 10;\n      }\n\n      this._init(number || 0, base || 10, endian || 'be');\n    }\n  }\n  if (typeof module === 'object') {\n    module.exports = BN;\n  } else {\n    exports.BN = BN;\n  }\n\n  BN.BN = BN;\n  BN.wordSize = 26;\n\n  var Buffer;\n  try {\n    if (typeof window !== 'undefined' && typeof window.Buffer !== 'undefined') {\n      Buffer = window.Buffer;\n    } else {\n      Buffer = require('buffer').Buffer;\n    }\n  } catch (e) {\n  }\n\n  BN.isBN = function isBN (num) {\n    if (num instanceof BN) {\n      return true;\n    }\n\n    return num !== null && typeof num === 'object' &&\n      num.constructor.wordSize === BN.wordSize && Array.isArray(num.words);\n  };\n\n  BN.max = function max (left, right) {\n    if (left.cmp(right) > 0) return left;\n    return right;\n  };\n\n  BN.min = function min (left, right) {\n    if (left.cmp(right) < 0) return left;\n    return right;\n  };\n\n  BN.prototype._init = function init (number, base, endian) {\n    if (typeof number === 'number') {\n      return this._initNumber(number, base, endian);\n    }\n\n    if (typeof number === 'object') {\n      return this._initArray(number, base, endian);\n    }\n\n    if (base === 'hex') {\n      base = 16;\n    }\n    assert(base === (base | 0) && base >= 2 && base <= 36);\n\n    number = number.toString().replace(/\\s+/g, '');\n    var start = 0;\n    if (number[0] === '-') {\n      start++;\n      this.negative = 1;\n    }\n\n    if (start < number.length) {\n      if (base === 16) {\n        this._parseHex(number, start, endian);\n      } else {\n        this._parseBase(number, base, start);\n        if (endian === 'le') {\n          this._initArray(this.toArray(), base, endian);\n        }\n      }\n    }\n  };\n\n  BN.prototype._initNumber = function _initNumber (number, base, endian) {\n    if (number < 0) {\n      this.negative = 1;\n      number = -number;\n    }\n    if (number < 0x4000000) {\n      this.words = [ number & 0x3ffffff ];\n      this.length = 1;\n    } else if (number < 0x10000000000000) {\n      this.words = [\n        number & 0x3ffffff,\n        (number / 0x4000000) & 0x3ffffff\n      ];\n      this.length = 2;\n    } else {\n      assert(number < 0x20000000000000); // 2 ^ 53 (unsafe)\n      this.words = [\n        number & 0x3ffffff,\n        (number / 0x4000000) & 0x3ffffff,\n        1\n      ];\n      this.length = 3;\n    }\n\n    if (endian !== 'le') return;\n\n    // Reverse the bytes\n    this._initArray(this.toArray(), base, endian);\n  };\n\n  BN.prototype._initArray = function _initArray (number, base, endian) {\n    // Perhaps a Uint8Array\n    assert(typeof number.length === 'number');\n    if (number.length <= 0) {\n      this.words = [ 0 ];\n      this.length = 1;\n      return this;\n    }\n\n    this.length = Math.ceil(number.length / 3);\n    this.words = new Array(this.length);\n    for (var i = 0; i < this.length; i++) {\n      this.words[i] = 0;\n    }\n\n    var j, w;\n    var off = 0;\n    if (endian === 'be') {\n      for (i = number.length - 1, j = 0; i >= 0; i -= 3) {\n        w = number[i] | (number[i - 1] << 8) | (number[i - 2] << 16);\n        this.words[j] |= (w << off) & 0x3ffffff;\n        this.words[j + 1] = (w >>> (26 - off)) & 0x3ffffff;\n        off += 24;\n        if (off >= 26) {\n          off -= 26;\n          j++;\n        }\n      }\n    } else if (endian === 'le') {\n      for (i = 0, j = 0; i < number.length; i += 3) {\n        w = number[i] | (number[i + 1] << 8) | (number[i + 2] << 16);\n        this.words[j] |= (w << off) & 0x3ffffff;\n        this.words[j + 1] = (w >>> (26 - off)) & 0x3ffffff;\n        off += 24;\n        if (off >= 26) {\n          off -= 26;\n          j++;\n        }\n      }\n    }\n    return this.strip();\n  };\n\n  function parseHex4Bits (string, index) {\n    var c = string.charCodeAt(index);\n    // 'A' - 'F'\n    if (c >= 65 && c <= 70) {\n      return c - 55;\n    // 'a' - 'f'\n    } else if (c >= 97 && c <= 102) {\n      return c - 87;\n    // '0' - '9'\n    } else {\n      return (c - 48) & 0xf;\n    }\n  }\n\n  function parseHexByte (string, lowerBound, index) {\n    var r = parseHex4Bits(string, index);\n    if (index - 1 >= lowerBound) {\n      r |= parseHex4Bits(string, index - 1) << 4;\n    }\n    return r;\n  }\n\n  BN.prototype._parseHex = function _parseHex (number, start, endian) {\n    // Create possibly bigger array to ensure that it fits the number\n    this.length = Math.ceil((number.length - start) / 6);\n    this.words = new Array(this.length);\n    for (var i = 0; i < this.length; i++) {\n      this.words[i] = 0;\n    }\n\n    // 24-bits chunks\n    var off = 0;\n    var j = 0;\n\n    var w;\n    if (endian === 'be') {\n      for (i = number.length - 1; i >= start; i -= 2) {\n        w = parseHexByte(number, start, i) << off;\n        this.words[j] |= w & 0x3ffffff;\n        if (off >= 18) {\n          off -= 18;\n          j += 1;\n          this.words[j] |= w >>> 26;\n        } else {\n          off += 8;\n        }\n      }\n    } else {\n      var parseLength = number.length - start;\n      for (i = parseLength % 2 === 0 ? start + 1 : start; i < number.length; i += 2) {\n        w = parseHexByte(number, start, i) << off;\n        this.words[j] |= w & 0x3ffffff;\n        if (off >= 18) {\n          off -= 18;\n          j += 1;\n          this.words[j] |= w >>> 26;\n        } else {\n          off += 8;\n        }\n      }\n    }\n\n    this.strip();\n  };\n\n  function parseBase (str, start, end, mul) {\n    var r = 0;\n    var len = Math.min(str.length, end);\n    for (var i = start; i < len; i++) {\n      var c = str.charCodeAt(i) - 48;\n\n      r *= mul;\n\n      // 'a'\n      if (c >= 49) {\n        r += c - 49 + 0xa;\n\n      // 'A'\n      } else if (c >= 17) {\n        r += c - 17 + 0xa;\n\n      // '0' - '9'\n      } else {\n        r += c;\n      }\n    }\n    return r;\n  }\n\n  BN.prototype._parseBase = function _parseBase (number, base, start) {\n    // Initialize as zero\n    this.words = [ 0 ];\n    this.length = 1;\n\n    // Find length of limb in base\n    for (var limbLen = 0, limbPow = 1; limbPow <= 0x3ffffff; limbPow *= base) {\n      limbLen++;\n    }\n    limbLen--;\n    limbPow = (limbPow / base) | 0;\n\n    var total = number.length - start;\n    var mod = total % limbLen;\n    var end = Math.min(total, total - mod) + start;\n\n    var word = 0;\n    for (var i = start; i < end; i += limbLen) {\n      word = parseBase(number, i, i + limbLen, base);\n\n      this.imuln(limbPow);\n      if (this.words[0] + word < 0x4000000) {\n        this.words[0] += word;\n      } else {\n        this._iaddn(word);\n      }\n    }\n\n    if (mod !== 0) {\n      var pow = 1;\n      word = parseBase(number, i, number.length, base);\n\n      for (i = 0; i < mod; i++) {\n        pow *= base;\n      }\n\n      this.imuln(pow);\n      if (this.words[0] + word < 0x4000000) {\n        this.words[0] += word;\n      } else {\n        this._iaddn(word);\n      }\n    }\n\n    this.strip();\n  };\n\n  BN.prototype.copy = function copy (dest) {\n    dest.words = new Array(this.length);\n    for (var i = 0; i < this.length; i++) {\n      dest.words[i] = this.words[i];\n    }\n    dest.length = this.length;\n    dest.negative = this.negative;\n    dest.red = this.red;\n  };\n\n  BN.prototype.clone = function clone () {\n    var r = new BN(null);\n    this.copy(r);\n    return r;\n  };\n\n  BN.prototype._expand = function _expand (size) {\n    while (this.length < size) {\n      this.words[this.length++] = 0;\n    }\n    return this;\n  };\n\n  // Remove leading `0` from `this`\n  BN.prototype.strip = function strip () {\n    while (this.length > 1 && this.words[this.length - 1] === 0) {\n      this.length--;\n    }\n    return this._normSign();\n  };\n\n  BN.prototype._normSign = function _normSign () {\n    // -0 = 0\n    if (this.length === 1 && this.words[0] === 0) {\n      this.negative = 0;\n    }\n    return this;\n  };\n\n  BN.prototype.inspect = function inspect () {\n    return (this.red ? '<BN-R: ' : '<BN: ') + this.toString(16) + '>';\n  };\n\n  /*\n\n  var zeros = [];\n  var groupSizes = [];\n  var groupBases = [];\n\n  var s = '';\n  var i = -1;\n  while (++i < BN.wordSize) {\n    zeros[i] = s;\n    s += '0';\n  }\n  groupSizes[0] = 0;\n  groupSizes[1] = 0;\n  groupBases[0] = 0;\n  groupBases[1] = 0;\n  var base = 2 - 1;\n  while (++base < 36 + 1) {\n    var groupSize = 0;\n    var groupBase = 1;\n    while (groupBase < (1 << BN.wordSize) / base) {\n      groupBase *= base;\n      groupSize += 1;\n    }\n    groupSizes[base] = groupSize;\n    groupBases[base] = groupBase;\n  }\n\n  */\n\n  var zeros = [\n    '',\n    '0',\n    '00',\n    '000',\n    '0000',\n    '00000',\n    '000000',\n    '0000000',\n    '00000000',\n    '000000000',\n    '0000000000',\n    '00000000000',\n    '000000000000',\n    '0000000000000',\n    '00000000000000',\n    '000000000000000',\n    '0000000000000000',\n    '00000000000000000',\n    '000000000000000000',\n    '0000000000000000000',\n    '00000000000000000000',\n    '000000000000000000000',\n    '0000000000000000000000',\n    '00000000000000000000000',\n    '000000000000000000000000',\n    '0000000000000000000000000'\n  ];\n\n  var groupSizes = [\n    0, 0,\n    25, 16, 12, 11, 10, 9, 8,\n    8, 7, 7, 7, 7, 6, 6,\n    6, 6, 6, 6, 6, 5, 5,\n    5, 5, 5, 5, 5, 5, 5,\n    5, 5, 5, 5, 5, 5, 5\n  ];\n\n  var groupBases = [\n    0, 0,\n    33554432, 43046721, 16777216, 48828125, 60466176, 40353607, 16777216,\n    43046721, 10000000, 19487171, 35831808, 62748517, 7529536, 11390625,\n    16777216, 24137569, 34012224, 47045881, 64000000, 4084101, 5153632,\n    6436343, 7962624, 9765625, 11881376, 14348907, 17210368, 20511149,\n    24300000, 28629151, 33554432, 39135393, 45435424, 52521875, 60466176\n  ];\n\n  BN.prototype.toString = function toString (base, padding) {\n    base = base || 10;\n    padding = padding | 0 || 1;\n\n    var out;\n    if (base === 16 || base === 'hex') {\n      out = '';\n      var off = 0;\n      var carry = 0;\n      for (var i = 0; i < this.length; i++) {\n        var w = this.words[i];\n        var word = (((w << off) | carry) & 0xffffff).toString(16);\n        carry = (w >>> (24 - off)) & 0xffffff;\n        if (carry !== 0 || i !== this.length - 1) {\n          out = zeros[6 - word.length] + word + out;\n        } else {\n          out = word + out;\n        }\n        off += 2;\n        if (off >= 26) {\n          off -= 26;\n          i--;\n        }\n      }\n      if (carry !== 0) {\n        out = carry.toString(16) + out;\n      }\n      while (out.length % padding !== 0) {\n        out = '0' + out;\n      }\n      if (this.negative !== 0) {\n        out = '-' + out;\n      }\n      return out;\n    }\n\n    if (base === (base | 0) && base >= 2 && base <= 36) {\n      // var groupSize = Math.floor(BN.wordSize * Math.LN2 / Math.log(base));\n      var groupSize = groupSizes[base];\n      // var groupBase = Math.pow(base, groupSize);\n      var groupBase = groupBases[base];\n      out = '';\n      var c = this.clone();\n      c.negative = 0;\n      while (!c.isZero()) {\n        var r = c.modn(groupBase).toString(base);\n        c = c.idivn(groupBase);\n\n        if (!c.isZero()) {\n          out = zeros[groupSize - r.length] + r + out;\n        } else {\n          out = r + out;\n        }\n      }\n      if (this.isZero()) {\n        out = '0' + out;\n      }\n      while (out.length % padding !== 0) {\n        out = '0' + out;\n      }\n      if (this.negative !== 0) {\n        out = '-' + out;\n      }\n      return out;\n    }\n\n    assert(false, 'Base should be between 2 and 36');\n  };\n\n  BN.prototype.toNumber = function toNumber () {\n    var ret = this.words[0];\n    if (this.length === 2) {\n      ret += this.words[1] * 0x4000000;\n    } else if (this.length === 3 && this.words[2] === 0x01) {\n      // NOTE: at this stage it is known that the top bit is set\n      ret += 0x10000000000000 + (this.words[1] * 0x4000000);\n    } else if (this.length > 2) {\n      assert(false, 'Number can only safely store up to 53 bits');\n    }\n    return (this.negative !== 0) ? -ret : ret;\n  };\n\n  BN.prototype.toJSON = function toJSON () {\n    return this.toString(16);\n  };\n\n  BN.prototype.toBuffer = function toBuffer (endian, length) {\n    assert(typeof Buffer !== 'undefined');\n    return this.toArrayLike(Buffer, endian, length);\n  };\n\n  BN.prototype.toArray = function toArray (endian, length) {\n    return this.toArrayLike(Array, endian, length);\n  };\n\n  BN.prototype.toArrayLike = function toArrayLike (ArrayType, endian, length) {\n    var byteLength = this.byteLength();\n    var reqLength = length || Math.max(1, byteLength);\n    assert(byteLength <= reqLength, 'byte array longer than desired length');\n    assert(reqLength > 0, 'Requested array length <= 0');\n\n    this.strip();\n    var littleEndian = endian === 'le';\n    var res = new ArrayType(reqLength);\n\n    var b, i;\n    var q = this.clone();\n    if (!littleEndian) {\n      // Assume big-endian\n      for (i = 0; i < reqLength - byteLength; i++) {\n        res[i] = 0;\n      }\n\n      for (i = 0; !q.isZero(); i++) {\n        b = q.andln(0xff);\n        q.iushrn(8);\n\n        res[reqLength - i - 1] = b;\n      }\n    } else {\n      for (i = 0; !q.isZero(); i++) {\n        b = q.andln(0xff);\n        q.iushrn(8);\n\n        res[i] = b;\n      }\n\n      for (; i < reqLength; i++) {\n        res[i] = 0;\n      }\n    }\n\n    return res;\n  };\n\n  if (Math.clz32) {\n    BN.prototype._countBits = function _countBits (w) {\n      return 32 - Math.clz32(w);\n    };\n  } else {\n    BN.prototype._countBits = function _countBits (w) {\n      var t = w;\n      var r = 0;\n      if (t >= 0x1000) {\n        r += 13;\n        t >>>= 13;\n      }\n      if (t >= 0x40) {\n        r += 7;\n        t >>>= 7;\n      }\n      if (t >= 0x8) {\n        r += 4;\n        t >>>= 4;\n      }\n      if (t >= 0x02) {\n        r += 2;\n        t >>>= 2;\n      }\n      return r + t;\n    };\n  }\n\n  BN.prototype._zeroBits = function _zeroBits (w) {\n    // Short-cut\n    if (w === 0) return 26;\n\n    var t = w;\n    var r = 0;\n    if ((t & 0x1fff) === 0) {\n      r += 13;\n      t >>>= 13;\n    }\n    if ((t & 0x7f) === 0) {\n      r += 7;\n      t >>>= 7;\n    }\n    if ((t & 0xf) === 0) {\n      r += 4;\n      t >>>= 4;\n    }\n    if ((t & 0x3) === 0) {\n      r += 2;\n      t >>>= 2;\n    }\n    if ((t & 0x1) === 0) {\n      r++;\n    }\n    return r;\n  };\n\n  // Return number of used bits in a BN\n  BN.prototype.bitLength = function bitLength () {\n    var w = this.words[this.length - 1];\n    var hi = this._countBits(w);\n    return (this.length - 1) * 26 + hi;\n  };\n\n  function toBitArray (num) {\n    var w = new Array(num.bitLength());\n\n    for (var bit = 0; bit < w.length; bit++) {\n      var off = (bit / 26) | 0;\n      var wbit = bit % 26;\n\n      w[bit] = (num.words[off] & (1 << wbit)) >>> wbit;\n    }\n\n    return w;\n  }\n\n  // Number of trailing zero bits\n  BN.prototype.zeroBits = function zeroBits () {\n    if (this.isZero()) return 0;\n\n    var r = 0;\n    for (var i = 0; i < this.length; i++) {\n      var b = this._zeroBits(this.words[i]);\n      r += b;\n      if (b !== 26) break;\n    }\n    return r;\n  };\n\n  BN.prototype.byteLength = function byteLength () {\n    return Math.ceil(this.bitLength() / 8);\n  };\n\n  BN.prototype.toTwos = function toTwos (width) {\n    if (this.negative !== 0) {\n      return this.abs().inotn(width).iaddn(1);\n    }\n    return this.clone();\n  };\n\n  BN.prototype.fromTwos = function fromTwos (width) {\n    if (this.testn(width - 1)) {\n      return this.notn(width).iaddn(1).ineg();\n    }\n    return this.clone();\n  };\n\n  BN.prototype.isNeg = function isNeg () {\n    return this.negative !== 0;\n  };\n\n  // Return negative clone of `this`\n  BN.prototype.neg = function neg () {\n    return this.clone().ineg();\n  };\n\n  BN.prototype.ineg = function ineg () {\n    if (!this.isZero()) {\n      this.negative ^= 1;\n    }\n\n    return this;\n  };\n\n  // Or `num` with `this` in-place\n  BN.prototype.iuor = function iuor (num) {\n    while (this.length < num.length) {\n      this.words[this.length++] = 0;\n    }\n\n    for (var i = 0; i < num.length; i++) {\n      this.words[i] = this.words[i] | num.words[i];\n    }\n\n    return this.strip();\n  };\n\n  BN.prototype.ior = function ior (num) {\n    assert((this.negative | num.negative) === 0);\n    return this.iuor(num);\n  };\n\n  // Or `num` with `this`\n  BN.prototype.or = function or (num) {\n    if (this.length > num.length) return this.clone().ior(num);\n    return num.clone().ior(this);\n  };\n\n  BN.prototype.uor = function uor (num) {\n    if (this.length > num.length) return this.clone().iuor(num);\n    return num.clone().iuor(this);\n  };\n\n  // And `num` with `this` in-place\n  BN.prototype.iuand = function iuand (num) {\n    // b = min-length(num, this)\n    var b;\n    if (this.length > num.length) {\n      b = num;\n    } else {\n      b = this;\n    }\n\n    for (var i = 0; i < b.length; i++) {\n      this.words[i] = this.words[i] & num.words[i];\n    }\n\n    this.length = b.length;\n\n    return this.strip();\n  };\n\n  BN.prototype.iand = function iand (num) {\n    assert((this.negative | num.negative) === 0);\n    return this.iuand(num);\n  };\n\n  // And `num` with `this`\n  BN.prototype.and = function and (num) {\n    if (this.length > num.length) return this.clone().iand(num);\n    return num.clone().iand(this);\n  };\n\n  BN.prototype.uand = function uand (num) {\n    if (this.length > num.length) return this.clone().iuand(num);\n    return num.clone().iuand(this);\n  };\n\n  // Xor `num` with `this` in-place\n  BN.prototype.iuxor = function iuxor (num) {\n    // a.length > b.length\n    var a;\n    var b;\n    if (this.length > num.length) {\n      a = this;\n      b = num;\n    } else {\n      a = num;\n      b = this;\n    }\n\n    for (var i = 0; i < b.length; i++) {\n      this.words[i] = a.words[i] ^ b.words[i];\n    }\n\n    if (this !== a) {\n      for (; i < a.length; i++) {\n        this.words[i] = a.words[i];\n      }\n    }\n\n    this.length = a.length;\n\n    return this.strip();\n  };\n\n  BN.prototype.ixor = function ixor (num) {\n    assert((this.negative | num.negative) === 0);\n    return this.iuxor(num);\n  };\n\n  // Xor `num` with `this`\n  BN.prototype.xor = function xor (num) {\n    if (this.length > num.length) return this.clone().ixor(num);\n    return num.clone().ixor(this);\n  };\n\n  BN.prototype.uxor = function uxor (num) {\n    if (this.length > num.length) return this.clone().iuxor(num);\n    return num.clone().iuxor(this);\n  };\n\n  // Not ``this`` with ``width`` bitwidth\n  BN.prototype.inotn = function inotn (width) {\n    assert(typeof width === 'number' && width >= 0);\n\n    var bytesNeeded = Math.ceil(width / 26) | 0;\n    var bitsLeft = width % 26;\n\n    // Extend the buffer with leading zeroes\n    this._expand(bytesNeeded);\n\n    if (bitsLeft > 0) {\n      bytesNeeded--;\n    }\n\n    // Handle complete words\n    for (var i = 0; i < bytesNeeded; i++) {\n      this.words[i] = ~this.words[i] & 0x3ffffff;\n    }\n\n    // Handle the residue\n    if (bitsLeft > 0) {\n      this.words[i] = ~this.words[i] & (0x3ffffff >> (26 - bitsLeft));\n    }\n\n    // And remove leading zeroes\n    return this.strip();\n  };\n\n  BN.prototype.notn = function notn (width) {\n    return this.clone().inotn(width);\n  };\n\n  // Set `bit` of `this`\n  BN.prototype.setn = function setn (bit, val) {\n    assert(typeof bit === 'number' && bit >= 0);\n\n    var off = (bit / 26) | 0;\n    var wbit = bit % 26;\n\n    this._expand(off + 1);\n\n    if (val) {\n      this.words[off] = this.words[off] | (1 << wbit);\n    } else {\n      this.words[off] = this.words[off] & ~(1 << wbit);\n    }\n\n    return this.strip();\n  };\n\n  // Add `num` to `this` in-place\n  BN.prototype.iadd = function iadd (num) {\n    var r;\n\n    // negative + positive\n    if (this.negative !== 0 && num.negative === 0) {\n      this.negative = 0;\n      r = this.isub(num);\n      this.negative ^= 1;\n      return this._normSign();\n\n    // positive + negative\n    } else if (this.negative === 0 && num.negative !== 0) {\n      num.negative = 0;\n      r = this.isub(num);\n      num.negative = 1;\n      return r._normSign();\n    }\n\n    // a.length > b.length\n    var a, b;\n    if (this.length > num.length) {\n      a = this;\n      b = num;\n    } else {\n      a = num;\n      b = this;\n    }\n\n    var carry = 0;\n    for (var i = 0; i < b.length; i++) {\n      r = (a.words[i] | 0) + (b.words[i] | 0) + carry;\n      this.words[i] = r & 0x3ffffff;\n      carry = r >>> 26;\n    }\n    for (; carry !== 0 && i < a.length; i++) {\n      r = (a.words[i] | 0) + carry;\n      this.words[i] = r & 0x3ffffff;\n      carry = r >>> 26;\n    }\n\n    this.length = a.length;\n    if (carry !== 0) {\n      this.words[this.length] = carry;\n      this.length++;\n    // Copy the rest of the words\n    } else if (a !== this) {\n      for (; i < a.length; i++) {\n        this.words[i] = a.words[i];\n      }\n    }\n\n    return this;\n  };\n\n  // Add `num` to `this`\n  BN.prototype.add = function add (num) {\n    var res;\n    if (num.negative !== 0 && this.negative === 0) {\n      num.negative = 0;\n      res = this.sub(num);\n      num.negative ^= 1;\n      return res;\n    } else if (num.negative === 0 && this.negative !== 0) {\n      this.negative = 0;\n      res = num.sub(this);\n      this.negative = 1;\n      return res;\n    }\n\n    if (this.length > num.length) return this.clone().iadd(num);\n\n    return num.clone().iadd(this);\n  };\n\n  // Subtract `num` from `this` in-place\n  BN.prototype.isub = function isub (num) {\n    // this - (-num) = this + num\n    if (num.negative !== 0) {\n      num.negative = 0;\n      var r = this.iadd(num);\n      num.negative = 1;\n      return r._normSign();\n\n    // -this - num = -(this + num)\n    } else if (this.negative !== 0) {\n      this.negative = 0;\n      this.iadd(num);\n      this.negative = 1;\n      return this._normSign();\n    }\n\n    // At this point both numbers are positive\n    var cmp = this.cmp(num);\n\n    // Optimization - zeroify\n    if (cmp === 0) {\n      this.negative = 0;\n      this.length = 1;\n      this.words[0] = 0;\n      return this;\n    }\n\n    // a > b\n    var a, b;\n    if (cmp > 0) {\n      a = this;\n      b = num;\n    } else {\n      a = num;\n      b = this;\n    }\n\n    var carry = 0;\n    for (var i = 0; i < b.length; i++) {\n      r = (a.words[i] | 0) - (b.words[i] | 0) + carry;\n      carry = r >> 26;\n      this.words[i] = r & 0x3ffffff;\n    }\n    for (; carry !== 0 && i < a.length; i++) {\n      r = (a.words[i] | 0) + carry;\n      carry = r >> 26;\n      this.words[i] = r & 0x3ffffff;\n    }\n\n    // Copy rest of the words\n    if (carry === 0 && i < a.length && a !== this) {\n      for (; i < a.length; i++) {\n        this.words[i] = a.words[i];\n      }\n    }\n\n    this.length = Math.max(this.length, i);\n\n    if (a !== this) {\n      this.negative = 1;\n    }\n\n    return this.strip();\n  };\n\n  // Subtract `num` from `this`\n  BN.prototype.sub = function sub (num) {\n    return this.clone().isub(num);\n  };\n\n  function smallMulTo (self, num, out) {\n    out.negative = num.negative ^ self.negative;\n    var len = (self.length + num.length) | 0;\n    out.length = len;\n    len = (len - 1) | 0;\n\n    // Peel one iteration (compiler can't do it, because of code complexity)\n    var a = self.words[0] | 0;\n    var b = num.words[0] | 0;\n    var r = a * b;\n\n    var lo = r & 0x3ffffff;\n    var carry = (r / 0x4000000) | 0;\n    out.words[0] = lo;\n\n    for (var k = 1; k < len; k++) {\n      // Sum all words with the same `i + j = k` and accumulate `ncarry`,\n      // note that ncarry could be >= 0x3ffffff\n      var ncarry = carry >>> 26;\n      var rword = carry & 0x3ffffff;\n      var maxJ = Math.min(k, num.length - 1);\n      for (var j = Math.max(0, k - self.length + 1); j <= maxJ; j++) {\n        var i = (k - j) | 0;\n        a = self.words[i] | 0;\n        b = num.words[j] | 0;\n        r = a * b + rword;\n        ncarry += (r / 0x4000000) | 0;\n        rword = r & 0x3ffffff;\n      }\n      out.words[k] = rword | 0;\n      carry = ncarry | 0;\n    }\n    if (carry !== 0) {\n      out.words[k] = carry | 0;\n    } else {\n      out.length--;\n    }\n\n    return out.strip();\n  }\n\n  // TODO(indutny): it may be reasonable to omit it for users who don't need\n  // to work with 256-bit numbers, otherwise it gives 20% improvement for 256-bit\n  // multiplication (like elliptic secp256k1).\n  var comb10MulTo = function comb10MulTo (self, num, out) {\n    var a = self.words;\n    var b = num.words;\n    var o = out.words;\n    var c = 0;\n    var lo;\n    var mid;\n    var hi;\n    var a0 = a[0] | 0;\n    var al0 = a0 & 0x1fff;\n    var ah0 = a0 >>> 13;\n    var a1 = a[1] | 0;\n    var al1 = a1 & 0x1fff;\n    var ah1 = a1 >>> 13;\n    var a2 = a[2] | 0;\n    var al2 = a2 & 0x1fff;\n    var ah2 = a2 >>> 13;\n    var a3 = a[3] | 0;\n    var al3 = a3 & 0x1fff;\n    var ah3 = a3 >>> 13;\n    var a4 = a[4] | 0;\n    var al4 = a4 & 0x1fff;\n    var ah4 = a4 >>> 13;\n    var a5 = a[5] | 0;\n    var al5 = a5 & 0x1fff;\n    var ah5 = a5 >>> 13;\n    var a6 = a[6] | 0;\n    var al6 = a6 & 0x1fff;\n    var ah6 = a6 >>> 13;\n    var a7 = a[7] | 0;\n    var al7 = a7 & 0x1fff;\n    var ah7 = a7 >>> 13;\n    var a8 = a[8] | 0;\n    var al8 = a8 & 0x1fff;\n    var ah8 = a8 >>> 13;\n    var a9 = a[9] | 0;\n    var al9 = a9 & 0x1fff;\n    var ah9 = a9 >>> 13;\n    var b0 = b[0] | 0;\n    var bl0 = b0 & 0x1fff;\n    var bh0 = b0 >>> 13;\n    var b1 = b[1] | 0;\n    var bl1 = b1 & 0x1fff;\n    var bh1 = b1 >>> 13;\n    var b2 = b[2] | 0;\n    var bl2 = b2 & 0x1fff;\n    var bh2 = b2 >>> 13;\n    var b3 = b[3] | 0;\n    var bl3 = b3 & 0x1fff;\n    var bh3 = b3 >>> 13;\n    var b4 = b[4] | 0;\n    var bl4 = b4 & 0x1fff;\n    var bh4 = b4 >>> 13;\n    var b5 = b[5] | 0;\n    var bl5 = b5 & 0x1fff;\n    var bh5 = b5 >>> 13;\n    var b6 = b[6] | 0;\n    var bl6 = b6 & 0x1fff;\n    var bh6 = b6 >>> 13;\n    var b7 = b[7] | 0;\n    var bl7 = b7 & 0x1fff;\n    var bh7 = b7 >>> 13;\n    var b8 = b[8] | 0;\n    var bl8 = b8 & 0x1fff;\n    var bh8 = b8 >>> 13;\n    var b9 = b[9] | 0;\n    var bl9 = b9 & 0x1fff;\n    var bh9 = b9 >>> 13;\n\n    out.negative = self.negative ^ num.negative;\n    out.length = 19;\n    /* k = 0 */\n    lo = Math.imul(al0, bl0);\n    mid = Math.imul(al0, bh0);\n    mid = (mid + Math.imul(ah0, bl0)) | 0;\n    hi = Math.imul(ah0, bh0);\n    var w0 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;\n    c = (((hi + (mid >>> 13)) | 0) + (w0 >>> 26)) | 0;\n    w0 &= 0x3ffffff;\n    /* k = 1 */\n    lo = Math.imul(al1, bl0);\n    mid = Math.imul(al1, bh0);\n    mid = (mid + Math.imul(ah1, bl0)) | 0;\n    hi = Math.imul(ah1, bh0);\n    lo = (lo + Math.imul(al0, bl1)) | 0;\n    mid = (mid + Math.imul(al0, bh1)) | 0;\n    mid = (mid + Math.imul(ah0, bl1)) | 0;\n    hi = (hi + Math.imul(ah0, bh1)) | 0;\n    var w1 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;\n    c = (((hi + (mid >>> 13)) | 0) + (w1 >>> 26)) | 0;\n    w1 &= 0x3ffffff;\n    /* k = 2 */\n    lo = Math.imul(al2, bl0);\n    mid = Math.imul(al2, bh0);\n    mid = (mid + Math.imul(ah2, bl0)) | 0;\n    hi = Math.imul(ah2, bh0);\n    lo = (lo + Math.imul(al1, bl1)) | 0;\n    mid = (mid + Math.imul(al1, bh1)) | 0;\n    mid = (mid + Math.imul(ah1, bl1)) | 0;\n    hi = (hi + Math.imul(ah1, bh1)) | 0;\n    lo = (lo + Math.imul(al0, bl2)) | 0;\n    mid = (mid + Math.imul(al0, bh2)) | 0;\n    mid = (mid + Math.imul(ah0, bl2)) | 0;\n    hi = (hi + Math.imul(ah0, bh2)) | 0;\n    var w2 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;\n    c = (((hi + (mid >>> 13)) | 0) + (w2 >>> 26)) | 0;\n    w2 &= 0x3ffffff;\n    /* k = 3 */\n    lo = Math.imul(al3, bl0);\n    mid = Math.imul(al3, bh0);\n    mid = (mid + Math.imul(ah3, bl0)) | 0;\n    hi = Math.imul(ah3, bh0);\n    lo = (lo + Math.imul(al2, bl1)) | 0;\n    mid = (mid + Math.imul(al2, bh1)) | 0;\n    mid = (mid + Math.imul(ah2, bl1)) | 0;\n    hi = (hi + Math.imul(ah2, bh1)) | 0;\n    lo = (lo + Math.imul(al1, bl2)) | 0;\n    mid = (mid + Math.imul(al1, bh2)) | 0;\n    mid = (mid + Math.imul(ah1, bl2)) | 0;\n    hi = (hi + Math.imul(ah1, bh2)) | 0;\n    lo = (lo + Math.imul(al0, bl3)) | 0;\n    mid = (mid + Math.imul(al0, bh3)) | 0;\n    mid = (mid + Math.imul(ah0, bl3)) | 0;\n    hi = (hi + Math.imul(ah0, bh3)) | 0;\n    var w3 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;\n    c = (((hi + (mid >>> 13)) | 0) + (w3 >>> 26)) | 0;\n    w3 &= 0x3ffffff;\n    /* k = 4 */\n    lo = Math.imul(al4, bl0);\n    mid = Math.imul(al4, bh0);\n    mid = (mid + Math.imul(ah4, bl0)) | 0;\n    hi = Math.imul(ah4, bh0);\n    lo = (lo + Math.imul(al3, bl1)) | 0;\n    mid = (mid + Math.imul(al3, bh1)) | 0;\n    mid = (mid + Math.imul(ah3, bl1)) | 0;\n    hi = (hi + Math.imul(ah3, bh1)) | 0;\n    lo = (lo + Math.imul(al2, bl2)) | 0;\n    mid = (mid + Math.imul(al2, bh2)) | 0;\n    mid = (mid + Math.imul(ah2, bl2)) | 0;\n    hi = (hi + Math.imul(ah2, bh2)) | 0;\n    lo = (lo + Math.imul(al1, bl3)) | 0;\n    mid = (mid + Math.imul(al1, bh3)) | 0;\n    mid = (mid + Math.imul(ah1, bl3)) | 0;\n    hi = (hi + Math.imul(ah1, bh3)) | 0;\n    lo = (lo + Math.imul(al0, bl4)) | 0;\n    mid = (mid + Math.imul(al0, bh4)) | 0;\n    mid = (mid + Math.imul(ah0, bl4)) | 0;\n    hi = (hi + Math.imul(ah0, bh4)) | 0;\n    var w4 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;\n    c = (((hi + (mid >>> 13)) | 0) + (w4 >>> 26)) | 0;\n    w4 &= 0x3ffffff;\n    /* k = 5 */\n    lo = Math.imul(al5, bl0);\n    mid = Math.imul(al5, bh0);\n    mid = (mid + Math.imul(ah5, bl0)) | 0;\n    hi = Math.imul(ah5, bh0);\n    lo = (lo + Math.imul(al4, bl1)) | 0;\n    mid = (mid + Math.imul(al4, bh1)) | 0;\n    mid = (mid + Math.imul(ah4, bl1)) | 0;\n    hi = (hi + Math.imul(ah4, bh1)) | 0;\n    lo = (lo + Math.imul(al3, bl2)) | 0;\n    mid = (mid + Math.imul(al3, bh2)) | 0;\n    mid = (mid + Math.imul(ah3, bl2)) | 0;\n    hi = (hi + Math.imul(ah3, bh2)) | 0;\n    lo = (lo + Math.imul(al2, bl3)) | 0;\n    mid = (mid + Math.imul(al2, bh3)) | 0;\n    mid = (mid + Math.imul(ah2, bl3)) | 0;\n    hi = (hi + Math.imul(ah2, bh3)) | 0;\n    lo = (lo + Math.imul(al1, bl4)) | 0;\n    mid = (mid + Math.imul(al1, bh4)) | 0;\n    mid = (mid + Math.imul(ah1, bl4)) | 0;\n    hi = (hi + Math.imul(ah1, bh4)) | 0;\n    lo = (lo + Math.imul(al0, bl5)) | 0;\n    mid = (mid + Math.imul(al0, bh5)) | 0;\n    mid = (mid + Math.imul(ah0, bl5)) | 0;\n    hi = (hi + Math.imul(ah0, bh5)) | 0;\n    var w5 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;\n    c = (((hi + (mid >>> 13)) | 0) + (w5 >>> 26)) | 0;\n    w5 &= 0x3ffffff;\n    /* k = 6 */\n    lo = Math.imul(al6, bl0);\n    mid = Math.imul(al6, bh0);\n    mid = (mid + Math.imul(ah6, bl0)) | 0;\n    hi = Math.imul(ah6, bh0);\n    lo = (lo + Math.imul(al5, bl1)) | 0;\n    mid = (mid + Math.imul(al5, bh1)) | 0;\n    mid = (mid + Math.imul(ah5, bl1)) | 0;\n    hi = (hi + Math.imul(ah5, bh1)) | 0;\n    lo = (lo + Math.imul(al4, bl2)) | 0;\n    mid = (mid + Math.imul(al4, bh2)) | 0;\n    mid = (mid + Math.imul(ah4, bl2)) | 0;\n    hi = (hi + Math.imul(ah4, bh2)) | 0;\n    lo = (lo + Math.imul(al3, bl3)) | 0;\n    mid = (mid + Math.imul(al3, bh3)) | 0;\n    mid = (mid + Math.imul(ah3, bl3)) | 0;\n    hi = (hi + Math.imul(ah3, bh3)) | 0;\n    lo = (lo + Math.imul(al2, bl4)) | 0;\n    mid = (mid + Math.imul(al2, bh4)) | 0;\n    mid = (mid + Math.imul(ah2, bl4)) | 0;\n    hi = (hi + Math.imul(ah2, bh4)) | 0;\n    lo = (lo + Math.imul(al1, bl5)) | 0;\n    mid = (mid + Math.imul(al1, bh5)) | 0;\n    mid = (mid + Math.imul(ah1, bl5)) | 0;\n    hi = (hi + Math.imul(ah1, bh5)) | 0;\n    lo = (lo + Math.imul(al0, bl6)) | 0;\n    mid = (mid + Math.imul(al0, bh6)) | 0;\n    mid = (mid + Math.imul(ah0, bl6)) | 0;\n    hi = (hi + Math.imul(ah0, bh6)) | 0;\n    var w6 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;\n    c = (((hi + (mid >>> 13)) | 0) + (w6 >>> 26)) | 0;\n    w6 &= 0x3ffffff;\n    /* k = 7 */\n    lo = Math.imul(al7, bl0);\n    mid = Math.imul(al7, bh0);\n    mid = (mid + Math.imul(ah7, bl0)) | 0;\n    hi = Math.imul(ah7, bh0);\n    lo = (lo + Math.imul(al6, bl1)) | 0;\n    mid = (mid + Math.imul(al6, bh1)) | 0;\n    mid = (mid + Math.imul(ah6, bl1)) | 0;\n    hi = (hi + Math.imul(ah6, bh1)) | 0;\n    lo = (lo + Math.imul(al5, bl2)) | 0;\n    mid = (mid + Math.imul(al5, bh2)) | 0;\n    mid = (mid + Math.imul(ah5, bl2)) | 0;\n    hi = (hi + Math.imul(ah5, bh2)) | 0;\n    lo = (lo + Math.imul(al4, bl3)) | 0;\n    mid = (mid + Math.imul(al4, bh3)) | 0;\n    mid = (mid + Math.imul(ah4, bl3)) | 0;\n    hi = (hi + Math.imul(ah4, bh3)) | 0;\n    lo = (lo + Math.imul(al3, bl4)) | 0;\n    mid = (mid + Math.imul(al3, bh4)) | 0;\n    mid = (mid + Math.imul(ah3, bl4)) | 0;\n    hi = (hi + Math.imul(ah3, bh4)) | 0;\n    lo = (lo + Math.imul(al2, bl5)) | 0;\n    mid = (mid + Math.imul(al2, bh5)) | 0;\n    mid = (mid + Math.imul(ah2, bl5)) | 0;\n    hi = (hi + Math.imul(ah2, bh5)) | 0;\n    lo = (lo + Math.imul(al1, bl6)) | 0;\n    mid = (mid + Math.imul(al1, bh6)) | 0;\n    mid = (mid + Math.imul(ah1, bl6)) | 0;\n    hi = (hi + Math.imul(ah1, bh6)) | 0;\n    lo = (lo + Math.imul(al0, bl7)) | 0;\n    mid = (mid + Math.imul(al0, bh7)) | 0;\n    mid = (mid + Math.imul(ah0, bl7)) | 0;\n    hi = (hi + Math.imul(ah0, bh7)) | 0;\n    var w7 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;\n    c = (((hi + (mid >>> 13)) | 0) + (w7 >>> 26)) | 0;\n    w7 &= 0x3ffffff;\n    /* k = 8 */\n    lo = Math.imul(al8, bl0);\n    mid = Math.imul(al8, bh0);\n    mid = (mid + Math.imul(ah8, bl0)) | 0;\n    hi = Math.imul(ah8, bh0);\n    lo = (lo + Math.imul(al7, bl1)) | 0;\n    mid = (mid + Math.imul(al7, bh1)) | 0;\n    mid = (mid + Math.imul(ah7, bl1)) | 0;\n    hi = (hi + Math.imul(ah7, bh1)) | 0;\n    lo = (lo + Math.imul(al6, bl2)) | 0;\n    mid = (mid + Math.imul(al6, bh2)) | 0;\n    mid = (mid + Math.imul(ah6, bl2)) | 0;\n    hi = (hi + Math.imul(ah6, bh2)) | 0;\n    lo = (lo + Math.imul(al5, bl3)) | 0;\n    mid = (mid + Math.imul(al5, bh3)) | 0;\n    mid = (mid + Math.imul(ah5, bl3)) | 0;\n    hi = (hi + Math.imul(ah5, bh3)) | 0;\n    lo = (lo + Math.imul(al4, bl4)) | 0;\n    mid = (mid + Math.imul(al4, bh4)) | 0;\n    mid = (mid + Math.imul(ah4, bl4)) | 0;\n    hi = (hi + Math.imul(ah4, bh4)) | 0;\n    lo = (lo + Math.imul(al3, bl5)) | 0;\n    mid = (mid + Math.imul(al3, bh5)) | 0;\n    mid = (mid + Math.imul(ah3, bl5)) | 0;\n    hi = (hi + Math.imul(ah3, bh5)) | 0;\n    lo = (lo + Math.imul(al2, bl6)) | 0;\n    mid = (mid + Math.imul(al2, bh6)) | 0;\n    mid = (mid + Math.imul(ah2, bl6)) | 0;\n    hi = (hi + Math.imul(ah2, bh6)) | 0;\n    lo = (lo + Math.imul(al1, bl7)) | 0;\n    mid = (mid + Math.imul(al1, bh7)) | 0;\n    mid = (mid + Math.imul(ah1, bl7)) | 0;\n    hi = (hi + Math.imul(ah1, bh7)) | 0;\n    lo = (lo + Math.imul(al0, bl8)) | 0;\n    mid = (mid + Math.imul(al0, bh8)) | 0;\n    mid = (mid + Math.imul(ah0, bl8)) | 0;\n    hi = (hi + Math.imul(ah0, bh8)) | 0;\n    var w8 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;\n    c = (((hi + (mid >>> 13)) | 0) + (w8 >>> 26)) | 0;\n    w8 &= 0x3ffffff;\n    /* k = 9 */\n    lo = Math.imul(al9, bl0);\n    mid = Math.imul(al9, bh0);\n    mid = (mid + Math.imul(ah9, bl0)) | 0;\n    hi = Math.imul(ah9, bh0);\n    lo = (lo + Math.imul(al8, bl1)) | 0;\n    mid = (mid + Math.imul(al8, bh1)) | 0;\n    mid = (mid + Math.imul(ah8, bl1)) | 0;\n    hi = (hi + Math.imul(ah8, bh1)) | 0;\n    lo = (lo + Math.imul(al7, bl2)) | 0;\n    mid = (mid + Math.imul(al7, bh2)) | 0;\n    mid = (mid + Math.imul(ah7, bl2)) | 0;\n    hi = (hi + Math.imul(ah7, bh2)) | 0;\n    lo = (lo + Math.imul(al6, bl3)) | 0;\n    mid = (mid + Math.imul(al6, bh3)) | 0;\n    mid = (mid + Math.imul(ah6, bl3)) | 0;\n    hi = (hi + Math.imul(ah6, bh3)) | 0;\n    lo = (lo + Math.imul(al5, bl4)) | 0;\n    mid = (mid + Math.imul(al5, bh4)) | 0;\n    mid = (mid + Math.imul(ah5, bl4)) | 0;\n    hi = (hi + Math.imul(ah5, bh4)) | 0;\n    lo = (lo + Math.imul(al4, bl5)) | 0;\n    mid = (mid + Math.imul(al4, bh5)) | 0;\n    mid = (mid + Math.imul(ah4, bl5)) | 0;\n    hi = (hi + Math.imul(ah4, bh5)) | 0;\n    lo = (lo + Math.imul(al3, bl6)) | 0;\n    mid = (mid + Math.imul(al3, bh6)) | 0;\n    mid = (mid + Math.imul(ah3, bl6)) | 0;\n    hi = (hi + Math.imul(ah3, bh6)) | 0;\n    lo = (lo + Math.imul(al2, bl7)) | 0;\n    mid = (mid + Math.imul(al2, bh7)) | 0;\n    mid = (mid + Math.imul(ah2, bl7)) | 0;\n    hi = (hi + Math.imul(ah2, bh7)) | 0;\n    lo = (lo + Math.imul(al1, bl8)) | 0;\n    mid = (mid + Math.imul(al1, bh8)) | 0;\n    mid = (mid + Math.imul(ah1, bl8)) | 0;\n    hi = (hi + Math.imul(ah1, bh8)) | 0;\n    lo = (lo + Math.imul(al0, bl9)) | 0;\n    mid = (mid + Math.imul(al0, bh9)) | 0;\n    mid = (mid + Math.imul(ah0, bl9)) | 0;\n    hi = (hi + Math.imul(ah0, bh9)) | 0;\n    var w9 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;\n    c = (((hi + (mid >>> 13)) | 0) + (w9 >>> 26)) | 0;\n    w9 &= 0x3ffffff;\n    /* k = 10 */\n    lo = Math.imul(al9, bl1);\n    mid = Math.imul(al9, bh1);\n    mid = (mid + Math.imul(ah9, bl1)) | 0;\n    hi = Math.imul(ah9, bh1);\n    lo = (lo + Math.imul(al8, bl2)) | 0;\n    mid = (mid + Math.imul(al8, bh2)) | 0;\n    mid = (mid + Math.imul(ah8, bl2)) | 0;\n    hi = (hi + Math.imul(ah8, bh2)) | 0;\n    lo = (lo + Math.imul(al7, bl3)) | 0;\n    mid = (mid + Math.imul(al7, bh3)) | 0;\n    mid = (mid + Math.imul(ah7, bl3)) | 0;\n    hi = (hi + Math.imul(ah7, bh3)) | 0;\n    lo = (lo + Math.imul(al6, bl4)) | 0;\n    mid = (mid + Math.imul(al6, bh4)) | 0;\n    mid = (mid + Math.imul(ah6, bl4)) | 0;\n    hi = (hi + Math.imul(ah6, bh4)) | 0;\n    lo = (lo + Math.imul(al5, bl5)) | 0;\n    mid = (mid + Math.imul(al5, bh5)) | 0;\n    mid = (mid + Math.imul(ah5, bl5)) | 0;\n    hi = (hi + Math.imul(ah5, bh5)) | 0;\n    lo = (lo + Math.imul(al4, bl6)) | 0;\n    mid = (mid + Math.imul(al4, bh6)) | 0;\n    mid = (mid + Math.imul(ah4, bl6)) | 0;\n    hi = (hi + Math.imul(ah4, bh6)) | 0;\n    lo = (lo + Math.imul(al3, bl7)) | 0;\n    mid = (mid + Math.imul(al3, bh7)) | 0;\n    mid = (mid + Math.imul(ah3, bl7)) | 0;\n    hi = (hi + Math.imul(ah3, bh7)) | 0;\n    lo = (lo + Math.imul(al2, bl8)) | 0;\n    mid = (mid + Math.imul(al2, bh8)) | 0;\n    mid = (mid + Math.imul(ah2, bl8)) | 0;\n    hi = (hi + Math.imul(ah2, bh8)) | 0;\n    lo = (lo + Math.imul(al1, bl9)) | 0;\n    mid = (mid + Math.imul(al1, bh9)) | 0;\n    mid = (mid + Math.imul(ah1, bl9)) | 0;\n    hi = (hi + Math.imul(ah1, bh9)) | 0;\n    var w10 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;\n    c = (((hi + (mid >>> 13)) | 0) + (w10 >>> 26)) | 0;\n    w10 &= 0x3ffffff;\n    /* k = 11 */\n    lo = Math.imul(al9, bl2);\n    mid = Math.imul(al9, bh2);\n    mid = (mid + Math.imul(ah9, bl2)) | 0;\n    hi = Math.imul(ah9, bh2);\n    lo = (lo + Math.imul(al8, bl3)) | 0;\n    mid = (mid + Math.imul(al8, bh3)) | 0;\n    mid = (mid + Math.imul(ah8, bl3)) | 0;\n    hi = (hi + Math.imul(ah8, bh3)) | 0;\n    lo = (lo + Math.imul(al7, bl4)) | 0;\n    mid = (mid + Math.imul(al7, bh4)) | 0;\n    mid = (mid + Math.imul(ah7, bl4)) | 0;\n    hi = (hi + Math.imul(ah7, bh4)) | 0;\n    lo = (lo + Math.imul(al6, bl5)) | 0;\n    mid = (mid + Math.imul(al6, bh5)) | 0;\n    mid = (mid + Math.imul(ah6, bl5)) | 0;\n    hi = (hi + Math.imul(ah6, bh5)) | 0;\n    lo = (lo + Math.imul(al5, bl6)) | 0;\n    mid = (mid + Math.imul(al5, bh6)) | 0;\n    mid = (mid + Math.imul(ah5, bl6)) | 0;\n    hi = (hi + Math.imul(ah5, bh6)) | 0;\n    lo = (lo + Math.imul(al4, bl7)) | 0;\n    mid = (mid + Math.imul(al4, bh7)) | 0;\n    mid = (mid + Math.imul(ah4, bl7)) | 0;\n    hi = (hi + Math.imul(ah4, bh7)) | 0;\n    lo = (lo + Math.imul(al3, bl8)) | 0;\n    mid = (mid + Math.imul(al3, bh8)) | 0;\n    mid = (mid + Math.imul(ah3, bl8)) | 0;\n    hi = (hi + Math.imul(ah3, bh8)) | 0;\n    lo = (lo + Math.imul(al2, bl9)) | 0;\n    mid = (mid + Math.imul(al2, bh9)) | 0;\n    mid = (mid + Math.imul(ah2, bl9)) | 0;\n    hi = (hi + Math.imul(ah2, bh9)) | 0;\n    var w11 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;\n    c = (((hi + (mid >>> 13)) | 0) + (w11 >>> 26)) | 0;\n    w11 &= 0x3ffffff;\n    /* k = 12 */\n    lo = Math.imul(al9, bl3);\n    mid = Math.imul(al9, bh3);\n    mid = (mid + Math.imul(ah9, bl3)) | 0;\n    hi = Math.imul(ah9, bh3);\n    lo = (lo + Math.imul(al8, bl4)) | 0;\n    mid = (mid + Math.imul(al8, bh4)) | 0;\n    mid = (mid + Math.imul(ah8, bl4)) | 0;\n    hi = (hi + Math.imul(ah8, bh4)) | 0;\n    lo = (lo + Math.imul(al7, bl5)) | 0;\n    mid = (mid + Math.imul(al7, bh5)) | 0;\n    mid = (mid + Math.imul(ah7, bl5)) | 0;\n    hi = (hi + Math.imul(ah7, bh5)) | 0;\n    lo = (lo + Math.imul(al6, bl6)) | 0;\n    mid = (mid + Math.imul(al6, bh6)) | 0;\n    mid = (mid + Math.imul(ah6, bl6)) | 0;\n    hi = (hi + Math.imul(ah6, bh6)) | 0;\n    lo = (lo + Math.imul(al5, bl7)) | 0;\n    mid = (mid + Math.imul(al5, bh7)) | 0;\n    mid = (mid + Math.imul(ah5, bl7)) | 0;\n    hi = (hi + Math.imul(ah5, bh7)) | 0;\n    lo = (lo + Math.imul(al4, bl8)) | 0;\n    mid = (mid + Math.imul(al4, bh8)) | 0;\n    mid = (mid + Math.imul(ah4, bl8)) | 0;\n    hi = (hi + Math.imul(ah4, bh8)) | 0;\n    lo = (lo + Math.imul(al3, bl9)) | 0;\n    mid = (mid + Math.imul(al3, bh9)) | 0;\n    mid = (mid + Math.imul(ah3, bl9)) | 0;\n    hi = (hi + Math.imul(ah3, bh9)) | 0;\n    var w12 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;\n    c = (((hi + (mid >>> 13)) | 0) + (w12 >>> 26)) | 0;\n    w12 &= 0x3ffffff;\n    /* k = 13 */\n    lo = Math.imul(al9, bl4);\n    mid = Math.imul(al9, bh4);\n    mid = (mid + Math.imul(ah9, bl4)) | 0;\n    hi = Math.imul(ah9, bh4);\n    lo = (lo + Math.imul(al8, bl5)) | 0;\n    mid = (mid + Math.imul(al8, bh5)) | 0;\n    mid = (mid + Math.imul(ah8, bl5)) | 0;\n    hi = (hi + Math.imul(ah8, bh5)) | 0;\n    lo = (lo + Math.imul(al7, bl6)) | 0;\n    mid = (mid + Math.imul(al7, bh6)) | 0;\n    mid = (mid + Math.imul(ah7, bl6)) | 0;\n    hi = (hi + Math.imul(ah7, bh6)) | 0;\n    lo = (lo + Math.imul(al6, bl7)) | 0;\n    mid = (mid + Math.imul(al6, bh7)) | 0;\n    mid = (mid + Math.imul(ah6, bl7)) | 0;\n    hi = (hi + Math.imul(ah6, bh7)) | 0;\n    lo = (lo + Math.imul(al5, bl8)) | 0;\n    mid = (mid + Math.imul(al5, bh8)) | 0;\n    mid = (mid + Math.imul(ah5, bl8)) | 0;\n    hi = (hi + Math.imul(ah5, bh8)) | 0;\n    lo = (lo + Math.imul(al4, bl9)) | 0;\n    mid = (mid + Math.imul(al4, bh9)) | 0;\n    mid = (mid + Math.imul(ah4, bl9)) | 0;\n    hi = (hi + Math.imul(ah4, bh9)) | 0;\n    var w13 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;\n    c = (((hi + (mid >>> 13)) | 0) + (w13 >>> 26)) | 0;\n    w13 &= 0x3ffffff;\n    /* k = 14 */\n    lo = Math.imul(al9, bl5);\n    mid = Math.imul(al9, bh5);\n    mid = (mid + Math.imul(ah9, bl5)) | 0;\n    hi = Math.imul(ah9, bh5);\n    lo = (lo + Math.imul(al8, bl6)) | 0;\n    mid = (mid + Math.imul(al8, bh6)) | 0;\n    mid = (mid + Math.imul(ah8, bl6)) | 0;\n    hi = (hi + Math.imul(ah8, bh6)) | 0;\n    lo = (lo + Math.imul(al7, bl7)) | 0;\n    mid = (mid + Math.imul(al7, bh7)) | 0;\n    mid = (mid + Math.imul(ah7, bl7)) | 0;\n    hi = (hi + Math.imul(ah7, bh7)) | 0;\n    lo = (lo + Math.imul(al6, bl8)) | 0;\n    mid = (mid + Math.imul(al6, bh8)) | 0;\n    mid = (mid + Math.imul(ah6, bl8)) | 0;\n    hi = (hi + Math.imul(ah6, bh8)) | 0;\n    lo = (lo + Math.imul(al5, bl9)) | 0;\n    mid = (mid + Math.imul(al5, bh9)) | 0;\n    mid = (mid + Math.imul(ah5, bl9)) | 0;\n    hi = (hi + Math.imul(ah5, bh9)) | 0;\n    var w14 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;\n    c = (((hi + (mid >>> 13)) | 0) + (w14 >>> 26)) | 0;\n    w14 &= 0x3ffffff;\n    /* k = 15 */\n    lo = Math.imul(al9, bl6);\n    mid = Math.imul(al9, bh6);\n    mid = (mid + Math.imul(ah9, bl6)) | 0;\n    hi = Math.imul(ah9, bh6);\n    lo = (lo + Math.imul(al8, bl7)) | 0;\n    mid = (mid + Math.imul(al8, bh7)) | 0;\n    mid = (mid + Math.imul(ah8, bl7)) | 0;\n    hi = (hi + Math.imul(ah8, bh7)) | 0;\n    lo = (lo + Math.imul(al7, bl8)) | 0;\n    mid = (mid + Math.imul(al7, bh8)) | 0;\n    mid = (mid + Math.imul(ah7, bl8)) | 0;\n    hi = (hi + Math.imul(ah7, bh8)) | 0;\n    lo = (lo + Math.imul(al6, bl9)) | 0;\n    mid = (mid + Math.imul(al6, bh9)) | 0;\n    mid = (mid + Math.imul(ah6, bl9)) | 0;\n    hi = (hi + Math.imul(ah6, bh9)) | 0;\n    var w15 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;\n    c = (((hi + (mid >>> 13)) | 0) + (w15 >>> 26)) | 0;\n    w15 &= 0x3ffffff;\n    /* k = 16 */\n    lo = Math.imul(al9, bl7);\n    mid = Math.imul(al9, bh7);\n    mid = (mid + Math.imul(ah9, bl7)) | 0;\n    hi = Math.imul(ah9, bh7);\n    lo = (lo + Math.imul(al8, bl8)) | 0;\n    mid = (mid + Math.imul(al8, bh8)) | 0;\n    mid = (mid + Math.imul(ah8, bl8)) | 0;\n    hi = (hi + Math.imul(ah8, bh8)) | 0;\n    lo = (lo + Math.imul(al7, bl9)) | 0;\n    mid = (mid + Math.imul(al7, bh9)) | 0;\n    mid = (mid + Math.imul(ah7, bl9)) | 0;\n    hi = (hi + Math.imul(ah7, bh9)) | 0;\n    var w16 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;\n    c = (((hi + (mid >>> 13)) | 0) + (w16 >>> 26)) | 0;\n    w16 &= 0x3ffffff;\n    /* k = 17 */\n    lo = Math.imul(al9, bl8);\n    mid = Math.imul(al9, bh8);\n    mid = (mid + Math.imul(ah9, bl8)) | 0;\n    hi = Math.imul(ah9, bh8);\n    lo = (lo + Math.imul(al8, bl9)) | 0;\n    mid = (mid + Math.imul(al8, bh9)) | 0;\n    mid = (mid + Math.imul(ah8, bl9)) | 0;\n    hi = (hi + Math.imul(ah8, bh9)) | 0;\n    var w17 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;\n    c = (((hi + (mid >>> 13)) | 0) + (w17 >>> 26)) | 0;\n    w17 &= 0x3ffffff;\n    /* k = 18 */\n    lo = Math.imul(al9, bl9);\n    mid = Math.imul(al9, bh9);\n    mid = (mid + Math.imul(ah9, bl9)) | 0;\n    hi = Math.imul(ah9, bh9);\n    var w18 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;\n    c = (((hi + (mid >>> 13)) | 0) + (w18 >>> 26)) | 0;\n    w18 &= 0x3ffffff;\n    o[0] = w0;\n    o[1] = w1;\n    o[2] = w2;\n    o[3] = w3;\n    o[4] = w4;\n    o[5] = w5;\n    o[6] = w6;\n    o[7] = w7;\n    o[8] = w8;\n    o[9] = w9;\n    o[10] = w10;\n    o[11] = w11;\n    o[12] = w12;\n    o[13] = w13;\n    o[14] = w14;\n    o[15] = w15;\n    o[16] = w16;\n    o[17] = w17;\n    o[18] = w18;\n    if (c !== 0) {\n      o[19] = c;\n      out.length++;\n    }\n    return out;\n  };\n\n  // Polyfill comb\n  if (!Math.imul) {\n    comb10MulTo = smallMulTo;\n  }\n\n  function bigMulTo (self, num, out) {\n    out.negative = num.negative ^ self.negative;\n    out.length = self.length + num.length;\n\n    var carry = 0;\n    var hncarry = 0;\n    for (var k = 0; k < out.length - 1; k++) {\n      // Sum all words with the same `i + j = k` and accumulate `ncarry`,\n      // note that ncarry could be >= 0x3ffffff\n      var ncarry = hncarry;\n      hncarry = 0;\n      var rword = carry & 0x3ffffff;\n      var maxJ = Math.min(k, num.length - 1);\n      for (var j = Math.max(0, k - self.length + 1); j <= maxJ; j++) {\n        var i = k - j;\n        var a = self.words[i] | 0;\n        var b = num.words[j] | 0;\n        var r = a * b;\n\n        var lo = r & 0x3ffffff;\n        ncarry = (ncarry + ((r / 0x4000000) | 0)) | 0;\n        lo = (lo + rword) | 0;\n        rword = lo & 0x3ffffff;\n        ncarry = (ncarry + (lo >>> 26)) | 0;\n\n        hncarry += ncarry >>> 26;\n        ncarry &= 0x3ffffff;\n      }\n      out.words[k] = rword;\n      carry = ncarry;\n      ncarry = hncarry;\n    }\n    if (carry !== 0) {\n      out.words[k] = carry;\n    } else {\n      out.length--;\n    }\n\n    return out.strip();\n  }\n\n  function jumboMulTo (self, num, out) {\n    var fftm = new FFTM();\n    return fftm.mulp(self, num, out);\n  }\n\n  BN.prototype.mulTo = function mulTo (num, out) {\n    var res;\n    var len = this.length + num.length;\n    if (this.length === 10 && num.length === 10) {\n      res = comb10MulTo(this, num, out);\n    } else if (len < 63) {\n      res = smallMulTo(this, num, out);\n    } else if (len < 1024) {\n      res = bigMulTo(this, num, out);\n    } else {\n      res = jumboMulTo(this, num, out);\n    }\n\n    return res;\n  };\n\n  // Cooley-Tukey algorithm for FFT\n  // slightly revisited to rely on looping instead of recursion\n\n  function FFTM (x, y) {\n    this.x = x;\n    this.y = y;\n  }\n\n  FFTM.prototype.makeRBT = function makeRBT (N) {\n    var t = new Array(N);\n    var l = BN.prototype._countBits(N) - 1;\n    for (var i = 0; i < N; i++) {\n      t[i] = this.revBin(i, l, N);\n    }\n\n    return t;\n  };\n\n  // Returns binary-reversed representation of `x`\n  FFTM.prototype.revBin = function revBin (x, l, N) {\n    if (x === 0 || x === N - 1) return x;\n\n    var rb = 0;\n    for (var i = 0; i < l; i++) {\n      rb |= (x & 1) << (l - i - 1);\n      x >>= 1;\n    }\n\n    return rb;\n  };\n\n  // Performs \"tweedling\" phase, therefore 'emulating'\n  // behaviour of the recursive algorithm\n  FFTM.prototype.permute = function permute (rbt, rws, iws, rtws, itws, N) {\n    for (var i = 0; i < N; i++) {\n      rtws[i] = rws[rbt[i]];\n      itws[i] = iws[rbt[i]];\n    }\n  };\n\n  FFTM.prototype.transform = function transform (rws, iws, rtws, itws, N, rbt) {\n    this.permute(rbt, rws, iws, rtws, itws, N);\n\n    for (var s = 1; s < N; s <<= 1) {\n      var l = s << 1;\n\n      var rtwdf = Math.cos(2 * Math.PI / l);\n      var itwdf = Math.sin(2 * Math.PI / l);\n\n      for (var p = 0; p < N; p += l) {\n        var rtwdf_ = rtwdf;\n        var itwdf_ = itwdf;\n\n        for (var j = 0; j < s; j++) {\n          var re = rtws[p + j];\n          var ie = itws[p + j];\n\n          var ro = rtws[p + j + s];\n          var io = itws[p + j + s];\n\n          var rx = rtwdf_ * ro - itwdf_ * io;\n\n          io = rtwdf_ * io + itwdf_ * ro;\n          ro = rx;\n\n          rtws[p + j] = re + ro;\n          itws[p + j] = ie + io;\n\n          rtws[p + j + s] = re - ro;\n          itws[p + j + s] = ie - io;\n\n          /* jshint maxdepth : false */\n          if (j !== l) {\n            rx = rtwdf * rtwdf_ - itwdf * itwdf_;\n\n            itwdf_ = rtwdf * itwdf_ + itwdf * rtwdf_;\n            rtwdf_ = rx;\n          }\n        }\n      }\n    }\n  };\n\n  FFTM.prototype.guessLen13b = function guessLen13b (n, m) {\n    var N = Math.max(m, n) | 1;\n    var odd = N & 1;\n    var i = 0;\n    for (N = N / 2 | 0; N; N = N >>> 1) {\n      i++;\n    }\n\n    return 1 << i + 1 + odd;\n  };\n\n  FFTM.prototype.conjugate = function conjugate (rws, iws, N) {\n    if (N <= 1) return;\n\n    for (var i = 0; i < N / 2; i++) {\n      var t = rws[i];\n\n      rws[i] = rws[N - i - 1];\n      rws[N - i - 1] = t;\n\n      t = iws[i];\n\n      iws[i] = -iws[N - i - 1];\n      iws[N - i - 1] = -t;\n    }\n  };\n\n  FFTM.prototype.normalize13b = function normalize13b (ws, N) {\n    var carry = 0;\n    for (var i = 0; i < N / 2; i++) {\n      var w = Math.round(ws[2 * i + 1] / N) * 0x2000 +\n        Math.round(ws[2 * i] / N) +\n        carry;\n\n      ws[i] = w & 0x3ffffff;\n\n      if (w < 0x4000000) {\n        carry = 0;\n      } else {\n        carry = w / 0x4000000 | 0;\n      }\n    }\n\n    return ws;\n  };\n\n  FFTM.prototype.convert13b = function convert13b (ws, len, rws, N) {\n    var carry = 0;\n    for (var i = 0; i < len; i++) {\n      carry = carry + (ws[i] | 0);\n\n      rws[2 * i] = carry & 0x1fff; carry = carry >>> 13;\n      rws[2 * i + 1] = carry & 0x1fff; carry = carry >>> 13;\n    }\n\n    // Pad with zeroes\n    for (i = 2 * len; i < N; ++i) {\n      rws[i] = 0;\n    }\n\n    assert(carry === 0);\n    assert((carry & ~0x1fff) === 0);\n  };\n\n  FFTM.prototype.stub = function stub (N) {\n    var ph = new Array(N);\n    for (var i = 0; i < N; i++) {\n      ph[i] = 0;\n    }\n\n    return ph;\n  };\n\n  FFTM.prototype.mulp = function mulp (x, y, out) {\n    var N = 2 * this.guessLen13b(x.length, y.length);\n\n    var rbt = this.makeRBT(N);\n\n    var _ = this.stub(N);\n\n    var rws = new Array(N);\n    var rwst = new Array(N);\n    var iwst = new Array(N);\n\n    var nrws = new Array(N);\n    var nrwst = new Array(N);\n    var niwst = new Array(N);\n\n    var rmws = out.words;\n    rmws.length = N;\n\n    this.convert13b(x.words, x.length, rws, N);\n    this.convert13b(y.words, y.length, nrws, N);\n\n    this.transform(rws, _, rwst, iwst, N, rbt);\n    this.transform(nrws, _, nrwst, niwst, N, rbt);\n\n    for (var i = 0; i < N; i++) {\n      var rx = rwst[i] * nrwst[i] - iwst[i] * niwst[i];\n      iwst[i] = rwst[i] * niwst[i] + iwst[i] * nrwst[i];\n      rwst[i] = rx;\n    }\n\n    this.conjugate(rwst, iwst, N);\n    this.transform(rwst, iwst, rmws, _, N, rbt);\n    this.conjugate(rmws, _, N);\n    this.normalize13b(rmws, N);\n\n    out.negative = x.negative ^ y.negative;\n    out.length = x.length + y.length;\n    return out.strip();\n  };\n\n  // Multiply `this` by `num`\n  BN.prototype.mul = function mul (num) {\n    var out = new BN(null);\n    out.words = new Array(this.length + num.length);\n    return this.mulTo(num, out);\n  };\n\n  // Multiply employing FFT\n  BN.prototype.mulf = function mulf (num) {\n    var out = new BN(null);\n    out.words = new Array(this.length + num.length);\n    return jumboMulTo(this, num, out);\n  };\n\n  // In-place Multiplication\n  BN.prototype.imul = function imul (num) {\n    return this.clone().mulTo(num, this);\n  };\n\n  BN.prototype.imuln = function imuln (num) {\n    assert(typeof num === 'number');\n    assert(num < 0x4000000);\n\n    // Carry\n    var carry = 0;\n    for (var i = 0; i < this.length; i++) {\n      var w = (this.words[i] | 0) * num;\n      var lo = (w & 0x3ffffff) + (carry & 0x3ffffff);\n      carry >>= 26;\n      carry += (w / 0x4000000) | 0;\n      // NOTE: lo is 27bit maximum\n      carry += lo >>> 26;\n      this.words[i] = lo & 0x3ffffff;\n    }\n\n    if (carry !== 0) {\n      this.words[i] = carry;\n      this.length++;\n    }\n\n    return this;\n  };\n\n  BN.prototype.muln = function muln (num) {\n    return this.clone().imuln(num);\n  };\n\n  // `this` * `this`\n  BN.prototype.sqr = function sqr () {\n    return this.mul(this);\n  };\n\n  // `this` * `this` in-place\n  BN.prototype.isqr = function isqr () {\n    return this.imul(this.clone());\n  };\n\n  // Math.pow(`this`, `num`)\n  BN.prototype.pow = function pow (num) {\n    var w = toBitArray(num);\n    if (w.length === 0) return new BN(1);\n\n    // Skip leading zeroes\n    var res = this;\n    for (var i = 0; i < w.length; i++, res = res.sqr()) {\n      if (w[i] !== 0) break;\n    }\n\n    if (++i < w.length) {\n      for (var q = res.sqr(); i < w.length; i++, q = q.sqr()) {\n        if (w[i] === 0) continue;\n\n        res = res.mul(q);\n      }\n    }\n\n    return res;\n  };\n\n  // Shift-left in-place\n  BN.prototype.iushln = function iushln (bits) {\n    assert(typeof bits === 'number' && bits >= 0);\n    var r = bits % 26;\n    var s = (bits - r) / 26;\n    var carryMask = (0x3ffffff >>> (26 - r)) << (26 - r);\n    var i;\n\n    if (r !== 0) {\n      var carry = 0;\n\n      for (i = 0; i < this.length; i++) {\n        var newCarry = this.words[i] & carryMask;\n        var c = ((this.words[i] | 0) - newCarry) << r;\n        this.words[i] = c | carry;\n        carry = newCarry >>> (26 - r);\n      }\n\n      if (carry) {\n        this.words[i] = carry;\n        this.length++;\n      }\n    }\n\n    if (s !== 0) {\n      for (i = this.length - 1; i >= 0; i--) {\n        this.words[i + s] = this.words[i];\n      }\n\n      for (i = 0; i < s; i++) {\n        this.words[i] = 0;\n      }\n\n      this.length += s;\n    }\n\n    return this.strip();\n  };\n\n  BN.prototype.ishln = function ishln (bits) {\n    // TODO(indutny): implement me\n    assert(this.negative === 0);\n    return this.iushln(bits);\n  };\n\n  // Shift-right in-place\n  // NOTE: `hint` is a lowest bit before trailing zeroes\n  // NOTE: if `extended` is present - it will be filled with destroyed bits\n  BN.prototype.iushrn = function iushrn (bits, hint, extended) {\n    assert(typeof bits === 'number' && bits >= 0);\n    var h;\n    if (hint) {\n      h = (hint - (hint % 26)) / 26;\n    } else {\n      h = 0;\n    }\n\n    var r = bits % 26;\n    var s = Math.min((bits - r) / 26, this.length);\n    var mask = 0x3ffffff ^ ((0x3ffffff >>> r) << r);\n    var maskedWords = extended;\n\n    h -= s;\n    h = Math.max(0, h);\n\n    // Extended mode, copy masked part\n    if (maskedWords) {\n      for (var i = 0; i < s; i++) {\n        maskedWords.words[i] = this.words[i];\n      }\n      maskedWords.length = s;\n    }\n\n    if (s === 0) {\n      // No-op, we should not move anything at all\n    } else if (this.length > s) {\n      this.length -= s;\n      for (i = 0; i < this.length; i++) {\n        this.words[i] = this.words[i + s];\n      }\n    } else {\n      this.words[0] = 0;\n      this.length = 1;\n    }\n\n    var carry = 0;\n    for (i = this.length - 1; i >= 0 && (carry !== 0 || i >= h); i--) {\n      var word = this.words[i] | 0;\n      this.words[i] = (carry << (26 - r)) | (word >>> r);\n      carry = word & mask;\n    }\n\n    // Push carried bits as a mask\n    if (maskedWords && carry !== 0) {\n      maskedWords.words[maskedWords.length++] = carry;\n    }\n\n    if (this.length === 0) {\n      this.words[0] = 0;\n      this.length = 1;\n    }\n\n    return this.strip();\n  };\n\n  BN.prototype.ishrn = function ishrn (bits, hint, extended) {\n    // TODO(indutny): implement me\n    assert(this.negative === 0);\n    return this.iushrn(bits, hint, extended);\n  };\n\n  // Shift-left\n  BN.prototype.shln = function shln (bits) {\n    return this.clone().ishln(bits);\n  };\n\n  BN.prototype.ushln = function ushln (bits) {\n    return this.clone().iushln(bits);\n  };\n\n  // Shift-right\n  BN.prototype.shrn = function shrn (bits) {\n    return this.clone().ishrn(bits);\n  };\n\n  BN.prototype.ushrn = function ushrn (bits) {\n    return this.clone().iushrn(bits);\n  };\n\n  // Test if n bit is set\n  BN.prototype.testn = function testn (bit) {\n    assert(typeof bit === 'number' && bit >= 0);\n    var r = bit % 26;\n    var s = (bit - r) / 26;\n    var q = 1 << r;\n\n    // Fast case: bit is much higher than all existing words\n    if (this.length <= s) return false;\n\n    // Check bit and return\n    var w = this.words[s];\n\n    return !!(w & q);\n  };\n\n  // Return only lowers bits of number (in-place)\n  BN.prototype.imaskn = function imaskn (bits) {\n    assert(typeof bits === 'number' && bits >= 0);\n    var r = bits % 26;\n    var s = (bits - r) / 26;\n\n    assert(this.negative === 0, 'imaskn works only with positive numbers');\n\n    if (this.length <= s) {\n      return this;\n    }\n\n    if (r !== 0) {\n      s++;\n    }\n    this.length = Math.min(s, this.length);\n\n    if (r !== 0) {\n      var mask = 0x3ffffff ^ ((0x3ffffff >>> r) << r);\n      this.words[this.length - 1] &= mask;\n    }\n\n    return this.strip();\n  };\n\n  // Return only lowers bits of number\n  BN.prototype.maskn = function maskn (bits) {\n    return this.clone().imaskn(bits);\n  };\n\n  // Add plain number `num` to `this`\n  BN.prototype.iaddn = function iaddn (num) {\n    assert(typeof num === 'number');\n    assert(num < 0x4000000);\n    if (num < 0) return this.isubn(-num);\n\n    // Possible sign change\n    if (this.negative !== 0) {\n      if (this.length === 1 && (this.words[0] | 0) < num) {\n        this.words[0] = num - (this.words[0] | 0);\n        this.negative = 0;\n        return this;\n      }\n\n      this.negative = 0;\n      this.isubn(num);\n      this.negative = 1;\n      return this;\n    }\n\n    // Add without checks\n    return this._iaddn(num);\n  };\n\n  BN.prototype._iaddn = function _iaddn (num) {\n    this.words[0] += num;\n\n    // Carry\n    for (var i = 0; i < this.length && this.words[i] >= 0x4000000; i++) {\n      this.words[i] -= 0x4000000;\n      if (i === this.length - 1) {\n        this.words[i + 1] = 1;\n      } else {\n        this.words[i + 1]++;\n      }\n    }\n    this.length = Math.max(this.length, i + 1);\n\n    return this;\n  };\n\n  // Subtract plain number `num` from `this`\n  BN.prototype.isubn = function isubn (num) {\n    assert(typeof num === 'number');\n    assert(num < 0x4000000);\n    if (num < 0) return this.iaddn(-num);\n\n    if (this.negative !== 0) {\n      this.negative = 0;\n      this.iaddn(num);\n      this.negative = 1;\n      return this;\n    }\n\n    this.words[0] -= num;\n\n    if (this.length === 1 && this.words[0] < 0) {\n      this.words[0] = -this.words[0];\n      this.negative = 1;\n    } else {\n      // Carry\n      for (var i = 0; i < this.length && this.words[i] < 0; i++) {\n        this.words[i] += 0x4000000;\n        this.words[i + 1] -= 1;\n      }\n    }\n\n    return this.strip();\n  };\n\n  BN.prototype.addn = function addn (num) {\n    return this.clone().iaddn(num);\n  };\n\n  BN.prototype.subn = function subn (num) {\n    return this.clone().isubn(num);\n  };\n\n  BN.prototype.iabs = function iabs () {\n    this.negative = 0;\n\n    return this;\n  };\n\n  BN.prototype.abs = function abs () {\n    return this.clone().iabs();\n  };\n\n  BN.prototype._ishlnsubmul = function _ishlnsubmul (num, mul, shift) {\n    var len = num.length + shift;\n    var i;\n\n    this._expand(len);\n\n    var w;\n    var carry = 0;\n    for (i = 0; i < num.length; i++) {\n      w = (this.words[i + shift] | 0) + carry;\n      var right = (num.words[i] | 0) * mul;\n      w -= right & 0x3ffffff;\n      carry = (w >> 26) - ((right / 0x4000000) | 0);\n      this.words[i + shift] = w & 0x3ffffff;\n    }\n    for (; i < this.length - shift; i++) {\n      w = (this.words[i + shift] | 0) + carry;\n      carry = w >> 26;\n      this.words[i + shift] = w & 0x3ffffff;\n    }\n\n    if (carry === 0) return this.strip();\n\n    // Subtraction overflow\n    assert(carry === -1);\n    carry = 0;\n    for (i = 0; i < this.length; i++) {\n      w = -(this.words[i] | 0) + carry;\n      carry = w >> 26;\n      this.words[i] = w & 0x3ffffff;\n    }\n    this.negative = 1;\n\n    return this.strip();\n  };\n\n  BN.prototype._wordDiv = function _wordDiv (num, mode) {\n    var shift = this.length - num.length;\n\n    var a = this.clone();\n    var b = num;\n\n    // Normalize\n    var bhi = b.words[b.length - 1] | 0;\n    var bhiBits = this._countBits(bhi);\n    shift = 26 - bhiBits;\n    if (shift !== 0) {\n      b = b.ushln(shift);\n      a.iushln(shift);\n      bhi = b.words[b.length - 1] | 0;\n    }\n\n    // Initialize quotient\n    var m = a.length - b.length;\n    var q;\n\n    if (mode !== 'mod') {\n      q = new BN(null);\n      q.length = m + 1;\n      q.words = new Array(q.length);\n      for (var i = 0; i < q.length; i++) {\n        q.words[i] = 0;\n      }\n    }\n\n    var diff = a.clone()._ishlnsubmul(b, 1, m);\n    if (diff.negative === 0) {\n      a = diff;\n      if (q) {\n        q.words[m] = 1;\n      }\n    }\n\n    for (var j = m - 1; j >= 0; j--) {\n      var qj = (a.words[b.length + j] | 0) * 0x4000000 +\n        (a.words[b.length + j - 1] | 0);\n\n      // NOTE: (qj / bhi) is (0x3ffffff * 0x4000000 + 0x3ffffff) / 0x2000000 max\n      // (0x7ffffff)\n      qj = Math.min((qj / bhi) | 0, 0x3ffffff);\n\n      a._ishlnsubmul(b, qj, j);\n      while (a.negative !== 0) {\n        qj--;\n        a.negative = 0;\n        a._ishlnsubmul(b, 1, j);\n        if (!a.isZero()) {\n          a.negative ^= 1;\n        }\n      }\n      if (q) {\n        q.words[j] = qj;\n      }\n    }\n    if (q) {\n      q.strip();\n    }\n    a.strip();\n\n    // Denormalize\n    if (mode !== 'div' && shift !== 0) {\n      a.iushrn(shift);\n    }\n\n    return {\n      div: q || null,\n      mod: a\n    };\n  };\n\n  // NOTE: 1) `mode` can be set to `mod` to request mod only,\n  //       to `div` to request div only, or be absent to\n  //       request both div & mod\n  //       2) `positive` is true if unsigned mod is requested\n  BN.prototype.divmod = function divmod (num, mode, positive) {\n    assert(!num.isZero());\n\n    if (this.isZero()) {\n      return {\n        div: new BN(0),\n        mod: new BN(0)\n      };\n    }\n\n    var div, mod, res;\n    if (this.negative !== 0 && num.negative === 0) {\n      res = this.neg().divmod(num, mode);\n\n      if (mode !== 'mod') {\n        div = res.div.neg();\n      }\n\n      if (mode !== 'div') {\n        mod = res.mod.neg();\n        if (positive && mod.negative !== 0) {\n          mod.iadd(num);\n        }\n      }\n\n      return {\n        div: div,\n        mod: mod\n      };\n    }\n\n    if (this.negative === 0 && num.negative !== 0) {\n      res = this.divmod(num.neg(), mode);\n\n      if (mode !== 'mod') {\n        div = res.div.neg();\n      }\n\n      return {\n        div: div,\n        mod: res.mod\n      };\n    }\n\n    if ((this.negative & num.negative) !== 0) {\n      res = this.neg().divmod(num.neg(), mode);\n\n      if (mode !== 'div') {\n        mod = res.mod.neg();\n        if (positive && mod.negative !== 0) {\n          mod.isub(num);\n        }\n      }\n\n      return {\n        div: res.div,\n        mod: mod\n      };\n    }\n\n    // Both numbers are positive at this point\n\n    // Strip both numbers to approximate shift value\n    if (num.length > this.length || this.cmp(num) < 0) {\n      return {\n        div: new BN(0),\n        mod: this\n      };\n    }\n\n    // Very short reduction\n    if (num.length === 1) {\n      if (mode === 'div') {\n        return {\n          div: this.divn(num.words[0]),\n          mod: null\n        };\n      }\n\n      if (mode === 'mod') {\n        return {\n          div: null,\n          mod: new BN(this.modn(num.words[0]))\n        };\n      }\n\n      return {\n        div: this.divn(num.words[0]),\n        mod: new BN(this.modn(num.words[0]))\n      };\n    }\n\n    return this._wordDiv(num, mode);\n  };\n\n  // Find `this` / `num`\n  BN.prototype.div = function div (num) {\n    return this.divmod(num, 'div', false).div;\n  };\n\n  // Find `this` % `num`\n  BN.prototype.mod = function mod (num) {\n    return this.divmod(num, 'mod', false).mod;\n  };\n\n  BN.prototype.umod = function umod (num) {\n    return this.divmod(num, 'mod', true).mod;\n  };\n\n  // Find Round(`this` / `num`)\n  BN.prototype.divRound = function divRound (num) {\n    var dm = this.divmod(num);\n\n    // Fast case - exact division\n    if (dm.mod.isZero()) return dm.div;\n\n    var mod = dm.div.negative !== 0 ? dm.mod.isub(num) : dm.mod;\n\n    var half = num.ushrn(1);\n    var r2 = num.andln(1);\n    var cmp = mod.cmp(half);\n\n    // Round down\n    if (cmp < 0 || r2 === 1 && cmp === 0) return dm.div;\n\n    // Round up\n    return dm.div.negative !== 0 ? dm.div.isubn(1) : dm.div.iaddn(1);\n  };\n\n  BN.prototype.modn = function modn (num) {\n    assert(num <= 0x3ffffff);\n    var p = (1 << 26) % num;\n\n    var acc = 0;\n    for (var i = this.length - 1; i >= 0; i--) {\n      acc = (p * acc + (this.words[i] | 0)) % num;\n    }\n\n    return acc;\n  };\n\n  // In-place division by number\n  BN.prototype.idivn = function idivn (num) {\n    assert(num <= 0x3ffffff);\n\n    var carry = 0;\n    for (var i = this.length - 1; i >= 0; i--) {\n      var w = (this.words[i] | 0) + carry * 0x4000000;\n      this.words[i] = (w / num) | 0;\n      carry = w % num;\n    }\n\n    return this.strip();\n  };\n\n  BN.prototype.divn = function divn (num) {\n    return this.clone().idivn(num);\n  };\n\n  BN.prototype.egcd = function egcd (p) {\n    assert(p.negative === 0);\n    assert(!p.isZero());\n\n    var x = this;\n    var y = p.clone();\n\n    if (x.negative !== 0) {\n      x = x.umod(p);\n    } else {\n      x = x.clone();\n    }\n\n    // A * x + B * y = x\n    var A = new BN(1);\n    var B = new BN(0);\n\n    // C * x + D * y = y\n    var C = new BN(0);\n    var D = new BN(1);\n\n    var g = 0;\n\n    while (x.isEven() && y.isEven()) {\n      x.iushrn(1);\n      y.iushrn(1);\n      ++g;\n    }\n\n    var yp = y.clone();\n    var xp = x.clone();\n\n    while (!x.isZero()) {\n      for (var i = 0, im = 1; (x.words[0] & im) === 0 && i < 26; ++i, im <<= 1);\n      if (i > 0) {\n        x.iushrn(i);\n        while (i-- > 0) {\n          if (A.isOdd() || B.isOdd()) {\n            A.iadd(yp);\n            B.isub(xp);\n          }\n\n          A.iushrn(1);\n          B.iushrn(1);\n        }\n      }\n\n      for (var j = 0, jm = 1; (y.words[0] & jm) === 0 && j < 26; ++j, jm <<= 1);\n      if (j > 0) {\n        y.iushrn(j);\n        while (j-- > 0) {\n          if (C.isOdd() || D.isOdd()) {\n            C.iadd(yp);\n            D.isub(xp);\n          }\n\n          C.iushrn(1);\n          D.iushrn(1);\n        }\n      }\n\n      if (x.cmp(y) >= 0) {\n        x.isub(y);\n        A.isub(C);\n        B.isub(D);\n      } else {\n        y.isub(x);\n        C.isub(A);\n        D.isub(B);\n      }\n    }\n\n    return {\n      a: C,\n      b: D,\n      gcd: y.iushln(g)\n    };\n  };\n\n  // This is reduced incarnation of the binary EEA\n  // above, designated to invert members of the\n  // _prime_ fields F(p) at a maximal speed\n  BN.prototype._invmp = function _invmp (p) {\n    assert(p.negative === 0);\n    assert(!p.isZero());\n\n    var a = this;\n    var b = p.clone();\n\n    if (a.negative !== 0) {\n      a = a.umod(p);\n    } else {\n      a = a.clone();\n    }\n\n    var x1 = new BN(1);\n    var x2 = new BN(0);\n\n    var delta = b.clone();\n\n    while (a.cmpn(1) > 0 && b.cmpn(1) > 0) {\n      for (var i = 0, im = 1; (a.words[0] & im) === 0 && i < 26; ++i, im <<= 1);\n      if (i > 0) {\n        a.iushrn(i);\n        while (i-- > 0) {\n          if (x1.isOdd()) {\n            x1.iadd(delta);\n          }\n\n          x1.iushrn(1);\n        }\n      }\n\n      for (var j = 0, jm = 1; (b.words[0] & jm) === 0 && j < 26; ++j, jm <<= 1);\n      if (j > 0) {\n        b.iushrn(j);\n        while (j-- > 0) {\n          if (x2.isOdd()) {\n            x2.iadd(delta);\n          }\n\n          x2.iushrn(1);\n        }\n      }\n\n      if (a.cmp(b) >= 0) {\n        a.isub(b);\n        x1.isub(x2);\n      } else {\n        b.isub(a);\n        x2.isub(x1);\n      }\n    }\n\n    var res;\n    if (a.cmpn(1) === 0) {\n      res = x1;\n    } else {\n      res = x2;\n    }\n\n    if (res.cmpn(0) < 0) {\n      res.iadd(p);\n    }\n\n    return res;\n  };\n\n  BN.prototype.gcd = function gcd (num) {\n    if (this.isZero()) return num.abs();\n    if (num.isZero()) return this.abs();\n\n    var a = this.clone();\n    var b = num.clone();\n    a.negative = 0;\n    b.negative = 0;\n\n    // Remove common factor of two\n    for (var shift = 0; a.isEven() && b.isEven(); shift++) {\n      a.iushrn(1);\n      b.iushrn(1);\n    }\n\n    do {\n      while (a.isEven()) {\n        a.iushrn(1);\n      }\n      while (b.isEven()) {\n        b.iushrn(1);\n      }\n\n      var r = a.cmp(b);\n      if (r < 0) {\n        // Swap `a` and `b` to make `a` always bigger than `b`\n        var t = a;\n        a = b;\n        b = t;\n      } else if (r === 0 || b.cmpn(1) === 0) {\n        break;\n      }\n\n      a.isub(b);\n    } while (true);\n\n    return b.iushln(shift);\n  };\n\n  // Invert number in the field F(num)\n  BN.prototype.invm = function invm (num) {\n    return this.egcd(num).a.umod(num);\n  };\n\n  BN.prototype.isEven = function isEven () {\n    return (this.words[0] & 1) === 0;\n  };\n\n  BN.prototype.isOdd = function isOdd () {\n    return (this.words[0] & 1) === 1;\n  };\n\n  // And first word and num\n  BN.prototype.andln = function andln (num) {\n    return this.words[0] & num;\n  };\n\n  // Increment at the bit position in-line\n  BN.prototype.bincn = function bincn (bit) {\n    assert(typeof bit === 'number');\n    var r = bit % 26;\n    var s = (bit - r) / 26;\n    var q = 1 << r;\n\n    // Fast case: bit is much higher than all existing words\n    if (this.length <= s) {\n      this._expand(s + 1);\n      this.words[s] |= q;\n      return this;\n    }\n\n    // Add bit and propagate, if needed\n    var carry = q;\n    for (var i = s; carry !== 0 && i < this.length; i++) {\n      var w = this.words[i] | 0;\n      w += carry;\n      carry = w >>> 26;\n      w &= 0x3ffffff;\n      this.words[i] = w;\n    }\n    if (carry !== 0) {\n      this.words[i] = carry;\n      this.length++;\n    }\n    return this;\n  };\n\n  BN.prototype.isZero = function isZero () {\n    return this.length === 1 && this.words[0] === 0;\n  };\n\n  BN.prototype.cmpn = function cmpn (num) {\n    var negative = num < 0;\n\n    if (this.negative !== 0 && !negative) return -1;\n    if (this.negative === 0 && negative) return 1;\n\n    this.strip();\n\n    var res;\n    if (this.length > 1) {\n      res = 1;\n    } else {\n      if (negative) {\n        num = -num;\n      }\n\n      assert(num <= 0x3ffffff, 'Number is too big');\n\n      var w = this.words[0] | 0;\n      res = w === num ? 0 : w < num ? -1 : 1;\n    }\n    if (this.negative !== 0) return -res | 0;\n    return res;\n  };\n\n  // Compare two numbers and return:\n  // 1 - if `this` > `num`\n  // 0 - if `this` == `num`\n  // -1 - if `this` < `num`\n  BN.prototype.cmp = function cmp (num) {\n    if (this.negative !== 0 && num.negative === 0) return -1;\n    if (this.negative === 0 && num.negative !== 0) return 1;\n\n    var res = this.ucmp(num);\n    if (this.negative !== 0) return -res | 0;\n    return res;\n  };\n\n  // Unsigned comparison\n  BN.prototype.ucmp = function ucmp (num) {\n    // At this point both numbers have the same sign\n    if (this.length > num.length) return 1;\n    if (this.length < num.length) return -1;\n\n    var res = 0;\n    for (var i = this.length - 1; i >= 0; i--) {\n      var a = this.words[i] | 0;\n      var b = num.words[i] | 0;\n\n      if (a === b) continue;\n      if (a < b) {\n        res = -1;\n      } else if (a > b) {\n        res = 1;\n      }\n      break;\n    }\n    return res;\n  };\n\n  BN.prototype.gtn = function gtn (num) {\n    return this.cmpn(num) === 1;\n  };\n\n  BN.prototype.gt = function gt (num) {\n    return this.cmp(num) === 1;\n  };\n\n  BN.prototype.gten = function gten (num) {\n    return this.cmpn(num) >= 0;\n  };\n\n  BN.prototype.gte = function gte (num) {\n    return this.cmp(num) >= 0;\n  };\n\n  BN.prototype.ltn = function ltn (num) {\n    return this.cmpn(num) === -1;\n  };\n\n  BN.prototype.lt = function lt (num) {\n    return this.cmp(num) === -1;\n  };\n\n  BN.prototype.lten = function lten (num) {\n    return this.cmpn(num) <= 0;\n  };\n\n  BN.prototype.lte = function lte (num) {\n    return this.cmp(num) <= 0;\n  };\n\n  BN.prototype.eqn = function eqn (num) {\n    return this.cmpn(num) === 0;\n  };\n\n  BN.prototype.eq = function eq (num) {\n    return this.cmp(num) === 0;\n  };\n\n  //\n  // A reduce context, could be using montgomery or something better, depending\n  // on the `m` itself.\n  //\n  BN.red = function red (num) {\n    return new Red(num);\n  };\n\n  BN.prototype.toRed = function toRed (ctx) {\n    assert(!this.red, 'Already a number in reduction context');\n    assert(this.negative === 0, 'red works only with positives');\n    return ctx.convertTo(this)._forceRed(ctx);\n  };\n\n  BN.prototype.fromRed = function fromRed () {\n    assert(this.red, 'fromRed works only with numbers in reduction context');\n    return this.red.convertFrom(this);\n  };\n\n  BN.prototype._forceRed = function _forceRed (ctx) {\n    this.red = ctx;\n    return this;\n  };\n\n  BN.prototype.forceRed = function forceRed (ctx) {\n    assert(!this.red, 'Already a number in reduction context');\n    return this._forceRed(ctx);\n  };\n\n  BN.prototype.redAdd = function redAdd (num) {\n    assert(this.red, 'redAdd works only with red numbers');\n    return this.red.add(this, num);\n  };\n\n  BN.prototype.redIAdd = function redIAdd (num) {\n    assert(this.red, 'redIAdd works only with red numbers');\n    return this.red.iadd(this, num);\n  };\n\n  BN.prototype.redSub = function redSub (num) {\n    assert(this.red, 'redSub works only with red numbers');\n    return this.red.sub(this, num);\n  };\n\n  BN.prototype.redISub = function redISub (num) {\n    assert(this.red, 'redISub works only with red numbers');\n    return this.red.isub(this, num);\n  };\n\n  BN.prototype.redShl = function redShl (num) {\n    assert(this.red, 'redShl works only with red numbers');\n    return this.red.shl(this, num);\n  };\n\n  BN.prototype.redMul = function redMul (num) {\n    assert(this.red, 'redMul works only with red numbers');\n    this.red._verify2(this, num);\n    return this.red.mul(this, num);\n  };\n\n  BN.prototype.redIMul = function redIMul (num) {\n    assert(this.red, 'redMul works only with red numbers');\n    this.red._verify2(this, num);\n    return this.red.imul(this, num);\n  };\n\n  BN.prototype.redSqr = function redSqr () {\n    assert(this.red, 'redSqr works only with red numbers');\n    this.red._verify1(this);\n    return this.red.sqr(this);\n  };\n\n  BN.prototype.redISqr = function redISqr () {\n    assert(this.red, 'redISqr works only with red numbers');\n    this.red._verify1(this);\n    return this.red.isqr(this);\n  };\n\n  // Square root over p\n  BN.prototype.redSqrt = function redSqrt () {\n    assert(this.red, 'redSqrt works only with red numbers');\n    this.red._verify1(this);\n    return this.red.sqrt(this);\n  };\n\n  BN.prototype.redInvm = function redInvm () {\n    assert(this.red, 'redInvm works only with red numbers');\n    this.red._verify1(this);\n    return this.red.invm(this);\n  };\n\n  // Return negative clone of `this` % `red modulo`\n  BN.prototype.redNeg = function redNeg () {\n    assert(this.red, 'redNeg works only with red numbers');\n    this.red._verify1(this);\n    return this.red.neg(this);\n  };\n\n  BN.prototype.redPow = function redPow (num) {\n    assert(this.red && !num.red, 'redPow(normalNum)');\n    this.red._verify1(this);\n    return this.red.pow(this, num);\n  };\n\n  // Prime numbers with efficient reduction\n  var primes = {\n    k256: null,\n    p224: null,\n    p192: null,\n    p25519: null\n  };\n\n  // Pseudo-Mersenne prime\n  function MPrime (name, p) {\n    // P = 2 ^ N - K\n    this.name = name;\n    this.p = new BN(p, 16);\n    this.n = this.p.bitLength();\n    this.k = new BN(1).iushln(this.n).isub(this.p);\n\n    this.tmp = this._tmp();\n  }\n\n  MPrime.prototype._tmp = function _tmp () {\n    var tmp = new BN(null);\n    tmp.words = new Array(Math.ceil(this.n / 13));\n    return tmp;\n  };\n\n  MPrime.prototype.ireduce = function ireduce (num) {\n    // Assumes that `num` is less than `P^2`\n    // num = HI * (2 ^ N - K) + HI * K + LO = HI * K + LO (mod P)\n    var r = num;\n    var rlen;\n\n    do {\n      this.split(r, this.tmp);\n      r = this.imulK(r);\n      r = r.iadd(this.tmp);\n      rlen = r.bitLength();\n    } while (rlen > this.n);\n\n    var cmp = rlen < this.n ? -1 : r.ucmp(this.p);\n    if (cmp === 0) {\n      r.words[0] = 0;\n      r.length = 1;\n    } else if (cmp > 0) {\n      r.isub(this.p);\n    } else {\n      if (r.strip !== undefined) {\n        // r is BN v4 instance\n        r.strip();\n      } else {\n        // r is BN v5 instance\n        r._strip();\n      }\n    }\n\n    return r;\n  };\n\n  MPrime.prototype.split = function split (input, out) {\n    input.iushrn(this.n, 0, out);\n  };\n\n  MPrime.prototype.imulK = function imulK (num) {\n    return num.imul(this.k);\n  };\n\n  function K256 () {\n    MPrime.call(\n      this,\n      'k256',\n      'ffffffff ffffffff ffffffff ffffffff ffffffff ffffffff fffffffe fffffc2f');\n  }\n  inherits(K256, MPrime);\n\n  K256.prototype.split = function split (input, output) {\n    // 256 = 9 * 26 + 22\n    var mask = 0x3fffff;\n\n    var outLen = Math.min(input.length, 9);\n    for (var i = 0; i < outLen; i++) {\n      output.words[i] = input.words[i];\n    }\n    output.length = outLen;\n\n    if (input.length <= 9) {\n      input.words[0] = 0;\n      input.length = 1;\n      return;\n    }\n\n    // Shift by 9 limbs\n    var prev = input.words[9];\n    output.words[output.length++] = prev & mask;\n\n    for (i = 10; i < input.length; i++) {\n      var next = input.words[i] | 0;\n      input.words[i - 10] = ((next & mask) << 4) | (prev >>> 22);\n      prev = next;\n    }\n    prev >>>= 22;\n    input.words[i - 10] = prev;\n    if (prev === 0 && input.length > 10) {\n      input.length -= 10;\n    } else {\n      input.length -= 9;\n    }\n  };\n\n  K256.prototype.imulK = function imulK (num) {\n    // K = 0x1000003d1 = [ 0x40, 0x3d1 ]\n    num.words[num.length] = 0;\n    num.words[num.length + 1] = 0;\n    num.length += 2;\n\n    // bounded at: 0x40 * 0x3ffffff + 0x3d0 = 0x100000390\n    var lo = 0;\n    for (var i = 0; i < num.length; i++) {\n      var w = num.words[i] | 0;\n      lo += w * 0x3d1;\n      num.words[i] = lo & 0x3ffffff;\n      lo = w * 0x40 + ((lo / 0x4000000) | 0);\n    }\n\n    // Fast length reduction\n    if (num.words[num.length - 1] === 0) {\n      num.length--;\n      if (num.words[num.length - 1] === 0) {\n        num.length--;\n      }\n    }\n    return num;\n  };\n\n  function P224 () {\n    MPrime.call(\n      this,\n      'p224',\n      'ffffffff ffffffff ffffffff ffffffff 00000000 00000000 00000001');\n  }\n  inherits(P224, MPrime);\n\n  function P192 () {\n    MPrime.call(\n      this,\n      'p192',\n      'ffffffff ffffffff ffffffff fffffffe ffffffff ffffffff');\n  }\n  inherits(P192, MPrime);\n\n  function P25519 () {\n    // 2 ^ 255 - 19\n    MPrime.call(\n      this,\n      '25519',\n      '7fffffffffffffff ffffffffffffffff ffffffffffffffff ffffffffffffffed');\n  }\n  inherits(P25519, MPrime);\n\n  P25519.prototype.imulK = function imulK (num) {\n    // K = 0x13\n    var carry = 0;\n    for (var i = 0; i < num.length; i++) {\n      var hi = (num.words[i] | 0) * 0x13 + carry;\n      var lo = hi & 0x3ffffff;\n      hi >>>= 26;\n\n      num.words[i] = lo;\n      carry = hi;\n    }\n    if (carry !== 0) {\n      num.words[num.length++] = carry;\n    }\n    return num;\n  };\n\n  // Exported mostly for testing purposes, use plain name instead\n  BN._prime = function prime (name) {\n    // Cached version of prime\n    if (primes[name]) return primes[name];\n\n    var prime;\n    if (name === 'k256') {\n      prime = new K256();\n    } else if (name === 'p224') {\n      prime = new P224();\n    } else if (name === 'p192') {\n      prime = new P192();\n    } else if (name === 'p25519') {\n      prime = new P25519();\n    } else {\n      throw new Error('Unknown prime ' + name);\n    }\n    primes[name] = prime;\n\n    return prime;\n  };\n\n  //\n  // Base reduction engine\n  //\n  function Red (m) {\n    if (typeof m === 'string') {\n      var prime = BN._prime(m);\n      this.m = prime.p;\n      this.prime = prime;\n    } else {\n      assert(m.gtn(1), 'modulus must be greater than 1');\n      this.m = m;\n      this.prime = null;\n    }\n  }\n\n  Red.prototype._verify1 = function _verify1 (a) {\n    assert(a.negative === 0, 'red works only with positives');\n    assert(a.red, 'red works only with red numbers');\n  };\n\n  Red.prototype._verify2 = function _verify2 (a, b) {\n    assert((a.negative | b.negative) === 0, 'red works only with positives');\n    assert(a.red && a.red === b.red,\n      'red works only with red numbers');\n  };\n\n  Red.prototype.imod = function imod (a) {\n    if (this.prime) return this.prime.ireduce(a)._forceRed(this);\n    return a.umod(this.m)._forceRed(this);\n  };\n\n  Red.prototype.neg = function neg (a) {\n    if (a.isZero()) {\n      return a.clone();\n    }\n\n    return this.m.sub(a)._forceRed(this);\n  };\n\n  Red.prototype.add = function add (a, b) {\n    this._verify2(a, b);\n\n    var res = a.add(b);\n    if (res.cmp(this.m) >= 0) {\n      res.isub(this.m);\n    }\n    return res._forceRed(this);\n  };\n\n  Red.prototype.iadd = function iadd (a, b) {\n    this._verify2(a, b);\n\n    var res = a.iadd(b);\n    if (res.cmp(this.m) >= 0) {\n      res.isub(this.m);\n    }\n    return res;\n  };\n\n  Red.prototype.sub = function sub (a, b) {\n    this._verify2(a, b);\n\n    var res = a.sub(b);\n    if (res.cmpn(0) < 0) {\n      res.iadd(this.m);\n    }\n    return res._forceRed(this);\n  };\n\n  Red.prototype.isub = function isub (a, b) {\n    this._verify2(a, b);\n\n    var res = a.isub(b);\n    if (res.cmpn(0) < 0) {\n      res.iadd(this.m);\n    }\n    return res;\n  };\n\n  Red.prototype.shl = function shl (a, num) {\n    this._verify1(a);\n    return this.imod(a.ushln(num));\n  };\n\n  Red.prototype.imul = function imul (a, b) {\n    this._verify2(a, b);\n    return this.imod(a.imul(b));\n  };\n\n  Red.prototype.mul = function mul (a, b) {\n    this._verify2(a, b);\n    return this.imod(a.mul(b));\n  };\n\n  Red.prototype.isqr = function isqr (a) {\n    return this.imul(a, a.clone());\n  };\n\n  Red.prototype.sqr = function sqr (a) {\n    return this.mul(a, a);\n  };\n\n  Red.prototype.sqrt = function sqrt (a) {\n    if (a.isZero()) return a.clone();\n\n    var mod3 = this.m.andln(3);\n    assert(mod3 % 2 === 1);\n\n    // Fast case\n    if (mod3 === 3) {\n      var pow = this.m.add(new BN(1)).iushrn(2);\n      return this.pow(a, pow);\n    }\n\n    // Tonelli-Shanks algorithm (Totally unoptimized and slow)\n    //\n    // Find Q and S, that Q * 2 ^ S = (P - 1)\n    var q = this.m.subn(1);\n    var s = 0;\n    while (!q.isZero() && q.andln(1) === 0) {\n      s++;\n      q.iushrn(1);\n    }\n    assert(!q.isZero());\n\n    var one = new BN(1).toRed(this);\n    var nOne = one.redNeg();\n\n    // Find quadratic non-residue\n    // NOTE: Max is such because of generalized Riemann hypothesis.\n    var lpow = this.m.subn(1).iushrn(1);\n    var z = this.m.bitLength();\n    z = new BN(2 * z * z).toRed(this);\n\n    while (this.pow(z, lpow).cmp(nOne) !== 0) {\n      z.redIAdd(nOne);\n    }\n\n    var c = this.pow(z, q);\n    var r = this.pow(a, q.addn(1).iushrn(1));\n    var t = this.pow(a, q);\n    var m = s;\n    while (t.cmp(one) !== 0) {\n      var tmp = t;\n      for (var i = 0; tmp.cmp(one) !== 0; i++) {\n        tmp = tmp.redSqr();\n      }\n      assert(i < m);\n      var b = this.pow(c, new BN(1).iushln(m - i - 1));\n\n      r = r.redMul(b);\n      c = b.redSqr();\n      t = t.redMul(c);\n      m = i;\n    }\n\n    return r;\n  };\n\n  Red.prototype.invm = function invm (a) {\n    var inv = a._invmp(this.m);\n    if (inv.negative !== 0) {\n      inv.negative = 0;\n      return this.imod(inv).redNeg();\n    } else {\n      return this.imod(inv);\n    }\n  };\n\n  Red.prototype.pow = function pow (a, num) {\n    if (num.isZero()) return new BN(1).toRed(this);\n    if (num.cmpn(1) === 0) return a.clone();\n\n    var windowSize = 4;\n    var wnd = new Array(1 << windowSize);\n    wnd[0] = new BN(1).toRed(this);\n    wnd[1] = a;\n    for (var i = 2; i < wnd.length; i++) {\n      wnd[i] = this.mul(wnd[i - 1], a);\n    }\n\n    var res = wnd[0];\n    var current = 0;\n    var currentLen = 0;\n    var start = num.bitLength() % 26;\n    if (start === 0) {\n      start = 26;\n    }\n\n    for (i = num.length - 1; i >= 0; i--) {\n      var word = num.words[i];\n      for (var j = start - 1; j >= 0; j--) {\n        var bit = (word >> j) & 1;\n        if (res !== wnd[0]) {\n          res = this.sqr(res);\n        }\n\n        if (bit === 0 && current === 0) {\n          currentLen = 0;\n          continue;\n        }\n\n        current <<= 1;\n        current |= bit;\n        currentLen++;\n        if (currentLen !== windowSize && (i !== 0 || j !== 0)) continue;\n\n        res = this.mul(res, wnd[current]);\n        currentLen = 0;\n        current = 0;\n      }\n      start = 26;\n    }\n\n    return res;\n  };\n\n  Red.prototype.convertTo = function convertTo (num) {\n    var r = num.umod(this.m);\n\n    return r === num ? r.clone() : r;\n  };\n\n  Red.prototype.convertFrom = function convertFrom (num) {\n    var res = num.clone();\n    res.red = null;\n    return res;\n  };\n\n  //\n  // Montgomery method engine\n  //\n\n  BN.mont = function mont (num) {\n    return new Mont(num);\n  };\n\n  function Mont (m) {\n    Red.call(this, m);\n\n    this.shift = this.m.bitLength();\n    if (this.shift % 26 !== 0) {\n      this.shift += 26 - (this.shift % 26);\n    }\n\n    this.r = new BN(1).iushln(this.shift);\n    this.r2 = this.imod(this.r.sqr());\n    this.rinv = this.r._invmp(this.m);\n\n    this.minv = this.rinv.mul(this.r).isubn(1).div(this.m);\n    this.minv = this.minv.umod(this.r);\n    this.minv = this.r.sub(this.minv);\n  }\n  inherits(Mont, Red);\n\n  Mont.prototype.convertTo = function convertTo (num) {\n    return this.imod(num.ushln(this.shift));\n  };\n\n  Mont.prototype.convertFrom = function convertFrom (num) {\n    var r = this.imod(num.mul(this.rinv));\n    r.red = null;\n    return r;\n  };\n\n  Mont.prototype.imul = function imul (a, b) {\n    if (a.isZero() || b.isZero()) {\n      a.words[0] = 0;\n      a.length = 1;\n      return a;\n    }\n\n    var t = a.imul(b);\n    var c = t.maskn(this.shift).mul(this.minv).imaskn(this.shift).mul(this.m);\n    var u = t.isub(c).iushrn(this.shift);\n    var res = u;\n\n    if (u.cmp(this.m) >= 0) {\n      res = u.isub(this.m);\n    } else if (u.cmpn(0) < 0) {\n      res = u.iadd(this.m);\n    }\n\n    return res._forceRed(this);\n  };\n\n  Mont.prototype.mul = function mul (a, b) {\n    if (a.isZero() || b.isZero()) return new BN(0)._forceRed(this);\n\n    var t = a.mul(b);\n    var c = t.maskn(this.shift).mul(this.minv).imaskn(this.shift).mul(this.m);\n    var u = t.isub(c).iushrn(this.shift);\n    var res = u;\n    if (u.cmp(this.m) >= 0) {\n      res = u.isub(this.m);\n    } else if (u.cmpn(0) < 0) {\n      res = u.iadd(this.m);\n    }\n\n    return res._forceRed(this);\n  };\n\n  Mont.prototype.invm = function invm (a) {\n    // (AR)^-1 * R^2 = (A^-1 * R^-1) * R^2 = A^-1 * R\n    var res = this.imod(a._invmp(this.m).mul(this.r2));\n    return res._forceRed(this);\n  };\n})(typeof module === 'undefined' || module, this);\n", "module.exports = assert;\n\nfunction assert(val, msg) {\n  if (!val)\n    throw new Error(msg || 'Assertion failed');\n}\n\nassert.equal = function assertEqual(l, r, msg) {\n  if (l != r)\n    throw new Error(msg || ('Assertion failed: ' + l + ' != ' + r));\n};\n", "'use strict';\n\nvar utils = exports;\n\nfunction toArray(msg, enc) {\n  if (Array.isArray(msg))\n    return msg.slice();\n  if (!msg)\n    return [];\n  var res = [];\n  if (typeof msg !== 'string') {\n    for (var i = 0; i < msg.length; i++)\n      res[i] = msg[i] | 0;\n    return res;\n  }\n  if (enc === 'hex') {\n    msg = msg.replace(/[^a-z0-9]+/ig, '');\n    if (msg.length % 2 !== 0)\n      msg = '0' + msg;\n    for (var i = 0; i < msg.length; i += 2)\n      res.push(parseInt(msg[i] + msg[i + 1], 16));\n  } else {\n    for (var i = 0; i < msg.length; i++) {\n      var c = msg.charCodeAt(i);\n      var hi = c >> 8;\n      var lo = c & 0xff;\n      if (hi)\n        res.push(hi, lo);\n      else\n        res.push(lo);\n    }\n  }\n  return res;\n}\nutils.toArray = toArray;\n\nfunction zero2(word) {\n  if (word.length === 1)\n    return '0' + word;\n  else\n    return word;\n}\nutils.zero2 = zero2;\n\nfunction toHex(msg) {\n  var res = '';\n  for (var i = 0; i < msg.length; i++)\n    res += zero2(msg[i].toString(16));\n  return res;\n}\nutils.toHex = toHex;\n\nutils.encode = function encode(arr, enc) {\n  if (enc === 'hex')\n    return toHex(arr);\n  else\n    return arr;\n};\n", "'use strict';\n\nvar utils = exports;\nvar BN = require('bn.js');\nvar minAssert = require('minimalistic-assert');\nvar minUtils = require('minimalistic-crypto-utils');\n\nutils.assert = minAssert;\nutils.toArray = minUtils.toArray;\nutils.zero2 = minUtils.zero2;\nutils.toHex = minUtils.toHex;\nutils.encode = minUtils.encode;\n\n// Represent num in a w-NAF form\nfunction getNAF(num, w, bits) {\n  var naf = new Array(Math.max(num.bitLength(), bits) + 1);\n  naf.fill(0);\n\n  var ws = 1 << (w + 1);\n  var k = num.clone();\n\n  for (var i = 0; i < naf.length; i++) {\n    var z;\n    var mod = k.andln(ws - 1);\n    if (k.isOdd()) {\n      if (mod > (ws >> 1) - 1)\n        z = (ws >> 1) - mod;\n      else\n        z = mod;\n      k.isubn(z);\n    } else {\n      z = 0;\n    }\n\n    naf[i] = z;\n    k.iushrn(1);\n  }\n\n  return naf;\n}\nutils.getNAF = getNAF;\n\n// Represent k1, k2 in a Joint Sparse Form\nfunction getJSF(k1, k2) {\n  var jsf = [\n    [],\n    [],\n  ];\n\n  k1 = k1.clone();\n  k2 = k2.clone();\n  var d1 = 0;\n  var d2 = 0;\n  var m8;\n  while (k1.cmpn(-d1) > 0 || k2.cmpn(-d2) > 0) {\n    // First phase\n    var m14 = (k1.andln(3) + d1) & 3;\n    var m24 = (k2.andln(3) + d2) & 3;\n    if (m14 === 3)\n      m14 = -1;\n    if (m24 === 3)\n      m24 = -1;\n    var u1;\n    if ((m14 & 1) === 0) {\n      u1 = 0;\n    } else {\n      m8 = (k1.andln(7) + d1) & 7;\n      if ((m8 === 3 || m8 === 5) && m24 === 2)\n        u1 = -m14;\n      else\n        u1 = m14;\n    }\n    jsf[0].push(u1);\n\n    var u2;\n    if ((m24 & 1) === 0) {\n      u2 = 0;\n    } else {\n      m8 = (k2.andln(7) + d2) & 7;\n      if ((m8 === 3 || m8 === 5) && m14 === 2)\n        u2 = -m24;\n      else\n        u2 = m24;\n    }\n    jsf[1].push(u2);\n\n    // Second phase\n    if (2 * d1 === u1 + 1)\n      d1 = 1 - d1;\n    if (2 * d2 === u2 + 1)\n      d2 = 1 - d2;\n    k1.iushrn(1);\n    k2.iushrn(1);\n  }\n\n  return jsf;\n}\nutils.getJSF = getJSF;\n\nfunction cachedProperty(obj, name, computer) {\n  var key = '_' + name;\n  obj.prototype[name] = function cachedProperty() {\n    return this[key] !== undefined ? this[key] :\n      this[key] = computer.call(this);\n  };\n}\nutils.cachedProperty = cachedProperty;\n\nfunction parseBytes(bytes) {\n  return typeof bytes === 'string' ? utils.toArray(bytes, 'hex') :\n    bytes;\n}\nutils.parseBytes = parseBytes;\n\nfunction intFromLE(bytes) {\n  return new BN(bytes, 'hex', 'le');\n}\nutils.intFromLE = intFromLE;\n\n", "var r;\n\nmodule.exports = function rand(len) {\n  if (!r)\n    r = new Rand(null);\n\n  return r.generate(len);\n};\n\nfunction Rand(rand) {\n  this.rand = rand;\n}\nmodule.exports.Rand = Rand;\n\nRand.prototype.generate = function generate(len) {\n  return this._rand(len);\n};\n\n// Emulate crypto API using randy\nRand.prototype._rand = function _rand(n) {\n  if (this.rand.getBytes)\n    return this.rand.getBytes(n);\n\n  var res = new Uint8Array(n);\n  for (var i = 0; i < res.length; i++)\n    res[i] = this.rand.getByte();\n  return res;\n};\n\nif (typeof self === 'object') {\n  if (self.crypto && self.crypto.getRandomValues) {\n    // Modern browsers\n    Rand.prototype._rand = function _rand(n) {\n      var arr = new Uint8Array(n);\n      self.crypto.getRandomValues(arr);\n      return arr;\n    };\n  } else if (self.msCrypto && self.msCrypto.getRandomValues) {\n    // IE\n    Rand.prototype._rand = function _rand(n) {\n      var arr = new Uint8Array(n);\n      self.msCrypto.getRandomValues(arr);\n      return arr;\n    };\n\n  // Safari's WebWorkers do not have `crypto`\n  } else if (typeof window === 'object') {\n    // Old junk\n    Rand.prototype._rand = function() {\n      throw new Error('Not implemented yet');\n    };\n  }\n} else {\n  // Node.js or Web worker with no crypto support\n  try {\n    var crypto = require('crypto');\n    if (typeof crypto.randomBytes !== 'function')\n      throw new Error('Not supported');\n\n    Rand.prototype._rand = function _rand(n) {\n      return crypto.randomBytes(n);\n    };\n  } catch (e) {\n  }\n}\n", "'use strict';\n\nvar BN = require('bn.js');\nvar utils = require('../utils');\nvar getNAF = utils.getNAF;\nvar getJSF = utils.getJSF;\nvar assert = utils.assert;\n\nfunction BaseCurve(type, conf) {\n  this.type = type;\n  this.p = new BN(conf.p, 16);\n\n  // Use Montgomery, when there is no fast reduction for the prime\n  this.red = conf.prime ? BN.red(conf.prime) : BN.mont(this.p);\n\n  // Useful for many curves\n  this.zero = new BN(0).toRed(this.red);\n  this.one = new BN(1).toRed(this.red);\n  this.two = new BN(2).toRed(this.red);\n\n  // Curve configuration, optional\n  this.n = conf.n && new BN(conf.n, 16);\n  this.g = conf.g && this.pointFromJSON(conf.g, conf.gRed);\n\n  // Temporary arrays\n  this._wnafT1 = new Array(4);\n  this._wnafT2 = new Array(4);\n  this._wnafT3 = new Array(4);\n  this._wnafT4 = new Array(4);\n\n  this._bitLength = this.n ? this.n.bitLength() : 0;\n\n  // Generalized Greg Maxwell's trick\n  var adjustCount = this.n && this.p.div(this.n);\n  if (!adjustCount || adjustCount.cmpn(100) > 0) {\n    this.redN = null;\n  } else {\n    this._maxwellTrick = true;\n    this.redN = this.n.toRed(this.red);\n  }\n}\nmodule.exports = BaseCurve;\n\nBaseCurve.prototype.point = function point() {\n  throw new Error('Not implemented');\n};\n\nBaseCurve.prototype.validate = function validate() {\n  throw new Error('Not implemented');\n};\n\nBaseCurve.prototype._fixedNafMul = function _fixedNafMul(p, k) {\n  assert(p.precomputed);\n  var doubles = p._getDoubles();\n\n  var naf = getNAF(k, 1, this._bitLength);\n  var I = (1 << (doubles.step + 1)) - (doubles.step % 2 === 0 ? 2 : 1);\n  I /= 3;\n\n  // Translate into more windowed form\n  var repr = [];\n  var j;\n  var nafW;\n  for (j = 0; j < naf.length; j += doubles.step) {\n    nafW = 0;\n    for (var l = j + doubles.step - 1; l >= j; l--)\n      nafW = (nafW << 1) + naf[l];\n    repr.push(nafW);\n  }\n\n  var a = this.jpoint(null, null, null);\n  var b = this.jpoint(null, null, null);\n  for (var i = I; i > 0; i--) {\n    for (j = 0; j < repr.length; j++) {\n      nafW = repr[j];\n      if (nafW === i)\n        b = b.mixedAdd(doubles.points[j]);\n      else if (nafW === -i)\n        b = b.mixedAdd(doubles.points[j].neg());\n    }\n    a = a.add(b);\n  }\n  return a.toP();\n};\n\nBaseCurve.prototype._wnafMul = function _wnafMul(p, k) {\n  var w = 4;\n\n  // Precompute window\n  var nafPoints = p._getNAFPoints(w);\n  w = nafPoints.wnd;\n  var wnd = nafPoints.points;\n\n  // Get NAF form\n  var naf = getNAF(k, w, this._bitLength);\n\n  // Add `this`*(N+1) for every w-NAF index\n  var acc = this.jpoint(null, null, null);\n  for (var i = naf.length - 1; i >= 0; i--) {\n    // Count zeroes\n    for (var l = 0; i >= 0 && naf[i] === 0; i--)\n      l++;\n    if (i >= 0)\n      l++;\n    acc = acc.dblp(l);\n\n    if (i < 0)\n      break;\n    var z = naf[i];\n    assert(z !== 0);\n    if (p.type === 'affine') {\n      // J +- P\n      if (z > 0)\n        acc = acc.mixedAdd(wnd[(z - 1) >> 1]);\n      else\n        acc = acc.mixedAdd(wnd[(-z - 1) >> 1].neg());\n    } else {\n      // J +- J\n      if (z > 0)\n        acc = acc.add(wnd[(z - 1) >> 1]);\n      else\n        acc = acc.add(wnd[(-z - 1) >> 1].neg());\n    }\n  }\n  return p.type === 'affine' ? acc.toP() : acc;\n};\n\nBaseCurve.prototype._wnafMulAdd = function _wnafMulAdd(defW,\n  points,\n  coeffs,\n  len,\n  jacobianResult) {\n  var wndWidth = this._wnafT1;\n  var wnd = this._wnafT2;\n  var naf = this._wnafT3;\n\n  // Fill all arrays\n  var max = 0;\n  var i;\n  var j;\n  var p;\n  for (i = 0; i < len; i++) {\n    p = points[i];\n    var nafPoints = p._getNAFPoints(defW);\n    wndWidth[i] = nafPoints.wnd;\n    wnd[i] = nafPoints.points;\n  }\n\n  // Comb small window NAFs\n  for (i = len - 1; i >= 1; i -= 2) {\n    var a = i - 1;\n    var b = i;\n    if (wndWidth[a] !== 1 || wndWidth[b] !== 1) {\n      naf[a] = getNAF(coeffs[a], wndWidth[a], this._bitLength);\n      naf[b] = getNAF(coeffs[b], wndWidth[b], this._bitLength);\n      max = Math.max(naf[a].length, max);\n      max = Math.max(naf[b].length, max);\n      continue;\n    }\n\n    var comb = [\n      points[a], /* 1 */\n      null, /* 3 */\n      null, /* 5 */\n      points[b], /* 7 */\n    ];\n\n    // Try to avoid Projective points, if possible\n    if (points[a].y.cmp(points[b].y) === 0) {\n      comb[1] = points[a].add(points[b]);\n      comb[2] = points[a].toJ().mixedAdd(points[b].neg());\n    } else if (points[a].y.cmp(points[b].y.redNeg()) === 0) {\n      comb[1] = points[a].toJ().mixedAdd(points[b]);\n      comb[2] = points[a].add(points[b].neg());\n    } else {\n      comb[1] = points[a].toJ().mixedAdd(points[b]);\n      comb[2] = points[a].toJ().mixedAdd(points[b].neg());\n    }\n\n    var index = [\n      -3, /* -1 -1 */\n      -1, /* -1 0 */\n      -5, /* -1 1 */\n      -7, /* 0 -1 */\n      0, /* 0 0 */\n      7, /* 0 1 */\n      5, /* 1 -1 */\n      1, /* 1 0 */\n      3,  /* 1 1 */\n    ];\n\n    var jsf = getJSF(coeffs[a], coeffs[b]);\n    max = Math.max(jsf[0].length, max);\n    naf[a] = new Array(max);\n    naf[b] = new Array(max);\n    for (j = 0; j < max; j++) {\n      var ja = jsf[0][j] | 0;\n      var jb = jsf[1][j] | 0;\n\n      naf[a][j] = index[(ja + 1) * 3 + (jb + 1)];\n      naf[b][j] = 0;\n      wnd[a] = comb;\n    }\n  }\n\n  var acc = this.jpoint(null, null, null);\n  var tmp = this._wnafT4;\n  for (i = max; i >= 0; i--) {\n    var k = 0;\n\n    while (i >= 0) {\n      var zero = true;\n      for (j = 0; j < len; j++) {\n        tmp[j] = naf[j][i] | 0;\n        if (tmp[j] !== 0)\n          zero = false;\n      }\n      if (!zero)\n        break;\n      k++;\n      i--;\n    }\n    if (i >= 0)\n      k++;\n    acc = acc.dblp(k);\n    if (i < 0)\n      break;\n\n    for (j = 0; j < len; j++) {\n      var z = tmp[j];\n      p;\n      if (z === 0)\n        continue;\n      else if (z > 0)\n        p = wnd[j][(z - 1) >> 1];\n      else if (z < 0)\n        p = wnd[j][(-z - 1) >> 1].neg();\n\n      if (p.type === 'affine')\n        acc = acc.mixedAdd(p);\n      else\n        acc = acc.add(p);\n    }\n  }\n  // Zeroify references\n  for (i = 0; i < len; i++)\n    wnd[i] = null;\n\n  if (jacobianResult)\n    return acc;\n  else\n    return acc.toP();\n};\n\nfunction BasePoint(curve, type) {\n  this.curve = curve;\n  this.type = type;\n  this.precomputed = null;\n}\nBaseCurve.BasePoint = BasePoint;\n\nBasePoint.prototype.eq = function eq(/*other*/) {\n  throw new Error('Not implemented');\n};\n\nBasePoint.prototype.validate = function validate() {\n  return this.curve.validate(this);\n};\n\nBaseCurve.prototype.decodePoint = function decodePoint(bytes, enc) {\n  bytes = utils.toArray(bytes, enc);\n\n  var len = this.p.byteLength();\n\n  // uncompressed, hybrid-odd, hybrid-even\n  if ((bytes[0] === 0x04 || bytes[0] === 0x06 || bytes[0] === 0x07) &&\n      bytes.length - 1 === 2 * len) {\n    if (bytes[0] === 0x06)\n      assert(bytes[bytes.length - 1] % 2 === 0);\n    else if (bytes[0] === 0x07)\n      assert(bytes[bytes.length - 1] % 2 === 1);\n\n    var res =  this.point(bytes.slice(1, 1 + len),\n      bytes.slice(1 + len, 1 + 2 * len));\n\n    return res;\n  } else if ((bytes[0] === 0x02 || bytes[0] === 0x03) &&\n              bytes.length - 1 === len) {\n    return this.pointFromX(bytes.slice(1, 1 + len), bytes[0] === 0x03);\n  }\n  throw new Error('Unknown point format');\n};\n\nBasePoint.prototype.encodeCompressed = function encodeCompressed(enc) {\n  return this.encode(enc, true);\n};\n\nBasePoint.prototype._encode = function _encode(compact) {\n  var len = this.curve.p.byteLength();\n  var x = this.getX().toArray('be', len);\n\n  if (compact)\n    return [ this.getY().isEven() ? 0x02 : 0x03 ].concat(x);\n\n  return [ 0x04 ].concat(x, this.getY().toArray('be', len));\n};\n\nBasePoint.prototype.encode = function encode(enc, compact) {\n  return utils.encode(this._encode(compact), enc);\n};\n\nBasePoint.prototype.precompute = function precompute(power) {\n  if (this.precomputed)\n    return this;\n\n  var precomputed = {\n    doubles: null,\n    naf: null,\n    beta: null,\n  };\n  precomputed.naf = this._getNAFPoints(8);\n  precomputed.doubles = this._getDoubles(4, power);\n  precomputed.beta = this._getBeta();\n  this.precomputed = precomputed;\n\n  return this;\n};\n\nBasePoint.prototype._hasDoubles = function _hasDoubles(k) {\n  if (!this.precomputed)\n    return false;\n\n  var doubles = this.precomputed.doubles;\n  if (!doubles)\n    return false;\n\n  return doubles.points.length >= Math.ceil((k.bitLength() + 1) / doubles.step);\n};\n\nBasePoint.prototype._getDoubles = function _getDoubles(step, power) {\n  if (this.precomputed && this.precomputed.doubles)\n    return this.precomputed.doubles;\n\n  var doubles = [ this ];\n  var acc = this;\n  for (var i = 0; i < power; i += step) {\n    for (var j = 0; j < step; j++)\n      acc = acc.dbl();\n    doubles.push(acc);\n  }\n  return {\n    step: step,\n    points: doubles,\n  };\n};\n\nBasePoint.prototype._getNAFPoints = function _getNAFPoints(wnd) {\n  if (this.precomputed && this.precomputed.naf)\n    return this.precomputed.naf;\n\n  var res = [ this ];\n  var max = (1 << wnd) - 1;\n  var dbl = max === 1 ? null : this.dbl();\n  for (var i = 1; i < max; i++)\n    res[i] = res[i - 1].add(dbl);\n  return {\n    wnd: wnd,\n    points: res,\n  };\n};\n\nBasePoint.prototype._getBeta = function _getBeta() {\n  return null;\n};\n\nBasePoint.prototype.dblp = function dblp(k) {\n  var r = this;\n  for (var i = 0; i < k; i++)\n    r = r.dbl();\n  return r;\n};\n", "if (typeof Object.create === 'function') {\n  // implementation from standard node.js 'util' module\n  module.exports = function inherits(ctor, superCtor) {\n    if (superCtor) {\n      ctor.super_ = superCtor\n      ctor.prototype = Object.create(superCtor.prototype, {\n        constructor: {\n          value: ctor,\n          enumerable: false,\n          writable: true,\n          configurable: true\n        }\n      })\n    }\n  };\n} else {\n  // old school shim for old browsers\n  module.exports = function inherits(ctor, superCtor) {\n    if (superCtor) {\n      ctor.super_ = superCtor\n      var TempCtor = function () {}\n      TempCtor.prototype = superCtor.prototype\n      ctor.prototype = new TempCtor()\n      ctor.prototype.constructor = ctor\n    }\n  }\n}\n", "'use strict';\n\nvar utils = require('../utils');\nvar BN = require('bn.js');\nvar inherits = require('inherits');\nvar Base = require('./base');\n\nvar assert = utils.assert;\n\nfunction ShortCurve(conf) {\n  Base.call(this, 'short', conf);\n\n  this.a = new BN(conf.a, 16).toRed(this.red);\n  this.b = new BN(conf.b, 16).toRed(this.red);\n  this.tinv = this.two.redInvm();\n\n  this.zeroA = this.a.fromRed().cmpn(0) === 0;\n  this.threeA = this.a.fromRed().sub(this.p).cmpn(-3) === 0;\n\n  // If the curve is endomorphic, precalculate beta and lambda\n  this.endo = this._getEndomorphism(conf);\n  this._endoWnafT1 = new Array(4);\n  this._endoWnafT2 = new Array(4);\n}\ninherits(ShortCurve, Base);\nmodule.exports = ShortCurve;\n\nShortCurve.prototype._getEndomorphism = function _getEndomorphism(conf) {\n  // No efficient endomorphism\n  if (!this.zeroA || !this.g || !this.n || this.p.modn(3) !== 1)\n    return;\n\n  // Compute beta and lambda, that lambda * P = (beta * Px; Py)\n  var beta;\n  var lambda;\n  if (conf.beta) {\n    beta = new BN(conf.beta, 16).toRed(this.red);\n  } else {\n    var betas = this._getEndoRoots(this.p);\n    // Choose the smallest beta\n    beta = betas[0].cmp(betas[1]) < 0 ? betas[0] : betas[1];\n    beta = beta.toRed(this.red);\n  }\n  if (conf.lambda) {\n    lambda = new BN(conf.lambda, 16);\n  } else {\n    // Choose the lambda that is matching selected beta\n    var lambdas = this._getEndoRoots(this.n);\n    if (this.g.mul(lambdas[0]).x.cmp(this.g.x.redMul(beta)) === 0) {\n      lambda = lambdas[0];\n    } else {\n      lambda = lambdas[1];\n      assert(this.g.mul(lambda).x.cmp(this.g.x.redMul(beta)) === 0);\n    }\n  }\n\n  // Get basis vectors, used for balanced length-two representation\n  var basis;\n  if (conf.basis) {\n    basis = conf.basis.map(function(vec) {\n      return {\n        a: new BN(vec.a, 16),\n        b: new BN(vec.b, 16),\n      };\n    });\n  } else {\n    basis = this._getEndoBasis(lambda);\n  }\n\n  return {\n    beta: beta,\n    lambda: lambda,\n    basis: basis,\n  };\n};\n\nShortCurve.prototype._getEndoRoots = function _getEndoRoots(num) {\n  // Find roots of for x^2 + x + 1 in F\n  // Root = (-1 +- Sqrt(-3)) / 2\n  //\n  var red = num === this.p ? this.red : BN.mont(num);\n  var tinv = new BN(2).toRed(red).redInvm();\n  var ntinv = tinv.redNeg();\n\n  var s = new BN(3).toRed(red).redNeg().redSqrt().redMul(tinv);\n\n  var l1 = ntinv.redAdd(s).fromRed();\n  var l2 = ntinv.redSub(s).fromRed();\n  return [ l1, l2 ];\n};\n\nShortCurve.prototype._getEndoBasis = function _getEndoBasis(lambda) {\n  // aprxSqrt >= sqrt(this.n)\n  var aprxSqrt = this.n.ushrn(Math.floor(this.n.bitLength() / 2));\n\n  // 3.74\n  // Run EGCD, until r(L + 1) < aprxSqrt\n  var u = lambda;\n  var v = this.n.clone();\n  var x1 = new BN(1);\n  var y1 = new BN(0);\n  var x2 = new BN(0);\n  var y2 = new BN(1);\n\n  // NOTE: all vectors are roots of: a + b * lambda = 0 (mod n)\n  var a0;\n  var b0;\n  // First vector\n  var a1;\n  var b1;\n  // Second vector\n  var a2;\n  var b2;\n\n  var prevR;\n  var i = 0;\n  var r;\n  var x;\n  while (u.cmpn(0) !== 0) {\n    var q = v.div(u);\n    r = v.sub(q.mul(u));\n    x = x2.sub(q.mul(x1));\n    var y = y2.sub(q.mul(y1));\n\n    if (!a1 && r.cmp(aprxSqrt) < 0) {\n      a0 = prevR.neg();\n      b0 = x1;\n      a1 = r.neg();\n      b1 = x;\n    } else if (a1 && ++i === 2) {\n      break;\n    }\n    prevR = r;\n\n    v = u;\n    u = r;\n    x2 = x1;\n    x1 = x;\n    y2 = y1;\n    y1 = y;\n  }\n  a2 = r.neg();\n  b2 = x;\n\n  var len1 = a1.sqr().add(b1.sqr());\n  var len2 = a2.sqr().add(b2.sqr());\n  if (len2.cmp(len1) >= 0) {\n    a2 = a0;\n    b2 = b0;\n  }\n\n  // Normalize signs\n  if (a1.negative) {\n    a1 = a1.neg();\n    b1 = b1.neg();\n  }\n  if (a2.negative) {\n    a2 = a2.neg();\n    b2 = b2.neg();\n  }\n\n  return [\n    { a: a1, b: b1 },\n    { a: a2, b: b2 },\n  ];\n};\n\nShortCurve.prototype._endoSplit = function _endoSplit(k) {\n  var basis = this.endo.basis;\n  var v1 = basis[0];\n  var v2 = basis[1];\n\n  var c1 = v2.b.mul(k).divRound(this.n);\n  var c2 = v1.b.neg().mul(k).divRound(this.n);\n\n  var p1 = c1.mul(v1.a);\n  var p2 = c2.mul(v2.a);\n  var q1 = c1.mul(v1.b);\n  var q2 = c2.mul(v2.b);\n\n  // Calculate answer\n  var k1 = k.sub(p1).sub(p2);\n  var k2 = q1.add(q2).neg();\n  return { k1: k1, k2: k2 };\n};\n\nShortCurve.prototype.pointFromX = function pointFromX(x, odd) {\n  x = new BN(x, 16);\n  if (!x.red)\n    x = x.toRed(this.red);\n\n  var y2 = x.redSqr().redMul(x).redIAdd(x.redMul(this.a)).redIAdd(this.b);\n  var y = y2.redSqrt();\n  if (y.redSqr().redSub(y2).cmp(this.zero) !== 0)\n    throw new Error('invalid point');\n\n  // XXX Is there any way to tell if the number is odd without converting it\n  // to non-red form?\n  var isOdd = y.fromRed().isOdd();\n  if (odd && !isOdd || !odd && isOdd)\n    y = y.redNeg();\n\n  return this.point(x, y);\n};\n\nShortCurve.prototype.validate = function validate(point) {\n  if (point.inf)\n    return true;\n\n  var x = point.x;\n  var y = point.y;\n\n  var ax = this.a.redMul(x);\n  var rhs = x.redSqr().redMul(x).redIAdd(ax).redIAdd(this.b);\n  return y.redSqr().redISub(rhs).cmpn(0) === 0;\n};\n\nShortCurve.prototype._endoWnafMulAdd =\n    function _endoWnafMulAdd(points, coeffs, jacobianResult) {\n      var npoints = this._endoWnafT1;\n      var ncoeffs = this._endoWnafT2;\n      for (var i = 0; i < points.length; i++) {\n        var split = this._endoSplit(coeffs[i]);\n        var p = points[i];\n        var beta = p._getBeta();\n\n        if (split.k1.negative) {\n          split.k1.ineg();\n          p = p.neg(true);\n        }\n        if (split.k2.negative) {\n          split.k2.ineg();\n          beta = beta.neg(true);\n        }\n\n        npoints[i * 2] = p;\n        npoints[i * 2 + 1] = beta;\n        ncoeffs[i * 2] = split.k1;\n        ncoeffs[i * 2 + 1] = split.k2;\n      }\n      var res = this._wnafMulAdd(1, npoints, ncoeffs, i * 2, jacobianResult);\n\n      // Clean-up references to points and coefficients\n      for (var j = 0; j < i * 2; j++) {\n        npoints[j] = null;\n        ncoeffs[j] = null;\n      }\n      return res;\n    };\n\nfunction Point(curve, x, y, isRed) {\n  Base.BasePoint.call(this, curve, 'affine');\n  if (x === null && y === null) {\n    this.x = null;\n    this.y = null;\n    this.inf = true;\n  } else {\n    this.x = new BN(x, 16);\n    this.y = new BN(y, 16);\n    // Force redgomery representation when loading from JSON\n    if (isRed) {\n      this.x.forceRed(this.curve.red);\n      this.y.forceRed(this.curve.red);\n    }\n    if (!this.x.red)\n      this.x = this.x.toRed(this.curve.red);\n    if (!this.y.red)\n      this.y = this.y.toRed(this.curve.red);\n    this.inf = false;\n  }\n}\ninherits(Point, Base.BasePoint);\n\nShortCurve.prototype.point = function point(x, y, isRed) {\n  return new Point(this, x, y, isRed);\n};\n\nShortCurve.prototype.pointFromJSON = function pointFromJSON(obj, red) {\n  return Point.fromJSON(this, obj, red);\n};\n\nPoint.prototype._getBeta = function _getBeta() {\n  if (!this.curve.endo)\n    return;\n\n  var pre = this.precomputed;\n  if (pre && pre.beta)\n    return pre.beta;\n\n  var beta = this.curve.point(this.x.redMul(this.curve.endo.beta), this.y);\n  if (pre) {\n    var curve = this.curve;\n    var endoMul = function(p) {\n      return curve.point(p.x.redMul(curve.endo.beta), p.y);\n    };\n    pre.beta = beta;\n    beta.precomputed = {\n      beta: null,\n      naf: pre.naf && {\n        wnd: pre.naf.wnd,\n        points: pre.naf.points.map(endoMul),\n      },\n      doubles: pre.doubles && {\n        step: pre.doubles.step,\n        points: pre.doubles.points.map(endoMul),\n      },\n    };\n  }\n  return beta;\n};\n\nPoint.prototype.toJSON = function toJSON() {\n  if (!this.precomputed)\n    return [ this.x, this.y ];\n\n  return [ this.x, this.y, this.precomputed && {\n    doubles: this.precomputed.doubles && {\n      step: this.precomputed.doubles.step,\n      points: this.precomputed.doubles.points.slice(1),\n    },\n    naf: this.precomputed.naf && {\n      wnd: this.precomputed.naf.wnd,\n      points: this.precomputed.naf.points.slice(1),\n    },\n  } ];\n};\n\nPoint.fromJSON = function fromJSON(curve, obj, red) {\n  if (typeof obj === 'string')\n    obj = JSON.parse(obj);\n  var res = curve.point(obj[0], obj[1], red);\n  if (!obj[2])\n    return res;\n\n  function obj2point(obj) {\n    return curve.point(obj[0], obj[1], red);\n  }\n\n  var pre = obj[2];\n  res.precomputed = {\n    beta: null,\n    doubles: pre.doubles && {\n      step: pre.doubles.step,\n      points: [ res ].concat(pre.doubles.points.map(obj2point)),\n    },\n    naf: pre.naf && {\n      wnd: pre.naf.wnd,\n      points: [ res ].concat(pre.naf.points.map(obj2point)),\n    },\n  };\n  return res;\n};\n\nPoint.prototype.inspect = function inspect() {\n  if (this.isInfinity())\n    return '<EC Point Infinity>';\n  return '<EC Point x: ' + this.x.fromRed().toString(16, 2) +\n      ' y: ' + this.y.fromRed().toString(16, 2) + '>';\n};\n\nPoint.prototype.isInfinity = function isInfinity() {\n  return this.inf;\n};\n\nPoint.prototype.add = function add(p) {\n  // O + P = P\n  if (this.inf)\n    return p;\n\n  // P + O = P\n  if (p.inf)\n    return this;\n\n  // P + P = 2P\n  if (this.eq(p))\n    return this.dbl();\n\n  // P + (-P) = O\n  if (this.neg().eq(p))\n    return this.curve.point(null, null);\n\n  // P + Q = O\n  if (this.x.cmp(p.x) === 0)\n    return this.curve.point(null, null);\n\n  var c = this.y.redSub(p.y);\n  if (c.cmpn(0) !== 0)\n    c = c.redMul(this.x.redSub(p.x).redInvm());\n  var nx = c.redSqr().redISub(this.x).redISub(p.x);\n  var ny = c.redMul(this.x.redSub(nx)).redISub(this.y);\n  return this.curve.point(nx, ny);\n};\n\nPoint.prototype.dbl = function dbl() {\n  if (this.inf)\n    return this;\n\n  // 2P = O\n  var ys1 = this.y.redAdd(this.y);\n  if (ys1.cmpn(0) === 0)\n    return this.curve.point(null, null);\n\n  var a = this.curve.a;\n\n  var x2 = this.x.redSqr();\n  var dyinv = ys1.redInvm();\n  var c = x2.redAdd(x2).redIAdd(x2).redIAdd(a).redMul(dyinv);\n\n  var nx = c.redSqr().redISub(this.x.redAdd(this.x));\n  var ny = c.redMul(this.x.redSub(nx)).redISub(this.y);\n  return this.curve.point(nx, ny);\n};\n\nPoint.prototype.getX = function getX() {\n  return this.x.fromRed();\n};\n\nPoint.prototype.getY = function getY() {\n  return this.y.fromRed();\n};\n\nPoint.prototype.mul = function mul(k) {\n  k = new BN(k, 16);\n  if (this.isInfinity())\n    return this;\n  else if (this._hasDoubles(k))\n    return this.curve._fixedNafMul(this, k);\n  else if (this.curve.endo)\n    return this.curve._endoWnafMulAdd([ this ], [ k ]);\n  else\n    return this.curve._wnafMul(this, k);\n};\n\nPoint.prototype.mulAdd = function mulAdd(k1, p2, k2) {\n  var points = [ this, p2 ];\n  var coeffs = [ k1, k2 ];\n  if (this.curve.endo)\n    return this.curve._endoWnafMulAdd(points, coeffs);\n  else\n    return this.curve._wnafMulAdd(1, points, coeffs, 2);\n};\n\nPoint.prototype.jmulAdd = function jmulAdd(k1, p2, k2) {\n  var points = [ this, p2 ];\n  var coeffs = [ k1, k2 ];\n  if (this.curve.endo)\n    return this.curve._endoWnafMulAdd(points, coeffs, true);\n  else\n    return this.curve._wnafMulAdd(1, points, coeffs, 2, true);\n};\n\nPoint.prototype.eq = function eq(p) {\n  return this === p ||\n         this.inf === p.inf &&\n             (this.inf || this.x.cmp(p.x) === 0 && this.y.cmp(p.y) === 0);\n};\n\nPoint.prototype.neg = function neg(_precompute) {\n  if (this.inf)\n    return this;\n\n  var res = this.curve.point(this.x, this.y.redNeg());\n  if (_precompute && this.precomputed) {\n    var pre = this.precomputed;\n    var negate = function(p) {\n      return p.neg();\n    };\n    res.precomputed = {\n      naf: pre.naf && {\n        wnd: pre.naf.wnd,\n        points: pre.naf.points.map(negate),\n      },\n      doubles: pre.doubles && {\n        step: pre.doubles.step,\n        points: pre.doubles.points.map(negate),\n      },\n    };\n  }\n  return res;\n};\n\nPoint.prototype.toJ = function toJ() {\n  if (this.inf)\n    return this.curve.jpoint(null, null, null);\n\n  var res = this.curve.jpoint(this.x, this.y, this.curve.one);\n  return res;\n};\n\nfunction JPoint(curve, x, y, z) {\n  Base.BasePoint.call(this, curve, 'jacobian');\n  if (x === null && y === null && z === null) {\n    this.x = this.curve.one;\n    this.y = this.curve.one;\n    this.z = new BN(0);\n  } else {\n    this.x = new BN(x, 16);\n    this.y = new BN(y, 16);\n    this.z = new BN(z, 16);\n  }\n  if (!this.x.red)\n    this.x = this.x.toRed(this.curve.red);\n  if (!this.y.red)\n    this.y = this.y.toRed(this.curve.red);\n  if (!this.z.red)\n    this.z = this.z.toRed(this.curve.red);\n\n  this.zOne = this.z === this.curve.one;\n}\ninherits(JPoint, Base.BasePoint);\n\nShortCurve.prototype.jpoint = function jpoint(x, y, z) {\n  return new JPoint(this, x, y, z);\n};\n\nJPoint.prototype.toP = function toP() {\n  if (this.isInfinity())\n    return this.curve.point(null, null);\n\n  var zinv = this.z.redInvm();\n  var zinv2 = zinv.redSqr();\n  var ax = this.x.redMul(zinv2);\n  var ay = this.y.redMul(zinv2).redMul(zinv);\n\n  return this.curve.point(ax, ay);\n};\n\nJPoint.prototype.neg = function neg() {\n  return this.curve.jpoint(this.x, this.y.redNeg(), this.z);\n};\n\nJPoint.prototype.add = function add(p) {\n  // O + P = P\n  if (this.isInfinity())\n    return p;\n\n  // P + O = P\n  if (p.isInfinity())\n    return this;\n\n  // 12M + 4S + 7A\n  var pz2 = p.z.redSqr();\n  var z2 = this.z.redSqr();\n  var u1 = this.x.redMul(pz2);\n  var u2 = p.x.redMul(z2);\n  var s1 = this.y.redMul(pz2.redMul(p.z));\n  var s2 = p.y.redMul(z2.redMul(this.z));\n\n  var h = u1.redSub(u2);\n  var r = s1.redSub(s2);\n  if (h.cmpn(0) === 0) {\n    if (r.cmpn(0) !== 0)\n      return this.curve.jpoint(null, null, null);\n    else\n      return this.dbl();\n  }\n\n  var h2 = h.redSqr();\n  var h3 = h2.redMul(h);\n  var v = u1.redMul(h2);\n\n  var nx = r.redSqr().redIAdd(h3).redISub(v).redISub(v);\n  var ny = r.redMul(v.redISub(nx)).redISub(s1.redMul(h3));\n  var nz = this.z.redMul(p.z).redMul(h);\n\n  return this.curve.jpoint(nx, ny, nz);\n};\n\nJPoint.prototype.mixedAdd = function mixedAdd(p) {\n  // O + P = P\n  if (this.isInfinity())\n    return p.toJ();\n\n  // P + O = P\n  if (p.isInfinity())\n    return this;\n\n  // 8M + 3S + 7A\n  var z2 = this.z.redSqr();\n  var u1 = this.x;\n  var u2 = p.x.redMul(z2);\n  var s1 = this.y;\n  var s2 = p.y.redMul(z2).redMul(this.z);\n\n  var h = u1.redSub(u2);\n  var r = s1.redSub(s2);\n  if (h.cmpn(0) === 0) {\n    if (r.cmpn(0) !== 0)\n      return this.curve.jpoint(null, null, null);\n    else\n      return this.dbl();\n  }\n\n  var h2 = h.redSqr();\n  var h3 = h2.redMul(h);\n  var v = u1.redMul(h2);\n\n  var nx = r.redSqr().redIAdd(h3).redISub(v).redISub(v);\n  var ny = r.redMul(v.redISub(nx)).redISub(s1.redMul(h3));\n  var nz = this.z.redMul(h);\n\n  return this.curve.jpoint(nx, ny, nz);\n};\n\nJPoint.prototype.dblp = function dblp(pow) {\n  if (pow === 0)\n    return this;\n  if (this.isInfinity())\n    return this;\n  if (!pow)\n    return this.dbl();\n\n  var i;\n  if (this.curve.zeroA || this.curve.threeA) {\n    var r = this;\n    for (i = 0; i < pow; i++)\n      r = r.dbl();\n    return r;\n  }\n\n  // 1M + 2S + 1A + N * (4S + 5M + 8A)\n  // N = 1 => 6M + 6S + 9A\n  var a = this.curve.a;\n  var tinv = this.curve.tinv;\n\n  var jx = this.x;\n  var jy = this.y;\n  var jz = this.z;\n  var jz4 = jz.redSqr().redSqr();\n\n  // Reuse results\n  var jyd = jy.redAdd(jy);\n  for (i = 0; i < pow; i++) {\n    var jx2 = jx.redSqr();\n    var jyd2 = jyd.redSqr();\n    var jyd4 = jyd2.redSqr();\n    var c = jx2.redAdd(jx2).redIAdd(jx2).redIAdd(a.redMul(jz4));\n\n    var t1 = jx.redMul(jyd2);\n    var nx = c.redSqr().redISub(t1.redAdd(t1));\n    var t2 = t1.redISub(nx);\n    var dny = c.redMul(t2);\n    dny = dny.redIAdd(dny).redISub(jyd4);\n    var nz = jyd.redMul(jz);\n    if (i + 1 < pow)\n      jz4 = jz4.redMul(jyd4);\n\n    jx = nx;\n    jz = nz;\n    jyd = dny;\n  }\n\n  return this.curve.jpoint(jx, jyd.redMul(tinv), jz);\n};\n\nJPoint.prototype.dbl = function dbl() {\n  if (this.isInfinity())\n    return this;\n\n  if (this.curve.zeroA)\n    return this._zeroDbl();\n  else if (this.curve.threeA)\n    return this._threeDbl();\n  else\n    return this._dbl();\n};\n\nJPoint.prototype._zeroDbl = function _zeroDbl() {\n  var nx;\n  var ny;\n  var nz;\n  // Z = 1\n  if (this.zOne) {\n    // hyperelliptic.org/EFD/g1p/auto-shortw-jacobian-0.html\n    //     #doubling-mdbl-2007-bl\n    // 1M + 5S + 14A\n\n    // XX = X1^2\n    var xx = this.x.redSqr();\n    // YY = Y1^2\n    var yy = this.y.redSqr();\n    // YYYY = YY^2\n    var yyyy = yy.redSqr();\n    // S = 2 * ((X1 + YY)^2 - XX - YYYY)\n    var s = this.x.redAdd(yy).redSqr().redISub(xx).redISub(yyyy);\n    s = s.redIAdd(s);\n    // M = 3 * XX + a; a = 0\n    var m = xx.redAdd(xx).redIAdd(xx);\n    // T = M ^ 2 - 2*S\n    var t = m.redSqr().redISub(s).redISub(s);\n\n    // 8 * YYYY\n    var yyyy8 = yyyy.redIAdd(yyyy);\n    yyyy8 = yyyy8.redIAdd(yyyy8);\n    yyyy8 = yyyy8.redIAdd(yyyy8);\n\n    // X3 = T\n    nx = t;\n    // Y3 = M * (S - T) - 8 * YYYY\n    ny = m.redMul(s.redISub(t)).redISub(yyyy8);\n    // Z3 = 2*Y1\n    nz = this.y.redAdd(this.y);\n  } else {\n    // hyperelliptic.org/EFD/g1p/auto-shortw-jacobian-0.html\n    //     #doubling-dbl-2009-l\n    // 2M + 5S + 13A\n\n    // A = X1^2\n    var a = this.x.redSqr();\n    // B = Y1^2\n    var b = this.y.redSqr();\n    // C = B^2\n    var c = b.redSqr();\n    // D = 2 * ((X1 + B)^2 - A - C)\n    var d = this.x.redAdd(b).redSqr().redISub(a).redISub(c);\n    d = d.redIAdd(d);\n    // E = 3 * A\n    var e = a.redAdd(a).redIAdd(a);\n    // F = E^2\n    var f = e.redSqr();\n\n    // 8 * C\n    var c8 = c.redIAdd(c);\n    c8 = c8.redIAdd(c8);\n    c8 = c8.redIAdd(c8);\n\n    // X3 = F - 2 * D\n    nx = f.redISub(d).redISub(d);\n    // Y3 = E * (D - X3) - 8 * C\n    ny = e.redMul(d.redISub(nx)).redISub(c8);\n    // Z3 = 2 * Y1 * Z1\n    nz = this.y.redMul(this.z);\n    nz = nz.redIAdd(nz);\n  }\n\n  return this.curve.jpoint(nx, ny, nz);\n};\n\nJPoint.prototype._threeDbl = function _threeDbl() {\n  var nx;\n  var ny;\n  var nz;\n  // Z = 1\n  if (this.zOne) {\n    // hyperelliptic.org/EFD/g1p/auto-shortw-jacobian-3.html\n    //     #doubling-mdbl-2007-bl\n    // 1M + 5S + 15A\n\n    // XX = X1^2\n    var xx = this.x.redSqr();\n    // YY = Y1^2\n    var yy = this.y.redSqr();\n    // YYYY = YY^2\n    var yyyy = yy.redSqr();\n    // S = 2 * ((X1 + YY)^2 - XX - YYYY)\n    var s = this.x.redAdd(yy).redSqr().redISub(xx).redISub(yyyy);\n    s = s.redIAdd(s);\n    // M = 3 * XX + a\n    var m = xx.redAdd(xx).redIAdd(xx).redIAdd(this.curve.a);\n    // T = M^2 - 2 * S\n    var t = m.redSqr().redISub(s).redISub(s);\n    // X3 = T\n    nx = t;\n    // Y3 = M * (S - T) - 8 * YYYY\n    var yyyy8 = yyyy.redIAdd(yyyy);\n    yyyy8 = yyyy8.redIAdd(yyyy8);\n    yyyy8 = yyyy8.redIAdd(yyyy8);\n    ny = m.redMul(s.redISub(t)).redISub(yyyy8);\n    // Z3 = 2 * Y1\n    nz = this.y.redAdd(this.y);\n  } else {\n    // hyperelliptic.org/EFD/g1p/auto-shortw-jacobian-3.html#doubling-dbl-2001-b\n    // 3M + 5S\n\n    // delta = Z1^2\n    var delta = this.z.redSqr();\n    // gamma = Y1^2\n    var gamma = this.y.redSqr();\n    // beta = X1 * gamma\n    var beta = this.x.redMul(gamma);\n    // alpha = 3 * (X1 - delta) * (X1 + delta)\n    var alpha = this.x.redSub(delta).redMul(this.x.redAdd(delta));\n    alpha = alpha.redAdd(alpha).redIAdd(alpha);\n    // X3 = alpha^2 - 8 * beta\n    var beta4 = beta.redIAdd(beta);\n    beta4 = beta4.redIAdd(beta4);\n    var beta8 = beta4.redAdd(beta4);\n    nx = alpha.redSqr().redISub(beta8);\n    // Z3 = (Y1 + Z1)^2 - gamma - delta\n    nz = this.y.redAdd(this.z).redSqr().redISub(gamma).redISub(delta);\n    // Y3 = alpha * (4 * beta - X3) - 8 * gamma^2\n    var ggamma8 = gamma.redSqr();\n    ggamma8 = ggamma8.redIAdd(ggamma8);\n    ggamma8 = ggamma8.redIAdd(ggamma8);\n    ggamma8 = ggamma8.redIAdd(ggamma8);\n    ny = alpha.redMul(beta4.redISub(nx)).redISub(ggamma8);\n  }\n\n  return this.curve.jpoint(nx, ny, nz);\n};\n\nJPoint.prototype._dbl = function _dbl() {\n  var a = this.curve.a;\n\n  // 4M + 6S + 10A\n  var jx = this.x;\n  var jy = this.y;\n  var jz = this.z;\n  var jz4 = jz.redSqr().redSqr();\n\n  var jx2 = jx.redSqr();\n  var jy2 = jy.redSqr();\n\n  var c = jx2.redAdd(jx2).redIAdd(jx2).redIAdd(a.redMul(jz4));\n\n  var jxd4 = jx.redAdd(jx);\n  jxd4 = jxd4.redIAdd(jxd4);\n  var t1 = jxd4.redMul(jy2);\n  var nx = c.redSqr().redISub(t1.redAdd(t1));\n  var t2 = t1.redISub(nx);\n\n  var jyd8 = jy2.redSqr();\n  jyd8 = jyd8.redIAdd(jyd8);\n  jyd8 = jyd8.redIAdd(jyd8);\n  jyd8 = jyd8.redIAdd(jyd8);\n  var ny = c.redMul(t2).redISub(jyd8);\n  var nz = jy.redAdd(jy).redMul(jz);\n\n  return this.curve.jpoint(nx, ny, nz);\n};\n\nJPoint.prototype.trpl = function trpl() {\n  if (!this.curve.zeroA)\n    return this.dbl().add(this);\n\n  // hyperelliptic.org/EFD/g1p/auto-shortw-jacobian-0.html#tripling-tpl-2007-bl\n  // 5M + 10S + ...\n\n  // XX = X1^2\n  var xx = this.x.redSqr();\n  // YY = Y1^2\n  var yy = this.y.redSqr();\n  // ZZ = Z1^2\n  var zz = this.z.redSqr();\n  // YYYY = YY^2\n  var yyyy = yy.redSqr();\n  // M = 3 * XX + a * ZZ2; a = 0\n  var m = xx.redAdd(xx).redIAdd(xx);\n  // MM = M^2\n  var mm = m.redSqr();\n  // E = 6 * ((X1 + YY)^2 - XX - YYYY) - MM\n  var e = this.x.redAdd(yy).redSqr().redISub(xx).redISub(yyyy);\n  e = e.redIAdd(e);\n  e = e.redAdd(e).redIAdd(e);\n  e = e.redISub(mm);\n  // EE = E^2\n  var ee = e.redSqr();\n  // T = 16*YYYY\n  var t = yyyy.redIAdd(yyyy);\n  t = t.redIAdd(t);\n  t = t.redIAdd(t);\n  t = t.redIAdd(t);\n  // U = (M + E)^2 - MM - EE - T\n  var u = m.redIAdd(e).redSqr().redISub(mm).redISub(ee).redISub(t);\n  // X3 = 4 * (X1 * EE - 4 * YY * U)\n  var yyu4 = yy.redMul(u);\n  yyu4 = yyu4.redIAdd(yyu4);\n  yyu4 = yyu4.redIAdd(yyu4);\n  var nx = this.x.redMul(ee).redISub(yyu4);\n  nx = nx.redIAdd(nx);\n  nx = nx.redIAdd(nx);\n  // Y3 = 8 * Y1 * (U * (T - U) - E * EE)\n  var ny = this.y.redMul(u.redMul(t.redISub(u)).redISub(e.redMul(ee)));\n  ny = ny.redIAdd(ny);\n  ny = ny.redIAdd(ny);\n  ny = ny.redIAdd(ny);\n  // Z3 = (Z1 + E)^2 - ZZ - EE\n  var nz = this.z.redAdd(e).redSqr().redISub(zz).redISub(ee);\n\n  return this.curve.jpoint(nx, ny, nz);\n};\n\nJPoint.prototype.mul = function mul(k, kbase) {\n  k = new BN(k, kbase);\n\n  return this.curve._wnafMul(this, k);\n};\n\nJPoint.prototype.eq = function eq(p) {\n  if (p.type === 'affine')\n    return this.eq(p.toJ());\n\n  if (this === p)\n    return true;\n\n  // x1 * z2^2 == x2 * z1^2\n  var z2 = this.z.redSqr();\n  var pz2 = p.z.redSqr();\n  if (this.x.redMul(pz2).redISub(p.x.redMul(z2)).cmpn(0) !== 0)\n    return false;\n\n  // y1 * z2^3 == y2 * z1^3\n  var z3 = z2.redMul(this.z);\n  var pz3 = pz2.redMul(p.z);\n  return this.y.redMul(pz3).redISub(p.y.redMul(z3)).cmpn(0) === 0;\n};\n\nJPoint.prototype.eqXToP = function eqXToP(x) {\n  var zs = this.z.redSqr();\n  var rx = x.toRed(this.curve.red).redMul(zs);\n  if (this.x.cmp(rx) === 0)\n    return true;\n\n  var xc = x.clone();\n  var t = this.curve.redN.redMul(zs);\n  for (;;) {\n    xc.iadd(this.curve.n);\n    if (xc.cmp(this.curve.p) >= 0)\n      return false;\n\n    rx.redIAdd(t);\n    if (this.x.cmp(rx) === 0)\n      return true;\n  }\n};\n\nJPoint.prototype.inspect = function inspect() {\n  if (this.isInfinity())\n    return '<EC JPoint Infinity>';\n  return '<EC JPoint x: ' + this.x.toString(16, 2) +\n      ' y: ' + this.y.toString(16, 2) +\n      ' z: ' + this.z.toString(16, 2) + '>';\n};\n\nJPoint.prototype.isInfinity = function isInfinity() {\n  // XXX This code assumes that zero is always zero in red\n  return this.z.cmpn(0) === 0;\n};\n", "'use strict';\n\nvar BN = require('bn.js');\nvar inherits = require('inherits');\nvar Base = require('./base');\n\nvar utils = require('../utils');\n\nfunction MontCurve(conf) {\n  Base.call(this, 'mont', conf);\n\n  this.a = new BN(conf.a, 16).toRed(this.red);\n  this.b = new BN(conf.b, 16).toRed(this.red);\n  this.i4 = new BN(4).toRed(this.red).redInvm();\n  this.two = new BN(2).toRed(this.red);\n  this.a24 = this.i4.redMul(this.a.redAdd(this.two));\n}\ninherits(MontCurve, Base);\nmodule.exports = MontCurve;\n\nMontCurve.prototype.validate = function validate(point) {\n  var x = point.normalize().x;\n  var x2 = x.redSqr();\n  var rhs = x2.redMul(x).redAdd(x2.redMul(this.a)).redAdd(x);\n  var y = rhs.redSqrt();\n\n  return y.redSqr().cmp(rhs) === 0;\n};\n\nfunction Point(curve, x, z) {\n  Base.BasePoint.call(this, curve, 'projective');\n  if (x === null && z === null) {\n    this.x = this.curve.one;\n    this.z = this.curve.zero;\n  } else {\n    this.x = new BN(x, 16);\n    this.z = new BN(z, 16);\n    if (!this.x.red)\n      this.x = this.x.toRed(this.curve.red);\n    if (!this.z.red)\n      this.z = this.z.toRed(this.curve.red);\n  }\n}\ninherits(Point, Base.BasePoint);\n\nMontCurve.prototype.decodePoint = function decodePoint(bytes, enc) {\n  return this.point(utils.toArray(bytes, enc), 1);\n};\n\nMontCurve.prototype.point = function point(x, z) {\n  return new Point(this, x, z);\n};\n\nMontCurve.prototype.pointFromJSON = function pointFromJSON(obj) {\n  return Point.fromJSON(this, obj);\n};\n\nPoint.prototype.precompute = function precompute() {\n  // No-op\n};\n\nPoint.prototype._encode = function _encode() {\n  return this.getX().toArray('be', this.curve.p.byteLength());\n};\n\nPoint.fromJSON = function fromJSON(curve, obj) {\n  return new Point(curve, obj[0], obj[1] || curve.one);\n};\n\nPoint.prototype.inspect = function inspect() {\n  if (this.isInfinity())\n    return '<EC Point Infinity>';\n  return '<EC Point x: ' + this.x.fromRed().toString(16, 2) +\n      ' z: ' + this.z.fromRed().toString(16, 2) + '>';\n};\n\nPoint.prototype.isInfinity = function isInfinity() {\n  // XXX This code assumes that zero is always zero in red\n  return this.z.cmpn(0) === 0;\n};\n\nPoint.prototype.dbl = function dbl() {\n  // http://hyperelliptic.org/EFD/g1p/auto-montgom-xz.html#doubling-dbl-1987-m-3\n  // 2M + 2S + 4A\n\n  // A = X1 + Z1\n  var a = this.x.redAdd(this.z);\n  // AA = A^2\n  var aa = a.redSqr();\n  // B = X1 - Z1\n  var b = this.x.redSub(this.z);\n  // BB = B^2\n  var bb = b.redSqr();\n  // C = AA - BB\n  var c = aa.redSub(bb);\n  // X3 = AA * BB\n  var nx = aa.redMul(bb);\n  // Z3 = C * (BB + A24 * C)\n  var nz = c.redMul(bb.redAdd(this.curve.a24.redMul(c)));\n  return this.curve.point(nx, nz);\n};\n\nPoint.prototype.add = function add() {\n  throw new Error('Not supported on Montgomery curve');\n};\n\nPoint.prototype.diffAdd = function diffAdd(p, diff) {\n  // http://hyperelliptic.org/EFD/g1p/auto-montgom-xz.html#diffadd-dadd-1987-m-3\n  // 4M + 2S + 6A\n\n  // A = X2 + Z2\n  var a = this.x.redAdd(this.z);\n  // B = X2 - Z2\n  var b = this.x.redSub(this.z);\n  // C = X3 + Z3\n  var c = p.x.redAdd(p.z);\n  // D = X3 - Z3\n  var d = p.x.redSub(p.z);\n  // DA = D * A\n  var da = d.redMul(a);\n  // CB = C * B\n  var cb = c.redMul(b);\n  // X5 = Z1 * (DA + CB)^2\n  var nx = diff.z.redMul(da.redAdd(cb).redSqr());\n  // Z5 = X1 * (DA - CB)^2\n  var nz = diff.x.redMul(da.redISub(cb).redSqr());\n  return this.curve.point(nx, nz);\n};\n\nPoint.prototype.mul = function mul(k) {\n  var t = k.clone();\n  var a = this; // (N / 2) * Q + Q\n  var b = this.curve.point(null, null); // (N / 2) * Q\n  var c = this; // Q\n\n  for (var bits = []; t.cmpn(0) !== 0; t.iushrn(1))\n    bits.push(t.andln(1));\n\n  for (var i = bits.length - 1; i >= 0; i--) {\n    if (bits[i] === 0) {\n      // N * Q + Q = ((N / 2) * Q + Q)) + (N / 2) * Q\n      a = a.diffAdd(b, c);\n      // N * Q = 2 * ((N / 2) * Q + Q))\n      b = b.dbl();\n    } else {\n      // N * Q = ((N / 2) * Q + Q) + ((N / 2) * Q)\n      b = a.diffAdd(b, c);\n      // N * Q + Q = 2 * ((N / 2) * Q + Q)\n      a = a.dbl();\n    }\n  }\n  return b;\n};\n\nPoint.prototype.mulAdd = function mulAdd() {\n  throw new Error('Not supported on Montgomery curve');\n};\n\nPoint.prototype.jumlAdd = function jumlAdd() {\n  throw new Error('Not supported on Montgomery curve');\n};\n\nPoint.prototype.eq = function eq(other) {\n  return this.getX().cmp(other.getX()) === 0;\n};\n\nPoint.prototype.normalize = function normalize() {\n  this.x = this.x.redMul(this.z.redInvm());\n  this.z = this.curve.one;\n  return this;\n};\n\nPoint.prototype.getX = function getX() {\n  // Normalize coordinates\n  this.normalize();\n\n  return this.x.fromRed();\n};\n", "'use strict';\n\nvar utils = require('../utils');\nvar BN = require('bn.js');\nvar inherits = require('inherits');\nvar Base = require('./base');\n\nvar assert = utils.assert;\n\nfunction EdwardsCurve(conf) {\n  // NOTE: Important as we are creating point in Base.call()\n  this.twisted = (conf.a | 0) !== 1;\n  this.mOneA = this.twisted && (conf.a | 0) === -1;\n  this.extended = this.mOneA;\n\n  Base.call(this, 'edwards', conf);\n\n  this.a = new BN(conf.a, 16).umod(this.red.m);\n  this.a = this.a.toRed(this.red);\n  this.c = new BN(conf.c, 16).toRed(this.red);\n  this.c2 = this.c.redSqr();\n  this.d = new BN(conf.d, 16).toRed(this.red);\n  this.dd = this.d.redAdd(this.d);\n\n  assert(!this.twisted || this.c.fromRed().cmpn(1) === 0);\n  this.oneC = (conf.c | 0) === 1;\n}\ninherits(EdwardsCurve, Base);\nmodule.exports = EdwardsCurve;\n\nEdwardsCurve.prototype._mulA = function _mulA(num) {\n  if (this.mOneA)\n    return num.redNeg();\n  else\n    return this.a.redMul(num);\n};\n\nEdwardsCurve.prototype._mulC = function _mulC(num) {\n  if (this.oneC)\n    return num;\n  else\n    return this.c.redMul(num);\n};\n\n// Just for compatibility with Short curve\nEdwardsCurve.prototype.jpoint = function jpoint(x, y, z, t) {\n  return this.point(x, y, z, t);\n};\n\nEdwardsCurve.prototype.pointFromX = function pointFromX(x, odd) {\n  x = new BN(x, 16);\n  if (!x.red)\n    x = x.toRed(this.red);\n\n  var x2 = x.redSqr();\n  var rhs = this.c2.redSub(this.a.redMul(x2));\n  var lhs = this.one.redSub(this.c2.redMul(this.d).redMul(x2));\n\n  var y2 = rhs.redMul(lhs.redInvm());\n  var y = y2.redSqrt();\n  if (y.redSqr().redSub(y2).cmp(this.zero) !== 0)\n    throw new Error('invalid point');\n\n  var isOdd = y.fromRed().isOdd();\n  if (odd && !isOdd || !odd && isOdd)\n    y = y.redNeg();\n\n  return this.point(x, y);\n};\n\nEdwardsCurve.prototype.pointFromY = function pointFromY(y, odd) {\n  y = new BN(y, 16);\n  if (!y.red)\n    y = y.toRed(this.red);\n\n  // x^2 = (y^2 - c^2) / (c^2 d y^2 - a)\n  var y2 = y.redSqr();\n  var lhs = y2.redSub(this.c2);\n  var rhs = y2.redMul(this.d).redMul(this.c2).redSub(this.a);\n  var x2 = lhs.redMul(rhs.redInvm());\n\n  if (x2.cmp(this.zero) === 0) {\n    if (odd)\n      throw new Error('invalid point');\n    else\n      return this.point(this.zero, y);\n  }\n\n  var x = x2.redSqrt();\n  if (x.redSqr().redSub(x2).cmp(this.zero) !== 0)\n    throw new Error('invalid point');\n\n  if (x.fromRed().isOdd() !== odd)\n    x = x.redNeg();\n\n  return this.point(x, y);\n};\n\nEdwardsCurve.prototype.validate = function validate(point) {\n  if (point.isInfinity())\n    return true;\n\n  // Curve: A * X^2 + Y^2 = C^2 * (1 + D * X^2 * Y^2)\n  point.normalize();\n\n  var x2 = point.x.redSqr();\n  var y2 = point.y.redSqr();\n  var lhs = x2.redMul(this.a).redAdd(y2);\n  var rhs = this.c2.redMul(this.one.redAdd(this.d.redMul(x2).redMul(y2)));\n\n  return lhs.cmp(rhs) === 0;\n};\n\nfunction Point(curve, x, y, z, t) {\n  Base.BasePoint.call(this, curve, 'projective');\n  if (x === null && y === null && z === null) {\n    this.x = this.curve.zero;\n    this.y = this.curve.one;\n    this.z = this.curve.one;\n    this.t = this.curve.zero;\n    this.zOne = true;\n  } else {\n    this.x = new BN(x, 16);\n    this.y = new BN(y, 16);\n    this.z = z ? new BN(z, 16) : this.curve.one;\n    this.t = t && new BN(t, 16);\n    if (!this.x.red)\n      this.x = this.x.toRed(this.curve.red);\n    if (!this.y.red)\n      this.y = this.y.toRed(this.curve.red);\n    if (!this.z.red)\n      this.z = this.z.toRed(this.curve.red);\n    if (this.t && !this.t.red)\n      this.t = this.t.toRed(this.curve.red);\n    this.zOne = this.z === this.curve.one;\n\n    // Use extended coordinates\n    if (this.curve.extended && !this.t) {\n      this.t = this.x.redMul(this.y);\n      if (!this.zOne)\n        this.t = this.t.redMul(this.z.redInvm());\n    }\n  }\n}\ninherits(Point, Base.BasePoint);\n\nEdwardsCurve.prototype.pointFromJSON = function pointFromJSON(obj) {\n  return Point.fromJSON(this, obj);\n};\n\nEdwardsCurve.prototype.point = function point(x, y, z, t) {\n  return new Point(this, x, y, z, t);\n};\n\nPoint.fromJSON = function fromJSON(curve, obj) {\n  return new Point(curve, obj[0], obj[1], obj[2]);\n};\n\nPoint.prototype.inspect = function inspect() {\n  if (this.isInfinity())\n    return '<EC Point Infinity>';\n  return '<EC Point x: ' + this.x.fromRed().toString(16, 2) +\n      ' y: ' + this.y.fromRed().toString(16, 2) +\n      ' z: ' + this.z.fromRed().toString(16, 2) + '>';\n};\n\nPoint.prototype.isInfinity = function isInfinity() {\n  // XXX This code assumes that zero is always zero in red\n  return this.x.cmpn(0) === 0 &&\n    (this.y.cmp(this.z) === 0 ||\n    (this.zOne && this.y.cmp(this.curve.c) === 0));\n};\n\nPoint.prototype._extDbl = function _extDbl() {\n  // hyperelliptic.org/EFD/g1p/auto-twisted-extended-1.html\n  //     #doubling-dbl-2008-hwcd\n  // 4M + 4S\n\n  // A = X1^2\n  var a = this.x.redSqr();\n  // B = Y1^2\n  var b = this.y.redSqr();\n  // C = 2 * Z1^2\n  var c = this.z.redSqr();\n  c = c.redIAdd(c);\n  // D = a * A\n  var d = this.curve._mulA(a);\n  // E = (X1 + Y1)^2 - A - B\n  var e = this.x.redAdd(this.y).redSqr().redISub(a).redISub(b);\n  // G = D + B\n  var g = d.redAdd(b);\n  // F = G - C\n  var f = g.redSub(c);\n  // H = D - B\n  var h = d.redSub(b);\n  // X3 = E * F\n  var nx = e.redMul(f);\n  // Y3 = G * H\n  var ny = g.redMul(h);\n  // T3 = E * H\n  var nt = e.redMul(h);\n  // Z3 = F * G\n  var nz = f.redMul(g);\n  return this.curve.point(nx, ny, nz, nt);\n};\n\nPoint.prototype._projDbl = function _projDbl() {\n  // hyperelliptic.org/EFD/g1p/auto-twisted-projective.html\n  //     #doubling-dbl-2008-bbjlp\n  //     #doubling-dbl-2007-bl\n  // and others\n  // Generally 3M + 4S or 2M + 4S\n\n  // B = (X1 + Y1)^2\n  var b = this.x.redAdd(this.y).redSqr();\n  // C = X1^2\n  var c = this.x.redSqr();\n  // D = Y1^2\n  var d = this.y.redSqr();\n\n  var nx;\n  var ny;\n  var nz;\n  var e;\n  var h;\n  var j;\n  if (this.curve.twisted) {\n    // E = a * C\n    e = this.curve._mulA(c);\n    // F = E + D\n    var f = e.redAdd(d);\n    if (this.zOne) {\n      // X3 = (B - C - D) * (F - 2)\n      nx = b.redSub(c).redSub(d).redMul(f.redSub(this.curve.two));\n      // Y3 = F * (E - D)\n      ny = f.redMul(e.redSub(d));\n      // Z3 = F^2 - 2 * F\n      nz = f.redSqr().redSub(f).redSub(f);\n    } else {\n      // H = Z1^2\n      h = this.z.redSqr();\n      // J = F - 2 * H\n      j = f.redSub(h).redISub(h);\n      // X3 = (B-C-D)*J\n      nx = b.redSub(c).redISub(d).redMul(j);\n      // Y3 = F * (E - D)\n      ny = f.redMul(e.redSub(d));\n      // Z3 = F * J\n      nz = f.redMul(j);\n    }\n  } else {\n    // E = C + D\n    e = c.redAdd(d);\n    // H = (c * Z1)^2\n    h = this.curve._mulC(this.z).redSqr();\n    // J = E - 2 * H\n    j = e.redSub(h).redSub(h);\n    // X3 = c * (B - E) * J\n    nx = this.curve._mulC(b.redISub(e)).redMul(j);\n    // Y3 = c * E * (C - D)\n    ny = this.curve._mulC(e).redMul(c.redISub(d));\n    // Z3 = E * J\n    nz = e.redMul(j);\n  }\n  return this.curve.point(nx, ny, nz);\n};\n\nPoint.prototype.dbl = function dbl() {\n  if (this.isInfinity())\n    return this;\n\n  // Double in extended coordinates\n  if (this.curve.extended)\n    return this._extDbl();\n  else\n    return this._projDbl();\n};\n\nPoint.prototype._extAdd = function _extAdd(p) {\n  // hyperelliptic.org/EFD/g1p/auto-twisted-extended-1.html\n  //     #addition-add-2008-hwcd-3\n  // 8M\n\n  // A = (Y1 - X1) * (Y2 - X2)\n  var a = this.y.redSub(this.x).redMul(p.y.redSub(p.x));\n  // B = (Y1 + X1) * (Y2 + X2)\n  var b = this.y.redAdd(this.x).redMul(p.y.redAdd(p.x));\n  // C = T1 * k * T2\n  var c = this.t.redMul(this.curve.dd).redMul(p.t);\n  // D = Z1 * 2 * Z2\n  var d = this.z.redMul(p.z.redAdd(p.z));\n  // E = B - A\n  var e = b.redSub(a);\n  // F = D - C\n  var f = d.redSub(c);\n  // G = D + C\n  var g = d.redAdd(c);\n  // H = B + A\n  var h = b.redAdd(a);\n  // X3 = E * F\n  var nx = e.redMul(f);\n  // Y3 = G * H\n  var ny = g.redMul(h);\n  // T3 = E * H\n  var nt = e.redMul(h);\n  // Z3 = F * G\n  var nz = f.redMul(g);\n  return this.curve.point(nx, ny, nz, nt);\n};\n\nPoint.prototype._projAdd = function _projAdd(p) {\n  // hyperelliptic.org/EFD/g1p/auto-twisted-projective.html\n  //     #addition-add-2008-bbjlp\n  //     #addition-add-2007-bl\n  // 10M + 1S\n\n  // A = Z1 * Z2\n  var a = this.z.redMul(p.z);\n  // B = A^2\n  var b = a.redSqr();\n  // C = X1 * X2\n  var c = this.x.redMul(p.x);\n  // D = Y1 * Y2\n  var d = this.y.redMul(p.y);\n  // E = d * C * D\n  var e = this.curve.d.redMul(c).redMul(d);\n  // F = B - E\n  var f = b.redSub(e);\n  // G = B + E\n  var g = b.redAdd(e);\n  // X3 = A * F * ((X1 + Y1) * (X2 + Y2) - C - D)\n  var tmp = this.x.redAdd(this.y).redMul(p.x.redAdd(p.y)).redISub(c).redISub(d);\n  var nx = a.redMul(f).redMul(tmp);\n  var ny;\n  var nz;\n  if (this.curve.twisted) {\n    // Y3 = A * G * (D - a * C)\n    ny = a.redMul(g).redMul(d.redSub(this.curve._mulA(c)));\n    // Z3 = F * G\n    nz = f.redMul(g);\n  } else {\n    // Y3 = A * G * (D - C)\n    ny = a.redMul(g).redMul(d.redSub(c));\n    // Z3 = c * F * G\n    nz = this.curve._mulC(f).redMul(g);\n  }\n  return this.curve.point(nx, ny, nz);\n};\n\nPoint.prototype.add = function add(p) {\n  if (this.isInfinity())\n    return p;\n  if (p.isInfinity())\n    return this;\n\n  if (this.curve.extended)\n    return this._extAdd(p);\n  else\n    return this._projAdd(p);\n};\n\nPoint.prototype.mul = function mul(k) {\n  if (this._hasDoubles(k))\n    return this.curve._fixedNafMul(this, k);\n  else\n    return this.curve._wnafMul(this, k);\n};\n\nPoint.prototype.mulAdd = function mulAdd(k1, p, k2) {\n  return this.curve._wnafMulAdd(1, [ this, p ], [ k1, k2 ], 2, false);\n};\n\nPoint.prototype.jmulAdd = function jmulAdd(k1, p, k2) {\n  return this.curve._wnafMulAdd(1, [ this, p ], [ k1, k2 ], 2, true);\n};\n\nPoint.prototype.normalize = function normalize() {\n  if (this.zOne)\n    return this;\n\n  // Normalize coordinates\n  var zi = this.z.redInvm();\n  this.x = this.x.redMul(zi);\n  this.y = this.y.redMul(zi);\n  if (this.t)\n    this.t = this.t.redMul(zi);\n  this.z = this.curve.one;\n  this.zOne = true;\n  return this;\n};\n\nPoint.prototype.neg = function neg() {\n  return this.curve.point(this.x.redNeg(),\n    this.y,\n    this.z,\n    this.t && this.t.redNeg());\n};\n\nPoint.prototype.getX = function getX() {\n  this.normalize();\n  return this.x.fromRed();\n};\n\nPoint.prototype.getY = function getY() {\n  this.normalize();\n  return this.y.fromRed();\n};\n\nPoint.prototype.eq = function eq(other) {\n  return this === other ||\n         this.getX().cmp(other.getX()) === 0 &&\n         this.getY().cmp(other.getY()) === 0;\n};\n\nPoint.prototype.eqXToP = function eqXToP(x) {\n  var rx = x.toRed(this.curve.red).redMul(this.z);\n  if (this.x.cmp(rx) === 0)\n    return true;\n\n  var xc = x.clone();\n  var t = this.curve.redN.redMul(this.z);\n  for (;;) {\n    xc.iadd(this.curve.n);\n    if (xc.cmp(this.curve.p) >= 0)\n      return false;\n\n    rx.redIAdd(t);\n    if (this.x.cmp(rx) === 0)\n      return true;\n  }\n};\n\n// Compatibility with BaseCurve\nPoint.prototype.toP = Point.prototype.normalize;\nPoint.prototype.mixedAdd = Point.prototype.add;\n", "'use strict';\n\nvar curve = exports;\n\ncurve.base = require('./base');\ncurve.short = require('./short');\ncurve.mont = require('./mont');\ncurve.edwards = require('./edwards');\n", "'use strict';\n\nvar assert = require('minimalistic-assert');\nvar inherits = require('inherits');\n\nexports.inherits = inherits;\n\nfunction isSurrogatePair(msg, i) {\n  if ((msg.charCodeAt(i) & 0xFC00) !== 0xD800) {\n    return false;\n  }\n  if (i < 0 || i + 1 >= msg.length) {\n    return false;\n  }\n  return (msg.charCodeAt(i + 1) & 0xFC00) === 0xDC00;\n}\n\nfunction toArray(msg, enc) {\n  if (Array.isArray(msg))\n    return msg.slice();\n  if (!msg)\n    return [];\n  var res = [];\n  if (typeof msg === 'string') {\n    if (!enc) {\n      // Inspired by stringToUtf8ByteArray() in closure-library by Google\n      // https://github.com/google/closure-library/blob/8598d87242af59aac233270742c8984e2b2bdbe0/closure/goog/crypt/crypt.js#L117-L143\n      // Apache License 2.0\n      // https://github.com/google/closure-library/blob/master/LICENSE\n      var p = 0;\n      for (var i = 0; i < msg.length; i++) {\n        var c = msg.charCodeAt(i);\n        if (c < 128) {\n          res[p++] = c;\n        } else if (c < 2048) {\n          res[p++] = (c >> 6) | 192;\n          res[p++] = (c & 63) | 128;\n        } else if (isSurrogatePair(msg, i)) {\n          c = 0x10000 + ((c & 0x03FF) << 10) + (msg.charCodeAt(++i) & 0x03FF);\n          res[p++] = (c >> 18) | 240;\n          res[p++] = ((c >> 12) & 63) | 128;\n          res[p++] = ((c >> 6) & 63) | 128;\n          res[p++] = (c & 63) | 128;\n        } else {\n          res[p++] = (c >> 12) | 224;\n          res[p++] = ((c >> 6) & 63) | 128;\n          res[p++] = (c & 63) | 128;\n        }\n      }\n    } else if (enc === 'hex') {\n      msg = msg.replace(/[^a-z0-9]+/ig, '');\n      if (msg.length % 2 !== 0)\n        msg = '0' + msg;\n      for (i = 0; i < msg.length; i += 2)\n        res.push(parseInt(msg[i] + msg[i + 1], 16));\n    }\n  } else {\n    for (i = 0; i < msg.length; i++)\n      res[i] = msg[i] | 0;\n  }\n  return res;\n}\nexports.toArray = toArray;\n\nfunction toHex(msg) {\n  var res = '';\n  for (var i = 0; i < msg.length; i++)\n    res += zero2(msg[i].toString(16));\n  return res;\n}\nexports.toHex = toHex;\n\nfunction htonl(w) {\n  var res = (w >>> 24) |\n            ((w >>> 8) & 0xff00) |\n            ((w << 8) & 0xff0000) |\n            ((w & 0xff) << 24);\n  return res >>> 0;\n}\nexports.htonl = htonl;\n\nfunction toHex32(msg, endian) {\n  var res = '';\n  for (var i = 0; i < msg.length; i++) {\n    var w = msg[i];\n    if (endian === 'little')\n      w = htonl(w);\n    res += zero8(w.toString(16));\n  }\n  return res;\n}\nexports.toHex32 = toHex32;\n\nfunction zero2(word) {\n  if (word.length === 1)\n    return '0' + word;\n  else\n    return word;\n}\nexports.zero2 = zero2;\n\nfunction zero8(word) {\n  if (word.length === 7)\n    return '0' + word;\n  else if (word.length === 6)\n    return '00' + word;\n  else if (word.length === 5)\n    return '000' + word;\n  else if (word.length === 4)\n    return '0000' + word;\n  else if (word.length === 3)\n    return '00000' + word;\n  else if (word.length === 2)\n    return '000000' + word;\n  else if (word.length === 1)\n    return '0000000' + word;\n  else\n    return word;\n}\nexports.zero8 = zero8;\n\nfunction join32(msg, start, end, endian) {\n  var len = end - start;\n  assert(len % 4 === 0);\n  var res = new Array(len / 4);\n  for (var i = 0, k = start; i < res.length; i++, k += 4) {\n    var w;\n    if (endian === 'big')\n      w = (msg[k] << 24) | (msg[k + 1] << 16) | (msg[k + 2] << 8) | msg[k + 3];\n    else\n      w = (msg[k + 3] << 24) | (msg[k + 2] << 16) | (msg[k + 1] << 8) | msg[k];\n    res[i] = w >>> 0;\n  }\n  return res;\n}\nexports.join32 = join32;\n\nfunction split32(msg, endian) {\n  var res = new Array(msg.length * 4);\n  for (var i = 0, k = 0; i < msg.length; i++, k += 4) {\n    var m = msg[i];\n    if (endian === 'big') {\n      res[k] = m >>> 24;\n      res[k + 1] = (m >>> 16) & 0xff;\n      res[k + 2] = (m >>> 8) & 0xff;\n      res[k + 3] = m & 0xff;\n    } else {\n      res[k + 3] = m >>> 24;\n      res[k + 2] = (m >>> 16) & 0xff;\n      res[k + 1] = (m >>> 8) & 0xff;\n      res[k] = m & 0xff;\n    }\n  }\n  return res;\n}\nexports.split32 = split32;\n\nfunction rotr32(w, b) {\n  return (w >>> b) | (w << (32 - b));\n}\nexports.rotr32 = rotr32;\n\nfunction rotl32(w, b) {\n  return (w << b) | (w >>> (32 - b));\n}\nexports.rotl32 = rotl32;\n\nfunction sum32(a, b) {\n  return (a + b) >>> 0;\n}\nexports.sum32 = sum32;\n\nfunction sum32_3(a, b, c) {\n  return (a + b + c) >>> 0;\n}\nexports.sum32_3 = sum32_3;\n\nfunction sum32_4(a, b, c, d) {\n  return (a + b + c + d) >>> 0;\n}\nexports.sum32_4 = sum32_4;\n\nfunction sum32_5(a, b, c, d, e) {\n  return (a + b + c + d + e) >>> 0;\n}\nexports.sum32_5 = sum32_5;\n\nfunction sum64(buf, pos, ah, al) {\n  var bh = buf[pos];\n  var bl = buf[pos + 1];\n\n  var lo = (al + bl) >>> 0;\n  var hi = (lo < al ? 1 : 0) + ah + bh;\n  buf[pos] = hi >>> 0;\n  buf[pos + 1] = lo;\n}\nexports.sum64 = sum64;\n\nfunction sum64_hi(ah, al, bh, bl) {\n  var lo = (al + bl) >>> 0;\n  var hi = (lo < al ? 1 : 0) + ah + bh;\n  return hi >>> 0;\n}\nexports.sum64_hi = sum64_hi;\n\nfunction sum64_lo(ah, al, bh, bl) {\n  var lo = al + bl;\n  return lo >>> 0;\n}\nexports.sum64_lo = sum64_lo;\n\nfunction sum64_4_hi(ah, al, bh, bl, ch, cl, dh, dl) {\n  var carry = 0;\n  var lo = al;\n  lo = (lo + bl) >>> 0;\n  carry += lo < al ? 1 : 0;\n  lo = (lo + cl) >>> 0;\n  carry += lo < cl ? 1 : 0;\n  lo = (lo + dl) >>> 0;\n  carry += lo < dl ? 1 : 0;\n\n  var hi = ah + bh + ch + dh + carry;\n  return hi >>> 0;\n}\nexports.sum64_4_hi = sum64_4_hi;\n\nfunction sum64_4_lo(ah, al, bh, bl, ch, cl, dh, dl) {\n  var lo = al + bl + cl + dl;\n  return lo >>> 0;\n}\nexports.sum64_4_lo = sum64_4_lo;\n\nfunction sum64_5_hi(ah, al, bh, bl, ch, cl, dh, dl, eh, el) {\n  var carry = 0;\n  var lo = al;\n  lo = (lo + bl) >>> 0;\n  carry += lo < al ? 1 : 0;\n  lo = (lo + cl) >>> 0;\n  carry += lo < cl ? 1 : 0;\n  lo = (lo + dl) >>> 0;\n  carry += lo < dl ? 1 : 0;\n  lo = (lo + el) >>> 0;\n  carry += lo < el ? 1 : 0;\n\n  var hi = ah + bh + ch + dh + eh + carry;\n  return hi >>> 0;\n}\nexports.sum64_5_hi = sum64_5_hi;\n\nfunction sum64_5_lo(ah, al, bh, bl, ch, cl, dh, dl, eh, el) {\n  var lo = al + bl + cl + dl + el;\n\n  return lo >>> 0;\n}\nexports.sum64_5_lo = sum64_5_lo;\n\nfunction rotr64_hi(ah, al, num) {\n  var r = (al << (32 - num)) | (ah >>> num);\n  return r >>> 0;\n}\nexports.rotr64_hi = rotr64_hi;\n\nfunction rotr64_lo(ah, al, num) {\n  var r = (ah << (32 - num)) | (al >>> num);\n  return r >>> 0;\n}\nexports.rotr64_lo = rotr64_lo;\n\nfunction shr64_hi(ah, al, num) {\n  return ah >>> num;\n}\nexports.shr64_hi = shr64_hi;\n\nfunction shr64_lo(ah, al, num) {\n  var r = (ah << (32 - num)) | (al >>> num);\n  return r >>> 0;\n}\nexports.shr64_lo = shr64_lo;\n", "'use strict';\n\nvar utils = require('./utils');\nvar assert = require('minimalistic-assert');\n\nfunction BlockHash() {\n  this.pending = null;\n  this.pendingTotal = 0;\n  this.blockSize = this.constructor.blockSize;\n  this.outSize = this.constructor.outSize;\n  this.hmacStrength = this.constructor.hmacStrength;\n  this.padLength = this.constructor.padLength / 8;\n  this.endian = 'big';\n\n  this._delta8 = this.blockSize / 8;\n  this._delta32 = this.blockSize / 32;\n}\nexports.BlockHash = BlockHash;\n\nBlockHash.prototype.update = function update(msg, enc) {\n  // Convert message to array, pad it, and join into 32bit blocks\n  msg = utils.toArray(msg, enc);\n  if (!this.pending)\n    this.pending = msg;\n  else\n    this.pending = this.pending.concat(msg);\n  this.pendingTotal += msg.length;\n\n  // Enough data, try updating\n  if (this.pending.length >= this._delta8) {\n    msg = this.pending;\n\n    // Process pending data in blocks\n    var r = msg.length % this._delta8;\n    this.pending = msg.slice(msg.length - r, msg.length);\n    if (this.pending.length === 0)\n      this.pending = null;\n\n    msg = utils.join32(msg, 0, msg.length - r, this.endian);\n    for (var i = 0; i < msg.length; i += this._delta32)\n      this._update(msg, i, i + this._delta32);\n  }\n\n  return this;\n};\n\nBlockHash.prototype.digest = function digest(enc) {\n  this.update(this._pad());\n  assert(this.pending === null);\n\n  return this._digest(enc);\n};\n\nBlockHash.prototype._pad = function pad() {\n  var len = this.pendingTotal;\n  var bytes = this._delta8;\n  var k = bytes - ((len + this.padLength) % bytes);\n  var res = new Array(k + this.padLength);\n  res[0] = 0x80;\n  for (var i = 1; i < k; i++)\n    res[i] = 0;\n\n  // Append length\n  len <<= 3;\n  if (this.endian === 'big') {\n    for (var t = 8; t < this.padLength; t++)\n      res[i++] = 0;\n\n    res[i++] = 0;\n    res[i++] = 0;\n    res[i++] = 0;\n    res[i++] = 0;\n    res[i++] = (len >>> 24) & 0xff;\n    res[i++] = (len >>> 16) & 0xff;\n    res[i++] = (len >>> 8) & 0xff;\n    res[i++] = len & 0xff;\n  } else {\n    res[i++] = len & 0xff;\n    res[i++] = (len >>> 8) & 0xff;\n    res[i++] = (len >>> 16) & 0xff;\n    res[i++] = (len >>> 24) & 0xff;\n    res[i++] = 0;\n    res[i++] = 0;\n    res[i++] = 0;\n    res[i++] = 0;\n\n    for (t = 8; t < this.padLength; t++)\n      res[i++] = 0;\n  }\n\n  return res;\n};\n", "'use strict';\n\nvar utils = require('../utils');\nvar rotr32 = utils.rotr32;\n\nfunction ft_1(s, x, y, z) {\n  if (s === 0)\n    return ch32(x, y, z);\n  if (s === 1 || s === 3)\n    return p32(x, y, z);\n  if (s === 2)\n    return maj32(x, y, z);\n}\nexports.ft_1 = ft_1;\n\nfunction ch32(x, y, z) {\n  return (x & y) ^ ((~x) & z);\n}\nexports.ch32 = ch32;\n\nfunction maj32(x, y, z) {\n  return (x & y) ^ (x & z) ^ (y & z);\n}\nexports.maj32 = maj32;\n\nfunction p32(x, y, z) {\n  return x ^ y ^ z;\n}\nexports.p32 = p32;\n\nfunction s0_256(x) {\n  return rotr32(x, 2) ^ rotr32(x, 13) ^ rotr32(x, 22);\n}\nexports.s0_256 = s0_256;\n\nfunction s1_256(x) {\n  return rotr32(x, 6) ^ rotr32(x, 11) ^ rotr32(x, 25);\n}\nexports.s1_256 = s1_256;\n\nfunction g0_256(x) {\n  return rotr32(x, 7) ^ rotr32(x, 18) ^ (x >>> 3);\n}\nexports.g0_256 = g0_256;\n\nfunction g1_256(x) {\n  return rotr32(x, 17) ^ rotr32(x, 19) ^ (x >>> 10);\n}\nexports.g1_256 = g1_256;\n", "'use strict';\n\nvar utils = require('../utils');\nvar common = require('../common');\nvar shaCommon = require('./common');\n\nvar rotl32 = utils.rotl32;\nvar sum32 = utils.sum32;\nvar sum32_5 = utils.sum32_5;\nvar ft_1 = shaCommon.ft_1;\nvar BlockHash = common.BlockHash;\n\nvar sha1_K = [\n  0x5A827999, 0x6ED9EBA1,\n  0x8F1BBCDC, 0xCA62C1D6\n];\n\nfunction SHA1() {\n  if (!(this instanceof SHA1))\n    return new SHA1();\n\n  BlockHash.call(this);\n  this.h = [\n    0x67452301, 0xefcdab89, 0x98badcfe,\n    0x10325476, 0xc3d2e1f0 ];\n  this.W = new Array(80);\n}\n\nutils.inherits(SHA1, BlockHash);\nmodule.exports = SHA1;\n\nSHA1.blockSize = 512;\nSHA1.outSize = 160;\nSHA1.hmacStrength = 80;\nSHA1.padLength = 64;\n\nSHA1.prototype._update = function _update(msg, start) {\n  var W = this.W;\n\n  for (var i = 0; i < 16; i++)\n    W[i] = msg[start + i];\n\n  for(; i < W.length; i++)\n    W[i] = rotl32(W[i - 3] ^ W[i - 8] ^ W[i - 14] ^ W[i - 16], 1);\n\n  var a = this.h[0];\n  var b = this.h[1];\n  var c = this.h[2];\n  var d = this.h[3];\n  var e = this.h[4];\n\n  for (i = 0; i < W.length; i++) {\n    var s = ~~(i / 20);\n    var t = sum32_5(rotl32(a, 5), ft_1(s, b, c, d), e, W[i], sha1_K[s]);\n    e = d;\n    d = c;\n    c = rotl32(b, 30);\n    b = a;\n    a = t;\n  }\n\n  this.h[0] = sum32(this.h[0], a);\n  this.h[1] = sum32(this.h[1], b);\n  this.h[2] = sum32(this.h[2], c);\n  this.h[3] = sum32(this.h[3], d);\n  this.h[4] = sum32(this.h[4], e);\n};\n\nSHA1.prototype._digest = function digest(enc) {\n  if (enc === 'hex')\n    return utils.toHex32(this.h, 'big');\n  else\n    return utils.split32(this.h, 'big');\n};\n", "'use strict';\n\nvar utils = require('../utils');\nvar common = require('../common');\nvar shaCommon = require('./common');\nvar assert = require('minimalistic-assert');\n\nvar sum32 = utils.sum32;\nvar sum32_4 = utils.sum32_4;\nvar sum32_5 = utils.sum32_5;\nvar ch32 = shaCommon.ch32;\nvar maj32 = shaCommon.maj32;\nvar s0_256 = shaCommon.s0_256;\nvar s1_256 = shaCommon.s1_256;\nvar g0_256 = shaCommon.g0_256;\nvar g1_256 = shaCommon.g1_256;\n\nvar BlockHash = common.BlockHash;\n\nvar sha256_K = [\n  0x428a2f98, 0x71374491, 0xb5c0fbcf, 0xe9b5dba5,\n  0x3956c25b, 0x59f111f1, 0x923f82a4, 0xab1c5ed5,\n  0xd807aa98, 0x12835b01, 0x243185be, 0x550c7dc3,\n  0x72be5d74, 0x80deb1fe, 0x9bdc06a7, 0xc19bf174,\n  0xe49b69c1, 0xefbe4786, 0x0fc19dc6, 0x240ca1cc,\n  0x2de92c6f, 0x4a7484aa, 0x5cb0a9dc, 0x76f988da,\n  0x983e5152, 0xa831c66d, 0xb00327c8, 0xbf597fc7,\n  0xc6e00bf3, 0xd5a79147, 0x06ca6351, 0x14292967,\n  0x27b70a85, 0x2e1b2138, 0x4d2c6dfc, 0x53380d13,\n  0x650a7354, 0x766a0abb, 0x81c2c92e, 0x92722c85,\n  0xa2bfe8a1, 0xa81a664b, 0xc24b8b70, 0xc76c51a3,\n  0xd192e819, 0xd6990624, 0xf40e3585, 0x106aa070,\n  0x19a4c116, 0x1e376c08, 0x2748774c, 0x34b0bcb5,\n  0x391c0cb3, 0x4ed8aa4a, 0x5b9cca4f, 0x682e6ff3,\n  0x748f82ee, 0x78a5636f, 0x84c87814, 0x8cc70208,\n  0x90befffa, 0xa4506ceb, 0xbef9a3f7, 0xc67178f2\n];\n\nfunction SHA256() {\n  if (!(this instanceof SHA256))\n    return new SHA256();\n\n  BlockHash.call(this);\n  this.h = [\n    0x6a09e667, 0xbb67ae85, 0x3c6ef372, 0xa54ff53a,\n    0x510e527f, 0x9b05688c, 0x1f83d9ab, 0x5be0cd19\n  ];\n  this.k = sha256_K;\n  this.W = new Array(64);\n}\nutils.inherits(SHA256, BlockHash);\nmodule.exports = SHA256;\n\nSHA256.blockSize = 512;\nSHA256.outSize = 256;\nSHA256.hmacStrength = 192;\nSHA256.padLength = 64;\n\nSHA256.prototype._update = function _update(msg, start) {\n  var W = this.W;\n\n  for (var i = 0; i < 16; i++)\n    W[i] = msg[start + i];\n  for (; i < W.length; i++)\n    W[i] = sum32_4(g1_256(W[i - 2]), W[i - 7], g0_256(W[i - 15]), W[i - 16]);\n\n  var a = this.h[0];\n  var b = this.h[1];\n  var c = this.h[2];\n  var d = this.h[3];\n  var e = this.h[4];\n  var f = this.h[5];\n  var g = this.h[6];\n  var h = this.h[7];\n\n  assert(this.k.length === W.length);\n  for (i = 0; i < W.length; i++) {\n    var T1 = sum32_5(h, s1_256(e), ch32(e, f, g), this.k[i], W[i]);\n    var T2 = sum32(s0_256(a), maj32(a, b, c));\n    h = g;\n    g = f;\n    f = e;\n    e = sum32(d, T1);\n    d = c;\n    c = b;\n    b = a;\n    a = sum32(T1, T2);\n  }\n\n  this.h[0] = sum32(this.h[0], a);\n  this.h[1] = sum32(this.h[1], b);\n  this.h[2] = sum32(this.h[2], c);\n  this.h[3] = sum32(this.h[3], d);\n  this.h[4] = sum32(this.h[4], e);\n  this.h[5] = sum32(this.h[5], f);\n  this.h[6] = sum32(this.h[6], g);\n  this.h[7] = sum32(this.h[7], h);\n};\n\nSHA256.prototype._digest = function digest(enc) {\n  if (enc === 'hex')\n    return utils.toHex32(this.h, 'big');\n  else\n    return utils.split32(this.h, 'big');\n};\n", "'use strict';\n\nvar utils = require('../utils');\nvar SHA256 = require('./256');\n\nfunction SHA224() {\n  if (!(this instanceof SHA224))\n    return new SHA224();\n\n  SHA256.call(this);\n  this.h = [\n    0xc1059ed8, 0x367cd507, 0x3070dd17, 0xf70e5939,\n    0xffc00b31, 0x68581511, 0x64f98fa7, 0xbefa4fa4 ];\n}\nutils.inherits(SHA224, SHA256);\nmodule.exports = SHA224;\n\nSHA224.blockSize = 512;\nSHA224.outSize = 224;\nSHA224.hmacStrength = 192;\nSHA224.padLength = 64;\n\nSHA224.prototype._digest = function digest(enc) {\n  // Just truncate output\n  if (enc === 'hex')\n    return utils.toHex32(this.h.slice(0, 7), 'big');\n  else\n    return utils.split32(this.h.slice(0, 7), 'big');\n};\n\n", "'use strict';\n\nvar utils = require('../utils');\nvar common = require('../common');\nvar assert = require('minimalistic-assert');\n\nvar rotr64_hi = utils.rotr64_hi;\nvar rotr64_lo = utils.rotr64_lo;\nvar shr64_hi = utils.shr64_hi;\nvar shr64_lo = utils.shr64_lo;\nvar sum64 = utils.sum64;\nvar sum64_hi = utils.sum64_hi;\nvar sum64_lo = utils.sum64_lo;\nvar sum64_4_hi = utils.sum64_4_hi;\nvar sum64_4_lo = utils.sum64_4_lo;\nvar sum64_5_hi = utils.sum64_5_hi;\nvar sum64_5_lo = utils.sum64_5_lo;\n\nvar BlockHash = common.BlockHash;\n\nvar sha512_K = [\n  0x428a2f98, 0xd728ae22, 0x71374491, 0x23ef65cd,\n  0xb5c0fbcf, 0xec4d3b2f, 0xe9b5dba5, 0x8189dbbc,\n  0x3956c25b, 0xf348b538, 0x59f111f1, 0xb605d019,\n  0x923f82a4, 0xaf194f9b, 0xab1c5ed5, 0xda6d8118,\n  0xd807aa98, 0xa3030242, 0x12835b01, 0x45706fbe,\n  0x243185be, 0x4ee4b28c, 0x550c7dc3, 0xd5ffb4e2,\n  0x72be5d74, 0xf27b896f, 0x80deb1fe, 0x3b1696b1,\n  0x9bdc06a7, 0x25c71235, 0xc19bf174, 0xcf692694,\n  0xe49b69c1, 0x9ef14ad2, 0xefbe4786, 0x384f25e3,\n  0x0fc19dc6, 0x8b8cd5b5, 0x240ca1cc, 0x77ac9c65,\n  0x2de92c6f, 0x592b0275, 0x4a7484aa, 0x6ea6e483,\n  0x5cb0a9dc, 0xbd41fbd4, 0x76f988da, 0x831153b5,\n  0x983e5152, 0xee66dfab, 0xa831c66d, 0x2db43210,\n  0xb00327c8, 0x98fb213f, 0xbf597fc7, 0xbeef0ee4,\n  0xc6e00bf3, 0x3da88fc2, 0xd5a79147, 0x930aa725,\n  0x06ca6351, 0xe003826f, 0x14292967, 0x0a0e6e70,\n  0x27b70a85, 0x46d22ffc, 0x2e1b2138, 0x5c26c926,\n  0x4d2c6dfc, 0x5ac42aed, 0x53380d13, 0x9d95b3df,\n  0x650a7354, 0x8baf63de, 0x766a0abb, 0x3c77b2a8,\n  0x81c2c92e, 0x47edaee6, 0x92722c85, 0x1482353b,\n  0xa2bfe8a1, 0x4cf10364, 0xa81a664b, 0xbc423001,\n  0xc24b8b70, 0xd0f89791, 0xc76c51a3, 0x0654be30,\n  0xd192e819, 0xd6ef5218, 0xd6990624, 0x5565a910,\n  0xf40e3585, 0x5771202a, 0x106aa070, 0x32bbd1b8,\n  0x19a4c116, 0xb8d2d0c8, 0x1e376c08, 0x5141ab53,\n  0x2748774c, 0xdf8eeb99, 0x34b0bcb5, 0xe19b48a8,\n  0x391c0cb3, 0xc5c95a63, 0x4ed8aa4a, 0xe3418acb,\n  0x5b9cca4f, 0x7763e373, 0x682e6ff3, 0xd6b2b8a3,\n  0x748f82ee, 0x5defb2fc, 0x78a5636f, 0x43172f60,\n  0x84c87814, 0xa1f0ab72, 0x8cc70208, 0x1a6439ec,\n  0x90befffa, 0x23631e28, 0xa4506ceb, 0xde82bde9,\n  0xbef9a3f7, 0xb2c67915, 0xc67178f2, 0xe372532b,\n  0xca273ece, 0xea26619c, 0xd186b8c7, 0x21c0c207,\n  0xeada7dd6, 0xcde0eb1e, 0xf57d4f7f, 0xee6ed178,\n  0x06f067aa, 0x72176fba, 0x0a637dc5, 0xa2c898a6,\n  0x113f9804, 0xbef90dae, 0x1b710b35, 0x131c471b,\n  0x28db77f5, 0x23047d84, 0x32caab7b, 0x40c72493,\n  0x3c9ebe0a, 0x15c9bebc, 0x431d67c4, 0x9c100d4c,\n  0x4cc5d4be, 0xcb3e42b6, 0x597f299c, 0xfc657e2a,\n  0x5fcb6fab, 0x3ad6faec, 0x6c44198c, 0x4a475817\n];\n\nfunction SHA512() {\n  if (!(this instanceof SHA512))\n    return new SHA512();\n\n  BlockHash.call(this);\n  this.h = [\n    0x6a09e667, 0xf3bcc908,\n    0xbb67ae85, 0x84caa73b,\n    0x3c6ef372, 0xfe94f82b,\n    0xa54ff53a, 0x5f1d36f1,\n    0x510e527f, 0xade682d1,\n    0x9b05688c, 0x2b3e6c1f,\n    0x1f83d9ab, 0xfb41bd6b,\n    0x5be0cd19, 0x137e2179 ];\n  this.k = sha512_K;\n  this.W = new Array(160);\n}\nutils.inherits(SHA512, BlockHash);\nmodule.exports = SHA512;\n\nSHA512.blockSize = 1024;\nSHA512.outSize = 512;\nSHA512.hmacStrength = 192;\nSHA512.padLength = 128;\n\nSHA512.prototype._prepareBlock = function _prepareBlock(msg, start) {\n  var W = this.W;\n\n  // 32 x 32bit words\n  for (var i = 0; i < 32; i++)\n    W[i] = msg[start + i];\n  for (; i < W.length; i += 2) {\n    var c0_hi = g1_512_hi(W[i - 4], W[i - 3]);  // i - 2\n    var c0_lo = g1_512_lo(W[i - 4], W[i - 3]);\n    var c1_hi = W[i - 14];  // i - 7\n    var c1_lo = W[i - 13];\n    var c2_hi = g0_512_hi(W[i - 30], W[i - 29]);  // i - 15\n    var c2_lo = g0_512_lo(W[i - 30], W[i - 29]);\n    var c3_hi = W[i - 32];  // i - 16\n    var c3_lo = W[i - 31];\n\n    W[i] = sum64_4_hi(\n      c0_hi, c0_lo,\n      c1_hi, c1_lo,\n      c2_hi, c2_lo,\n      c3_hi, c3_lo);\n    W[i + 1] = sum64_4_lo(\n      c0_hi, c0_lo,\n      c1_hi, c1_lo,\n      c2_hi, c2_lo,\n      c3_hi, c3_lo);\n  }\n};\n\nSHA512.prototype._update = function _update(msg, start) {\n  this._prepareBlock(msg, start);\n\n  var W = this.W;\n\n  var ah = this.h[0];\n  var al = this.h[1];\n  var bh = this.h[2];\n  var bl = this.h[3];\n  var ch = this.h[4];\n  var cl = this.h[5];\n  var dh = this.h[6];\n  var dl = this.h[7];\n  var eh = this.h[8];\n  var el = this.h[9];\n  var fh = this.h[10];\n  var fl = this.h[11];\n  var gh = this.h[12];\n  var gl = this.h[13];\n  var hh = this.h[14];\n  var hl = this.h[15];\n\n  assert(this.k.length === W.length);\n  for (var i = 0; i < W.length; i += 2) {\n    var c0_hi = hh;\n    var c0_lo = hl;\n    var c1_hi = s1_512_hi(eh, el);\n    var c1_lo = s1_512_lo(eh, el);\n    var c2_hi = ch64_hi(eh, el, fh, fl, gh, gl);\n    var c2_lo = ch64_lo(eh, el, fh, fl, gh, gl);\n    var c3_hi = this.k[i];\n    var c3_lo = this.k[i + 1];\n    var c4_hi = W[i];\n    var c4_lo = W[i + 1];\n\n    var T1_hi = sum64_5_hi(\n      c0_hi, c0_lo,\n      c1_hi, c1_lo,\n      c2_hi, c2_lo,\n      c3_hi, c3_lo,\n      c4_hi, c4_lo);\n    var T1_lo = sum64_5_lo(\n      c0_hi, c0_lo,\n      c1_hi, c1_lo,\n      c2_hi, c2_lo,\n      c3_hi, c3_lo,\n      c4_hi, c4_lo);\n\n    c0_hi = s0_512_hi(ah, al);\n    c0_lo = s0_512_lo(ah, al);\n    c1_hi = maj64_hi(ah, al, bh, bl, ch, cl);\n    c1_lo = maj64_lo(ah, al, bh, bl, ch, cl);\n\n    var T2_hi = sum64_hi(c0_hi, c0_lo, c1_hi, c1_lo);\n    var T2_lo = sum64_lo(c0_hi, c0_lo, c1_hi, c1_lo);\n\n    hh = gh;\n    hl = gl;\n\n    gh = fh;\n    gl = fl;\n\n    fh = eh;\n    fl = el;\n\n    eh = sum64_hi(dh, dl, T1_hi, T1_lo);\n    el = sum64_lo(dl, dl, T1_hi, T1_lo);\n\n    dh = ch;\n    dl = cl;\n\n    ch = bh;\n    cl = bl;\n\n    bh = ah;\n    bl = al;\n\n    ah = sum64_hi(T1_hi, T1_lo, T2_hi, T2_lo);\n    al = sum64_lo(T1_hi, T1_lo, T2_hi, T2_lo);\n  }\n\n  sum64(this.h, 0, ah, al);\n  sum64(this.h, 2, bh, bl);\n  sum64(this.h, 4, ch, cl);\n  sum64(this.h, 6, dh, dl);\n  sum64(this.h, 8, eh, el);\n  sum64(this.h, 10, fh, fl);\n  sum64(this.h, 12, gh, gl);\n  sum64(this.h, 14, hh, hl);\n};\n\nSHA512.prototype._digest = function digest(enc) {\n  if (enc === 'hex')\n    return utils.toHex32(this.h, 'big');\n  else\n    return utils.split32(this.h, 'big');\n};\n\nfunction ch64_hi(xh, xl, yh, yl, zh) {\n  var r = (xh & yh) ^ ((~xh) & zh);\n  if (r < 0)\n    r += 0x100000000;\n  return r;\n}\n\nfunction ch64_lo(xh, xl, yh, yl, zh, zl) {\n  var r = (xl & yl) ^ ((~xl) & zl);\n  if (r < 0)\n    r += 0x100000000;\n  return r;\n}\n\nfunction maj64_hi(xh, xl, yh, yl, zh) {\n  var r = (xh & yh) ^ (xh & zh) ^ (yh & zh);\n  if (r < 0)\n    r += 0x100000000;\n  return r;\n}\n\nfunction maj64_lo(xh, xl, yh, yl, zh, zl) {\n  var r = (xl & yl) ^ (xl & zl) ^ (yl & zl);\n  if (r < 0)\n    r += 0x100000000;\n  return r;\n}\n\nfunction s0_512_hi(xh, xl) {\n  var c0_hi = rotr64_hi(xh, xl, 28);\n  var c1_hi = rotr64_hi(xl, xh, 2);  // 34\n  var c2_hi = rotr64_hi(xl, xh, 7);  // 39\n\n  var r = c0_hi ^ c1_hi ^ c2_hi;\n  if (r < 0)\n    r += 0x100000000;\n  return r;\n}\n\nfunction s0_512_lo(xh, xl) {\n  var c0_lo = rotr64_lo(xh, xl, 28);\n  var c1_lo = rotr64_lo(xl, xh, 2);  // 34\n  var c2_lo = rotr64_lo(xl, xh, 7);  // 39\n\n  var r = c0_lo ^ c1_lo ^ c2_lo;\n  if (r < 0)\n    r += 0x100000000;\n  return r;\n}\n\nfunction s1_512_hi(xh, xl) {\n  var c0_hi = rotr64_hi(xh, xl, 14);\n  var c1_hi = rotr64_hi(xh, xl, 18);\n  var c2_hi = rotr64_hi(xl, xh, 9);  // 41\n\n  var r = c0_hi ^ c1_hi ^ c2_hi;\n  if (r < 0)\n    r += 0x100000000;\n  return r;\n}\n\nfunction s1_512_lo(xh, xl) {\n  var c0_lo = rotr64_lo(xh, xl, 14);\n  var c1_lo = rotr64_lo(xh, xl, 18);\n  var c2_lo = rotr64_lo(xl, xh, 9);  // 41\n\n  var r = c0_lo ^ c1_lo ^ c2_lo;\n  if (r < 0)\n    r += 0x100000000;\n  return r;\n}\n\nfunction g0_512_hi(xh, xl) {\n  var c0_hi = rotr64_hi(xh, xl, 1);\n  var c1_hi = rotr64_hi(xh, xl, 8);\n  var c2_hi = shr64_hi(xh, xl, 7);\n\n  var r = c0_hi ^ c1_hi ^ c2_hi;\n  if (r < 0)\n    r += 0x100000000;\n  return r;\n}\n\nfunction g0_512_lo(xh, xl) {\n  var c0_lo = rotr64_lo(xh, xl, 1);\n  var c1_lo = rotr64_lo(xh, xl, 8);\n  var c2_lo = shr64_lo(xh, xl, 7);\n\n  var r = c0_lo ^ c1_lo ^ c2_lo;\n  if (r < 0)\n    r += 0x100000000;\n  return r;\n}\n\nfunction g1_512_hi(xh, xl) {\n  var c0_hi = rotr64_hi(xh, xl, 19);\n  var c1_hi = rotr64_hi(xl, xh, 29);  // 61\n  var c2_hi = shr64_hi(xh, xl, 6);\n\n  var r = c0_hi ^ c1_hi ^ c2_hi;\n  if (r < 0)\n    r += 0x100000000;\n  return r;\n}\n\nfunction g1_512_lo(xh, xl) {\n  var c0_lo = rotr64_lo(xh, xl, 19);\n  var c1_lo = rotr64_lo(xl, xh, 29);  // 61\n  var c2_lo = shr64_lo(xh, xl, 6);\n\n  var r = c0_lo ^ c1_lo ^ c2_lo;\n  if (r < 0)\n    r += 0x100000000;\n  return r;\n}\n", "'use strict';\n\nvar utils = require('../utils');\n\nvar SHA512 = require('./512');\n\nfunction SHA384() {\n  if (!(this instanceof SHA384))\n    return new SHA384();\n\n  SHA512.call(this);\n  this.h = [\n    0xcbbb9d5d, 0xc1059ed8,\n    0x629a292a, 0x367cd507,\n    0x9159015a, 0x3070dd17,\n    0x152fecd8, 0xf70e5939,\n    0x67332667, 0xffc00b31,\n    0x8eb44a87, 0x68581511,\n    0xdb0c2e0d, 0x64f98fa7,\n    0x47b5481d, 0xbefa4fa4 ];\n}\nutils.inherits(SHA384, SHA512);\nmodule.exports = SHA384;\n\nSHA384.blockSize = 1024;\nSHA384.outSize = 384;\nSHA384.hmacStrength = 192;\nSHA384.padLength = 128;\n\nSHA384.prototype._digest = function digest(enc) {\n  if (enc === 'hex')\n    return utils.toHex32(this.h.slice(0, 12), 'big');\n  else\n    return utils.split32(this.h.slice(0, 12), 'big');\n};\n", "'use strict';\n\nexports.sha1 = require('./sha/1');\nexports.sha224 = require('./sha/224');\nexports.sha256 = require('./sha/256');\nexports.sha384 = require('./sha/384');\nexports.sha512 = require('./sha/512');\n", "'use strict';\n\nvar utils = require('./utils');\nvar common = require('./common');\n\nvar rotl32 = utils.rotl32;\nvar sum32 = utils.sum32;\nvar sum32_3 = utils.sum32_3;\nvar sum32_4 = utils.sum32_4;\nvar BlockHash = common.BlockHash;\n\nfunction RIPEMD160() {\n  if (!(this instanceof RIPEMD160))\n    return new RIPEMD160();\n\n  BlockHash.call(this);\n\n  this.h = [ 0x67452301, 0xefcdab89, 0x98badcfe, 0x10325476, 0xc3d2e1f0 ];\n  this.endian = 'little';\n}\nutils.inherits(RIPEMD160, BlockHash);\nexports.ripemd160 = RIPEMD160;\n\nRIPEMD160.blockSize = 512;\nRIPEMD160.outSize = 160;\nRIPEMD160.hmacStrength = 192;\nRIPEMD160.padLength = 64;\n\nRIPEMD160.prototype._update = function update(msg, start) {\n  var A = this.h[0];\n  var B = this.h[1];\n  var C = this.h[2];\n  var D = this.h[3];\n  var E = this.h[4];\n  var Ah = A;\n  var Bh = B;\n  var Ch = C;\n  var Dh = D;\n  var Eh = E;\n  for (var j = 0; j < 80; j++) {\n    var T = sum32(\n      rotl32(\n        sum32_4(A, f(j, B, C, D), msg[r[j] + start], K(j)),\n        s[j]),\n      E);\n    A = E;\n    E = D;\n    D = rotl32(C, 10);\n    C = B;\n    B = T;\n    T = sum32(\n      rotl32(\n        sum32_4(Ah, f(79 - j, Bh, Ch, Dh), msg[rh[j] + start], Kh(j)),\n        sh[j]),\n      Eh);\n    Ah = Eh;\n    Eh = Dh;\n    Dh = rotl32(Ch, 10);\n    Ch = Bh;\n    Bh = T;\n  }\n  T = sum32_3(this.h[1], C, Dh);\n  this.h[1] = sum32_3(this.h[2], D, Eh);\n  this.h[2] = sum32_3(this.h[3], E, Ah);\n  this.h[3] = sum32_3(this.h[4], A, Bh);\n  this.h[4] = sum32_3(this.h[0], B, Ch);\n  this.h[0] = T;\n};\n\nRIPEMD160.prototype._digest = function digest(enc) {\n  if (enc === 'hex')\n    return utils.toHex32(this.h, 'little');\n  else\n    return utils.split32(this.h, 'little');\n};\n\nfunction f(j, x, y, z) {\n  if (j <= 15)\n    return x ^ y ^ z;\n  else if (j <= 31)\n    return (x & y) | ((~x) & z);\n  else if (j <= 47)\n    return (x | (~y)) ^ z;\n  else if (j <= 63)\n    return (x & z) | (y & (~z));\n  else\n    return x ^ (y | (~z));\n}\n\nfunction K(j) {\n  if (j <= 15)\n    return 0x00000000;\n  else if (j <= 31)\n    return 0x5a827999;\n  else if (j <= 47)\n    return 0x6ed9eba1;\n  else if (j <= 63)\n    return 0x8f1bbcdc;\n  else\n    return 0xa953fd4e;\n}\n\nfunction Kh(j) {\n  if (j <= 15)\n    return 0x50a28be6;\n  else if (j <= 31)\n    return 0x5c4dd124;\n  else if (j <= 47)\n    return 0x6d703ef3;\n  else if (j <= 63)\n    return 0x7a6d76e9;\n  else\n    return 0x00000000;\n}\n\nvar r = [\n  0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15,\n  7, 4, 13, 1, 10, 6, 15, 3, 12, 0, 9, 5, 2, 14, 11, 8,\n  3, 10, 14, 4, 9, 15, 8, 1, 2, 7, 0, 6, 13, 11, 5, 12,\n  1, 9, 11, 10, 0, 8, 12, 4, 13, 3, 7, 15, 14, 5, 6, 2,\n  4, 0, 5, 9, 7, 12, 2, 10, 14, 1, 3, 8, 11, 6, 15, 13\n];\n\nvar rh = [\n  5, 14, 7, 0, 9, 2, 11, 4, 13, 6, 15, 8, 1, 10, 3, 12,\n  6, 11, 3, 7, 0, 13, 5, 10, 14, 15, 8, 12, 4, 9, 1, 2,\n  15, 5, 1, 3, 7, 14, 6, 9, 11, 8, 12, 2, 10, 0, 4, 13,\n  8, 6, 4, 1, 3, 11, 15, 0, 5, 12, 2, 13, 9, 7, 10, 14,\n  12, 15, 10, 4, 1, 5, 8, 7, 6, 2, 13, 14, 0, 3, 9, 11\n];\n\nvar s = [\n  11, 14, 15, 12, 5, 8, 7, 9, 11, 13, 14, 15, 6, 7, 9, 8,\n  7, 6, 8, 13, 11, 9, 7, 15, 7, 12, 15, 9, 11, 7, 13, 12,\n  11, 13, 6, 7, 14, 9, 13, 15, 14, 8, 13, 6, 5, 12, 7, 5,\n  11, 12, 14, 15, 14, 15, 9, 8, 9, 14, 5, 6, 8, 6, 5, 12,\n  9, 15, 5, 11, 6, 8, 13, 12, 5, 12, 13, 14, 11, 8, 5, 6\n];\n\nvar sh = [\n  8, 9, 9, 11, 13, 15, 15, 5, 7, 7, 8, 11, 14, 14, 12, 6,\n  9, 13, 15, 7, 12, 8, 9, 11, 7, 7, 12, 7, 6, 15, 13, 11,\n  9, 7, 15, 11, 8, 6, 6, 14, 12, 13, 5, 14, 13, 13, 7, 5,\n  15, 5, 8, 11, 14, 14, 6, 14, 6, 9, 12, 9, 12, 5, 15, 8,\n  8, 5, 12, 9, 12, 5, 14, 6, 8, 13, 6, 5, 15, 13, 11, 11\n];\n", "'use strict';\n\nvar utils = require('./utils');\nvar assert = require('minimalistic-assert');\n\nfunction Hmac(hash, key, enc) {\n  if (!(this instanceof Hmac))\n    return new Hmac(hash, key, enc);\n  this.Hash = hash;\n  this.blockSize = hash.blockSize / 8;\n  this.outSize = hash.outSize / 8;\n  this.inner = null;\n  this.outer = null;\n\n  this._init(utils.toArray(key, enc));\n}\nmodule.exports = Hmac;\n\nHmac.prototype._init = function init(key) {\n  // Shorten key, if needed\n  if (key.length > this.blockSize)\n    key = new this.Hash().update(key).digest();\n  assert(key.length <= this.blockSize);\n\n  // Add padding to key\n  for (var i = key.length; i < this.blockSize; i++)\n    key.push(0);\n\n  for (i = 0; i < key.length; i++)\n    key[i] ^= 0x36;\n  this.inner = new this.Hash().update(key);\n\n  // 0x36 ^ 0x5c = 0x6a\n  for (i = 0; i < key.length; i++)\n    key[i] ^= 0x6a;\n  this.outer = new this.Hash().update(key);\n};\n\nHmac.prototype.update = function update(msg, enc) {\n  this.inner.update(msg, enc);\n  return this;\n};\n\nHmac.prototype.digest = function digest(enc) {\n  this.outer.update(this.inner.digest());\n  return this.outer.digest(enc);\n};\n", "var hash = exports;\n\nhash.utils = require('./hash/utils');\nhash.common = require('./hash/common');\nhash.sha = require('./hash/sha');\nhash.ripemd = require('./hash/ripemd');\nhash.hmac = require('./hash/hmac');\n\n// Proxy hash functions to the main object\nhash.sha1 = hash.sha.sha1;\nhash.sha256 = hash.sha.sha256;\nhash.sha224 = hash.sha.sha224;\nhash.sha384 = hash.sha.sha384;\nhash.sha512 = hash.sha.sha512;\nhash.ripemd160 = hash.ripemd.ripemd160;\n", "module.exports = {\n  doubles: {\n    step: 4,\n    points: [\n      [\n        'e60fce93b59e9ec53011aabc21c23e97b2a31369b87a5ae9c44ee89e2a6dec0a',\n        'f7e3507399e595929db99f34f57937101296891e44d23f0be1f32cce69616821',\n      ],\n      [\n        '8282263212c609d9ea2a6e3e172de238d8c39cabd5ac1ca10646e23fd5f51508',\n        '11f8a8098557dfe45e8256e830b60ace62d613ac2f7b17bed31b6eaff6e26caf',\n      ],\n      [\n        '175e159f728b865a72f99cc6c6fc846de0b93833fd2222ed73fce5b551e5b739',\n        'd3506e0d9e3c79eba4ef97a51ff71f5eacb5955add24345c6efa6ffee9fed695',\n      ],\n      [\n        '363d90d447b00c9c99ceac05b6262ee053441c7e55552ffe526bad8f83ff4640',\n        '4e273adfc732221953b445397f3363145b9a89008199ecb62003c7f3bee9de9',\n      ],\n      [\n        '8b4b5f165df3c2be8c6244b5b745638843e4a781a15bcd1b69f79a55dffdf80c',\n        '4aad0a6f68d308b4b3fbd7813ab0da04f9e336546162ee56b3eff0c65fd4fd36',\n      ],\n      [\n        '723cbaa6e5db996d6bf771c00bd548c7b700dbffa6c0e77bcb6115925232fcda',\n        '96e867b5595cc498a921137488824d6e2660a0653779494801dc069d9eb39f5f',\n      ],\n      [\n        'eebfa4d493bebf98ba5feec812c2d3b50947961237a919839a533eca0e7dd7fa',\n        '5d9a8ca3970ef0f269ee7edaf178089d9ae4cdc3a711f712ddfd4fdae1de8999',\n      ],\n      [\n        '100f44da696e71672791d0a09b7bde459f1215a29b3c03bfefd7835b39a48db0',\n        'cdd9e13192a00b772ec8f3300c090666b7ff4a18ff5195ac0fbd5cd62bc65a09',\n      ],\n      [\n        'e1031be262c7ed1b1dc9227a4a04c017a77f8d4464f3b3852c8acde6e534fd2d',\n        '9d7061928940405e6bb6a4176597535af292dd419e1ced79a44f18f29456a00d',\n      ],\n      [\n        'feea6cae46d55b530ac2839f143bd7ec5cf8b266a41d6af52d5e688d9094696d',\n        'e57c6b6c97dce1bab06e4e12bf3ecd5c981c8957cc41442d3155debf18090088',\n      ],\n      [\n        'da67a91d91049cdcb367be4be6ffca3cfeed657d808583de33fa978bc1ec6cb1',\n        '9bacaa35481642bc41f463f7ec9780e5dec7adc508f740a17e9ea8e27a68be1d',\n      ],\n      [\n        '53904faa0b334cdda6e000935ef22151ec08d0f7bb11069f57545ccc1a37b7c0',\n        '5bc087d0bc80106d88c9eccac20d3c1c13999981e14434699dcb096b022771c8',\n      ],\n      [\n        '8e7bcd0bd35983a7719cca7764ca906779b53a043a9b8bcaeff959f43ad86047',\n        '10b7770b2a3da4b3940310420ca9514579e88e2e47fd68b3ea10047e8460372a',\n      ],\n      [\n        '385eed34c1cdff21e6d0818689b81bde71a7f4f18397e6690a841e1599c43862',\n        '283bebc3e8ea23f56701de19e9ebf4576b304eec2086dc8cc0458fe5542e5453',\n      ],\n      [\n        '6f9d9b803ecf191637c73a4413dfa180fddf84a5947fbc9c606ed86c3fac3a7',\n        '7c80c68e603059ba69b8e2a30e45c4d47ea4dd2f5c281002d86890603a842160',\n      ],\n      [\n        '3322d401243c4e2582a2147c104d6ecbf774d163db0f5e5313b7e0e742d0e6bd',\n        '56e70797e9664ef5bfb019bc4ddaf9b72805f63ea2873af624f3a2e96c28b2a0',\n      ],\n      [\n        '85672c7d2de0b7da2bd1770d89665868741b3f9af7643397721d74d28134ab83',\n        '7c481b9b5b43b2eb6374049bfa62c2e5e77f17fcc5298f44c8e3094f790313a6',\n      ],\n      [\n        '948bf809b1988a46b06c9f1919413b10f9226c60f668832ffd959af60c82a0a',\n        '53a562856dcb6646dc6b74c5d1c3418c6d4dff08c97cd2bed4cb7f88d8c8e589',\n      ],\n      [\n        '6260ce7f461801c34f067ce0f02873a8f1b0e44dfc69752accecd819f38fd8e8',\n        'bc2da82b6fa5b571a7f09049776a1ef7ecd292238051c198c1a84e95b2b4ae17',\n      ],\n      [\n        'e5037de0afc1d8d43d8348414bbf4103043ec8f575bfdc432953cc8d2037fa2d',\n        '4571534baa94d3b5f9f98d09fb990bddbd5f5b03ec481f10e0e5dc841d755bda',\n      ],\n      [\n        'e06372b0f4a207adf5ea905e8f1771b4e7e8dbd1c6a6c5b725866a0ae4fce725',\n        '7a908974bce18cfe12a27bb2ad5a488cd7484a7787104870b27034f94eee31dd',\n      ],\n      [\n        '213c7a715cd5d45358d0bbf9dc0ce02204b10bdde2a3f58540ad6908d0559754',\n        '4b6dad0b5ae462507013ad06245ba190bb4850f5f36a7eeddff2c27534b458f2',\n      ],\n      [\n        '4e7c272a7af4b34e8dbb9352a5419a87e2838c70adc62cddf0cc3a3b08fbd53c',\n        '17749c766c9d0b18e16fd09f6def681b530b9614bff7dd33e0b3941817dcaae6',\n      ],\n      [\n        'fea74e3dbe778b1b10f238ad61686aa5c76e3db2be43057632427e2840fb27b6',\n        '6e0568db9b0b13297cf674deccb6af93126b596b973f7b77701d3db7f23cb96f',\n      ],\n      [\n        '76e64113f677cf0e10a2570d599968d31544e179b760432952c02a4417bdde39',\n        'c90ddf8dee4e95cf577066d70681f0d35e2a33d2b56d2032b4b1752d1901ac01',\n      ],\n      [\n        'c738c56b03b2abe1e8281baa743f8f9a8f7cc643df26cbee3ab150242bcbb891',\n        '893fb578951ad2537f718f2eacbfbbbb82314eef7880cfe917e735d9699a84c3',\n      ],\n      [\n        'd895626548b65b81e264c7637c972877d1d72e5f3a925014372e9f6588f6c14b',\n        'febfaa38f2bc7eae728ec60818c340eb03428d632bb067e179363ed75d7d991f',\n      ],\n      [\n        'b8da94032a957518eb0f6433571e8761ceffc73693e84edd49150a564f676e03',\n        '2804dfa44805a1e4d7c99cc9762808b092cc584d95ff3b511488e4e74efdf6e7',\n      ],\n      [\n        'e80fea14441fb33a7d8adab9475d7fab2019effb5156a792f1a11778e3c0df5d',\n        'eed1de7f638e00771e89768ca3ca94472d155e80af322ea9fcb4291b6ac9ec78',\n      ],\n      [\n        'a301697bdfcd704313ba48e51d567543f2a182031efd6915ddc07bbcc4e16070',\n        '7370f91cfb67e4f5081809fa25d40f9b1735dbf7c0a11a130c0d1a041e177ea1',\n      ],\n      [\n        '90ad85b389d6b936463f9d0512678de208cc330b11307fffab7ac63e3fb04ed4',\n        'e507a3620a38261affdcbd9427222b839aefabe1582894d991d4d48cb6ef150',\n      ],\n      [\n        '8f68b9d2f63b5f339239c1ad981f162ee88c5678723ea3351b7b444c9ec4c0da',\n        '662a9f2dba063986de1d90c2b6be215dbbea2cfe95510bfdf23cbf79501fff82',\n      ],\n      [\n        'e4f3fb0176af85d65ff99ff9198c36091f48e86503681e3e6686fd5053231e11',\n        '1e63633ad0ef4f1c1661a6d0ea02b7286cc7e74ec951d1c9822c38576feb73bc',\n      ],\n      [\n        '8c00fa9b18ebf331eb961537a45a4266c7034f2f0d4e1d0716fb6eae20eae29e',\n        'efa47267fea521a1a9dc343a3736c974c2fadafa81e36c54e7d2a4c66702414b',\n      ],\n      [\n        'e7a26ce69dd4829f3e10cec0a9e98ed3143d084f308b92c0997fddfc60cb3e41',\n        '2a758e300fa7984b471b006a1aafbb18d0a6b2c0420e83e20e8a9421cf2cfd51',\n      ],\n      [\n        'b6459e0ee3662ec8d23540c223bcbdc571cbcb967d79424f3cf29eb3de6b80ef',\n        '67c876d06f3e06de1dadf16e5661db3c4b3ae6d48e35b2ff30bf0b61a71ba45',\n      ],\n      [\n        'd68a80c8280bb840793234aa118f06231d6f1fc67e73c5a5deda0f5b496943e8',\n        'db8ba9fff4b586d00c4b1f9177b0e28b5b0e7b8f7845295a294c84266b133120',\n      ],\n      [\n        '324aed7df65c804252dc0270907a30b09612aeb973449cea4095980fc28d3d5d',\n        '648a365774b61f2ff130c0c35aec1f4f19213b0c7e332843967224af96ab7c84',\n      ],\n      [\n        '4df9c14919cde61f6d51dfdbe5fee5dceec4143ba8d1ca888e8bd373fd054c96',\n        '35ec51092d8728050974c23a1d85d4b5d506cdc288490192ebac06cad10d5d',\n      ],\n      [\n        '9c3919a84a474870faed8a9c1cc66021523489054d7f0308cbfc99c8ac1f98cd',\n        'ddb84f0f4a4ddd57584f044bf260e641905326f76c64c8e6be7e5e03d4fc599d',\n      ],\n      [\n        '6057170b1dd12fdf8de05f281d8e06bb91e1493a8b91d4cc5a21382120a959e5',\n        '9a1af0b26a6a4807add9a2daf71df262465152bc3ee24c65e899be932385a2a8',\n      ],\n      [\n        'a576df8e23a08411421439a4518da31880cef0fba7d4df12b1a6973eecb94266',\n        '40a6bf20e76640b2c92b97afe58cd82c432e10a7f514d9f3ee8be11ae1b28ec8',\n      ],\n      [\n        '7778a78c28dec3e30a05fe9629de8c38bb30d1f5cf9a3a208f763889be58ad71',\n        '34626d9ab5a5b22ff7098e12f2ff580087b38411ff24ac563b513fc1fd9f43ac',\n      ],\n      [\n        '928955ee637a84463729fd30e7afd2ed5f96274e5ad7e5cb09eda9c06d903ac',\n        'c25621003d3f42a827b78a13093a95eeac3d26efa8a8d83fc5180e935bcd091f',\n      ],\n      [\n        '85d0fef3ec6db109399064f3a0e3b2855645b4a907ad354527aae75163d82751',\n        '1f03648413a38c0be29d496e582cf5663e8751e96877331582c237a24eb1f962',\n      ],\n      [\n        'ff2b0dce97eece97c1c9b6041798b85dfdfb6d8882da20308f5404824526087e',\n        '493d13fef524ba188af4c4dc54d07936c7b7ed6fb90e2ceb2c951e01f0c29907',\n      ],\n      [\n        '827fbbe4b1e880ea9ed2b2e6301b212b57f1ee148cd6dd28780e5e2cf856e241',\n        'c60f9c923c727b0b71bef2c67d1d12687ff7a63186903166d605b68baec293ec',\n      ],\n      [\n        'eaa649f21f51bdbae7be4ae34ce6e5217a58fdce7f47f9aa7f3b58fa2120e2b3',\n        'be3279ed5bbbb03ac69a80f89879aa5a01a6b965f13f7e59d47a5305ba5ad93d',\n      ],\n      [\n        'e4a42d43c5cf169d9391df6decf42ee541b6d8f0c9a137401e23632dda34d24f',\n        '4d9f92e716d1c73526fc99ccfb8ad34ce886eedfa8d8e4f13a7f7131deba9414',\n      ],\n      [\n        '1ec80fef360cbdd954160fadab352b6b92b53576a88fea4947173b9d4300bf19',\n        'aeefe93756b5340d2f3a4958a7abbf5e0146e77f6295a07b671cdc1cc107cefd',\n      ],\n      [\n        '146a778c04670c2f91b00af4680dfa8bce3490717d58ba889ddb5928366642be',\n        'b318e0ec3354028add669827f9d4b2870aaa971d2f7e5ed1d0b297483d83efd0',\n      ],\n      [\n        'fa50c0f61d22e5f07e3acebb1aa07b128d0012209a28b9776d76a8793180eef9',\n        '6b84c6922397eba9b72cd2872281a68a5e683293a57a213b38cd8d7d3f4f2811',\n      ],\n      [\n        'da1d61d0ca721a11b1a5bf6b7d88e8421a288ab5d5bba5220e53d32b5f067ec2',\n        '8157f55a7c99306c79c0766161c91e2966a73899d279b48a655fba0f1ad836f1',\n      ],\n      [\n        'a8e282ff0c9706907215ff98e8fd416615311de0446f1e062a73b0610d064e13',\n        '7f97355b8db81c09abfb7f3c5b2515888b679a3e50dd6bd6cef7c73111f4cc0c',\n      ],\n      [\n        '174a53b9c9a285872d39e56e6913cab15d59b1fa512508c022f382de8319497c',\n        'ccc9dc37abfc9c1657b4155f2c47f9e6646b3a1d8cb9854383da13ac079afa73',\n      ],\n      [\n        '959396981943785c3d3e57edf5018cdbe039e730e4918b3d884fdff09475b7ba',\n        '2e7e552888c331dd8ba0386a4b9cd6849c653f64c8709385e9b8abf87524f2fd',\n      ],\n      [\n        'd2a63a50ae401e56d645a1153b109a8fcca0a43d561fba2dbb51340c9d82b151',\n        'e82d86fb6443fcb7565aee58b2948220a70f750af484ca52d4142174dcf89405',\n      ],\n      [\n        '64587e2335471eb890ee7896d7cfdc866bacbdbd3839317b3436f9b45617e073',\n        'd99fcdd5bf6902e2ae96dd6447c299a185b90a39133aeab358299e5e9faf6589',\n      ],\n      [\n        '8481bde0e4e4d885b3a546d3e549de042f0aa6cea250e7fd358d6c86dd45e458',\n        '38ee7b8cba5404dd84a25bf39cecb2ca900a79c42b262e556d64b1b59779057e',\n      ],\n      [\n        '13464a57a78102aa62b6979ae817f4637ffcfed3c4b1ce30bcd6303f6caf666b',\n        '69be159004614580ef7e433453ccb0ca48f300a81d0942e13f495a907f6ecc27',\n      ],\n      [\n        'bc4a9df5b713fe2e9aef430bcc1dc97a0cd9ccede2f28588cada3a0d2d83f366',\n        'd3a81ca6e785c06383937adf4b798caa6e8a9fbfa547b16d758d666581f33c1',\n      ],\n      [\n        '8c28a97bf8298bc0d23d8c749452a32e694b65e30a9472a3954ab30fe5324caa',\n        '40a30463a3305193378fedf31f7cc0eb7ae784f0451cb9459e71dc73cbef9482',\n      ],\n      [\n        '8ea9666139527a8c1dd94ce4f071fd23c8b350c5a4bb33748c4ba111faccae0',\n        '620efabbc8ee2782e24e7c0cfb95c5d735b783be9cf0f8e955af34a30e62b945',\n      ],\n      [\n        'dd3625faef5ba06074669716bbd3788d89bdde815959968092f76cc4eb9a9787',\n        '7a188fa3520e30d461da2501045731ca941461982883395937f68d00c644a573',\n      ],\n      [\n        'f710d79d9eb962297e4f6232b40e8f7feb2bc63814614d692c12de752408221e',\n        'ea98e67232d3b3295d3b535532115ccac8612c721851617526ae47a9c77bfc82',\n      ],\n    ],\n  },\n  naf: {\n    wnd: 7,\n    points: [\n      [\n        'f9308a019258c31049344f85f89d5229b531c845836f99b08601f113bce036f9',\n        '388f7b0f632de8140fe337e62a37f3566500a99934c2231b6cb9fd7584b8e672',\n      ],\n      [\n        '2f8bde4d1a07209355b4a7250a5c5128e88b84bddc619ab7cba8d569b240efe4',\n        'd8ac222636e5e3d6d4dba9dda6c9c426f788271bab0d6840dca87d3aa6ac62d6',\n      ],\n      [\n        '5cbdf0646e5db4eaa398f365f2ea7a0e3d419b7e0330e39ce92bddedcac4f9bc',\n        '6aebca40ba255960a3178d6d861a54dba813d0b813fde7b5a5082628087264da',\n      ],\n      [\n        'acd484e2f0c7f65309ad178a9f559abde09796974c57e714c35f110dfc27ccbe',\n        'cc338921b0a7d9fd64380971763b61e9add888a4375f8e0f05cc262ac64f9c37',\n      ],\n      [\n        '774ae7f858a9411e5ef4246b70c65aac5649980be5c17891bbec17895da008cb',\n        'd984a032eb6b5e190243dd56d7b7b365372db1e2dff9d6a8301d74c9c953c61b',\n      ],\n      [\n        'f28773c2d975288bc7d1d205c3748651b075fbc6610e58cddeeddf8f19405aa8',\n        'ab0902e8d880a89758212eb65cdaf473a1a06da521fa91f29b5cb52db03ed81',\n      ],\n      [\n        'd7924d4f7d43ea965a465ae3095ff41131e5946f3c85f79e44adbcf8e27e080e',\n        '581e2872a86c72a683842ec228cc6defea40af2bd896d3a5c504dc9ff6a26b58',\n      ],\n      [\n        'defdea4cdb677750a420fee807eacf21eb9898ae79b9768766e4faa04a2d4a34',\n        '4211ab0694635168e997b0ead2a93daeced1f4a04a95c0f6cfb199f69e56eb77',\n      ],\n      [\n        '2b4ea0a797a443d293ef5cff444f4979f06acfebd7e86d277475656138385b6c',\n        '85e89bc037945d93b343083b5a1c86131a01f60c50269763b570c854e5c09b7a',\n      ],\n      [\n        '352bbf4a4cdd12564f93fa332ce333301d9ad40271f8107181340aef25be59d5',\n        '321eb4075348f534d59c18259dda3e1f4a1b3b2e71b1039c67bd3d8bcf81998c',\n      ],\n      [\n        '2fa2104d6b38d11b0230010559879124e42ab8dfeff5ff29dc9cdadd4ecacc3f',\n        '2de1068295dd865b64569335bd5dd80181d70ecfc882648423ba76b532b7d67',\n      ],\n      [\n        '9248279b09b4d68dab21a9b066edda83263c3d84e09572e269ca0cd7f5453714',\n        '73016f7bf234aade5d1aa71bdea2b1ff3fc0de2a887912ffe54a32ce97cb3402',\n      ],\n      [\n        'daed4f2be3a8bf278e70132fb0beb7522f570e144bf615c07e996d443dee8729',\n        'a69dce4a7d6c98e8d4a1aca87ef8d7003f83c230f3afa726ab40e52290be1c55',\n      ],\n      [\n        'c44d12c7065d812e8acf28d7cbb19f9011ecd9e9fdf281b0e6a3b5e87d22e7db',\n        '2119a460ce326cdc76c45926c982fdac0e106e861edf61c5a039063f0e0e6482',\n      ],\n      [\n        '6a245bf6dc698504c89a20cfded60853152b695336c28063b61c65cbd269e6b4',\n        'e022cf42c2bd4a708b3f5126f16a24ad8b33ba48d0423b6efd5e6348100d8a82',\n      ],\n      [\n        '1697ffa6fd9de627c077e3d2fe541084ce13300b0bec1146f95ae57f0d0bd6a5',\n        'b9c398f186806f5d27561506e4557433a2cf15009e498ae7adee9d63d01b2396',\n      ],\n      [\n        '605bdb019981718b986d0f07e834cb0d9deb8360ffb7f61df982345ef27a7479',\n        '2972d2de4f8d20681a78d93ec96fe23c26bfae84fb14db43b01e1e9056b8c49',\n      ],\n      [\n        '62d14dab4150bf497402fdc45a215e10dcb01c354959b10cfe31c7e9d87ff33d',\n        '80fc06bd8cc5b01098088a1950eed0db01aa132967ab472235f5642483b25eaf',\n      ],\n      [\n        '80c60ad0040f27dade5b4b06c408e56b2c50e9f56b9b8b425e555c2f86308b6f',\n        '1c38303f1cc5c30f26e66bad7fe72f70a65eed4cbe7024eb1aa01f56430bd57a',\n      ],\n      [\n        '7a9375ad6167ad54aa74c6348cc54d344cc5dc9487d847049d5eabb0fa03c8fb',\n        'd0e3fa9eca8726909559e0d79269046bdc59ea10c70ce2b02d499ec224dc7f7',\n      ],\n      [\n        'd528ecd9b696b54c907a9ed045447a79bb408ec39b68df504bb51f459bc3ffc9',\n        'eecf41253136e5f99966f21881fd656ebc4345405c520dbc063465b521409933',\n      ],\n      [\n        '49370a4b5f43412ea25f514e8ecdad05266115e4a7ecb1387231808f8b45963',\n        '758f3f41afd6ed428b3081b0512fd62a54c3f3afbb5b6764b653052a12949c9a',\n      ],\n      [\n        '77f230936ee88cbbd73df930d64702ef881d811e0e1498e2f1c13eb1fc345d74',\n        '958ef42a7886b6400a08266e9ba1b37896c95330d97077cbbe8eb3c7671c60d6',\n      ],\n      [\n        'f2dac991cc4ce4b9ea44887e5c7c0bce58c80074ab9d4dbaeb28531b7739f530',\n        'e0dedc9b3b2f8dad4da1f32dec2531df9eb5fbeb0598e4fd1a117dba703a3c37',\n      ],\n      [\n        '463b3d9f662621fb1b4be8fbbe2520125a216cdfc9dae3debcba4850c690d45b',\n        '5ed430d78c296c3543114306dd8622d7c622e27c970a1de31cb377b01af7307e',\n      ],\n      [\n        'f16f804244e46e2a09232d4aff3b59976b98fac14328a2d1a32496b49998f247',\n        'cedabd9b82203f7e13d206fcdf4e33d92a6c53c26e5cce26d6579962c4e31df6',\n      ],\n      [\n        'caf754272dc84563b0352b7a14311af55d245315ace27c65369e15f7151d41d1',\n        'cb474660ef35f5f2a41b643fa5e460575f4fa9b7962232a5c32f908318a04476',\n      ],\n      [\n        '2600ca4b282cb986f85d0f1709979d8b44a09c07cb86d7c124497bc86f082120',\n        '4119b88753c15bd6a693b03fcddbb45d5ac6be74ab5f0ef44b0be9475a7e4b40',\n      ],\n      [\n        '7635ca72d7e8432c338ec53cd12220bc01c48685e24f7dc8c602a7746998e435',\n        '91b649609489d613d1d5e590f78e6d74ecfc061d57048bad9e76f302c5b9c61',\n      ],\n      [\n        '754e3239f325570cdbbf4a87deee8a66b7f2b33479d468fbc1a50743bf56cc18',\n        '673fb86e5bda30fb3cd0ed304ea49a023ee33d0197a695d0c5d98093c536683',\n      ],\n      [\n        'e3e6bd1071a1e96aff57859c82d570f0330800661d1c952f9fe2694691d9b9e8',\n        '59c9e0bba394e76f40c0aa58379a3cb6a5a2283993e90c4167002af4920e37f5',\n      ],\n      [\n        '186b483d056a033826ae73d88f732985c4ccb1f32ba35f4b4cc47fdcf04aa6eb',\n        '3b952d32c67cf77e2e17446e204180ab21fb8090895138b4a4a797f86e80888b',\n      ],\n      [\n        'df9d70a6b9876ce544c98561f4be4f725442e6d2b737d9c91a8321724ce0963f',\n        '55eb2dafd84d6ccd5f862b785dc39d4ab157222720ef9da217b8c45cf2ba2417',\n      ],\n      [\n        '5edd5cc23c51e87a497ca815d5dce0f8ab52554f849ed8995de64c5f34ce7143',\n        'efae9c8dbc14130661e8cec030c89ad0c13c66c0d17a2905cdc706ab7399a868',\n      ],\n      [\n        '290798c2b6476830da12fe02287e9e777aa3fba1c355b17a722d362f84614fba',\n        'e38da76dcd440621988d00bcf79af25d5b29c094db2a23146d003afd41943e7a',\n      ],\n      [\n        'af3c423a95d9f5b3054754efa150ac39cd29552fe360257362dfdecef4053b45',\n        'f98a3fd831eb2b749a93b0e6f35cfb40c8cd5aa667a15581bc2feded498fd9c6',\n      ],\n      [\n        '766dbb24d134e745cccaa28c99bf274906bb66b26dcf98df8d2fed50d884249a',\n        '744b1152eacbe5e38dcc887980da38b897584a65fa06cedd2c924f97cbac5996',\n      ],\n      [\n        '59dbf46f8c94759ba21277c33784f41645f7b44f6c596a58ce92e666191abe3e',\n        'c534ad44175fbc300f4ea6ce648309a042ce739a7919798cd85e216c4a307f6e',\n      ],\n      [\n        'f13ada95103c4537305e691e74e9a4a8dd647e711a95e73cb62dc6018cfd87b8',\n        'e13817b44ee14de663bf4bc808341f326949e21a6a75c2570778419bdaf5733d',\n      ],\n      [\n        '7754b4fa0e8aced06d4167a2c59cca4cda1869c06ebadfb6488550015a88522c',\n        '30e93e864e669d82224b967c3020b8fa8d1e4e350b6cbcc537a48b57841163a2',\n      ],\n      [\n        '948dcadf5990e048aa3874d46abef9d701858f95de8041d2a6828c99e2262519',\n        'e491a42537f6e597d5d28a3224b1bc25df9154efbd2ef1d2cbba2cae5347d57e',\n      ],\n      [\n        '7962414450c76c1689c7b48f8202ec37fb224cf5ac0bfa1570328a8a3d7c77ab',\n        '100b610ec4ffb4760d5c1fc133ef6f6b12507a051f04ac5760afa5b29db83437',\n      ],\n      [\n        '3514087834964b54b15b160644d915485a16977225b8847bb0dd085137ec47ca',\n        'ef0afbb2056205448e1652c48e8127fc6039e77c15c2378b7e7d15a0de293311',\n      ],\n      [\n        'd3cc30ad6b483e4bc79ce2c9dd8bc54993e947eb8df787b442943d3f7b527eaf',\n        '8b378a22d827278d89c5e9be8f9508ae3c2ad46290358630afb34db04eede0a4',\n      ],\n      [\n        '1624d84780732860ce1c78fcbfefe08b2b29823db913f6493975ba0ff4847610',\n        '68651cf9b6da903e0914448c6cd9d4ca896878f5282be4c8cc06e2a404078575',\n      ],\n      [\n        '733ce80da955a8a26902c95633e62a985192474b5af207da6df7b4fd5fc61cd4',\n        'f5435a2bd2badf7d485a4d8b8db9fcce3e1ef8e0201e4578c54673bc1dc5ea1d',\n      ],\n      [\n        '15d9441254945064cf1a1c33bbd3b49f8966c5092171e699ef258dfab81c045c',\n        'd56eb30b69463e7234f5137b73b84177434800bacebfc685fc37bbe9efe4070d',\n      ],\n      [\n        'a1d0fcf2ec9de675b612136e5ce70d271c21417c9d2b8aaaac138599d0717940',\n        'edd77f50bcb5a3cab2e90737309667f2641462a54070f3d519212d39c197a629',\n      ],\n      [\n        'e22fbe15c0af8ccc5780c0735f84dbe9a790badee8245c06c7ca37331cb36980',\n        'a855babad5cd60c88b430a69f53a1a7a38289154964799be43d06d77d31da06',\n      ],\n      [\n        '311091dd9860e8e20ee13473c1155f5f69635e394704eaa74009452246cfa9b3',\n        '66db656f87d1f04fffd1f04788c06830871ec5a64feee685bd80f0b1286d8374',\n      ],\n      [\n        '34c1fd04d301be89b31c0442d3e6ac24883928b45a9340781867d4232ec2dbdf',\n        '9414685e97b1b5954bd46f730174136d57f1ceeb487443dc5321857ba73abee',\n      ],\n      [\n        'f219ea5d6b54701c1c14de5b557eb42a8d13f3abbcd08affcc2a5e6b049b8d63',\n        '4cb95957e83d40b0f73af4544cccf6b1f4b08d3c07b27fb8d8c2962a400766d1',\n      ],\n      [\n        'd7b8740f74a8fbaab1f683db8f45de26543a5490bca627087236912469a0b448',\n        'fa77968128d9c92ee1010f337ad4717eff15db5ed3c049b3411e0315eaa4593b',\n      ],\n      [\n        '32d31c222f8f6f0ef86f7c98d3a3335ead5bcd32abdd94289fe4d3091aa824bf',\n        '5f3032f5892156e39ccd3d7915b9e1da2e6dac9e6f26e961118d14b8462e1661',\n      ],\n      [\n        '7461f371914ab32671045a155d9831ea8793d77cd59592c4340f86cbc18347b5',\n        '8ec0ba238b96bec0cbdddcae0aa442542eee1ff50c986ea6b39847b3cc092ff6',\n      ],\n      [\n        'ee079adb1df1860074356a25aa38206a6d716b2c3e67453d287698bad7b2b2d6',\n        '8dc2412aafe3be5c4c5f37e0ecc5f9f6a446989af04c4e25ebaac479ec1c8c1e',\n      ],\n      [\n        '16ec93e447ec83f0467b18302ee620f7e65de331874c9dc72bfd8616ba9da6b5',\n        '5e4631150e62fb40d0e8c2a7ca5804a39d58186a50e497139626778e25b0674d',\n      ],\n      [\n        'eaa5f980c245f6f038978290afa70b6bd8855897f98b6aa485b96065d537bd99',\n        'f65f5d3e292c2e0819a528391c994624d784869d7e6ea67fb18041024edc07dc',\n      ],\n      [\n        '78c9407544ac132692ee1910a02439958ae04877151342ea96c4b6b35a49f51',\n        'f3e0319169eb9b85d5404795539a5e68fa1fbd583c064d2462b675f194a3ddb4',\n      ],\n      [\n        '494f4be219a1a77016dcd838431aea0001cdc8ae7a6fc688726578d9702857a5',\n        '42242a969283a5f339ba7f075e36ba2af925ce30d767ed6e55f4b031880d562c',\n      ],\n      [\n        'a598a8030da6d86c6bc7f2f5144ea549d28211ea58faa70ebf4c1e665c1fe9b5',\n        '204b5d6f84822c307e4b4a7140737aec23fc63b65b35f86a10026dbd2d864e6b',\n      ],\n      [\n        'c41916365abb2b5d09192f5f2dbeafec208f020f12570a184dbadc3e58595997',\n        '4f14351d0087efa49d245b328984989d5caf9450f34bfc0ed16e96b58fa9913',\n      ],\n      [\n        '841d6063a586fa475a724604da03bc5b92a2e0d2e0a36acfe4c73a5514742881',\n        '73867f59c0659e81904f9a1c7543698e62562d6744c169ce7a36de01a8d6154',\n      ],\n      [\n        '5e95bb399a6971d376026947f89bde2f282b33810928be4ded112ac4d70e20d5',\n        '39f23f366809085beebfc71181313775a99c9aed7d8ba38b161384c746012865',\n      ],\n      [\n        '36e4641a53948fd476c39f8a99fd974e5ec07564b5315d8bf99471bca0ef2f66',\n        'd2424b1b1abe4eb8164227b085c9aa9456ea13493fd563e06fd51cf5694c78fc',\n      ],\n      [\n        '336581ea7bfbbb290c191a2f507a41cf5643842170e914faeab27c2c579f726',\n        'ead12168595fe1be99252129b6e56b3391f7ab1410cd1e0ef3dcdcabd2fda224',\n      ],\n      [\n        '8ab89816dadfd6b6a1f2634fcf00ec8403781025ed6890c4849742706bd43ede',\n        '6fdcef09f2f6d0a044e654aef624136f503d459c3e89845858a47a9129cdd24e',\n      ],\n      [\n        '1e33f1a746c9c5778133344d9299fcaa20b0938e8acff2544bb40284b8c5fb94',\n        '60660257dd11b3aa9c8ed618d24edff2306d320f1d03010e33a7d2057f3b3b6',\n      ],\n      [\n        '85b7c1dcb3cec1b7ee7f30ded79dd20a0ed1f4cc18cbcfcfa410361fd8f08f31',\n        '3d98a9cdd026dd43f39048f25a8847f4fcafad1895d7a633c6fed3c35e999511',\n      ],\n      [\n        '29df9fbd8d9e46509275f4b125d6d45d7fbe9a3b878a7af872a2800661ac5f51',\n        'b4c4fe99c775a606e2d8862179139ffda61dc861c019e55cd2876eb2a27d84b',\n      ],\n      [\n        'a0b1cae06b0a847a3fea6e671aaf8adfdfe58ca2f768105c8082b2e449fce252',\n        'ae434102edde0958ec4b19d917a6a28e6b72da1834aff0e650f049503a296cf2',\n      ],\n      [\n        '4e8ceafb9b3e9a136dc7ff67e840295b499dfb3b2133e4ba113f2e4c0e121e5',\n        'cf2174118c8b6d7a4b48f6d534ce5c79422c086a63460502b827ce62a326683c',\n      ],\n      [\n        'd24a44e047e19b6f5afb81c7ca2f69080a5076689a010919f42725c2b789a33b',\n        '6fb8d5591b466f8fc63db50f1c0f1c69013f996887b8244d2cdec417afea8fa3',\n      ],\n      [\n        'ea01606a7a6c9cdd249fdfcfacb99584001edd28abbab77b5104e98e8e3b35d4',\n        '322af4908c7312b0cfbfe369f7a7b3cdb7d4494bc2823700cfd652188a3ea98d',\n      ],\n      [\n        'af8addbf2b661c8a6c6328655eb96651252007d8c5ea31be4ad196de8ce2131f',\n        '6749e67c029b85f52a034eafd096836b2520818680e26ac8f3dfbcdb71749700',\n      ],\n      [\n        'e3ae1974566ca06cc516d47e0fb165a674a3dabcfca15e722f0e3450f45889',\n        '2aeabe7e4531510116217f07bf4d07300de97e4874f81f533420a72eeb0bd6a4',\n      ],\n      [\n        '591ee355313d99721cf6993ffed1e3e301993ff3ed258802075ea8ced397e246',\n        'b0ea558a113c30bea60fc4775460c7901ff0b053d25ca2bdeee98f1a4be5d196',\n      ],\n      [\n        '11396d55fda54c49f19aa97318d8da61fa8584e47b084945077cf03255b52984',\n        '998c74a8cd45ac01289d5833a7beb4744ff536b01b257be4c5767bea93ea57a4',\n      ],\n      [\n        '3c5d2a1ba39c5a1790000738c9e0c40b8dcdfd5468754b6405540157e017aa7a',\n        'b2284279995a34e2f9d4de7396fc18b80f9b8b9fdd270f6661f79ca4c81bd257',\n      ],\n      [\n        'cc8704b8a60a0defa3a99a7299f2e9c3fbc395afb04ac078425ef8a1793cc030',\n        'bdd46039feed17881d1e0862db347f8cf395b74fc4bcdc4e940b74e3ac1f1b13',\n      ],\n      [\n        'c533e4f7ea8555aacd9777ac5cad29b97dd4defccc53ee7ea204119b2889b197',\n        '6f0a256bc5efdf429a2fb6242f1a43a2d9b925bb4a4b3a26bb8e0f45eb596096',\n      ],\n      [\n        'c14f8f2ccb27d6f109f6d08d03cc96a69ba8c34eec07bbcf566d48e33da6593',\n        'c359d6923bb398f7fd4473e16fe1c28475b740dd098075e6c0e8649113dc3a38',\n      ],\n      [\n        'a6cbc3046bc6a450bac24789fa17115a4c9739ed75f8f21ce441f72e0b90e6ef',\n        '21ae7f4680e889bb130619e2c0f95a360ceb573c70603139862afd617fa9b9f',\n      ],\n      [\n        '347d6d9a02c48927ebfb86c1359b1caf130a3c0267d11ce6344b39f99d43cc38',\n        '60ea7f61a353524d1c987f6ecec92f086d565ab687870cb12689ff1e31c74448',\n      ],\n      [\n        'da6545d2181db8d983f7dcb375ef5866d47c67b1bf31c8cf855ef7437b72656a',\n        '49b96715ab6878a79e78f07ce5680c5d6673051b4935bd897fea824b77dc208a',\n      ],\n      [\n        'c40747cc9d012cb1a13b8148309c6de7ec25d6945d657146b9d5994b8feb1111',\n        '5ca560753be2a12fc6de6caf2cb489565db936156b9514e1bb5e83037e0fa2d4',\n      ],\n      [\n        '4e42c8ec82c99798ccf3a610be870e78338c7f713348bd34c8203ef4037f3502',\n        '7571d74ee5e0fb92a7a8b33a07783341a5492144cc54bcc40a94473693606437',\n      ],\n      [\n        '3775ab7089bc6af823aba2e1af70b236d251cadb0c86743287522a1b3b0dedea',\n        'be52d107bcfa09d8bcb9736a828cfa7fac8db17bf7a76a2c42ad961409018cf7',\n      ],\n      [\n        'cee31cbf7e34ec379d94fb814d3d775ad954595d1314ba8846959e3e82f74e26',\n        '8fd64a14c06b589c26b947ae2bcf6bfa0149ef0be14ed4d80f448a01c43b1c6d',\n      ],\n      [\n        'b4f9eaea09b6917619f6ea6a4eb5464efddb58fd45b1ebefcdc1a01d08b47986',\n        '39e5c9925b5a54b07433a4f18c61726f8bb131c012ca542eb24a8ac07200682a',\n      ],\n      [\n        'd4263dfc3d2df923a0179a48966d30ce84e2515afc3dccc1b77907792ebcc60e',\n        '62dfaf07a0f78feb30e30d6295853ce189e127760ad6cf7fae164e122a208d54',\n      ],\n      [\n        '48457524820fa65a4f8d35eb6930857c0032acc0a4a2de422233eeda897612c4',\n        '25a748ab367979d98733c38a1fa1c2e7dc6cc07db2d60a9ae7a76aaa49bd0f77',\n      ],\n      [\n        'dfeeef1881101f2cb11644f3a2afdfc2045e19919152923f367a1767c11cceda',\n        'ecfb7056cf1de042f9420bab396793c0c390bde74b4bbdff16a83ae09a9a7517',\n      ],\n      [\n        '6d7ef6b17543f8373c573f44e1f389835d89bcbc6062ced36c82df83b8fae859',\n        'cd450ec335438986dfefa10c57fea9bcc521a0959b2d80bbf74b190dca712d10',\n      ],\n      [\n        'e75605d59102a5a2684500d3b991f2e3f3c88b93225547035af25af66e04541f',\n        'f5c54754a8f71ee540b9b48728473e314f729ac5308b06938360990e2bfad125',\n      ],\n      [\n        'eb98660f4c4dfaa06a2be453d5020bc99a0c2e60abe388457dd43fefb1ed620c',\n        '6cb9a8876d9cb8520609af3add26cd20a0a7cd8a9411131ce85f44100099223e',\n      ],\n      [\n        '13e87b027d8514d35939f2e6892b19922154596941888336dc3563e3b8dba942',\n        'fef5a3c68059a6dec5d624114bf1e91aac2b9da568d6abeb2570d55646b8adf1',\n      ],\n      [\n        'ee163026e9fd6fe017c38f06a5be6fc125424b371ce2708e7bf4491691e5764a',\n        '1acb250f255dd61c43d94ccc670d0f58f49ae3fa15b96623e5430da0ad6c62b2',\n      ],\n      [\n        'b268f5ef9ad51e4d78de3a750c2dc89b1e626d43505867999932e5db33af3d80',\n        '5f310d4b3c99b9ebb19f77d41c1dee018cf0d34fd4191614003e945a1216e423',\n      ],\n      [\n        'ff07f3118a9df035e9fad85eb6c7bfe42b02f01ca99ceea3bf7ffdba93c4750d',\n        '438136d603e858a3a5c440c38eccbaddc1d2942114e2eddd4740d098ced1f0d8',\n      ],\n      [\n        '8d8b9855c7c052a34146fd20ffb658bea4b9f69e0d825ebec16e8c3ce2b526a1',\n        'cdb559eedc2d79f926baf44fb84ea4d44bcf50fee51d7ceb30e2e7f463036758',\n      ],\n      [\n        '52db0b5384dfbf05bfa9d472d7ae26dfe4b851ceca91b1eba54263180da32b63',\n        'c3b997d050ee5d423ebaf66a6db9f57b3180c902875679de924b69d84a7b375',\n      ],\n      [\n        'e62f9490d3d51da6395efd24e80919cc7d0f29c3f3fa48c6fff543becbd43352',\n        '6d89ad7ba4876b0b22c2ca280c682862f342c8591f1daf5170e07bfd9ccafa7d',\n      ],\n      [\n        '7f30ea2476b399b4957509c88f77d0191afa2ff5cb7b14fd6d8e7d65aaab1193',\n        'ca5ef7d4b231c94c3b15389a5f6311e9daff7bb67b103e9880ef4bff637acaec',\n      ],\n      [\n        '5098ff1e1d9f14fb46a210fada6c903fef0fb7b4a1dd1d9ac60a0361800b7a00',\n        '9731141d81fc8f8084d37c6e7542006b3ee1b40d60dfe5362a5b132fd17ddc0',\n      ],\n      [\n        '32b78c7de9ee512a72895be6b9cbefa6e2f3c4ccce445c96b9f2c81e2778ad58',\n        'ee1849f513df71e32efc3896ee28260c73bb80547ae2275ba497237794c8753c',\n      ],\n      [\n        'e2cb74fddc8e9fbcd076eef2a7c72b0ce37d50f08269dfc074b581550547a4f7',\n        'd3aa2ed71c9dd2247a62df062736eb0baddea9e36122d2be8641abcb005cc4a4',\n      ],\n      [\n        '8438447566d4d7bedadc299496ab357426009a35f235cb141be0d99cd10ae3a8',\n        'c4e1020916980a4da5d01ac5e6ad330734ef0d7906631c4f2390426b2edd791f',\n      ],\n      [\n        '4162d488b89402039b584c6fc6c308870587d9c46f660b878ab65c82c711d67e',\n        '67163e903236289f776f22c25fb8a3afc1732f2b84b4e95dbda47ae5a0852649',\n      ],\n      [\n        '3fad3fa84caf0f34f0f89bfd2dcf54fc175d767aec3e50684f3ba4a4bf5f683d',\n        'cd1bc7cb6cc407bb2f0ca647c718a730cf71872e7d0d2a53fa20efcdfe61826',\n      ],\n      [\n        '674f2600a3007a00568c1a7ce05d0816c1fb84bf1370798f1c69532faeb1a86b',\n        '299d21f9413f33b3edf43b257004580b70db57da0b182259e09eecc69e0d38a5',\n      ],\n      [\n        'd32f4da54ade74abb81b815ad1fb3b263d82d6c692714bcff87d29bd5ee9f08f',\n        'f9429e738b8e53b968e99016c059707782e14f4535359d582fc416910b3eea87',\n      ],\n      [\n        '30e4e670435385556e593657135845d36fbb6931f72b08cb1ed954f1e3ce3ff6',\n        '462f9bce619898638499350113bbc9b10a878d35da70740dc695a559eb88db7b',\n      ],\n      [\n        'be2062003c51cc3004682904330e4dee7f3dcd10b01e580bf1971b04d4cad297',\n        '62188bc49d61e5428573d48a74e1c655b1c61090905682a0d5558ed72dccb9bc',\n      ],\n      [\n        '93144423ace3451ed29e0fb9ac2af211cb6e84a601df5993c419859fff5df04a',\n        '7c10dfb164c3425f5c71a3f9d7992038f1065224f72bb9d1d902a6d13037b47c',\n      ],\n      [\n        'b015f8044f5fcbdcf21ca26d6c34fb8197829205c7b7d2a7cb66418c157b112c',\n        'ab8c1e086d04e813744a655b2df8d5f83b3cdc6faa3088c1d3aea1454e3a1d5f',\n      ],\n      [\n        'd5e9e1da649d97d89e4868117a465a3a4f8a18de57a140d36b3f2af341a21b52',\n        '4cb04437f391ed73111a13cc1d4dd0db1693465c2240480d8955e8592f27447a',\n      ],\n      [\n        'd3ae41047dd7ca065dbf8ed77b992439983005cd72e16d6f996a5316d36966bb',\n        'bd1aeb21ad22ebb22a10f0303417c6d964f8cdd7df0aca614b10dc14d125ac46',\n      ],\n      [\n        '463e2763d885f958fc66cdd22800f0a487197d0a82e377b49f80af87c897b065',\n        'bfefacdb0e5d0fd7df3a311a94de062b26b80c61fbc97508b79992671ef7ca7f',\n      ],\n      [\n        '7985fdfd127c0567c6f53ec1bb63ec3158e597c40bfe747c83cddfc910641917',\n        '603c12daf3d9862ef2b25fe1de289aed24ed291e0ec6708703a5bd567f32ed03',\n      ],\n      [\n        '74a1ad6b5f76e39db2dd249410eac7f99e74c59cb83d2d0ed5ff1543da7703e9',\n        'cc6157ef18c9c63cd6193d83631bbea0093e0968942e8c33d5737fd790e0db08',\n      ],\n      [\n        '30682a50703375f602d416664ba19b7fc9bab42c72747463a71d0896b22f6da3',\n        '553e04f6b018b4fa6c8f39e7f311d3176290d0e0f19ca73f17714d9977a22ff8',\n      ],\n      [\n        '9e2158f0d7c0d5f26c3791efefa79597654e7a2b2464f52b1ee6c1347769ef57',\n        '712fcdd1b9053f09003a3481fa7762e9ffd7c8ef35a38509e2fbf2629008373',\n      ],\n      [\n        '176e26989a43c9cfeba4029c202538c28172e566e3c4fce7322857f3be327d66',\n        'ed8cc9d04b29eb877d270b4878dc43c19aefd31f4eee09ee7b47834c1fa4b1c3',\n      ],\n      [\n        '75d46efea3771e6e68abb89a13ad747ecf1892393dfc4f1b7004788c50374da8',\n        '9852390a99507679fd0b86fd2b39a868d7efc22151346e1a3ca4726586a6bed8',\n      ],\n      [\n        '809a20c67d64900ffb698c4c825f6d5f2310fb0451c869345b7319f645605721',\n        '9e994980d9917e22b76b061927fa04143d096ccc54963e6a5ebfa5f3f8e286c1',\n      ],\n      [\n        '1b38903a43f7f114ed4500b4eac7083fdefece1cf29c63528d563446f972c180',\n        '4036edc931a60ae889353f77fd53de4a2708b26b6f5da72ad3394119daf408f9',\n      ],\n    ],\n  },\n};\n", "'use strict';\n\nvar curves = exports;\n\nvar hash = require('hash.js');\nvar curve = require('./curve');\nvar utils = require('./utils');\n\nvar assert = utils.assert;\n\nfunction PresetCurve(options) {\n  if (options.type === 'short')\n    this.curve = new curve.short(options);\n  else if (options.type === 'edwards')\n    this.curve = new curve.edwards(options);\n  else\n    this.curve = new curve.mont(options);\n  this.g = this.curve.g;\n  this.n = this.curve.n;\n  this.hash = options.hash;\n\n  assert(this.g.validate(), 'Invalid curve');\n  assert(this.g.mul(this.n).isInfinity(), 'Invalid curve, G*N != O');\n}\ncurves.PresetCurve = PresetCurve;\n\nfunction defineCurve(name, options) {\n  Object.defineProperty(curves, name, {\n    configurable: true,\n    enumerable: true,\n    get: function() {\n      var curve = new PresetCurve(options);\n      Object.defineProperty(curves, name, {\n        configurable: true,\n        enumerable: true,\n        value: curve,\n      });\n      return curve;\n    },\n  });\n}\n\ndefineCurve('p192', {\n  type: 'short',\n  prime: 'p192',\n  p: 'ffffffff ffffffff ffffffff fffffffe ffffffff ffffffff',\n  a: 'ffffffff ffffffff ffffffff fffffffe ffffffff fffffffc',\n  b: '64210519 e59c80e7 0fa7e9ab 72243049 feb8deec c146b9b1',\n  n: 'ffffffff ffffffff ffffffff 99def836 146bc9b1 b4d22831',\n  hash: hash.sha256,\n  gRed: false,\n  g: [\n    '188da80e b03090f6 7cbf20eb 43a18800 f4ff0afd 82ff1012',\n    '07192b95 ffc8da78 631011ed 6b24cdd5 73f977a1 1e794811',\n  ],\n});\n\ndefineCurve('p224', {\n  type: 'short',\n  prime: 'p224',\n  p: 'ffffffff ffffffff ffffffff ffffffff 00000000 00000000 00000001',\n  a: 'ffffffff ffffffff ffffffff fffffffe ffffffff ffffffff fffffffe',\n  b: 'b4050a85 0c04b3ab f5413256 5044b0b7 d7bfd8ba 270b3943 2355ffb4',\n  n: 'ffffffff ffffffff ffffffff ffff16a2 e0b8f03e 13dd2945 5c5c2a3d',\n  hash: hash.sha256,\n  gRed: false,\n  g: [\n    'b70e0cbd 6bb4bf7f 321390b9 4a03c1d3 56c21122 343280d6 115c1d21',\n    'bd376388 b5f723fb 4c22dfe6 cd4375a0 5a074764 44d58199 85007e34',\n  ],\n});\n\ndefineCurve('p256', {\n  type: 'short',\n  prime: null,\n  p: 'ffffffff 00000001 00000000 00000000 00000000 ffffffff ffffffff ffffffff',\n  a: 'ffffffff 00000001 00000000 00000000 00000000 ffffffff ffffffff fffffffc',\n  b: '5ac635d8 aa3a93e7 b3ebbd55 769886bc 651d06b0 cc53b0f6 3bce3c3e 27d2604b',\n  n: 'ffffffff 00000000 ffffffff ffffffff bce6faad a7179e84 f3b9cac2 fc632551',\n  hash: hash.sha256,\n  gRed: false,\n  g: [\n    '6b17d1f2 e12c4247 f8bce6e5 63a440f2 77037d81 2deb33a0 f4a13945 d898c296',\n    '4fe342e2 fe1a7f9b 8ee7eb4a 7c0f9e16 2bce3357 6b315ece cbb64068 37bf51f5',\n  ],\n});\n\ndefineCurve('p384', {\n  type: 'short',\n  prime: null,\n  p: 'ffffffff ffffffff ffffffff ffffffff ffffffff ffffffff ffffffff ' +\n     'fffffffe ffffffff 00000000 00000000 ffffffff',\n  a: 'ffffffff ffffffff ffffffff ffffffff ffffffff ffffffff ffffffff ' +\n     'fffffffe ffffffff 00000000 00000000 fffffffc',\n  b: 'b3312fa7 e23ee7e4 988e056b e3f82d19 181d9c6e fe814112 0314088f ' +\n     '5013875a c656398d 8a2ed19d 2a85c8ed d3ec2aef',\n  n: 'ffffffff ffffffff ffffffff ffffffff ffffffff ffffffff c7634d81 ' +\n     'f4372ddf 581a0db2 48b0a77a ecec196a ccc52973',\n  hash: hash.sha384,\n  gRed: false,\n  g: [\n    'aa87ca22 be8b0537 8eb1c71e f320ad74 6e1d3b62 8ba79b98 59f741e0 82542a38 ' +\n    '5502f25d bf55296c 3a545e38 72760ab7',\n    '3617de4a 96262c6f 5d9e98bf 9292dc29 f8f41dbd 289a147c e9da3113 b5f0b8c0 ' +\n    '0a60b1ce 1d7e819d 7a431d7c 90ea0e5f',\n  ],\n});\n\ndefineCurve('p521', {\n  type: 'short',\n  prime: null,\n  p: '000001ff ffffffff ffffffff ffffffff ffffffff ffffffff ' +\n     'ffffffff ffffffff ffffffff ffffffff ffffffff ffffffff ' +\n     'ffffffff ffffffff ffffffff ffffffff ffffffff',\n  a: '000001ff ffffffff ffffffff ffffffff ffffffff ffffffff ' +\n     'ffffffff ffffffff ffffffff ffffffff ffffffff ffffffff ' +\n     'ffffffff ffffffff ffffffff ffffffff fffffffc',\n  b: '00000051 953eb961 8e1c9a1f 929a21a0 b68540ee a2da725b ' +\n     '99b315f3 b8b48991 8ef109e1 56193951 ec7e937b 1652c0bd ' +\n     '3bb1bf07 3573df88 3d2c34f1 ef451fd4 6b503f00',\n  n: '000001ff ffffffff ffffffff ffffffff ffffffff ffffffff ' +\n     'ffffffff ffffffff fffffffa 51868783 bf2f966b 7fcc0148 ' +\n     'f709a5d0 3bb5c9b8 899c47ae bb6fb71e 91386409',\n  hash: hash.sha512,\n  gRed: false,\n  g: [\n    '000000c6 858e06b7 0404e9cd 9e3ecb66 2395b442 9c648139 ' +\n    '053fb521 f828af60 6b4d3dba a14b5e77 efe75928 fe1dc127 ' +\n    'a2ffa8de 3348b3c1 856a429b f97e7e31 c2e5bd66',\n    '00000118 39296a78 9a3bc004 5c8a5fb4 2c7d1bd9 98f54449 ' +\n    '579b4468 17afbd17 273e662c 97ee7299 5ef42640 c550b901 ' +\n    '3fad0761 353c7086 a272c240 88be9476 9fd16650',\n  ],\n});\n\ndefineCurve('curve25519', {\n  type: 'mont',\n  prime: 'p25519',\n  p: '7fffffffffffffff ffffffffffffffff ffffffffffffffff ffffffffffffffed',\n  a: '76d06',\n  b: '1',\n  n: '1000000000000000 0000000000000000 14def9dea2f79cd6 5812631a5cf5d3ed',\n  hash: hash.sha256,\n  gRed: false,\n  g: [\n    '9',\n  ],\n});\n\ndefineCurve('ed25519', {\n  type: 'edwards',\n  prime: 'p25519',\n  p: '7fffffffffffffff ffffffffffffffff ffffffffffffffff ffffffffffffffed',\n  a: '-1',\n  c: '1',\n  // -121665 * (121666^(-1)) (mod P)\n  d: '52036cee2b6ffe73 8cc740797779e898 00700a4d4141d8ab 75eb4dca135978a3',\n  n: '1000000000000000 0000000000000000 14def9dea2f79cd6 5812631a5cf5d3ed',\n  hash: hash.sha256,\n  gRed: false,\n  g: [\n    '216936d3cd6e53fec0a4e231fdd6dc5c692cc7609525a7b2c9562d608f25d51a',\n\n    // 4/5\n    '6666666666666666666666666666666666666666666666666666666666666658',\n  ],\n});\n\nvar pre;\ntry {\n  pre = require('./precomputed/secp256k1');\n} catch (e) {\n  pre = undefined;\n}\n\ndefineCurve('secp256k1', {\n  type: 'short',\n  prime: 'k256',\n  p: 'ffffffff ffffffff ffffffff ffffffff ffffffff ffffffff fffffffe fffffc2f',\n  a: '0',\n  b: '7',\n  n: 'ffffffff ffffffff ffffffff fffffffe baaedce6 af48a03b bfd25e8c d0364141',\n  h: '1',\n  hash: hash.sha256,\n\n  // Precomputed endomorphism\n  beta: '7ae96a2b657c07106e64479eac3434e99cf0497512f58995c1396c28719501ee',\n  lambda: '5363ad4cc05c30e0a5261c028812645a122e22ea20816678df02967c1b23bd72',\n  basis: [\n    {\n      a: '3086d221a7d46bcde86c90e49284eb15',\n      b: '-e4437ed6010e88286f547fa90abfe4c3',\n    },\n    {\n      a: '114ca50f7a8e2f3f657c1108d9d44cfd8',\n      b: '3086d221a7d46bcde86c90e49284eb15',\n    },\n  ],\n\n  gRed: false,\n  g: [\n    '79be667ef9dcbbac55a06295ce870b07029bfcdb2dce28d959f2815b16f81798',\n    '483ada7726a3c4655da4fbfc0e1108a8fd17b448a68554199c47d08ffb10d4b8',\n    pre,\n  ],\n});\n", "'use strict';\n\nvar hash = require('hash.js');\nvar utils = require('minimalistic-crypto-utils');\nvar assert = require('minimalistic-assert');\n\nfunction HmacDRBG(options) {\n  if (!(this instanceof HmacDRBG))\n    return new HmacDRBG(options);\n  this.hash = options.hash;\n  this.predResist = !!options.predResist;\n\n  this.outLen = this.hash.outSize;\n  this.minEntropy = options.minEntropy || this.hash.hmacStrength;\n\n  this._reseed = null;\n  this.reseedInterval = null;\n  this.K = null;\n  this.V = null;\n\n  var entropy = utils.toArray(options.entropy, options.entropyEnc || 'hex');\n  var nonce = utils.toArray(options.nonce, options.nonceEnc || 'hex');\n  var pers = utils.toArray(options.pers, options.persEnc || 'hex');\n  assert(entropy.length >= (this.minEntropy / 8),\n         'Not enough entropy. Minimum is: ' + this.minEntropy + ' bits');\n  this._init(entropy, nonce, pers);\n}\nmodule.exports = HmacDRBG;\n\nHmacDRBG.prototype._init = function init(entropy, nonce, pers) {\n  var seed = entropy.concat(nonce).concat(pers);\n\n  this.K = new Array(this.outLen / 8);\n  this.V = new Array(this.outLen / 8);\n  for (var i = 0; i < this.V.length; i++) {\n    this.K[i] = 0x00;\n    this.V[i] = 0x01;\n  }\n\n  this._update(seed);\n  this._reseed = 1;\n  this.reseedInterval = 0x1000000000000;  // 2^48\n};\n\nHmacDRBG.prototype._hmac = function hmac() {\n  return new hash.hmac(this.hash, this.K);\n};\n\nHmacDRBG.prototype._update = function update(seed) {\n  var kmac = this._hmac()\n                 .update(this.V)\n                 .update([ 0x00 ]);\n  if (seed)\n    kmac = kmac.update(seed);\n  this.K = kmac.digest();\n  this.V = this._hmac().update(this.V).digest();\n  if (!seed)\n    return;\n\n  this.K = this._hmac()\n               .update(this.V)\n               .update([ 0x01 ])\n               .update(seed)\n               .digest();\n  this.V = this._hmac().update(this.V).digest();\n};\n\nHmacDRBG.prototype.reseed = function reseed(entropy, entropyEnc, add, addEnc) {\n  // Optional entropy enc\n  if (typeof entropyEnc !== 'string') {\n    addEnc = add;\n    add = entropyEnc;\n    entropyEnc = null;\n  }\n\n  entropy = utils.toArray(entropy, entropyEnc);\n  add = utils.toArray(add, addEnc);\n\n  assert(entropy.length >= (this.minEntropy / 8),\n         'Not enough entropy. Minimum is: ' + this.minEntropy + ' bits');\n\n  this._update(entropy.concat(add || []));\n  this._reseed = 1;\n};\n\nHmacDRBG.prototype.generate = function generate(len, enc, add, addEnc) {\n  if (this._reseed > this.reseedInterval)\n    throw new Error('Reseed is required');\n\n  // Optional encoding\n  if (typeof enc !== 'string') {\n    addEnc = add;\n    add = enc;\n    enc = null;\n  }\n\n  // Optional additional data\n  if (add) {\n    add = utils.toArray(add, addEnc || 'hex');\n    this._update(add);\n  }\n\n  var temp = [];\n  while (temp.length < len) {\n    this.V = this._hmac().update(this.V).digest();\n    temp = temp.concat(this.V);\n  }\n\n  var res = temp.slice(0, len);\n  this._update(add);\n  this._reseed++;\n  return utils.encode(res, enc);\n};\n", "'use strict';\n\nvar BN = require('bn.js');\nvar utils = require('../utils');\nvar assert = utils.assert;\n\nfunction KeyPair(ec, options) {\n  this.ec = ec;\n  this.priv = null;\n  this.pub = null;\n\n  // KeyPair(ec, { priv: ..., pub: ... })\n  if (options.priv)\n    this._importPrivate(options.priv, options.privEnc);\n  if (options.pub)\n    this._importPublic(options.pub, options.pubEnc);\n}\nmodule.exports = KeyPair;\n\nKeyPair.fromPublic = function fromPublic(ec, pub, enc) {\n  if (pub instanceof KeyPair)\n    return pub;\n\n  return new KeyPair(ec, {\n    pub: pub,\n    pubEnc: enc,\n  });\n};\n\nKeyPair.fromPrivate = function fromPrivate(ec, priv, enc) {\n  if (priv instanceof KeyPair)\n    return priv;\n\n  return new KeyPair(ec, {\n    priv: priv,\n    privEnc: enc,\n  });\n};\n\nKeyPair.prototype.validate = function validate() {\n  var pub = this.getPublic();\n\n  if (pub.isInfinity())\n    return { result: false, reason: 'Invalid public key' };\n  if (!pub.validate())\n    return { result: false, reason: 'Public key is not a point' };\n  if (!pub.mul(this.ec.curve.n).isInfinity())\n    return { result: false, reason: 'Public key * N != O' };\n\n  return { result: true, reason: null };\n};\n\nKeyPair.prototype.getPublic = function getPublic(compact, enc) {\n  // compact is optional argument\n  if (typeof compact === 'string') {\n    enc = compact;\n    compact = null;\n  }\n\n  if (!this.pub)\n    this.pub = this.ec.g.mul(this.priv);\n\n  if (!enc)\n    return this.pub;\n\n  return this.pub.encode(enc, compact);\n};\n\nKeyPair.prototype.getPrivate = function getPrivate(enc) {\n  if (enc === 'hex')\n    return this.priv.toString(16, 2);\n  else\n    return this.priv;\n};\n\nKeyPair.prototype._importPrivate = function _importPrivate(key, enc) {\n  this.priv = new BN(key, enc || 16);\n\n  // Ensure that the priv won't be bigger than n, otherwise we may fail\n  // in fixed multiplication method\n  this.priv = this.priv.umod(this.ec.curve.n);\n};\n\nKeyPair.prototype._importPublic = function _importPublic(key, enc) {\n  if (key.x || key.y) {\n    // Montgomery points only have an `x` coordinate.\n    // Weierstrass/Edwards points on the other hand have both `x` and\n    // `y` coordinates.\n    if (this.ec.curve.type === 'mont') {\n      assert(key.x, 'Need x coordinate');\n    } else if (this.ec.curve.type === 'short' ||\n               this.ec.curve.type === 'edwards') {\n      assert(key.x && key.y, 'Need both x and y coordinate');\n    }\n    this.pub = this.ec.curve.point(key.x, key.y);\n    return;\n  }\n  this.pub = this.ec.curve.decodePoint(key, enc);\n};\n\n// ECDH\nKeyPair.prototype.derive = function derive(pub) {\n  if(!pub.validate()) {\n    assert(pub.validate(), 'public point not validated');\n  }\n  return pub.mul(this.priv).getX();\n};\n\n// ECDSA\nKeyPair.prototype.sign = function sign(msg, enc, options) {\n  return this.ec.sign(msg, this, enc, options);\n};\n\nKeyPair.prototype.verify = function verify(msg, signature) {\n  return this.ec.verify(msg, signature, this);\n};\n\nKeyPair.prototype.inspect = function inspect() {\n  return '<Key priv: ' + (this.priv && this.priv.toString(16, 2)) +\n         ' pub: ' + (this.pub && this.pub.inspect()) + ' >';\n};\n", "'use strict';\n\nvar BN = require('bn.js');\n\nvar utils = require('../utils');\nvar assert = utils.assert;\n\nfunction Signature(options, enc) {\n  if (options instanceof Signature)\n    return options;\n\n  if (this._importDER(options, enc))\n    return;\n\n  assert(options.r && options.s, 'Signature without r or s');\n  this.r = new BN(options.r, 16);\n  this.s = new BN(options.s, 16);\n  if (options.recoveryParam === undefined)\n    this.recoveryParam = null;\n  else\n    this.recoveryParam = options.recoveryParam;\n}\nmodule.exports = Signature;\n\nfunction Position() {\n  this.place = 0;\n}\n\nfunction getLength(buf, p) {\n  var initial = buf[p.place++];\n  if (!(initial & 0x80)) {\n    return initial;\n  }\n  var octetLen = initial & 0xf;\n\n  // Indefinite length or overflow\n  if (octetLen === 0 || octetLen > 4) {\n    return false;\n  }\n\n  var val = 0;\n  for (var i = 0, off = p.place; i < octetLen; i++, off++) {\n    val <<= 8;\n    val |= buf[off];\n    val >>>= 0;\n  }\n\n  // Leading zeroes\n  if (val <= 0x7f) {\n    return false;\n  }\n\n  p.place = off;\n  return val;\n}\n\nfunction rmPadding(buf) {\n  var i = 0;\n  var len = buf.length - 1;\n  while (!buf[i] && !(buf[i + 1] & 0x80) && i < len) {\n    i++;\n  }\n  if (i === 0) {\n    return buf;\n  }\n  return buf.slice(i);\n}\n\nSignature.prototype._importDER = function _importDER(data, enc) {\n  data = utils.toArray(data, enc);\n  var p = new Position();\n  if (data[p.place++] !== 0x30) {\n    return false;\n  }\n  var len = getLength(data, p);\n  if (len === false) {\n    return false;\n  }\n  if ((len + p.place) !== data.length) {\n    return false;\n  }\n  if (data[p.place++] !== 0x02) {\n    return false;\n  }\n  var rlen = getLength(data, p);\n  if (rlen === false) {\n    return false;\n  }\n  var r = data.slice(p.place, rlen + p.place);\n  p.place += rlen;\n  if (data[p.place++] !== 0x02) {\n    return false;\n  }\n  var slen = getLength(data, p);\n  if (slen === false) {\n    return false;\n  }\n  if (data.length !== slen + p.place) {\n    return false;\n  }\n  var s = data.slice(p.place, slen + p.place);\n  if (r[0] === 0) {\n    if (r[1] & 0x80) {\n      r = r.slice(1);\n    } else {\n      // Leading zeroes\n      return false;\n    }\n  }\n  if (s[0] === 0) {\n    if (s[1] & 0x80) {\n      s = s.slice(1);\n    } else {\n      // Leading zeroes\n      return false;\n    }\n  }\n\n  this.r = new BN(r);\n  this.s = new BN(s);\n  this.recoveryParam = null;\n\n  return true;\n};\n\nfunction constructLength(arr, len) {\n  if (len < 0x80) {\n    arr.push(len);\n    return;\n  }\n  var octets = 1 + (Math.log(len) / Math.LN2 >>> 3);\n  arr.push(octets | 0x80);\n  while (--octets) {\n    arr.push((len >>> (octets << 3)) & 0xff);\n  }\n  arr.push(len);\n}\n\nSignature.prototype.toDER = function toDER(enc) {\n  var r = this.r.toArray();\n  var s = this.s.toArray();\n\n  // Pad values\n  if (r[0] & 0x80)\n    r = [ 0 ].concat(r);\n  // Pad values\n  if (s[0] & 0x80)\n    s = [ 0 ].concat(s);\n\n  r = rmPadding(r);\n  s = rmPadding(s);\n\n  while (!s[0] && !(s[1] & 0x80)) {\n    s = s.slice(1);\n  }\n  var arr = [ 0x02 ];\n  constructLength(arr, r.length);\n  arr = arr.concat(r);\n  arr.push(0x02);\n  constructLength(arr, s.length);\n  var backHalf = arr.concat(s);\n  var res = [ 0x30 ];\n  constructLength(res, backHalf.length);\n  res = res.concat(backHalf);\n  return utils.encode(res, enc);\n};\n", "'use strict';\n\nvar BN = require('bn.js');\nvar HmacDRBG = require('hmac-drbg');\nvar utils = require('../utils');\nvar curves = require('../curves');\nvar rand = require('brorand');\nvar assert = utils.assert;\n\nvar KeyPair = require('./key');\nvar Signature = require('./signature');\n\nfunction EC(options) {\n  if (!(this instanceof EC))\n    return new EC(options);\n\n  // Shortcut `elliptic.ec(curve-name)`\n  if (typeof options === 'string') {\n    assert(Object.prototype.hasOwnProperty.call(curves, options),\n      'Unknown curve ' + options);\n\n    options = curves[options];\n  }\n\n  // Shortcut for `elliptic.ec(elliptic.curves.curveName)`\n  if (options instanceof curves.PresetCurve)\n    options = { curve: options };\n\n  this.curve = options.curve.curve;\n  this.n = this.curve.n;\n  this.nh = this.n.ushrn(1);\n  this.g = this.curve.g;\n\n  // Point on curve\n  this.g = options.curve.g;\n  this.g.precompute(options.curve.n.bitLength() + 1);\n\n  // Hash for function for DRBG\n  this.hash = options.hash || options.curve.hash;\n}\nmodule.exports = EC;\n\nEC.prototype.keyPair = function keyPair(options) {\n  return new KeyPair(this, options);\n};\n\nEC.prototype.keyFromPrivate = function keyFromPrivate(priv, enc) {\n  return KeyPair.fromPrivate(this, priv, enc);\n};\n\nEC.prototype.keyFromPublic = function keyFromPublic(pub, enc) {\n  return KeyPair.fromPublic(this, pub, enc);\n};\n\nEC.prototype.genKeyPair = function genKeyPair(options) {\n  if (!options)\n    options = {};\n\n  // Instantiate Hmac_DRBG\n  var drbg = new HmacDRBG({\n    hash: this.hash,\n    pers: options.pers,\n    persEnc: options.persEnc || 'utf8',\n    entropy: options.entropy || rand(this.hash.hmacStrength),\n    entropyEnc: options.entropy && options.entropyEnc || 'utf8',\n    nonce: this.n.toArray(),\n  });\n\n  var bytes = this.n.byteLength();\n  var ns2 = this.n.sub(new BN(2));\n  for (;;) {\n    var priv = new BN(drbg.generate(bytes));\n    if (priv.cmp(ns2) > 0)\n      continue;\n\n    priv.iaddn(1);\n    return this.keyFromPrivate(priv);\n  }\n};\n\nEC.prototype._truncateToN = function _truncateToN(msg, truncOnly) {\n  var delta = msg.byteLength() * 8 - this.n.bitLength();\n  if (delta > 0)\n    msg = msg.ushrn(delta);\n  if (!truncOnly && msg.cmp(this.n) >= 0)\n    return msg.sub(this.n);\n  else\n    return msg;\n};\n\nEC.prototype.sign = function sign(msg, key, enc, options) {\n  if (typeof enc === 'object') {\n    options = enc;\n    enc = null;\n  }\n  if (!options)\n    options = {};\n\n  key = this.keyFromPrivate(key, enc);\n  msg = this._truncateToN(new BN(msg, 16));\n\n  // Zero-extend key to provide enough entropy\n  var bytes = this.n.byteLength();\n  var bkey = key.getPrivate().toArray('be', bytes);\n\n  // Zero-extend nonce to have the same byte size as N\n  var nonce = msg.toArray('be', bytes);\n\n  // Instantiate Hmac_DRBG\n  var drbg = new HmacDRBG({\n    hash: this.hash,\n    entropy: bkey,\n    nonce: nonce,\n    pers: options.pers,\n    persEnc: options.persEnc || 'utf8',\n  });\n\n  // Number of bytes to generate\n  var ns1 = this.n.sub(new BN(1));\n\n  for (var iter = 0; ; iter++) {\n    var k = options.k ?\n      options.k(iter) :\n      new BN(drbg.generate(this.n.byteLength()));\n    k = this._truncateToN(k, true);\n    if (k.cmpn(1) <= 0 || k.cmp(ns1) >= 0)\n      continue;\n\n    var kp = this.g.mul(k);\n    if (kp.isInfinity())\n      continue;\n\n    var kpX = kp.getX();\n    var r = kpX.umod(this.n);\n    if (r.cmpn(0) === 0)\n      continue;\n\n    var s = k.invm(this.n).mul(r.mul(key.getPrivate()).iadd(msg));\n    s = s.umod(this.n);\n    if (s.cmpn(0) === 0)\n      continue;\n\n    var recoveryParam = (kp.getY().isOdd() ? 1 : 0) |\n                        (kpX.cmp(r) !== 0 ? 2 : 0);\n\n    // Use complement of `s`, if it is > `n / 2`\n    if (options.canonical && s.cmp(this.nh) > 0) {\n      s = this.n.sub(s);\n      recoveryParam ^= 1;\n    }\n\n    return new Signature({ r: r, s: s, recoveryParam: recoveryParam });\n  }\n};\n\nEC.prototype.verify = function verify(msg, signature, key, enc) {\n  msg = this._truncateToN(new BN(msg, 16));\n  key = this.keyFromPublic(key, enc);\n  signature = new Signature(signature, 'hex');\n\n  // Perform primitive values validation\n  var r = signature.r;\n  var s = signature.s;\n  if (r.cmpn(1) < 0 || r.cmp(this.n) >= 0)\n    return false;\n  if (s.cmpn(1) < 0 || s.cmp(this.n) >= 0)\n    return false;\n\n  // Validate signature\n  var sinv = s.invm(this.n);\n  var u1 = sinv.mul(msg).umod(this.n);\n  var u2 = sinv.mul(r).umod(this.n);\n  var p;\n\n  if (!this.curve._maxwellTrick) {\n    p = this.g.mulAdd(u1, key.getPublic(), u2);\n    if (p.isInfinity())\n      return false;\n\n    return p.getX().umod(this.n).cmp(r) === 0;\n  }\n\n  // NOTE: Greg Maxwell's trick, inspired by:\n  // https://git.io/vad3K\n\n  p = this.g.jmulAdd(u1, key.getPublic(), u2);\n  if (p.isInfinity())\n    return false;\n\n  // Compare `p.x` of Jacobian point with `r`,\n  // this will do `p.x == r * p.z^2` instead of multiplying `p.x` by the\n  // inverse of `p.z^2`\n  return p.eqXToP(r);\n};\n\nEC.prototype.recoverPubKey = function(msg, signature, j, enc) {\n  assert((3 & j) === j, 'The recovery param is more than two bits');\n  signature = new Signature(signature, enc);\n\n  var n = this.n;\n  var e = new BN(msg);\n  var r = signature.r;\n  var s = signature.s;\n\n  // A set LSB signifies that the y-coordinate is odd\n  var isYOdd = j & 1;\n  var isSecondKey = j >> 1;\n  if (r.cmp(this.curve.p.umod(this.curve.n)) >= 0 && isSecondKey)\n    throw new Error('Unable to find sencond key candinate');\n\n  // 1.1. Let x = r + jn.\n  if (isSecondKey)\n    r = this.curve.pointFromX(r.add(this.curve.n), isYOdd);\n  else\n    r = this.curve.pointFromX(r, isYOdd);\n\n  var rInv = signature.r.invm(n);\n  var s1 = n.sub(e).mul(rInv).umod(n);\n  var s2 = s.mul(rInv).umod(n);\n\n  // 1.6.1 Compute Q = r^-1 (sR -  eG)\n  //               Q = r^-1 (sR + -eG)\n  return this.g.mulAdd(s1, r, s2);\n};\n\nEC.prototype.getKeyRecoveryParam = function(e, signature, Q, enc) {\n  signature = new Signature(signature, enc);\n  if (signature.recoveryParam !== null)\n    return signature.recoveryParam;\n\n  for (var i = 0; i < 4; i++) {\n    var Qprime;\n    try {\n      Qprime = this.recoverPubKey(e, signature, i);\n    } catch (e) {\n      continue;\n    }\n\n    if (Qprime.eq(Q))\n      return i;\n  }\n  throw new Error('Unable to find valid recovery factor');\n};\n", "'use strict';\n\nvar utils = require('../utils');\nvar assert = utils.assert;\nvar parseBytes = utils.parseBytes;\nvar cachedProperty = utils.cachedProperty;\n\n/**\n* @param {EDDSA} eddsa - instance\n* @param {Object} params - public/private key parameters\n*\n* @param {Array<Byte>} [params.secret] - secret seed bytes\n* @param {Point} [params.pub] - public key point (aka `A` in eddsa terms)\n* @param {Array<Byte>} [params.pub] - public key point encoded as bytes\n*\n*/\nfunction KeyPair(eddsa, params) {\n  this.eddsa = eddsa;\n  this._secret = parseBytes(params.secret);\n  if (eddsa.isPoint(params.pub))\n    this._pub = params.pub;\n  else\n    this._pubBytes = parseBytes(params.pub);\n}\n\nKeyPair.fromPublic = function fromPublic(eddsa, pub) {\n  if (pub instanceof KeyPair)\n    return pub;\n  return new KeyPair(eddsa, { pub: pub });\n};\n\nKeyPair.fromSecret = function fromSecret(eddsa, secret) {\n  if (secret instanceof KeyPair)\n    return secret;\n  return new KeyPair(eddsa, { secret: secret });\n};\n\nKeyPair.prototype.secret = function secret() {\n  return this._secret;\n};\n\ncachedProperty(KeyPair, 'pubBytes', function pubBytes() {\n  return this.eddsa.encodePoint(this.pub());\n});\n\ncachedProperty(KeyPair, 'pub', function pub() {\n  if (this._pubBytes)\n    return this.eddsa.decodePoint(this._pubBytes);\n  return this.eddsa.g.mul(this.priv());\n});\n\ncachedProperty(KeyPair, 'privBytes', function privBytes() {\n  var eddsa = this.eddsa;\n  var hash = this.hash();\n  var lastIx = eddsa.encodingLength - 1;\n\n  var a = hash.slice(0, eddsa.encodingLength);\n  a[0] &= 248;\n  a[lastIx] &= 127;\n  a[lastIx] |= 64;\n\n  return a;\n});\n\ncachedProperty(KeyPair, 'priv', function priv() {\n  return this.eddsa.decodeInt(this.privBytes());\n});\n\ncachedProperty(KeyPair, 'hash', function hash() {\n  return this.eddsa.hash().update(this.secret()).digest();\n});\n\ncachedProperty(KeyPair, 'messagePrefix', function messagePrefix() {\n  return this.hash().slice(this.eddsa.encodingLength);\n});\n\nKeyPair.prototype.sign = function sign(message) {\n  assert(this._secret, 'KeyPair can only verify');\n  return this.eddsa.sign(message, this);\n};\n\nKeyPair.prototype.verify = function verify(message, sig) {\n  return this.eddsa.verify(message, sig, this);\n};\n\nKeyPair.prototype.getSecret = function getSecret(enc) {\n  assert(this._secret, 'KeyPair is public only');\n  return utils.encode(this.secret(), enc);\n};\n\nKeyPair.prototype.getPublic = function getPublic(enc) {\n  return utils.encode(this.pubBytes(), enc);\n};\n\nmodule.exports = KeyPair;\n", "'use strict';\n\nvar BN = require('bn.js');\nvar utils = require('../utils');\nvar assert = utils.assert;\nvar cachedProperty = utils.cachedProperty;\nvar parseBytes = utils.parseBytes;\n\n/**\n* @param {EDDSA} eddsa - eddsa instance\n* @param {Array<Bytes>|Object} sig -\n* @param {Array<Bytes>|Point} [sig.R] - R point as Point or bytes\n* @param {Array<Bytes>|bn} [sig.S] - S scalar as bn or bytes\n* @param {Array<Bytes>} [sig.Rencoded] - R point encoded\n* @param {Array<Bytes>} [sig.Sencoded] - S scalar encoded\n*/\nfunction Signature(eddsa, sig) {\n  this.eddsa = eddsa;\n\n  if (typeof sig !== 'object')\n    sig = parseBytes(sig);\n\n  if (Array.isArray(sig)) {\n    sig = {\n      R: sig.slice(0, eddsa.encodingLength),\n      S: sig.slice(eddsa.encodingLength),\n    };\n  }\n\n  assert(sig.R && sig.S, 'Signature without R or S');\n\n  if (eddsa.isPoint(sig.R))\n    this._R = sig.R;\n  if (sig.S instanceof BN)\n    this._S = sig.S;\n\n  this._Rencoded = Array.isArray(sig.R) ? sig.R : sig.Rencoded;\n  this._Sencoded = Array.isArray(sig.S) ? sig.S : sig.Sencoded;\n}\n\ncachedProperty(Signature, 'S', function S() {\n  return this.eddsa.decodeInt(this.Sencoded());\n});\n\ncachedProperty(Signature, 'R', function R() {\n  return this.eddsa.decodePoint(this.Rencoded());\n});\n\ncachedProperty(Signature, 'Rencoded', function Rencoded() {\n  return this.eddsa.encodePoint(this.R());\n});\n\ncachedProperty(Signature, 'Sencoded', function Sencoded() {\n  return this.eddsa.encodeInt(this.S());\n});\n\nSignature.prototype.toBytes = function toBytes() {\n  return this.Rencoded().concat(this.Sencoded());\n};\n\nSignature.prototype.toHex = function toHex() {\n  return utils.encode(this.toBytes(), 'hex').toUpperCase();\n};\n\nmodule.exports = Signature;\n", "'use strict';\n\nvar hash = require('hash.js');\nvar curves = require('../curves');\nvar utils = require('../utils');\nvar assert = utils.assert;\nvar parseBytes = utils.parseBytes;\nvar KeyPair = require('./key');\nvar Signature = require('./signature');\n\nfunction EDDSA(curve) {\n  assert(curve === 'ed25519', 'only tested with ed25519 so far');\n\n  if (!(this instanceof EDDSA))\n    return new EDDSA(curve);\n\n  curve = curves[curve].curve;\n  this.curve = curve;\n  this.g = curve.g;\n  this.g.precompute(curve.n.bitLength() + 1);\n\n  this.pointClass = curve.point().constructor;\n  this.encodingLength = Math.ceil(curve.n.bitLength() / 8);\n  this.hash = hash.sha512;\n}\n\nmodule.exports = EDDSA;\n\n/**\n* @param {Array|String} message - message bytes\n* @param {Array|String|KeyPair} secret - secret bytes or a keypair\n* @returns {Signature} - signature\n*/\nEDDSA.prototype.sign = function sign(message, secret) {\n  message = parseBytes(message);\n  var key = this.keyFromSecret(secret);\n  var r = this.hashInt(key.messagePrefix(), message);\n  var R = this.g.mul(r);\n  var Rencoded = this.encodePoint(R);\n  var s_ = this.hashInt(Rencoded, key.pubBytes(), message)\n    .mul(key.priv());\n  var S = r.add(s_).umod(this.curve.n);\n  return this.makeSignature({ R: R, S: S, Rencoded: Rencoded });\n};\n\n/**\n* @param {Array} message - message bytes\n* @param {Array|String|Signature} sig - sig bytes\n* @param {Array|String|Point|KeyPair} pub - public key\n* @returns {Boolean} - true if public key matches sig of message\n*/\nEDDSA.prototype.verify = function verify(message, sig, pub) {\n  message = parseBytes(message);\n  sig = this.makeSignature(sig);\n  var key = this.keyFromPublic(pub);\n  var h = this.hashInt(sig.Rencoded(), key.pubBytes(), message);\n  var SG = this.g.mul(sig.S());\n  var RplusAh = sig.R().add(key.pub().mul(h));\n  return RplusAh.eq(SG);\n};\n\nEDDSA.prototype.hashInt = function hashInt() {\n  var hash = this.hash();\n  for (var i = 0; i < arguments.length; i++)\n    hash.update(arguments[i]);\n  return utils.intFromLE(hash.digest()).umod(this.curve.n);\n};\n\nEDDSA.prototype.keyFromPublic = function keyFromPublic(pub) {\n  return KeyPair.fromPublic(this, pub);\n};\n\nEDDSA.prototype.keyFromSecret = function keyFromSecret(secret) {\n  return KeyPair.fromSecret(this, secret);\n};\n\nEDDSA.prototype.makeSignature = function makeSignature(sig) {\n  if (sig instanceof Signature)\n    return sig;\n  return new Signature(this, sig);\n};\n\n/**\n* * https://tools.ietf.org/html/draft-josefsson-eddsa-ed25519-03#section-5.2\n*\n* EDDSA defines methods for encoding and decoding points and integers. These are\n* helper convenience methods, that pass along to utility functions implied\n* parameters.\n*\n*/\nEDDSA.prototype.encodePoint = function encodePoint(point) {\n  var enc = point.getY().toArray('le', this.encodingLength);\n  enc[this.encodingLength - 1] |= point.getX().isOdd() ? 0x80 : 0;\n  return enc;\n};\n\nEDDSA.prototype.decodePoint = function decodePoint(bytes) {\n  bytes = utils.parseBytes(bytes);\n\n  var lastIx = bytes.length - 1;\n  var normed = bytes.slice(0, lastIx).concat(bytes[lastIx] & ~0x80);\n  var xIsOdd = (bytes[lastIx] & 0x80) !== 0;\n\n  var y = utils.intFromLE(normed);\n  return this.curve.pointFromY(y, xIsOdd);\n};\n\nEDDSA.prototype.encodeInt = function encodeInt(num) {\n  return num.toArray('le', this.encodingLength);\n};\n\nEDDSA.prototype.decodeInt = function decodeInt(bytes) {\n  return utils.intFromLE(bytes);\n};\n\nEDDSA.prototype.isPoint = function isPoint(val) {\n  return val instanceof this.pointClass;\n};\n", "'use strict';\n\nvar elliptic = exports;\n\nelliptic.version = require('../package.json').version;\nelliptic.utils = require('./elliptic/utils');\nelliptic.rand = require('brorand');\nelliptic.curve = require('./elliptic/curve');\nelliptic.curves = require('./elliptic/curves');\n\n// Protocols\nelliptic.ec = require('./elliptic/ec');\nelliptic.eddsa = require('./elliptic/eddsa');\n", "module.exports = Long;\r\n\r\n/**\r\n * wasm optimizations, to do native i64 multiplication and divide\r\n */\r\nvar wasm = null;\r\n\r\ntry {\r\n  wasm = new WebAssembly.Instance(new WebAssembly.Module(new Uint8Array([\r\n    0, 97, 115, 109, 1, 0, 0, 0, 1, 13, 2, 96, 0, 1, 127, 96, 4, 127, 127, 127, 127, 1, 127, 3, 7, 6, 0, 1, 1, 1, 1, 1, 6, 6, 1, 127, 1, 65, 0, 11, 7, 50, 6, 3, 109, 117, 108, 0, 1, 5, 100, 105, 118, 95, 115, 0, 2, 5, 100, 105, 118, 95, 117, 0, 3, 5, 114, 101, 109, 95, 115, 0, 4, 5, 114, 101, 109, 95, 117, 0, 5, 8, 103, 101, 116, 95, 104, 105, 103, 104, 0, 0, 10, 191, 1, 6, 4, 0, 35, 0, 11, 36, 1, 1, 126, 32, 0, 173, 32, 1, 173, 66, 32, 134, 132, 32, 2, 173, 32, 3, 173, 66, 32, 134, 132, 126, 34, 4, 66, 32, 135, 167, 36, 0, 32, 4, 167, 11, 36, 1, 1, 126, 32, 0, 173, 32, 1, 173, 66, 32, 134, 132, 32, 2, 173, 32, 3, 173, 66, 32, 134, 132, 127, 34, 4, 66, 32, 135, 167, 36, 0, 32, 4, 167, 11, 36, 1, 1, 126, 32, 0, 173, 32, 1, 173, 66, 32, 134, 132, 32, 2, 173, 32, 3, 173, 66, 32, 134, 132, 128, 34, 4, 66, 32, 135, 167, 36, 0, 32, 4, 167, 11, 36, 1, 1, 126, 32, 0, 173, 32, 1, 173, 66, 32, 134, 132, 32, 2, 173, 32, 3, 173, 66, 32, 134, 132, 129, 34, 4, 66, 32, 135, 167, 36, 0, 32, 4, 167, 11, 36, 1, 1, 126, 32, 0, 173, 32, 1, 173, 66, 32, 134, 132, 32, 2, 173, 32, 3, 173, 66, 32, 134, 132, 130, 34, 4, 66, 32, 135, 167, 36, 0, 32, 4, 167, 11\r\n  ])), {}).exports;\r\n} catch (e) {\r\n  // no wasm support :(\r\n}\r\n\r\n/**\r\n * Constructs a 64 bit two's-complement integer, given its low and high 32 bit values as *signed* integers.\r\n *  See the from* functions below for more convenient ways of constructing Longs.\r\n * @exports Long\r\n * @class A Long class for representing a 64 bit two's-complement integer value.\r\n * @param {number} low The low (signed) 32 bits of the long\r\n * @param {number} high The high (signed) 32 bits of the long\r\n * @param {boolean=} unsigned Whether unsigned or not, defaults to signed\r\n * @constructor\r\n */\r\nfunction Long(low, high, unsigned) {\r\n\r\n    /**\r\n     * The low 32 bits as a signed value.\r\n     * @type {number}\r\n     */\r\n    this.low = low | 0;\r\n\r\n    /**\r\n     * The high 32 bits as a signed value.\r\n     * @type {number}\r\n     */\r\n    this.high = high | 0;\r\n\r\n    /**\r\n     * Whether unsigned or not.\r\n     * @type {boolean}\r\n     */\r\n    this.unsigned = !!unsigned;\r\n}\r\n\r\n// The internal representation of a long is the two given signed, 32-bit values.\r\n// We use 32-bit pieces because these are the size of integers on which\r\n// Javascript performs bit-operations.  For operations like addition and\r\n// multiplication, we split each number into 16 bit pieces, which can easily be\r\n// multiplied within Javascript's floating-point representation without overflow\r\n// or change in sign.\r\n//\r\n// In the algorithms below, we frequently reduce the negative case to the\r\n// positive case by negating the input(s) and then post-processing the result.\r\n// Note that we must ALWAYS check specially whether those values are MIN_VALUE\r\n// (-2^63) because -MIN_VALUE == MIN_VALUE (since 2^63 cannot be represented as\r\n// a positive number, it overflows back into a negative).  Not handling this\r\n// case would often result in infinite recursion.\r\n//\r\n// Common constant values ZERO, ONE, NEG_ONE, etc. are defined below the from*\r\n// methods on which they depend.\r\n\r\n/**\r\n * An indicator used to reliably determine if an object is a Long or not.\r\n * @type {boolean}\r\n * @const\r\n * @private\r\n */\r\nLong.prototype.__isLong__;\r\n\r\nObject.defineProperty(Long.prototype, \"__isLong__\", { value: true });\r\n\r\n/**\r\n * @function\r\n * @param {*} obj Object\r\n * @returns {boolean}\r\n * @inner\r\n */\r\nfunction isLong(obj) {\r\n    return (obj && obj[\"__isLong__\"]) === true;\r\n}\r\n\r\n/**\r\n * Tests if the specified object is a Long.\r\n * @function\r\n * @param {*} obj Object\r\n * @returns {boolean}\r\n */\r\nLong.isLong = isLong;\r\n\r\n/**\r\n * A cache of the Long representations of small integer values.\r\n * @type {!Object}\r\n * @inner\r\n */\r\nvar INT_CACHE = {};\r\n\r\n/**\r\n * A cache of the Long representations of small unsigned integer values.\r\n * @type {!Object}\r\n * @inner\r\n */\r\nvar UINT_CACHE = {};\r\n\r\n/**\r\n * @param {number} value\r\n * @param {boolean=} unsigned\r\n * @returns {!Long}\r\n * @inner\r\n */\r\nfunction fromInt(value, unsigned) {\r\n    var obj, cachedObj, cache;\r\n    if (unsigned) {\r\n        value >>>= 0;\r\n        if (cache = (0 <= value && value < 256)) {\r\n            cachedObj = UINT_CACHE[value];\r\n            if (cachedObj)\r\n                return cachedObj;\r\n        }\r\n        obj = fromBits(value, (value | 0) < 0 ? -1 : 0, true);\r\n        if (cache)\r\n            UINT_CACHE[value] = obj;\r\n        return obj;\r\n    } else {\r\n        value |= 0;\r\n        if (cache = (-128 <= value && value < 128)) {\r\n            cachedObj = INT_CACHE[value];\r\n            if (cachedObj)\r\n                return cachedObj;\r\n        }\r\n        obj = fromBits(value, value < 0 ? -1 : 0, false);\r\n        if (cache)\r\n            INT_CACHE[value] = obj;\r\n        return obj;\r\n    }\r\n}\r\n\r\n/**\r\n * Returns a Long representing the given 32 bit integer value.\r\n * @function\r\n * @param {number} value The 32 bit integer in question\r\n * @param {boolean=} unsigned Whether unsigned or not, defaults to signed\r\n * @returns {!Long} The corresponding Long value\r\n */\r\nLong.fromInt = fromInt;\r\n\r\n/**\r\n * @param {number} value\r\n * @param {boolean=} unsigned\r\n * @returns {!Long}\r\n * @inner\r\n */\r\nfunction fromNumber(value, unsigned) {\r\n    if (isNaN(value))\r\n        return unsigned ? UZERO : ZERO;\r\n    if (unsigned) {\r\n        if (value < 0)\r\n            return UZERO;\r\n        if (value >= TWO_PWR_64_DBL)\r\n            return MAX_UNSIGNED_VALUE;\r\n    } else {\r\n        if (value <= -TWO_PWR_63_DBL)\r\n            return MIN_VALUE;\r\n        if (value + 1 >= TWO_PWR_63_DBL)\r\n            return MAX_VALUE;\r\n    }\r\n    if (value < 0)\r\n        return fromNumber(-value, unsigned).neg();\r\n    return fromBits((value % TWO_PWR_32_DBL) | 0, (value / TWO_PWR_32_DBL) | 0, unsigned);\r\n}\r\n\r\n/**\r\n * Returns a Long representing the given value, provided that it is a finite number. Otherwise, zero is returned.\r\n * @function\r\n * @param {number} value The number in question\r\n * @param {boolean=} unsigned Whether unsigned or not, defaults to signed\r\n * @returns {!Long} The corresponding Long value\r\n */\r\nLong.fromNumber = fromNumber;\r\n\r\n/**\r\n * @param {number} lowBits\r\n * @param {number} highBits\r\n * @param {boolean=} unsigned\r\n * @returns {!Long}\r\n * @inner\r\n */\r\nfunction fromBits(lowBits, highBits, unsigned) {\r\n    return new Long(lowBits, highBits, unsigned);\r\n}\r\n\r\n/**\r\n * Returns a Long representing the 64 bit integer that comes by concatenating the given low and high bits. Each is\r\n *  assumed to use 32 bits.\r\n * @function\r\n * @param {number} lowBits The low 32 bits\r\n * @param {number} highBits The high 32 bits\r\n * @param {boolean=} unsigned Whether unsigned or not, defaults to signed\r\n * @returns {!Long} The corresponding Long value\r\n */\r\nLong.fromBits = fromBits;\r\n\r\n/**\r\n * @function\r\n * @param {number} base\r\n * @param {number} exponent\r\n * @returns {number}\r\n * @inner\r\n */\r\nvar pow_dbl = Math.pow; // Used 4 times (4*8 to 15+4)\r\n\r\n/**\r\n * @param {string} str\r\n * @param {(boolean|number)=} unsigned\r\n * @param {number=} radix\r\n * @returns {!Long}\r\n * @inner\r\n */\r\nfunction fromString(str, unsigned, radix) {\r\n    if (str.length === 0)\r\n        throw Error('empty string');\r\n    if (str === \"NaN\" || str === \"Infinity\" || str === \"+Infinity\" || str === \"-Infinity\")\r\n        return ZERO;\r\n    if (typeof unsigned === 'number') {\r\n        // For goog.math.long compatibility\r\n        radix = unsigned,\r\n        unsigned = false;\r\n    } else {\r\n        unsigned = !! unsigned;\r\n    }\r\n    radix = radix || 10;\r\n    if (radix < 2 || 36 < radix)\r\n        throw RangeError('radix');\r\n\r\n    var p;\r\n    if ((p = str.indexOf('-')) > 0)\r\n        throw Error('interior hyphen');\r\n    else if (p === 0) {\r\n        return fromString(str.substring(1), unsigned, radix).neg();\r\n    }\r\n\r\n    // Do several (8) digits each time through the loop, so as to\r\n    // minimize the calls to the very expensive emulated div.\r\n    var radixToPower = fromNumber(pow_dbl(radix, 8));\r\n\r\n    var result = ZERO;\r\n    for (var i = 0; i < str.length; i += 8) {\r\n        var size = Math.min(8, str.length - i),\r\n            value = parseInt(str.substring(i, i + size), radix);\r\n        if (size < 8) {\r\n            var power = fromNumber(pow_dbl(radix, size));\r\n            result = result.mul(power).add(fromNumber(value));\r\n        } else {\r\n            result = result.mul(radixToPower);\r\n            result = result.add(fromNumber(value));\r\n        }\r\n    }\r\n    result.unsigned = unsigned;\r\n    return result;\r\n}\r\n\r\n/**\r\n * Returns a Long representation of the given string, written using the specified radix.\r\n * @function\r\n * @param {string} str The textual representation of the Long\r\n * @param {(boolean|number)=} unsigned Whether unsigned or not, defaults to signed\r\n * @param {number=} radix The radix in which the text is written (2-36), defaults to 10\r\n * @returns {!Long} The corresponding Long value\r\n */\r\nLong.fromString = fromString;\r\n\r\n/**\r\n * @function\r\n * @param {!Long|number|string|!{low: number, high: number, unsigned: boolean}} val\r\n * @param {boolean=} unsigned\r\n * @returns {!Long}\r\n * @inner\r\n */\r\nfunction fromValue(val, unsigned) {\r\n    if (typeof val === 'number')\r\n        return fromNumber(val, unsigned);\r\n    if (typeof val === 'string')\r\n        return fromString(val, unsigned);\r\n    // Throws for non-objects, converts non-instanceof Long:\r\n    return fromBits(val.low, val.high, typeof unsigned === 'boolean' ? unsigned : val.unsigned);\r\n}\r\n\r\n/**\r\n * Converts the specified value to a Long using the appropriate from* function for its type.\r\n * @function\r\n * @param {!Long|number|string|!{low: number, high: number, unsigned: boolean}} val Value\r\n * @param {boolean=} unsigned Whether unsigned or not, defaults to signed\r\n * @returns {!Long}\r\n */\r\nLong.fromValue = fromValue;\r\n\r\n// NOTE: the compiler should inline these constant values below and then remove these variables, so there should be\r\n// no runtime penalty for these.\r\n\r\n/**\r\n * @type {number}\r\n * @const\r\n * @inner\r\n */\r\nvar TWO_PWR_16_DBL = 1 << 16;\r\n\r\n/**\r\n * @type {number}\r\n * @const\r\n * @inner\r\n */\r\nvar TWO_PWR_24_DBL = 1 << 24;\r\n\r\n/**\r\n * @type {number}\r\n * @const\r\n * @inner\r\n */\r\nvar TWO_PWR_32_DBL = TWO_PWR_16_DBL * TWO_PWR_16_DBL;\r\n\r\n/**\r\n * @type {number}\r\n * @const\r\n * @inner\r\n */\r\nvar TWO_PWR_64_DBL = TWO_PWR_32_DBL * TWO_PWR_32_DBL;\r\n\r\n/**\r\n * @type {number}\r\n * @const\r\n * @inner\r\n */\r\nvar TWO_PWR_63_DBL = TWO_PWR_64_DBL / 2;\r\n\r\n/**\r\n * @type {!Long}\r\n * @const\r\n * @inner\r\n */\r\nvar TWO_PWR_24 = fromInt(TWO_PWR_24_DBL);\r\n\r\n/**\r\n * @type {!Long}\r\n * @inner\r\n */\r\nvar ZERO = fromInt(0);\r\n\r\n/**\r\n * Signed zero.\r\n * @type {!Long}\r\n */\r\nLong.ZERO = ZERO;\r\n\r\n/**\r\n * @type {!Long}\r\n * @inner\r\n */\r\nvar UZERO = fromInt(0, true);\r\n\r\n/**\r\n * Unsigned zero.\r\n * @type {!Long}\r\n */\r\nLong.UZERO = UZERO;\r\n\r\n/**\r\n * @type {!Long}\r\n * @inner\r\n */\r\nvar ONE = fromInt(1);\r\n\r\n/**\r\n * Signed one.\r\n * @type {!Long}\r\n */\r\nLong.ONE = ONE;\r\n\r\n/**\r\n * @type {!Long}\r\n * @inner\r\n */\r\nvar UONE = fromInt(1, true);\r\n\r\n/**\r\n * Unsigned one.\r\n * @type {!Long}\r\n */\r\nLong.UONE = UONE;\r\n\r\n/**\r\n * @type {!Long}\r\n * @inner\r\n */\r\nvar NEG_ONE = fromInt(-1);\r\n\r\n/**\r\n * Signed negative one.\r\n * @type {!Long}\r\n */\r\nLong.NEG_ONE = NEG_ONE;\r\n\r\n/**\r\n * @type {!Long}\r\n * @inner\r\n */\r\nvar MAX_VALUE = fromBits(0xFFFFFFFF|0, 0x7FFFFFFF|0, false);\r\n\r\n/**\r\n * Maximum signed value.\r\n * @type {!Long}\r\n */\r\nLong.MAX_VALUE = MAX_VALUE;\r\n\r\n/**\r\n * @type {!Long}\r\n * @inner\r\n */\r\nvar MAX_UNSIGNED_VALUE = fromBits(0xFFFFFFFF|0, 0xFFFFFFFF|0, true);\r\n\r\n/**\r\n * Maximum unsigned value.\r\n * @type {!Long}\r\n */\r\nLong.MAX_UNSIGNED_VALUE = MAX_UNSIGNED_VALUE;\r\n\r\n/**\r\n * @type {!Long}\r\n * @inner\r\n */\r\nvar MIN_VALUE = fromBits(0, 0x80000000|0, false);\r\n\r\n/**\r\n * Minimum signed value.\r\n * @type {!Long}\r\n */\r\nLong.MIN_VALUE = MIN_VALUE;\r\n\r\n/**\r\n * @alias Long.prototype\r\n * @inner\r\n */\r\nvar LongPrototype = Long.prototype;\r\n\r\n/**\r\n * Converts the Long to a 32 bit integer, assuming it is a 32 bit integer.\r\n * @returns {number}\r\n */\r\nLongPrototype.toInt = function toInt() {\r\n    return this.unsigned ? this.low >>> 0 : this.low;\r\n};\r\n\r\n/**\r\n * Converts the Long to a the nearest floating-point representation of this value (double, 53 bit mantissa).\r\n * @returns {number}\r\n */\r\nLongPrototype.toNumber = function toNumber() {\r\n    if (this.unsigned)\r\n        return ((this.high >>> 0) * TWO_PWR_32_DBL) + (this.low >>> 0);\r\n    return this.high * TWO_PWR_32_DBL + (this.low >>> 0);\r\n};\r\n\r\n/**\r\n * Converts the Long to a string written in the specified radix.\r\n * @param {number=} radix Radix (2-36), defaults to 10\r\n * @returns {string}\r\n * @override\r\n * @throws {RangeError} If `radix` is out of range\r\n */\r\nLongPrototype.toString = function toString(radix) {\r\n    radix = radix || 10;\r\n    if (radix < 2 || 36 < radix)\r\n        throw RangeError('radix');\r\n    if (this.isZero())\r\n        return '0';\r\n    if (this.isNegative()) { // Unsigned Longs are never negative\r\n        if (this.eq(MIN_VALUE)) {\r\n            // We need to change the Long value before it can be negated, so we remove\r\n            // the bottom-most digit in this base and then recurse to do the rest.\r\n            var radixLong = fromNumber(radix),\r\n                div = this.div(radixLong),\r\n                rem1 = div.mul(radixLong).sub(this);\r\n            return div.toString(radix) + rem1.toInt().toString(radix);\r\n        } else\r\n            return '-' + this.neg().toString(radix);\r\n    }\r\n\r\n    // Do several (6) digits each time through the loop, so as to\r\n    // minimize the calls to the very expensive emulated div.\r\n    var radixToPower = fromNumber(pow_dbl(radix, 6), this.unsigned),\r\n        rem = this;\r\n    var result = '';\r\n    while (true) {\r\n        var remDiv = rem.div(radixToPower),\r\n            intval = rem.sub(remDiv.mul(radixToPower)).toInt() >>> 0,\r\n            digits = intval.toString(radix);\r\n        rem = remDiv;\r\n        if (rem.isZero())\r\n            return digits + result;\r\n        else {\r\n            while (digits.length < 6)\r\n                digits = '0' + digits;\r\n            result = '' + digits + result;\r\n        }\r\n    }\r\n};\r\n\r\n/**\r\n * Gets the high 32 bits as a signed integer.\r\n * @returns {number} Signed high bits\r\n */\r\nLongPrototype.getHighBits = function getHighBits() {\r\n    return this.high;\r\n};\r\n\r\n/**\r\n * Gets the high 32 bits as an unsigned integer.\r\n * @returns {number} Unsigned high bits\r\n */\r\nLongPrototype.getHighBitsUnsigned = function getHighBitsUnsigned() {\r\n    return this.high >>> 0;\r\n};\r\n\r\n/**\r\n * Gets the low 32 bits as a signed integer.\r\n * @returns {number} Signed low bits\r\n */\r\nLongPrototype.getLowBits = function getLowBits() {\r\n    return this.low;\r\n};\r\n\r\n/**\r\n * Gets the low 32 bits as an unsigned integer.\r\n * @returns {number} Unsigned low bits\r\n */\r\nLongPrototype.getLowBitsUnsigned = function getLowBitsUnsigned() {\r\n    return this.low >>> 0;\r\n};\r\n\r\n/**\r\n * Gets the number of bits needed to represent the absolute value of this Long.\r\n * @returns {number}\r\n */\r\nLongPrototype.getNumBitsAbs = function getNumBitsAbs() {\r\n    if (this.isNegative()) // Unsigned Longs are never negative\r\n        return this.eq(MIN_VALUE) ? 64 : this.neg().getNumBitsAbs();\r\n    var val = this.high != 0 ? this.high : this.low;\r\n    for (var bit = 31; bit > 0; bit--)\r\n        if ((val & (1 << bit)) != 0)\r\n            break;\r\n    return this.high != 0 ? bit + 33 : bit + 1;\r\n};\r\n\r\n/**\r\n * Tests if this Long's value equals zero.\r\n * @returns {boolean}\r\n */\r\nLongPrototype.isZero = function isZero() {\r\n    return this.high === 0 && this.low === 0;\r\n};\r\n\r\n/**\r\n * Tests if this Long's value equals zero. This is an alias of {@link Long#isZero}.\r\n * @returns {boolean}\r\n */\r\nLongPrototype.eqz = LongPrototype.isZero;\r\n\r\n/**\r\n * Tests if this Long's value is negative.\r\n * @returns {boolean}\r\n */\r\nLongPrototype.isNegative = function isNegative() {\r\n    return !this.unsigned && this.high < 0;\r\n};\r\n\r\n/**\r\n * Tests if this Long's value is positive.\r\n * @returns {boolean}\r\n */\r\nLongPrototype.isPositive = function isPositive() {\r\n    return this.unsigned || this.high >= 0;\r\n};\r\n\r\n/**\r\n * Tests if this Long's value is odd.\r\n * @returns {boolean}\r\n */\r\nLongPrototype.isOdd = function isOdd() {\r\n    return (this.low & 1) === 1;\r\n};\r\n\r\n/**\r\n * Tests if this Long's value is even.\r\n * @returns {boolean}\r\n */\r\nLongPrototype.isEven = function isEven() {\r\n    return (this.low & 1) === 0;\r\n};\r\n\r\n/**\r\n * Tests if this Long's value equals the specified's.\r\n * @param {!Long|number|string} other Other value\r\n * @returns {boolean}\r\n */\r\nLongPrototype.equals = function equals(other) {\r\n    if (!isLong(other))\r\n        other = fromValue(other);\r\n    if (this.unsigned !== other.unsigned && (this.high >>> 31) === 1 && (other.high >>> 31) === 1)\r\n        return false;\r\n    return this.high === other.high && this.low === other.low;\r\n};\r\n\r\n/**\r\n * Tests if this Long's value equals the specified's. This is an alias of {@link Long#equals}.\r\n * @function\r\n * @param {!Long|number|string} other Other value\r\n * @returns {boolean}\r\n */\r\nLongPrototype.eq = LongPrototype.equals;\r\n\r\n/**\r\n * Tests if this Long's value differs from the specified's.\r\n * @param {!Long|number|string} other Other value\r\n * @returns {boolean}\r\n */\r\nLongPrototype.notEquals = function notEquals(other) {\r\n    return !this.eq(/* validates */ other);\r\n};\r\n\r\n/**\r\n * Tests if this Long's value differs from the specified's. This is an alias of {@link Long#notEquals}.\r\n * @function\r\n * @param {!Long|number|string} other Other value\r\n * @returns {boolean}\r\n */\r\nLongPrototype.neq = LongPrototype.notEquals;\r\n\r\n/**\r\n * Tests if this Long's value differs from the specified's. This is an alias of {@link Long#notEquals}.\r\n * @function\r\n * @param {!Long|number|string} other Other value\r\n * @returns {boolean}\r\n */\r\nLongPrototype.ne = LongPrototype.notEquals;\r\n\r\n/**\r\n * Tests if this Long's value is less than the specified's.\r\n * @param {!Long|number|string} other Other value\r\n * @returns {boolean}\r\n */\r\nLongPrototype.lessThan = function lessThan(other) {\r\n    return this.comp(/* validates */ other) < 0;\r\n};\r\n\r\n/**\r\n * Tests if this Long's value is less than the specified's. This is an alias of {@link Long#lessThan}.\r\n * @function\r\n * @param {!Long|number|string} other Other value\r\n * @returns {boolean}\r\n */\r\nLongPrototype.lt = LongPrototype.lessThan;\r\n\r\n/**\r\n * Tests if this Long's value is less than or equal the specified's.\r\n * @param {!Long|number|string} other Other value\r\n * @returns {boolean}\r\n */\r\nLongPrototype.lessThanOrEqual = function lessThanOrEqual(other) {\r\n    return this.comp(/* validates */ other) <= 0;\r\n};\r\n\r\n/**\r\n * Tests if this Long's value is less than or equal the specified's. This is an alias of {@link Long#lessThanOrEqual}.\r\n * @function\r\n * @param {!Long|number|string} other Other value\r\n * @returns {boolean}\r\n */\r\nLongPrototype.lte = LongPrototype.lessThanOrEqual;\r\n\r\n/**\r\n * Tests if this Long's value is less than or equal the specified's. This is an alias of {@link Long#lessThanOrEqual}.\r\n * @function\r\n * @param {!Long|number|string} other Other value\r\n * @returns {boolean}\r\n */\r\nLongPrototype.le = LongPrototype.lessThanOrEqual;\r\n\r\n/**\r\n * Tests if this Long's value is greater than the specified's.\r\n * @param {!Long|number|string} other Other value\r\n * @returns {boolean}\r\n */\r\nLongPrototype.greaterThan = function greaterThan(other) {\r\n    return this.comp(/* validates */ other) > 0;\r\n};\r\n\r\n/**\r\n * Tests if this Long's value is greater than the specified's. This is an alias of {@link Long#greaterThan}.\r\n * @function\r\n * @param {!Long|number|string} other Other value\r\n * @returns {boolean}\r\n */\r\nLongPrototype.gt = LongPrototype.greaterThan;\r\n\r\n/**\r\n * Tests if this Long's value is greater than or equal the specified's.\r\n * @param {!Long|number|string} other Other value\r\n * @returns {boolean}\r\n */\r\nLongPrototype.greaterThanOrEqual = function greaterThanOrEqual(other) {\r\n    return this.comp(/* validates */ other) >= 0;\r\n};\r\n\r\n/**\r\n * Tests if this Long's value is greater than or equal the specified's. This is an alias of {@link Long#greaterThanOrEqual}.\r\n * @function\r\n * @param {!Long|number|string} other Other value\r\n * @returns {boolean}\r\n */\r\nLongPrototype.gte = LongPrototype.greaterThanOrEqual;\r\n\r\n/**\r\n * Tests if this Long's value is greater than or equal the specified's. This is an alias of {@link Long#greaterThanOrEqual}.\r\n * @function\r\n * @param {!Long|number|string} other Other value\r\n * @returns {boolean}\r\n */\r\nLongPrototype.ge = LongPrototype.greaterThanOrEqual;\r\n\r\n/**\r\n * Compares this Long's value with the specified's.\r\n * @param {!Long|number|string} other Other value\r\n * @returns {number} 0 if they are the same, 1 if the this is greater and -1\r\n *  if the given one is greater\r\n */\r\nLongPrototype.compare = function compare(other) {\r\n    if (!isLong(other))\r\n        other = fromValue(other);\r\n    if (this.eq(other))\r\n        return 0;\r\n    var thisNeg = this.isNegative(),\r\n        otherNeg = other.isNegative();\r\n    if (thisNeg && !otherNeg)\r\n        return -1;\r\n    if (!thisNeg && otherNeg)\r\n        return 1;\r\n    // At this point the sign bits are the same\r\n    if (!this.unsigned)\r\n        return this.sub(other).isNegative() ? -1 : 1;\r\n    // Both are positive if at least one is unsigned\r\n    return (other.high >>> 0) > (this.high >>> 0) || (other.high === this.high && (other.low >>> 0) > (this.low >>> 0)) ? -1 : 1;\r\n};\r\n\r\n/**\r\n * Compares this Long's value with the specified's. This is an alias of {@link Long#compare}.\r\n * @function\r\n * @param {!Long|number|string} other Other value\r\n * @returns {number} 0 if they are the same, 1 if the this is greater and -1\r\n *  if the given one is greater\r\n */\r\nLongPrototype.comp = LongPrototype.compare;\r\n\r\n/**\r\n * Negates this Long's value.\r\n * @returns {!Long} Negated Long\r\n */\r\nLongPrototype.negate = function negate() {\r\n    if (!this.unsigned && this.eq(MIN_VALUE))\r\n        return MIN_VALUE;\r\n    return this.not().add(ONE);\r\n};\r\n\r\n/**\r\n * Negates this Long's value. This is an alias of {@link Long#negate}.\r\n * @function\r\n * @returns {!Long} Negated Long\r\n */\r\nLongPrototype.neg = LongPrototype.negate;\r\n\r\n/**\r\n * Returns the sum of this and the specified Long.\r\n * @param {!Long|number|string} addend Addend\r\n * @returns {!Long} Sum\r\n */\r\nLongPrototype.add = function add(addend) {\r\n    if (!isLong(addend))\r\n        addend = fromValue(addend);\r\n\r\n    // Divide each number into 4 chunks of 16 bits, and then sum the chunks.\r\n\r\n    var a48 = this.high >>> 16;\r\n    var a32 = this.high & 0xFFFF;\r\n    var a16 = this.low >>> 16;\r\n    var a00 = this.low & 0xFFFF;\r\n\r\n    var b48 = addend.high >>> 16;\r\n    var b32 = addend.high & 0xFFFF;\r\n    var b16 = addend.low >>> 16;\r\n    var b00 = addend.low & 0xFFFF;\r\n\r\n    var c48 = 0, c32 = 0, c16 = 0, c00 = 0;\r\n    c00 += a00 + b00;\r\n    c16 += c00 >>> 16;\r\n    c00 &= 0xFFFF;\r\n    c16 += a16 + b16;\r\n    c32 += c16 >>> 16;\r\n    c16 &= 0xFFFF;\r\n    c32 += a32 + b32;\r\n    c48 += c32 >>> 16;\r\n    c32 &= 0xFFFF;\r\n    c48 += a48 + b48;\r\n    c48 &= 0xFFFF;\r\n    return fromBits((c16 << 16) | c00, (c48 << 16) | c32, this.unsigned);\r\n};\r\n\r\n/**\r\n * Returns the difference of this and the specified Long.\r\n * @param {!Long|number|string} subtrahend Subtrahend\r\n * @returns {!Long} Difference\r\n */\r\nLongPrototype.subtract = function subtract(subtrahend) {\r\n    if (!isLong(subtrahend))\r\n        subtrahend = fromValue(subtrahend);\r\n    return this.add(subtrahend.neg());\r\n};\r\n\r\n/**\r\n * Returns the difference of this and the specified Long. This is an alias of {@link Long#subtract}.\r\n * @function\r\n * @param {!Long|number|string} subtrahend Subtrahend\r\n * @returns {!Long} Difference\r\n */\r\nLongPrototype.sub = LongPrototype.subtract;\r\n\r\n/**\r\n * Returns the product of this and the specified Long.\r\n * @param {!Long|number|string} multiplier Multiplier\r\n * @returns {!Long} Product\r\n */\r\nLongPrototype.multiply = function multiply(multiplier) {\r\n    if (this.isZero())\r\n        return ZERO;\r\n    if (!isLong(multiplier))\r\n        multiplier = fromValue(multiplier);\r\n\r\n    // use wasm support if present\r\n    if (wasm) {\r\n        var low = wasm.mul(this.low,\r\n                           this.high,\r\n                           multiplier.low,\r\n                           multiplier.high);\r\n        return fromBits(low, wasm.get_high(), this.unsigned);\r\n    }\r\n\r\n    if (multiplier.isZero())\r\n        return ZERO;\r\n    if (this.eq(MIN_VALUE))\r\n        return multiplier.isOdd() ? MIN_VALUE : ZERO;\r\n    if (multiplier.eq(MIN_VALUE))\r\n        return this.isOdd() ? MIN_VALUE : ZERO;\r\n\r\n    if (this.isNegative()) {\r\n        if (multiplier.isNegative())\r\n            return this.neg().mul(multiplier.neg());\r\n        else\r\n            return this.neg().mul(multiplier).neg();\r\n    } else if (multiplier.isNegative())\r\n        return this.mul(multiplier.neg()).neg();\r\n\r\n    // If both longs are small, use float multiplication\r\n    if (this.lt(TWO_PWR_24) && multiplier.lt(TWO_PWR_24))\r\n        return fromNumber(this.toNumber() * multiplier.toNumber(), this.unsigned);\r\n\r\n    // Divide each long into 4 chunks of 16 bits, and then add up 4x4 products.\r\n    // We can skip products that would overflow.\r\n\r\n    var a48 = this.high >>> 16;\r\n    var a32 = this.high & 0xFFFF;\r\n    var a16 = this.low >>> 16;\r\n    var a00 = this.low & 0xFFFF;\r\n\r\n    var b48 = multiplier.high >>> 16;\r\n    var b32 = multiplier.high & 0xFFFF;\r\n    var b16 = multiplier.low >>> 16;\r\n    var b00 = multiplier.low & 0xFFFF;\r\n\r\n    var c48 = 0, c32 = 0, c16 = 0, c00 = 0;\r\n    c00 += a00 * b00;\r\n    c16 += c00 >>> 16;\r\n    c00 &= 0xFFFF;\r\n    c16 += a16 * b00;\r\n    c32 += c16 >>> 16;\r\n    c16 &= 0xFFFF;\r\n    c16 += a00 * b16;\r\n    c32 += c16 >>> 16;\r\n    c16 &= 0xFFFF;\r\n    c32 += a32 * b00;\r\n    c48 += c32 >>> 16;\r\n    c32 &= 0xFFFF;\r\n    c32 += a16 * b16;\r\n    c48 += c32 >>> 16;\r\n    c32 &= 0xFFFF;\r\n    c32 += a00 * b32;\r\n    c48 += c32 >>> 16;\r\n    c32 &= 0xFFFF;\r\n    c48 += a48 * b00 + a32 * b16 + a16 * b32 + a00 * b48;\r\n    c48 &= 0xFFFF;\r\n    return fromBits((c16 << 16) | c00, (c48 << 16) | c32, this.unsigned);\r\n};\r\n\r\n/**\r\n * Returns the product of this and the specified Long. This is an alias of {@link Long#multiply}.\r\n * @function\r\n * @param {!Long|number|string} multiplier Multiplier\r\n * @returns {!Long} Product\r\n */\r\nLongPrototype.mul = LongPrototype.multiply;\r\n\r\n/**\r\n * Returns this Long divided by the specified. The result is signed if this Long is signed or\r\n *  unsigned if this Long is unsigned.\r\n * @param {!Long|number|string} divisor Divisor\r\n * @returns {!Long} Quotient\r\n */\r\nLongPrototype.divide = function divide(divisor) {\r\n    if (!isLong(divisor))\r\n        divisor = fromValue(divisor);\r\n    if (divisor.isZero())\r\n        throw Error('division by zero');\r\n\r\n    // use wasm support if present\r\n    if (wasm) {\r\n        // guard against signed division overflow: the largest\r\n        // negative number / -1 would be 1 larger than the largest\r\n        // positive number, due to two's complement.\r\n        if (!this.unsigned &&\r\n            this.high === -0x80000000 &&\r\n            divisor.low === -1 && divisor.high === -1) {\r\n            // be consistent with non-wasm code path\r\n            return this;\r\n        }\r\n        var low = (this.unsigned ? wasm.div_u : wasm.div_s)(\r\n            this.low,\r\n            this.high,\r\n            divisor.low,\r\n            divisor.high\r\n        );\r\n        return fromBits(low, wasm.get_high(), this.unsigned);\r\n    }\r\n\r\n    if (this.isZero())\r\n        return this.unsigned ? UZERO : ZERO;\r\n    var approx, rem, res;\r\n    if (!this.unsigned) {\r\n        // This section is only relevant for signed longs and is derived from the\r\n        // closure library as a whole.\r\n        if (this.eq(MIN_VALUE)) {\r\n            if (divisor.eq(ONE) || divisor.eq(NEG_ONE))\r\n                return MIN_VALUE;  // recall that -MIN_VALUE == MIN_VALUE\r\n            else if (divisor.eq(MIN_VALUE))\r\n                return ONE;\r\n            else {\r\n                // At this point, we have |other| >= 2, so |this/other| < |MIN_VALUE|.\r\n                var halfThis = this.shr(1);\r\n                approx = halfThis.div(divisor).shl(1);\r\n                if (approx.eq(ZERO)) {\r\n                    return divisor.isNegative() ? ONE : NEG_ONE;\r\n                } else {\r\n                    rem = this.sub(divisor.mul(approx));\r\n                    res = approx.add(rem.div(divisor));\r\n                    return res;\r\n                }\r\n            }\r\n        } else if (divisor.eq(MIN_VALUE))\r\n            return this.unsigned ? UZERO : ZERO;\r\n        if (this.isNegative()) {\r\n            if (divisor.isNegative())\r\n                return this.neg().div(divisor.neg());\r\n            return this.neg().div(divisor).neg();\r\n        } else if (divisor.isNegative())\r\n            return this.div(divisor.neg()).neg();\r\n        res = ZERO;\r\n    } else {\r\n        // The algorithm below has not been made for unsigned longs. It's therefore\r\n        // required to take special care of the MSB prior to running it.\r\n        if (!divisor.unsigned)\r\n            divisor = divisor.toUnsigned();\r\n        if (divisor.gt(this))\r\n            return UZERO;\r\n        if (divisor.gt(this.shru(1))) // 15 >>> 1 = 7 ; with divisor = 8 ; true\r\n            return UONE;\r\n        res = UZERO;\r\n    }\r\n\r\n    // Repeat the following until the remainder is less than other:  find a\r\n    // floating-point that approximates remainder / other *from below*, add this\r\n    // into the result, and subtract it from the remainder.  It is critical that\r\n    // the approximate value is less than or equal to the real value so that the\r\n    // remainder never becomes negative.\r\n    rem = this;\r\n    while (rem.gte(divisor)) {\r\n        // Approximate the result of division. This may be a little greater or\r\n        // smaller than the actual value.\r\n        approx = Math.max(1, Math.floor(rem.toNumber() / divisor.toNumber()));\r\n\r\n        // We will tweak the approximate result by changing it in the 48-th digit or\r\n        // the smallest non-fractional digit, whichever is larger.\r\n        var log2 = Math.ceil(Math.log(approx) / Math.LN2),\r\n            delta = (log2 <= 48) ? 1 : pow_dbl(2, log2 - 48),\r\n\r\n        // Decrease the approximation until it is smaller than the remainder.  Note\r\n        // that if it is too large, the product overflows and is negative.\r\n            approxRes = fromNumber(approx),\r\n            approxRem = approxRes.mul(divisor);\r\n        while (approxRem.isNegative() || approxRem.gt(rem)) {\r\n            approx -= delta;\r\n            approxRes = fromNumber(approx, this.unsigned);\r\n            approxRem = approxRes.mul(divisor);\r\n        }\r\n\r\n        // We know the answer can't be zero... and actually, zero would cause\r\n        // infinite recursion since we would make no progress.\r\n        if (approxRes.isZero())\r\n            approxRes = ONE;\r\n\r\n        res = res.add(approxRes);\r\n        rem = rem.sub(approxRem);\r\n    }\r\n    return res;\r\n};\r\n\r\n/**\r\n * Returns this Long divided by the specified. This is an alias of {@link Long#divide}.\r\n * @function\r\n * @param {!Long|number|string} divisor Divisor\r\n * @returns {!Long} Quotient\r\n */\r\nLongPrototype.div = LongPrototype.divide;\r\n\r\n/**\r\n * Returns this Long modulo the specified.\r\n * @param {!Long|number|string} divisor Divisor\r\n * @returns {!Long} Remainder\r\n */\r\nLongPrototype.modulo = function modulo(divisor) {\r\n    if (!isLong(divisor))\r\n        divisor = fromValue(divisor);\r\n\r\n    // use wasm support if present\r\n    if (wasm) {\r\n        var low = (this.unsigned ? wasm.rem_u : wasm.rem_s)(\r\n            this.low,\r\n            this.high,\r\n            divisor.low,\r\n            divisor.high\r\n        );\r\n        return fromBits(low, wasm.get_high(), this.unsigned);\r\n    }\r\n\r\n    return this.sub(this.div(divisor).mul(divisor));\r\n};\r\n\r\n/**\r\n * Returns this Long modulo the specified. This is an alias of {@link Long#modulo}.\r\n * @function\r\n * @param {!Long|number|string} divisor Divisor\r\n * @returns {!Long} Remainder\r\n */\r\nLongPrototype.mod = LongPrototype.modulo;\r\n\r\n/**\r\n * Returns this Long modulo the specified. This is an alias of {@link Long#modulo}.\r\n * @function\r\n * @param {!Long|number|string} divisor Divisor\r\n * @returns {!Long} Remainder\r\n */\r\nLongPrototype.rem = LongPrototype.modulo;\r\n\r\n/**\r\n * Returns the bitwise NOT of this Long.\r\n * @returns {!Long}\r\n */\r\nLongPrototype.not = function not() {\r\n    return fromBits(~this.low, ~this.high, this.unsigned);\r\n};\r\n\r\n/**\r\n * Returns the bitwise AND of this Long and the specified.\r\n * @param {!Long|number|string} other Other Long\r\n * @returns {!Long}\r\n */\r\nLongPrototype.and = function and(other) {\r\n    if (!isLong(other))\r\n        other = fromValue(other);\r\n    return fromBits(this.low & other.low, this.high & other.high, this.unsigned);\r\n};\r\n\r\n/**\r\n * Returns the bitwise OR of this Long and the specified.\r\n * @param {!Long|number|string} other Other Long\r\n * @returns {!Long}\r\n */\r\nLongPrototype.or = function or(other) {\r\n    if (!isLong(other))\r\n        other = fromValue(other);\r\n    return fromBits(this.low | other.low, this.high | other.high, this.unsigned);\r\n};\r\n\r\n/**\r\n * Returns the bitwise XOR of this Long and the given one.\r\n * @param {!Long|number|string} other Other Long\r\n * @returns {!Long}\r\n */\r\nLongPrototype.xor = function xor(other) {\r\n    if (!isLong(other))\r\n        other = fromValue(other);\r\n    return fromBits(this.low ^ other.low, this.high ^ other.high, this.unsigned);\r\n};\r\n\r\n/**\r\n * Returns this Long with bits shifted to the left by the given amount.\r\n * @param {number|!Long} numBits Number of bits\r\n * @returns {!Long} Shifted Long\r\n */\r\nLongPrototype.shiftLeft = function shiftLeft(numBits) {\r\n    if (isLong(numBits))\r\n        numBits = numBits.toInt();\r\n    if ((numBits &= 63) === 0)\r\n        return this;\r\n    else if (numBits < 32)\r\n        return fromBits(this.low << numBits, (this.high << numBits) | (this.low >>> (32 - numBits)), this.unsigned);\r\n    else\r\n        return fromBits(0, this.low << (numBits - 32), this.unsigned);\r\n};\r\n\r\n/**\r\n * Returns this Long with bits shifted to the left by the given amount. This is an alias of {@link Long#shiftLeft}.\r\n * @function\r\n * @param {number|!Long} numBits Number of bits\r\n * @returns {!Long} Shifted Long\r\n */\r\nLongPrototype.shl = LongPrototype.shiftLeft;\r\n\r\n/**\r\n * Returns this Long with bits arithmetically shifted to the right by the given amount.\r\n * @param {number|!Long} numBits Number of bits\r\n * @returns {!Long} Shifted Long\r\n */\r\nLongPrototype.shiftRight = function shiftRight(numBits) {\r\n    if (isLong(numBits))\r\n        numBits = numBits.toInt();\r\n    if ((numBits &= 63) === 0)\r\n        return this;\r\n    else if (numBits < 32)\r\n        return fromBits((this.low >>> numBits) | (this.high << (32 - numBits)), this.high >> numBits, this.unsigned);\r\n    else\r\n        return fromBits(this.high >> (numBits - 32), this.high >= 0 ? 0 : -1, this.unsigned);\r\n};\r\n\r\n/**\r\n * Returns this Long with bits arithmetically shifted to the right by the given amount. This is an alias of {@link Long#shiftRight}.\r\n * @function\r\n * @param {number|!Long} numBits Number of bits\r\n * @returns {!Long} Shifted Long\r\n */\r\nLongPrototype.shr = LongPrototype.shiftRight;\r\n\r\n/**\r\n * Returns this Long with bits logically shifted to the right by the given amount.\r\n * @param {number|!Long} numBits Number of bits\r\n * @returns {!Long} Shifted Long\r\n */\r\nLongPrototype.shiftRightUnsigned = function shiftRightUnsigned(numBits) {\r\n    if (isLong(numBits))\r\n        numBits = numBits.toInt();\r\n    numBits &= 63;\r\n    if (numBits === 0)\r\n        return this;\r\n    else {\r\n        var high = this.high;\r\n        if (numBits < 32) {\r\n            var low = this.low;\r\n            return fromBits((low >>> numBits) | (high << (32 - numBits)), high >>> numBits, this.unsigned);\r\n        } else if (numBits === 32)\r\n            return fromBits(high, 0, this.unsigned);\r\n        else\r\n            return fromBits(high >>> (numBits - 32), 0, this.unsigned);\r\n    }\r\n};\r\n\r\n/**\r\n * Returns this Long with bits logically shifted to the right by the given amount. This is an alias of {@link Long#shiftRightUnsigned}.\r\n * @function\r\n * @param {number|!Long} numBits Number of bits\r\n * @returns {!Long} Shifted Long\r\n */\r\nLongPrototype.shru = LongPrototype.shiftRightUnsigned;\r\n\r\n/**\r\n * Returns this Long with bits logically shifted to the right by the given amount. This is an alias of {@link Long#shiftRightUnsigned}.\r\n * @function\r\n * @param {number|!Long} numBits Number of bits\r\n * @returns {!Long} Shifted Long\r\n */\r\nLongPrototype.shr_u = LongPrototype.shiftRightUnsigned;\r\n\r\n/**\r\n * Converts this Long to signed.\r\n * @returns {!Long} Signed long\r\n */\r\nLongPrototype.toSigned = function toSigned() {\r\n    if (!this.unsigned)\r\n        return this;\r\n    return fromBits(this.low, this.high, false);\r\n};\r\n\r\n/**\r\n * Converts this Long to unsigned.\r\n * @returns {!Long} Unsigned long\r\n */\r\nLongPrototype.toUnsigned = function toUnsigned() {\r\n    if (this.unsigned)\r\n        return this;\r\n    return fromBits(this.low, this.high, true);\r\n};\r\n\r\n/**\r\n * Converts this Long to its byte representation.\r\n * @param {boolean=} le Whether little or big endian, defaults to big endian\r\n * @returns {!Array.<number>} Byte representation\r\n */\r\nLongPrototype.toBytes = function toBytes(le) {\r\n    return le ? this.toBytesLE() : this.toBytesBE();\r\n};\r\n\r\n/**\r\n * Converts this Long to its little endian byte representation.\r\n * @returns {!Array.<number>} Little endian byte representation\r\n */\r\nLongPrototype.toBytesLE = function toBytesLE() {\r\n    var hi = this.high,\r\n        lo = this.low;\r\n    return [\r\n        lo        & 0xff,\r\n        lo >>>  8 & 0xff,\r\n        lo >>> 16 & 0xff,\r\n        lo >>> 24       ,\r\n        hi        & 0xff,\r\n        hi >>>  8 & 0xff,\r\n        hi >>> 16 & 0xff,\r\n        hi >>> 24\r\n    ];\r\n};\r\n\r\n/**\r\n * Converts this Long to its big endian byte representation.\r\n * @returns {!Array.<number>} Big endian byte representation\r\n */\r\nLongPrototype.toBytesBE = function toBytesBE() {\r\n    var hi = this.high,\r\n        lo = this.low;\r\n    return [\r\n        hi >>> 24       ,\r\n        hi >>> 16 & 0xff,\r\n        hi >>>  8 & 0xff,\r\n        hi        & 0xff,\r\n        lo >>> 24       ,\r\n        lo >>> 16 & 0xff,\r\n        lo >>>  8 & 0xff,\r\n        lo        & 0xff\r\n    ];\r\n};\r\n\r\n/**\r\n * Creates a Long from its byte representation.\r\n * @param {!Array.<number>} bytes Byte representation\r\n * @param {boolean=} unsigned Whether unsigned or not, defaults to signed\r\n * @param {boolean=} le Whether little or big endian, defaults to big endian\r\n * @returns {Long} The corresponding Long value\r\n */\r\nLong.fromBytes = function fromBytes(bytes, unsigned, le) {\r\n    return le ? Long.fromBytesLE(bytes, unsigned) : Long.fromBytesBE(bytes, unsigned);\r\n};\r\n\r\n/**\r\n * Creates a Long from its little endian byte representation.\r\n * @param {!Array.<number>} bytes Little endian byte representation\r\n * @param {boolean=} unsigned Whether unsigned or not, defaults to signed\r\n * @returns {Long} The corresponding Long value\r\n */\r\nLong.fromBytesLE = function fromBytesLE(bytes, unsigned) {\r\n    return new Long(\r\n        bytes[0]       |\r\n        bytes[1] <<  8 |\r\n        bytes[2] << 16 |\r\n        bytes[3] << 24,\r\n        bytes[4]       |\r\n        bytes[5] <<  8 |\r\n        bytes[6] << 16 |\r\n        bytes[7] << 24,\r\n        unsigned\r\n    );\r\n};\r\n\r\n/**\r\n * Creates a Long from its big endian byte representation.\r\n * @param {!Array.<number>} bytes Big endian byte representation\r\n * @param {boolean=} unsigned Whether unsigned or not, defaults to signed\r\n * @returns {Long} The corresponding Long value\r\n */\r\nLong.fromBytesBE = function fromBytesBE(bytes, unsigned) {\r\n    return new Long(\r\n        bytes[4] << 24 |\r\n        bytes[5] << 16 |\r\n        bytes[6] <<  8 |\r\n        bytes[7],\r\n        bytes[0] << 24 |\r\n        bytes[1] << 16 |\r\n        bytes[2] <<  8 |\r\n        bytes[3],\r\n        unsigned\r\n    );\r\n};\r\n", "\"use strict\";\r\nmodule.exports = asPromise;\r\n\r\n/**\r\n * Callback as used by {@link util.asPromise}.\r\n * @typedef asPromiseCallback\r\n * @type {function}\r\n * @param {Error|null} error Error, if any\r\n * @param {...*} params Additional arguments\r\n * @returns {undefined}\r\n */\r\n\r\n/**\r\n * Returns a promise from a node-style callback function.\r\n * @memberof util\r\n * @param {asPromiseCallback} fn Function to call\r\n * @param {*} ctx Function context\r\n * @param {...*} params Function arguments\r\n * @returns {Promise<*>} Promisified function\r\n */\r\nfunction asPromise(fn, ctx/*, varargs */) {\r\n    var params  = new Array(arguments.length - 1),\r\n        offset  = 0,\r\n        index   = 2,\r\n        pending = true;\r\n    while (index < arguments.length)\r\n        params[offset++] = arguments[index++];\r\n    return new Promise(function executor(resolve, reject) {\r\n        params[offset] = function callback(err/*, varargs */) {\r\n            if (pending) {\r\n                pending = false;\r\n                if (err)\r\n                    reject(err);\r\n                else {\r\n                    var params = new Array(arguments.length - 1),\r\n                        offset = 0;\r\n                    while (offset < params.length)\r\n                        params[offset++] = arguments[offset];\r\n                    resolve.apply(null, params);\r\n                }\r\n            }\r\n        };\r\n        try {\r\n            fn.apply(ctx || null, params);\r\n        } catch (err) {\r\n            if (pending) {\r\n                pending = false;\r\n                reject(err);\r\n            }\r\n        }\r\n    });\r\n}\r\n", "\"use strict\";\r\n\r\n/**\r\n * A minimal base64 implementation for number arrays.\r\n * @memberof util\r\n * @namespace\r\n */\r\nvar base64 = exports;\r\n\r\n/**\r\n * Calculates the byte length of a base64 encoded string.\r\n * @param {string} string Base64 encoded string\r\n * @returns {number} Byte length\r\n */\r\nbase64.length = function length(string) {\r\n    var p = string.length;\r\n    if (!p)\r\n        return 0;\r\n    var n = 0;\r\n    while (--p % 4 > 1 && string.charAt(p) === \"=\")\r\n        ++n;\r\n    return Math.ceil(string.length * 3) / 4 - n;\r\n};\r\n\r\n// Base64 encoding table\r\nvar b64 = new Array(64);\r\n\r\n// Base64 decoding table\r\nvar s64 = new Array(123);\r\n\r\n// 65..90, 97..122, 48..57, 43, 47\r\nfor (var i = 0; i < 64;)\r\n    s64[b64[i] = i < 26 ? i + 65 : i < 52 ? i + 71 : i < 62 ? i - 4 : i - 59 | 43] = i++;\r\n\r\n/**\r\n * Encodes a buffer to a base64 encoded string.\r\n * @param {Uint8Array} buffer Source buffer\r\n * @param {number} start Source start\r\n * @param {number} end Source end\r\n * @returns {string} Base64 encoded string\r\n */\r\nbase64.encode = function encode(buffer, start, end) {\r\n    var parts = null,\r\n        chunk = [];\r\n    var i = 0, // output index\r\n        j = 0, // goto index\r\n        t;     // temporary\r\n    while (start < end) {\r\n        var b = buffer[start++];\r\n        switch (j) {\r\n            case 0:\r\n                chunk[i++] = b64[b >> 2];\r\n                t = (b & 3) << 4;\r\n                j = 1;\r\n                break;\r\n            case 1:\r\n                chunk[i++] = b64[t | b >> 4];\r\n                t = (b & 15) << 2;\r\n                j = 2;\r\n                break;\r\n            case 2:\r\n                chunk[i++] = b64[t | b >> 6];\r\n                chunk[i++] = b64[b & 63];\r\n                j = 0;\r\n                break;\r\n        }\r\n        if (i > 8191) {\r\n            (parts || (parts = [])).push(String.fromCharCode.apply(String, chunk));\r\n            i = 0;\r\n        }\r\n    }\r\n    if (j) {\r\n        chunk[i++] = b64[t];\r\n        chunk[i++] = 61;\r\n        if (j === 1)\r\n            chunk[i++] = 61;\r\n    }\r\n    if (parts) {\r\n        if (i)\r\n            parts.push(String.fromCharCode.apply(String, chunk.slice(0, i)));\r\n        return parts.join(\"\");\r\n    }\r\n    return String.fromCharCode.apply(String, chunk.slice(0, i));\r\n};\r\n\r\nvar invalidEncoding = \"invalid encoding\";\r\n\r\n/**\r\n * Decodes a base64 encoded string to a buffer.\r\n * @param {string} string Source string\r\n * @param {Uint8Array} buffer Destination buffer\r\n * @param {number} offset Destination offset\r\n * @returns {number} Number of bytes written\r\n * @throws {Error} If encoding is invalid\r\n */\r\nbase64.decode = function decode(string, buffer, offset) {\r\n    var start = offset;\r\n    var j = 0, // goto index\r\n        t;     // temporary\r\n    for (var i = 0; i < string.length;) {\r\n        var c = string.charCodeAt(i++);\r\n        if (c === 61 && j > 1)\r\n            break;\r\n        if ((c = s64[c]) === undefined)\r\n            throw Error(invalidEncoding);\r\n        switch (j) {\r\n            case 0:\r\n                t = c;\r\n                j = 1;\r\n                break;\r\n            case 1:\r\n                buffer[offset++] = t << 2 | (c & 48) >> 4;\r\n                t = c;\r\n                j = 2;\r\n                break;\r\n            case 2:\r\n                buffer[offset++] = (t & 15) << 4 | (c & 60) >> 2;\r\n                t = c;\r\n                j = 3;\r\n                break;\r\n            case 3:\r\n                buffer[offset++] = (t & 3) << 6 | c;\r\n                j = 0;\r\n                break;\r\n        }\r\n    }\r\n    if (j === 1)\r\n        throw Error(invalidEncoding);\r\n    return offset - start;\r\n};\r\n\r\n/**\r\n * Tests if the specified string appears to be base64 encoded.\r\n * @param {string} string String to test\r\n * @returns {boolean} `true` if probably base64 encoded, otherwise false\r\n */\r\nbase64.test = function test(string) {\r\n    return /^(?:[A-Za-z0-9+/]{4})*(?:[A-Za-z0-9+/]{2}==|[A-Za-z0-9+/]{3}=)?$/.test(string);\r\n};\r\n", "\"use strict\";\r\nmodule.exports = EventEmitter;\r\n\r\n/**\r\n * Constructs a new event emitter instance.\r\n * @classdesc A minimal event emitter.\r\n * @memberof util\r\n * @constructor\r\n */\r\nfunction EventEmitter() {\r\n\r\n    /**\r\n     * Registered listeners.\r\n     * @type {Object.<string,*>}\r\n     * @private\r\n     */\r\n    this._listeners = {};\r\n}\r\n\r\n/**\r\n * Registers an event listener.\r\n * @param {string} evt Event name\r\n * @param {function} fn Listener\r\n * @param {*} [ctx] Listener context\r\n * @returns {util.EventEmitter} `this`\r\n */\r\nEventEmitter.prototype.on = function on(evt, fn, ctx) {\r\n    (this._listeners[evt] || (this._listeners[evt] = [])).push({\r\n        fn  : fn,\r\n        ctx : ctx || this\r\n    });\r\n    return this;\r\n};\r\n\r\n/**\r\n * Removes an event listener or any matching listeners if arguments are omitted.\r\n * @param {string} [evt] Event name. Removes all listeners if omitted.\r\n * @param {function} [fn] Listener to remove. Removes all listeners of `evt` if omitted.\r\n * @returns {util.EventEmitter} `this`\r\n */\r\nEventEmitter.prototype.off = function off(evt, fn) {\r\n    if (evt === undefined)\r\n        this._listeners = {};\r\n    else {\r\n        if (fn === undefined)\r\n            this._listeners[evt] = [];\r\n        else {\r\n            var listeners = this._listeners[evt];\r\n            for (var i = 0; i < listeners.length;)\r\n                if (listeners[i].fn === fn)\r\n                    listeners.splice(i, 1);\r\n                else\r\n                    ++i;\r\n        }\r\n    }\r\n    return this;\r\n};\r\n\r\n/**\r\n * Emits an event by calling its listeners with the specified arguments.\r\n * @param {string} evt Event name\r\n * @param {...*} args Arguments\r\n * @returns {util.EventEmitter} `this`\r\n */\r\nEventEmitter.prototype.emit = function emit(evt) {\r\n    var listeners = this._listeners[evt];\r\n    if (listeners) {\r\n        var args = [],\r\n            i = 1;\r\n        for (; i < arguments.length;)\r\n            args.push(arguments[i++]);\r\n        for (i = 0; i < listeners.length;)\r\n            listeners[i].fn.apply(listeners[i++].ctx, args);\r\n    }\r\n    return this;\r\n};\r\n", "\"use strict\";\r\n\r\nmodule.exports = factory(factory);\r\n\r\n/**\r\n * Reads / writes floats / doubles from / to buffers.\r\n * @name util.float\r\n * @namespace\r\n */\r\n\r\n/**\r\n * Writes a 32 bit float to a buffer using little endian byte order.\r\n * @name util.float.writeFloatLE\r\n * @function\r\n * @param {number} val Value to write\r\n * @param {Uint8Array} buf Target buffer\r\n * @param {number} pos Target buffer offset\r\n * @returns {undefined}\r\n */\r\n\r\n/**\r\n * Writes a 32 bit float to a buffer using big endian byte order.\r\n * @name util.float.writeFloatBE\r\n * @function\r\n * @param {number} val Value to write\r\n * @param {Uint8Array} buf Target buffer\r\n * @param {number} pos Target buffer offset\r\n * @returns {undefined}\r\n */\r\n\r\n/**\r\n * Reads a 32 bit float from a buffer using little endian byte order.\r\n * @name util.float.readFloatLE\r\n * @function\r\n * @param {Uint8Array} buf Source buffer\r\n * @param {number} pos Source buffer offset\r\n * @returns {number} Value read\r\n */\r\n\r\n/**\r\n * Reads a 32 bit float from a buffer using big endian byte order.\r\n * @name util.float.readFloatBE\r\n * @function\r\n * @param {Uint8Array} buf Source buffer\r\n * @param {number} pos Source buffer offset\r\n * @returns {number} Value read\r\n */\r\n\r\n/**\r\n * Writes a 64 bit double to a buffer using little endian byte order.\r\n * @name util.float.writeDoubleLE\r\n * @function\r\n * @param {number} val Value to write\r\n * @param {Uint8Array} buf Target buffer\r\n * @param {number} pos Target buffer offset\r\n * @returns {undefined}\r\n */\r\n\r\n/**\r\n * Writes a 64 bit double to a buffer using big endian byte order.\r\n * @name util.float.writeDoubleBE\r\n * @function\r\n * @param {number} val Value to write\r\n * @param {Uint8Array} buf Target buffer\r\n * @param {number} pos Target buffer offset\r\n * @returns {undefined}\r\n */\r\n\r\n/**\r\n * Reads a 64 bit double from a buffer using little endian byte order.\r\n * @name util.float.readDoubleLE\r\n * @function\r\n * @param {Uint8Array} buf Source buffer\r\n * @param {number} pos Source buffer offset\r\n * @returns {number} Value read\r\n */\r\n\r\n/**\r\n * Reads a 64 bit double from a buffer using big endian byte order.\r\n * @name util.float.readDoubleBE\r\n * @function\r\n * @param {Uint8Array} buf Source buffer\r\n * @param {number} pos Source buffer offset\r\n * @returns {number} Value read\r\n */\r\n\r\n// Factory function for the purpose of node-based testing in modified global environments\r\nfunction factory(exports) {\r\n\r\n    // float: typed array\r\n    if (typeof Float32Array !== \"undefined\") (function() {\r\n\r\n        var f32 = new Float32Array([ -0 ]),\r\n            f8b = new Uint8Array(f32.buffer),\r\n            le  = f8b[3] === 128;\r\n\r\n        function writeFloat_f32_cpy(val, buf, pos) {\r\n            f32[0] = val;\r\n            buf[pos    ] = f8b[0];\r\n            buf[pos + 1] = f8b[1];\r\n            buf[pos + 2] = f8b[2];\r\n            buf[pos + 3] = f8b[3];\r\n        }\r\n\r\n        function writeFloat_f32_rev(val, buf, pos) {\r\n            f32[0] = val;\r\n            buf[pos    ] = f8b[3];\r\n            buf[pos + 1] = f8b[2];\r\n            buf[pos + 2] = f8b[1];\r\n            buf[pos + 3] = f8b[0];\r\n        }\r\n\r\n        /* istanbul ignore next */\r\n        exports.writeFloatLE = le ? writeFloat_f32_cpy : writeFloat_f32_rev;\r\n        /* istanbul ignore next */\r\n        exports.writeFloatBE = le ? writeFloat_f32_rev : writeFloat_f32_cpy;\r\n\r\n        function readFloat_f32_cpy(buf, pos) {\r\n            f8b[0] = buf[pos    ];\r\n            f8b[1] = buf[pos + 1];\r\n            f8b[2] = buf[pos + 2];\r\n            f8b[3] = buf[pos + 3];\r\n            return f32[0];\r\n        }\r\n\r\n        function readFloat_f32_rev(buf, pos) {\r\n            f8b[3] = buf[pos    ];\r\n            f8b[2] = buf[pos + 1];\r\n            f8b[1] = buf[pos + 2];\r\n            f8b[0] = buf[pos + 3];\r\n            return f32[0];\r\n        }\r\n\r\n        /* istanbul ignore next */\r\n        exports.readFloatLE = le ? readFloat_f32_cpy : readFloat_f32_rev;\r\n        /* istanbul ignore next */\r\n        exports.readFloatBE = le ? readFloat_f32_rev : readFloat_f32_cpy;\r\n\r\n    // float: ieee754\r\n    })(); else (function() {\r\n\r\n        function writeFloat_ieee754(writeUint, val, buf, pos) {\r\n            var sign = val < 0 ? 1 : 0;\r\n            if (sign)\r\n                val = -val;\r\n            if (val === 0)\r\n                writeUint(1 / val > 0 ? /* positive */ 0 : /* negative 0 */ 2147483648, buf, pos);\r\n            else if (isNaN(val))\r\n                writeUint(2143289344, buf, pos);\r\n            else if (val > 3.4028234663852886e+38) // +-Infinity\r\n                writeUint((sign << 31 | 2139095040) >>> 0, buf, pos);\r\n            else if (val < 1.1754943508222875e-38) // denormal\r\n                writeUint((sign << 31 | Math.round(val / 1.401298464324817e-45)) >>> 0, buf, pos);\r\n            else {\r\n                var exponent = Math.floor(Math.log(val) / Math.LN2),\r\n                    mantissa = Math.round(val * Math.pow(2, -exponent) * 8388608) & 8388607;\r\n                writeUint((sign << 31 | exponent + 127 << 23 | mantissa) >>> 0, buf, pos);\r\n            }\r\n        }\r\n\r\n        exports.writeFloatLE = writeFloat_ieee754.bind(null, writeUintLE);\r\n        exports.writeFloatBE = writeFloat_ieee754.bind(null, writeUintBE);\r\n\r\n        function readFloat_ieee754(readUint, buf, pos) {\r\n            var uint = readUint(buf, pos),\r\n                sign = (uint >> 31) * 2 + 1,\r\n                exponent = uint >>> 23 & 255,\r\n                mantissa = uint & 8388607;\r\n            return exponent === 255\r\n                ? mantissa\r\n                ? NaN\r\n                : sign * Infinity\r\n                : exponent === 0 // denormal\r\n                ? sign * 1.401298464324817e-45 * mantissa\r\n                : sign * Math.pow(2, exponent - 150) * (mantissa + 8388608);\r\n        }\r\n\r\n        exports.readFloatLE = readFloat_ieee754.bind(null, readUintLE);\r\n        exports.readFloatBE = readFloat_ieee754.bind(null, readUintBE);\r\n\r\n    })();\r\n\r\n    // double: typed array\r\n    if (typeof Float64Array !== \"undefined\") (function() {\r\n\r\n        var f64 = new Float64Array([-0]),\r\n            f8b = new Uint8Array(f64.buffer),\r\n            le  = f8b[7] === 128;\r\n\r\n        function writeDouble_f64_cpy(val, buf, pos) {\r\n            f64[0] = val;\r\n            buf[pos    ] = f8b[0];\r\n            buf[pos + 1] = f8b[1];\r\n            buf[pos + 2] = f8b[2];\r\n            buf[pos + 3] = f8b[3];\r\n            buf[pos + 4] = f8b[4];\r\n            buf[pos + 5] = f8b[5];\r\n            buf[pos + 6] = f8b[6];\r\n            buf[pos + 7] = f8b[7];\r\n        }\r\n\r\n        function writeDouble_f64_rev(val, buf, pos) {\r\n            f64[0] = val;\r\n            buf[pos    ] = f8b[7];\r\n            buf[pos + 1] = f8b[6];\r\n            buf[pos + 2] = f8b[5];\r\n            buf[pos + 3] = f8b[4];\r\n            buf[pos + 4] = f8b[3];\r\n            buf[pos + 5] = f8b[2];\r\n            buf[pos + 6] = f8b[1];\r\n            buf[pos + 7] = f8b[0];\r\n        }\r\n\r\n        /* istanbul ignore next */\r\n        exports.writeDoubleLE = le ? writeDouble_f64_cpy : writeDouble_f64_rev;\r\n        /* istanbul ignore next */\r\n        exports.writeDoubleBE = le ? writeDouble_f64_rev : writeDouble_f64_cpy;\r\n\r\n        function readDouble_f64_cpy(buf, pos) {\r\n            f8b[0] = buf[pos    ];\r\n            f8b[1] = buf[pos + 1];\r\n            f8b[2] = buf[pos + 2];\r\n            f8b[3] = buf[pos + 3];\r\n            f8b[4] = buf[pos + 4];\r\n            f8b[5] = buf[pos + 5];\r\n            f8b[6] = buf[pos + 6];\r\n            f8b[7] = buf[pos + 7];\r\n            return f64[0];\r\n        }\r\n\r\n        function readDouble_f64_rev(buf, pos) {\r\n            f8b[7] = buf[pos    ];\r\n            f8b[6] = buf[pos + 1];\r\n            f8b[5] = buf[pos + 2];\r\n            f8b[4] = buf[pos + 3];\r\n            f8b[3] = buf[pos + 4];\r\n            f8b[2] = buf[pos + 5];\r\n            f8b[1] = buf[pos + 6];\r\n            f8b[0] = buf[pos + 7];\r\n            return f64[0];\r\n        }\r\n\r\n        /* istanbul ignore next */\r\n        exports.readDoubleLE = le ? readDouble_f64_cpy : readDouble_f64_rev;\r\n        /* istanbul ignore next */\r\n        exports.readDoubleBE = le ? readDouble_f64_rev : readDouble_f64_cpy;\r\n\r\n    // double: ieee754\r\n    })(); else (function() {\r\n\r\n        function writeDouble_ieee754(writeUint, off0, off1, val, buf, pos) {\r\n            var sign = val < 0 ? 1 : 0;\r\n            if (sign)\r\n                val = -val;\r\n            if (val === 0) {\r\n                writeUint(0, buf, pos + off0);\r\n                writeUint(1 / val > 0 ? /* positive */ 0 : /* negative 0 */ 2147483648, buf, pos + off1);\r\n            } else if (isNaN(val)) {\r\n                writeUint(0, buf, pos + off0);\r\n                writeUint(2146959360, buf, pos + off1);\r\n            } else if (val > 1.7976931348623157e+308) { // +-Infinity\r\n                writeUint(0, buf, pos + off0);\r\n                writeUint((sign << 31 | 2146435072) >>> 0, buf, pos + off1);\r\n            } else {\r\n                var mantissa;\r\n                if (val < 2.2250738585072014e-308) { // denormal\r\n                    mantissa = val / 5e-324;\r\n                    writeUint(mantissa >>> 0, buf, pos + off0);\r\n                    writeUint((sign << 31 | mantissa / 4294967296) >>> 0, buf, pos + off1);\r\n                } else {\r\n                    var exponent = Math.floor(Math.log(val) / Math.LN2);\r\n                    if (exponent === 1024)\r\n                        exponent = 1023;\r\n                    mantissa = val * Math.pow(2, -exponent);\r\n                    writeUint(mantissa * 4503599627370496 >>> 0, buf, pos + off0);\r\n                    writeUint((sign << 31 | exponent + 1023 << 20 | mantissa * 1048576 & 1048575) >>> 0, buf, pos + off1);\r\n                }\r\n            }\r\n        }\r\n\r\n        exports.writeDoubleLE = writeDouble_ieee754.bind(null, writeUintLE, 0, 4);\r\n        exports.writeDoubleBE = writeDouble_ieee754.bind(null, writeUintBE, 4, 0);\r\n\r\n        function readDouble_ieee754(readUint, off0, off1, buf, pos) {\r\n            var lo = readUint(buf, pos + off0),\r\n                hi = readUint(buf, pos + off1);\r\n            var sign = (hi >> 31) * 2 + 1,\r\n                exponent = hi >>> 20 & 2047,\r\n                mantissa = 4294967296 * (hi & 1048575) + lo;\r\n            return exponent === 2047\r\n                ? mantissa\r\n                ? NaN\r\n                : sign * Infinity\r\n                : exponent === 0 // denormal\r\n                ? sign * 5e-324 * mantissa\r\n                : sign * Math.pow(2, exponent - 1075) * (mantissa + 4503599627370496);\r\n        }\r\n\r\n        exports.readDoubleLE = readDouble_ieee754.bind(null, readUintLE, 0, 4);\r\n        exports.readDoubleBE = readDouble_ieee754.bind(null, readUintBE, 4, 0);\r\n\r\n    })();\r\n\r\n    return exports;\r\n}\r\n\r\n// uint helpers\r\n\r\nfunction writeUintLE(val, buf, pos) {\r\n    buf[pos    ] =  val        & 255;\r\n    buf[pos + 1] =  val >>> 8  & 255;\r\n    buf[pos + 2] =  val >>> 16 & 255;\r\n    buf[pos + 3] =  val >>> 24;\r\n}\r\n\r\nfunction writeUintBE(val, buf, pos) {\r\n    buf[pos    ] =  val >>> 24;\r\n    buf[pos + 1] =  val >>> 16 & 255;\r\n    buf[pos + 2] =  val >>> 8  & 255;\r\n    buf[pos + 3] =  val        & 255;\r\n}\r\n\r\nfunction readUintLE(buf, pos) {\r\n    return (buf[pos    ]\r\n          | buf[pos + 1] << 8\r\n          | buf[pos + 2] << 16\r\n          | buf[pos + 3] << 24) >>> 0;\r\n}\r\n\r\nfunction readUintBE(buf, pos) {\r\n    return (buf[pos    ] << 24\r\n          | buf[pos + 1] << 16\r\n          | buf[pos + 2] << 8\r\n          | buf[pos + 3]) >>> 0;\r\n}\r\n", "\"use strict\";\r\nmodule.exports = inquire;\r\n\r\n/**\r\n * Requires a module only if available.\r\n * @memberof util\r\n * @param {string} moduleName Module to require\r\n * @returns {?Object} Required module if available and not empty, otherwise `null`\r\n */\r\nfunction inquire(moduleName) {\r\n    try {\r\n        var mod = eval(\"quire\".replace(/^/,\"re\"))(moduleName); // eslint-disable-line no-eval\r\n        if (mod && (mod.length || Object.keys(mod).length))\r\n            return mod;\r\n    } catch (e) {} // eslint-disable-line no-empty\r\n    return null;\r\n}\r\n", "\"use strict\";\r\n\r\n/**\r\n * A minimal UTF8 implementation for number arrays.\r\n * @memberof util\r\n * @namespace\r\n */\r\nvar utf8 = exports;\r\n\r\n/**\r\n * Calculates the UTF8 byte length of a string.\r\n * @param {string} string String\r\n * @returns {number} Byte length\r\n */\r\nutf8.length = function utf8_length(string) {\r\n    var len = 0,\r\n        c = 0;\r\n    for (var i = 0; i < string.length; ++i) {\r\n        c = string.charCodeAt(i);\r\n        if (c < 128)\r\n            len += 1;\r\n        else if (c < 2048)\r\n            len += 2;\r\n        else if ((c & 0xFC00) === 0xD800 && (string.charCodeAt(i + 1) & 0xFC00) === 0xDC00) {\r\n            ++i;\r\n            len += 4;\r\n        } else\r\n            len += 3;\r\n    }\r\n    return len;\r\n};\r\n\r\n/**\r\n * Reads UTF8 bytes as a string.\r\n * @param {Uint8Array} buffer Source buffer\r\n * @param {number} start Source start\r\n * @param {number} end Source end\r\n * @returns {string} String read\r\n */\r\nutf8.read = function utf8_read(buffer, start, end) {\r\n    var len = end - start;\r\n    if (len < 1)\r\n        return \"\";\r\n    var parts = null,\r\n        chunk = [],\r\n        i = 0, // char offset\r\n        t;     // temporary\r\n    while (start < end) {\r\n        t = buffer[start++];\r\n        if (t < 128)\r\n            chunk[i++] = t;\r\n        else if (t > 191 && t < 224)\r\n            chunk[i++] = (t & 31) << 6 | buffer[start++] & 63;\r\n        else if (t > 239 && t < 365) {\r\n            t = ((t & 7) << 18 | (buffer[start++] & 63) << 12 | (buffer[start++] & 63) << 6 | buffer[start++] & 63) - 0x10000;\r\n            chunk[i++] = 0xD800 + (t >> 10);\r\n            chunk[i++] = 0xDC00 + (t & 1023);\r\n        } else\r\n            chunk[i++] = (t & 15) << 12 | (buffer[start++] & 63) << 6 | buffer[start++] & 63;\r\n        if (i > 8191) {\r\n            (parts || (parts = [])).push(String.fromCharCode.apply(String, chunk));\r\n            i = 0;\r\n        }\r\n    }\r\n    if (parts) {\r\n        if (i)\r\n            parts.push(String.fromCharCode.apply(String, chunk.slice(0, i)));\r\n        return parts.join(\"\");\r\n    }\r\n    return String.fromCharCode.apply(String, chunk.slice(0, i));\r\n};\r\n\r\n/**\r\n * Writes a string as UTF8 bytes.\r\n * @param {string} string Source string\r\n * @param {Uint8Array} buffer Destination buffer\r\n * @param {number} offset Destination offset\r\n * @returns {number} Bytes written\r\n */\r\nutf8.write = function utf8_write(string, buffer, offset) {\r\n    var start = offset,\r\n        c1, // character 1\r\n        c2; // character 2\r\n    for (var i = 0; i < string.length; ++i) {\r\n        c1 = string.charCodeAt(i);\r\n        if (c1 < 128) {\r\n            buffer[offset++] = c1;\r\n        } else if (c1 < 2048) {\r\n            buffer[offset++] = c1 >> 6       | 192;\r\n            buffer[offset++] = c1       & 63 | 128;\r\n        } else if ((c1 & 0xFC00) === 0xD800 && ((c2 = string.charCodeAt(i + 1)) & 0xFC00) === 0xDC00) {\r\n            c1 = 0x10000 + ((c1 & 0x03FF) << 10) + (c2 & 0x03FF);\r\n            ++i;\r\n            buffer[offset++] = c1 >> 18      | 240;\r\n            buffer[offset++] = c1 >> 12 & 63 | 128;\r\n            buffer[offset++] = c1 >> 6  & 63 | 128;\r\n            buffer[offset++] = c1       & 63 | 128;\r\n        } else {\r\n            buffer[offset++] = c1 >> 12      | 224;\r\n            buffer[offset++] = c1 >> 6  & 63 | 128;\r\n            buffer[offset++] = c1       & 63 | 128;\r\n        }\r\n    }\r\n    return offset - start;\r\n};\r\n", "\"use strict\";\r\nmodule.exports = pool;\r\n\r\n/**\r\n * An allocator as used by {@link util.pool}.\r\n * @typedef PoolAllocator\r\n * @type {function}\r\n * @param {number} size Buffer size\r\n * @returns {Uint8Array} Buffer\r\n */\r\n\r\n/**\r\n * A slicer as used by {@link util.pool}.\r\n * @typedef PoolSlicer\r\n * @type {function}\r\n * @param {number} start Start offset\r\n * @param {number} end End offset\r\n * @returns {Uint8Array} Buffer slice\r\n * @this {Uint8Array}\r\n */\r\n\r\n/**\r\n * A general purpose buffer pool.\r\n * @memberof util\r\n * @function\r\n * @param {PoolAllocator} alloc Allocator\r\n * @param {PoolSlicer} slice Slicer\r\n * @param {number} [size=8192] Slab size\r\n * @returns {PoolAllocator} Pooled allocator\r\n */\r\nfunction pool(alloc, slice, size) {\r\n    var SIZE   = size || 8192;\r\n    var MAX    = SIZE >>> 1;\r\n    var slab   = null;\r\n    var offset = SIZE;\r\n    return function pool_alloc(size) {\r\n        if (size < 1 || size > MAX)\r\n            return alloc(size);\r\n        if (offset + size > SIZE) {\r\n            slab = alloc(SIZE);\r\n            offset = 0;\r\n        }\r\n        var buf = slice.call(slab, offset, offset += size);\r\n        if (offset & 7) // align to 32 bit\r\n            offset = (offset | 7) + 1;\r\n        return buf;\r\n    };\r\n}\r\n", "\"use strict\";\nmodule.exports = LongBits;\n\nvar util = require(\"../util/minimal\");\n\n/**\n * Constructs new long bits.\n * @classdesc Helper class for working with the low and high bits of a 64 bit value.\n * @memberof util\n * @constructor\n * @param {number} lo Low 32 bits, unsigned\n * @param {number} hi High 32 bits, unsigned\n */\nfunction LongBits(lo, hi) {\n\n    // note that the casts below are theoretically unnecessary as of today, but older statically\n    // generated converter code might still call the ctor with signed 32bits. kept for compat.\n\n    /**\n     * Low bits.\n     * @type {number}\n     */\n    this.lo = lo >>> 0;\n\n    /**\n     * High bits.\n     * @type {number}\n     */\n    this.hi = hi >>> 0;\n}\n\n/**\n * Zero bits.\n * @memberof util.LongBits\n * @type {util.LongBits}\n */\nvar zero = LongBits.zero = new LongBits(0, 0);\n\nzero.toNumber = function() { return 0; };\nzero.zzEncode = zero.zzDecode = function() { return this; };\nzero.length = function() { return 1; };\n\n/**\n * Zero hash.\n * @memberof util.LongBits\n * @type {string}\n */\nvar zeroHash = LongBits.zeroHash = \"\\0\\0\\0\\0\\0\\0\\0\\0\";\n\n/**\n * Constructs new long bits from the specified number.\n * @param {number} value Value\n * @returns {util.LongBits} Instance\n */\nLongBits.fromNumber = function fromNumber(value) {\n    if (value === 0)\n        return zero;\n    var sign = value < 0;\n    if (sign)\n        value = -value;\n    var lo = value >>> 0,\n        hi = (value - lo) / 4294967296 >>> 0;\n    if (sign) {\n        hi = ~hi >>> 0;\n        lo = ~lo >>> 0;\n        if (++lo > 4294967295) {\n            lo = 0;\n            if (++hi > 4294967295)\n                hi = 0;\n        }\n    }\n    return new LongBits(lo, hi);\n};\n\n/**\n * Constructs new long bits from a number, long or string.\n * @param {Long|number|string} value Value\n * @returns {util.LongBits} Instance\n */\nLongBits.from = function from(value) {\n    if (typeof value === \"number\")\n        return LongBits.fromNumber(value);\n    if (util.isString(value)) {\n        /* istanbul ignore else */\n        if (util.Long)\n            value = util.Long.fromString(value);\n        else\n            return LongBits.fromNumber(parseInt(value, 10));\n    }\n    return value.low || value.high ? new LongBits(value.low >>> 0, value.high >>> 0) : zero;\n};\n\n/**\n * Converts this long bits to a possibly unsafe JavaScript number.\n * @param {boolean} [unsigned=false] Whether unsigned or not\n * @returns {number} Possibly unsafe number\n */\nLongBits.prototype.toNumber = function toNumber(unsigned) {\n    if (!unsigned && this.hi >>> 31) {\n        var lo = ~this.lo + 1 >>> 0,\n            hi = ~this.hi     >>> 0;\n        if (!lo)\n            hi = hi + 1 >>> 0;\n        return -(lo + hi * 4294967296);\n    }\n    return this.lo + this.hi * 4294967296;\n};\n\n/**\n * Converts this long bits to a long.\n * @param {boolean} [unsigned=false] Whether unsigned or not\n * @returns {Long} Long\n */\nLongBits.prototype.toLong = function toLong(unsigned) {\n    return util.Long\n        ? new util.Long(this.lo | 0, this.hi | 0, Boolean(unsigned))\n        /* istanbul ignore next */\n        : { low: this.lo | 0, high: this.hi | 0, unsigned: Boolean(unsigned) };\n};\n\nvar charCodeAt = String.prototype.charCodeAt;\n\n/**\n * Constructs new long bits from the specified 8 characters long hash.\n * @param {string} hash Hash\n * @returns {util.LongBits} Bits\n */\nLongBits.fromHash = function fromHash(hash) {\n    if (hash === zeroHash)\n        return zero;\n    return new LongBits(\n        ( charCodeAt.call(hash, 0)\n        | charCodeAt.call(hash, 1) << 8\n        | charCodeAt.call(hash, 2) << 16\n        | charCodeAt.call(hash, 3) << 24) >>> 0\n    ,\n        ( charCodeAt.call(hash, 4)\n        | charCodeAt.call(hash, 5) << 8\n        | charCodeAt.call(hash, 6) << 16\n        | charCodeAt.call(hash, 7) << 24) >>> 0\n    );\n};\n\n/**\n * Converts this long bits to a 8 characters long hash.\n * @returns {string} Hash\n */\nLongBits.prototype.toHash = function toHash() {\n    return String.fromCharCode(\n        this.lo        & 255,\n        this.lo >>> 8  & 255,\n        this.lo >>> 16 & 255,\n        this.lo >>> 24      ,\n        this.hi        & 255,\n        this.hi >>> 8  & 255,\n        this.hi >>> 16 & 255,\n        this.hi >>> 24\n    );\n};\n\n/**\n * Zig-zag encodes this long bits.\n * @returns {util.LongBits} `this`\n */\nLongBits.prototype.zzEncode = function zzEncode() {\n    var mask =   this.hi >> 31;\n    this.hi  = ((this.hi << 1 | this.lo >>> 31) ^ mask) >>> 0;\n    this.lo  = ( this.lo << 1                   ^ mask) >>> 0;\n    return this;\n};\n\n/**\n * Zig-zag decodes this long bits.\n * @returns {util.LongBits} `this`\n */\nLongBits.prototype.zzDecode = function zzDecode() {\n    var mask = -(this.lo & 1);\n    this.lo  = ((this.lo >>> 1 | this.hi << 31) ^ mask) >>> 0;\n    this.hi  = ( this.hi >>> 1                  ^ mask) >>> 0;\n    return this;\n};\n\n/**\n * Calculates the length of this longbits when encoded as a varint.\n * @returns {number} Length\n */\nLongBits.prototype.length = function length() {\n    var part0 =  this.lo,\n        part1 = (this.lo >>> 28 | this.hi << 4) >>> 0,\n        part2 =  this.hi >>> 24;\n    return part2 === 0\n         ? part1 === 0\n           ? part0 < 16384\n             ? part0 < 128 ? 1 : 2\n             : part0 < 2097152 ? 3 : 4\n           : part1 < 16384\n             ? part1 < 128 ? 5 : 6\n             : part1 < 2097152 ? 7 : 8\n         : part2 < 128 ? 9 : 10;\n};\n", "\"use strict\";\nvar util = exports;\n\n// used to return a Promise where callback is omitted\nutil.asPromise = require(\"@protobufjs/aspromise\");\n\n// converts to / from base64 encoded strings\nutil.base64 = require(\"@protobufjs/base64\");\n\n// base class of rpc.Service\nutil.EventEmitter = require(\"@protobufjs/eventemitter\");\n\n// float handling accross browsers\nutil.float = require(\"@protobufjs/float\");\n\n// requires modules optionally and hides the call from bundlers\nutil.inquire = require(\"@protobufjs/inquire\");\n\n// converts to / from utf8 encoded strings\nutil.utf8 = require(\"@protobufjs/utf8\");\n\n// provides a node-like buffer pool in the browser\nutil.pool = require(\"@protobufjs/pool\");\n\n// utility to work with the low and high bits of a 64 bit value\nutil.LongBits = require(\"./longbits\");\n\n/**\n * Whether running within node or not.\n * @memberof util\n * @type {boolean}\n */\nutil.isNode = Boolean(typeof global !== \"undefined\"\n                   && global\n                   && global.process\n                   && global.process.versions\n                   && global.process.versions.node);\n\n/**\n * Global object reference.\n * @memberof util\n * @type {Object}\n */\nutil.global = util.isNode && global\n           || typeof window !== \"undefined\" && window\n           || typeof self   !== \"undefined\" && self\n           || this; // eslint-disable-line no-invalid-this\n\n/**\n * An immuable empty array.\n * @memberof util\n * @type {Array.<*>}\n * @const\n */\nutil.emptyArray = Object.freeze ? Object.freeze([]) : /* istanbul ignore next */ []; // used on prototypes\n\n/**\n * An immutable empty object.\n * @type {Object}\n * @const\n */\nutil.emptyObject = Object.freeze ? Object.freeze({}) : /* istanbul ignore next */ {}; // used on prototypes\n\n/**\n * Tests if the specified value is an integer.\n * @function\n * @param {*} value Value to test\n * @returns {boolean} `true` if the value is an integer\n */\nutil.isInteger = Number.isInteger || /* istanbul ignore next */ function isInteger(value) {\n    return typeof value === \"number\" && isFinite(value) && Math.floor(value) === value;\n};\n\n/**\n * Tests if the specified value is a string.\n * @param {*} value Value to test\n * @returns {boolean} `true` if the value is a string\n */\nutil.isString = function isString(value) {\n    return typeof value === \"string\" || value instanceof String;\n};\n\n/**\n * Tests if the specified value is a non-null object.\n * @param {*} value Value to test\n * @returns {boolean} `true` if the value is a non-null object\n */\nutil.isObject = function isObject(value) {\n    return value && typeof value === \"object\";\n};\n\n/**\n * Checks if a property on a message is considered to be present.\n * This is an alias of {@link util.isSet}.\n * @function\n * @param {Object} obj Plain object or message instance\n * @param {string} prop Property name\n * @returns {boolean} `true` if considered to be present, otherwise `false`\n */\nutil.isset =\n\n/**\n * Checks if a property on a message is considered to be present.\n * @param {Object} obj Plain object or message instance\n * @param {string} prop Property name\n * @returns {boolean} `true` if considered to be present, otherwise `false`\n */\nutil.isSet = function isSet(obj, prop) {\n    var value = obj[prop];\n    if (value != null && obj.hasOwnProperty(prop)) // eslint-disable-line eqeqeq, no-prototype-builtins\n        return typeof value !== \"object\" || (Array.isArray(value) ? value.length : Object.keys(value).length) > 0;\n    return false;\n};\n\n/**\n * Any compatible Buffer instance.\n * This is a minimal stand-alone definition of a Buffer instance. The actual type is that exported by node's typings.\n * @interface Buffer\n * @extends Uint8Array\n */\n\n/**\n * Node's Buffer class if available.\n * @type {Constructor<Buffer>}\n */\nutil.Buffer = (function() {\n    try {\n        var Buffer = util.inquire(\"buffer\").Buffer;\n        // refuse to use non-node buffers if not explicitly assigned (perf reasons):\n        return Buffer.prototype.utf8Write ? Buffer : /* istanbul ignore next */ null;\n    } catch (e) {\n        /* istanbul ignore next */\n        return null;\n    }\n})();\n\n// Internal alias of or polyfull for Buffer.from.\nutil._Buffer_from = null;\n\n// Internal alias of or polyfill for Buffer.allocUnsafe.\nutil._Buffer_allocUnsafe = null;\n\n/**\n * Creates a new buffer of whatever type supported by the environment.\n * @param {number|number[]} [sizeOrArray=0] Buffer size or number array\n * @returns {Uint8Array|Buffer} Buffer\n */\nutil.newBuffer = function newBuffer(sizeOrArray) {\n    /* istanbul ignore next */\n    return typeof sizeOrArray === \"number\"\n        ? util.Buffer\n            ? util._Buffer_allocUnsafe(sizeOrArray)\n            : new util.Array(sizeOrArray)\n        : util.Buffer\n            ? util._Buffer_from(sizeOrArray)\n            : typeof Uint8Array === \"undefined\"\n                ? sizeOrArray\n                : new Uint8Array(sizeOrArray);\n};\n\n/**\n * Array implementation used in the browser. `Uint8Array` if supported, otherwise `Array`.\n * @type {Constructor<Uint8Array>}\n */\nutil.Array = typeof Uint8Array !== \"undefined\" ? Uint8Array /* istanbul ignore next */ : Array;\n\n/**\n * Any compatible Long instance.\n * This is a minimal stand-alone definition of a Long instance. The actual type is that exported by long.js.\n * @interface Long\n * @property {number} low Low bits\n * @property {number} high High bits\n * @property {boolean} unsigned Whether unsigned or not\n */\n\n/**\n * Long.js's Long class if available.\n * @type {Constructor<Long>}\n */\nutil.Long = /* istanbul ignore next */ util.global.dcodeIO && /* istanbul ignore next */ util.global.dcodeIO.Long\n         || /* istanbul ignore next */ util.global.Long\n         || util.inquire(\"long\");\n\n/**\n * Regular expression used to verify 2 bit (`bool`) map keys.\n * @type {RegExp}\n * @const\n */\nutil.key2Re = /^true|false|0|1$/;\n\n/**\n * Regular expression used to verify 32 bit (`int32` etc.) map keys.\n * @type {RegExp}\n * @const\n */\nutil.key32Re = /^-?(?:0|[1-9][0-9]*)$/;\n\n/**\n * Regular expression used to verify 64 bit (`int64` etc.) map keys.\n * @type {RegExp}\n * @const\n */\nutil.key64Re = /^(?:[\\\\x00-\\\\xff]{8}|-?(?:0|[1-9][0-9]*))$/;\n\n/**\n * Converts a number or long to an 8 characters long hash string.\n * @param {Long|number} value Value to convert\n * @returns {string} Hash\n */\nutil.longToHash = function longToHash(value) {\n    return value\n        ? util.LongBits.from(value).toHash()\n        : util.LongBits.zeroHash;\n};\n\n/**\n * Converts an 8 characters long hash string to a long or number.\n * @param {string} hash Hash\n * @param {boolean} [unsigned=false] Whether unsigned or not\n * @returns {Long|number} Original value\n */\nutil.longFromHash = function longFromHash(hash, unsigned) {\n    var bits = util.LongBits.fromHash(hash);\n    if (util.Long)\n        return util.Long.fromBits(bits.lo, bits.hi, unsigned);\n    return bits.toNumber(Boolean(unsigned));\n};\n\n/**\n * Merges the properties of the source object into the destination object.\n * @memberof util\n * @param {Object.<string,*>} dst Destination object\n * @param {Object.<string,*>} src Source object\n * @param {boolean} [ifNotSet=false] Merges only if the key is not already set\n * @returns {Object.<string,*>} Destination object\n */\nfunction merge(dst, src, ifNotSet) { // used by converters\n    for (var keys = Object.keys(src), i = 0; i < keys.length; ++i)\n        if (dst[keys[i]] === undefined || !ifNotSet)\n            dst[keys[i]] = src[keys[i]];\n    return dst;\n}\n\nutil.merge = merge;\n\n/**\n * Converts the first character of a string to lower case.\n * @param {string} str String to convert\n * @returns {string} Converted string\n */\nutil.lcFirst = function lcFirst(str) {\n    return str.charAt(0).toLowerCase() + str.substring(1);\n};\n\n/**\n * Creates a custom error constructor.\n * @memberof util\n * @param {string} name Error name\n * @returns {Constructor<Error>} Custom error constructor\n */\nfunction newError(name) {\n\n    function CustomError(message, properties) {\n\n        if (!(this instanceof CustomError))\n            return new CustomError(message, properties);\n\n        // Error.call(this, message);\n        // ^ just returns a new error instance because the ctor can be called as a function\n\n        Object.defineProperty(this, \"message\", { get: function() { return message; } });\n\n        /* istanbul ignore next */\n        if (Error.captureStackTrace) // node\n            Error.captureStackTrace(this, CustomError);\n        else\n            Object.defineProperty(this, \"stack\", { value: new Error().stack || \"\" });\n\n        if (properties)\n            merge(this, properties);\n    }\n\n    (CustomError.prototype = Object.create(Error.prototype)).constructor = CustomError;\n\n    Object.defineProperty(CustomError.prototype, \"name\", { get: function() { return name; } });\n\n    CustomError.prototype.toString = function toString() {\n        return this.name + \": \" + this.message;\n    };\n\n    return CustomError;\n}\n\nutil.newError = newError;\n\n/**\n * Constructs a new protocol error.\n * @classdesc Error subclass indicating a protocol specifc error.\n * @memberof util\n * @extends Error\n * @template T extends Message<T>\n * @constructor\n * @param {string} message Error message\n * @param {Object.<string,*>} [properties] Additional properties\n * @example\n * try {\n *     MyMessage.decode(someBuffer); // throws if required fields are missing\n * } catch (e) {\n *     if (e instanceof ProtocolError && e.instance)\n *         console.log(\"decoded so far: \" + JSON.stringify(e.instance));\n * }\n */\nutil.ProtocolError = newError(\"ProtocolError\");\n\n/**\n * So far decoded message instance.\n * @name util.ProtocolError#instance\n * @type {Message<T>}\n */\n\n/**\n * A OneOf getter as returned by {@link util.oneOfGetter}.\n * @typedef OneOfGetter\n * @type {function}\n * @returns {string|undefined} Set field name, if any\n */\n\n/**\n * Builds a getter for a oneof's present field name.\n * @param {string[]} fieldNames Field names\n * @returns {OneOfGetter} Unbound getter\n */\nutil.oneOfGetter = function getOneOf(fieldNames) {\n    var fieldMap = {};\n    for (var i = 0; i < fieldNames.length; ++i)\n        fieldMap[fieldNames[i]] = 1;\n\n    /**\n     * @returns {string|undefined} Set field name, if any\n     * @this Object\n     * @ignore\n     */\n    return function() { // eslint-disable-line consistent-return\n        for (var keys = Object.keys(this), i = keys.length - 1; i > -1; --i)\n            if (fieldMap[keys[i]] === 1 && this[keys[i]] !== undefined && this[keys[i]] !== null)\n                return keys[i];\n    };\n};\n\n/**\n * A OneOf setter as returned by {@link util.oneOfSetter}.\n * @typedef OneOfSetter\n * @type {function}\n * @param {string|undefined} value Field name\n * @returns {undefined}\n */\n\n/**\n * Builds a setter for a oneof's present field name.\n * @param {string[]} fieldNames Field names\n * @returns {OneOfSetter} Unbound setter\n */\nutil.oneOfSetter = function setOneOf(fieldNames) {\n\n    /**\n     * @param {string} name Field name\n     * @returns {undefined}\n     * @this Object\n     * @ignore\n     */\n    return function(name) {\n        for (var i = 0; i < fieldNames.length; ++i)\n            if (fieldNames[i] !== name)\n                delete this[fieldNames[i]];\n    };\n};\n\n/**\n * Default conversion options used for {@link Message#toJSON} implementations.\n *\n * These options are close to proto3's JSON mapping with the exception that internal types like Any are handled just like messages. More precisely:\n *\n * - Longs become strings\n * - Enums become string keys\n * - Bytes become base64 encoded strings\n * - (Sub-)Messages become plain objects\n * - Maps become plain objects with all string keys\n * - Repeated fields become arrays\n * - NaN and Infinity for float and double fields become strings\n *\n * @type {IConversionOptions}\n * @see https://developers.google.com/protocol-buffers/docs/proto3?hl=en#json\n */\nutil.toJSONOptions = {\n    longs: String,\n    enums: String,\n    bytes: String,\n    json: true\n};\n\n// Sets up buffer utility according to the environment (called in index-minimal)\nutil._configure = function() {\n    var Buffer = util.Buffer;\n    /* istanbul ignore if */\n    if (!Buffer) {\n        util._Buffer_from = util._Buffer_allocUnsafe = null;\n        return;\n    }\n    // because node 4.x buffers are incompatible & immutable\n    // see: https://github.com/dcodeIO/protobuf.js/pull/665\n    util._Buffer_from = Buffer.from !== Uint8Array.from && Buffer.from ||\n        /* istanbul ignore next */\n        function Buffer_from(value, encoding) {\n            return new Buffer(value, encoding);\n        };\n    util._Buffer_allocUnsafe = Buffer.allocUnsafe ||\n        /* istanbul ignore next */\n        function Buffer_allocUnsafe(size) {\n            return new Buffer(size);\n        };\n};\n", "\"use strict\";\nmodule.exports = Writer;\n\nvar util      = require(\"./util/minimal\");\n\nvar BufferWriter; // cyclic\n\nvar LongBits  = util.LongBits,\n    base64    = util.base64,\n    utf8      = util.utf8;\n\n/**\n * Constructs a new writer operation instance.\n * @classdesc Scheduled writer operation.\n * @constructor\n * @param {function(*, Uint8Array, number)} fn Function to call\n * @param {number} len Value byte length\n * @param {*} val Value to write\n * @ignore\n */\nfunction Op(fn, len, val) {\n\n    /**\n     * Function to call.\n     * @type {function(Uint8Array, number, *)}\n     */\n    this.fn = fn;\n\n    /**\n     * Value byte length.\n     * @type {number}\n     */\n    this.len = len;\n\n    /**\n     * Next operation.\n     * @type {Writer.Op|undefined}\n     */\n    this.next = undefined;\n\n    /**\n     * Value to write.\n     * @type {*}\n     */\n    this.val = val; // type varies\n}\n\n/* istanbul ignore next */\nfunction noop() {} // eslint-disable-line no-empty-function\n\n/**\n * Constructs a new writer state instance.\n * @classdesc Copied writer state.\n * @memberof Writer\n * @constructor\n * @param {Writer} writer Writer to copy state from\n * @ignore\n */\nfunction State(writer) {\n\n    /**\n     * Current head.\n     * @type {Writer.Op}\n     */\n    this.head = writer.head;\n\n    /**\n     * Current tail.\n     * @type {Writer.Op}\n     */\n    this.tail = writer.tail;\n\n    /**\n     * Current buffer length.\n     * @type {number}\n     */\n    this.len = writer.len;\n\n    /**\n     * Next state.\n     * @type {State|null}\n     */\n    this.next = writer.states;\n}\n\n/**\n * Constructs a new writer instance.\n * @classdesc Wire format writer using `Uint8Array` if available, otherwise `Array`.\n * @constructor\n */\nfunction Writer() {\n\n    /**\n     * Current length.\n     * @type {number}\n     */\n    this.len = 0;\n\n    /**\n     * Operations head.\n     * @type {Object}\n     */\n    this.head = new Op(noop, 0, 0);\n\n    /**\n     * Operations tail\n     * @type {Object}\n     */\n    this.tail = this.head;\n\n    /**\n     * Linked forked states.\n     * @type {Object|null}\n     */\n    this.states = null;\n\n    // When a value is written, the writer calculates its byte length and puts it into a linked\n    // list of operations to perform when finish() is called. This both allows us to allocate\n    // buffers of the exact required size and reduces the amount of work we have to do compared\n    // to first calculating over objects and then encoding over objects. In our case, the encoding\n    // part is just a linked list walk calling operations with already prepared values.\n}\n\nvar create = function create() {\n    return util.Buffer\n        ? function create_buffer_setup() {\n            return (Writer.create = function create_buffer() {\n                return new BufferWriter();\n            })();\n        }\n        /* istanbul ignore next */\n        : function create_array() {\n            return new Writer();\n        };\n};\n\n/**\n * Creates a new writer.\n * @function\n * @returns {BufferWriter|Writer} A {@link BufferWriter} when Buffers are supported, otherwise a {@link Writer}\n */\nWriter.create = create();\n\n/**\n * Allocates a buffer of the specified size.\n * @param {number} size Buffer size\n * @returns {Uint8Array} Buffer\n */\nWriter.alloc = function alloc(size) {\n    return new util.Array(size);\n};\n\n// Use Uint8Array buffer pool in the browser, just like node does with buffers\n/* istanbul ignore else */\nif (util.Array !== Array)\n    Writer.alloc = util.pool(Writer.alloc, util.Array.prototype.subarray);\n\n/**\n * Pushes a new operation to the queue.\n * @param {function(Uint8Array, number, *)} fn Function to call\n * @param {number} len Value byte length\n * @param {number} val Value to write\n * @returns {Writer} `this`\n * @private\n */\nWriter.prototype._push = function push(fn, len, val) {\n    this.tail = this.tail.next = new Op(fn, len, val);\n    this.len += len;\n    return this;\n};\n\nfunction writeByte(val, buf, pos) {\n    buf[pos] = val & 255;\n}\n\nfunction writeVarint32(val, buf, pos) {\n    while (val > 127) {\n        buf[pos++] = val & 127 | 128;\n        val >>>= 7;\n    }\n    buf[pos] = val;\n}\n\n/**\n * Constructs a new varint writer operation instance.\n * @classdesc Scheduled varint writer operation.\n * @extends Op\n * @constructor\n * @param {number} len Value byte length\n * @param {number} val Value to write\n * @ignore\n */\nfunction VarintOp(len, val) {\n    this.len = len;\n    this.next = undefined;\n    this.val = val;\n}\n\nVarintOp.prototype = Object.create(Op.prototype);\nVarintOp.prototype.fn = writeVarint32;\n\n/**\n * Writes an unsigned 32 bit value as a varint.\n * @param {number} value Value to write\n * @returns {Writer} `this`\n */\nWriter.prototype.uint32 = function write_uint32(value) {\n    // here, the call to this.push has been inlined and a varint specific Op subclass is used.\n    // uint32 is by far the most frequently used operation and benefits significantly from this.\n    this.len += (this.tail = this.tail.next = new VarintOp(\n        (value = value >>> 0)\n                < 128       ? 1\n        : value < 16384     ? 2\n        : value < 2097152   ? 3\n        : value < 268435456 ? 4\n        :                     5,\n    value)).len;\n    return this;\n};\n\n/**\n * Writes a signed 32 bit value as a varint.\n * @function\n * @param {number} value Value to write\n * @returns {Writer} `this`\n */\nWriter.prototype.int32 = function write_int32(value) {\n    return value < 0\n        ? this._push(writeVarint64, 10, LongBits.fromNumber(value)) // 10 bytes per spec\n        : this.uint32(value);\n};\n\n/**\n * Writes a 32 bit value as a varint, zig-zag encoded.\n * @param {number} value Value to write\n * @returns {Writer} `this`\n */\nWriter.prototype.sint32 = function write_sint32(value) {\n    return this.uint32((value << 1 ^ value >> 31) >>> 0);\n};\n\nfunction writeVarint64(val, buf, pos) {\n    while (val.hi) {\n        buf[pos++] = val.lo & 127 | 128;\n        val.lo = (val.lo >>> 7 | val.hi << 25) >>> 0;\n        val.hi >>>= 7;\n    }\n    while (val.lo > 127) {\n        buf[pos++] = val.lo & 127 | 128;\n        val.lo = val.lo >>> 7;\n    }\n    buf[pos++] = val.lo;\n}\n\n/**\n * Writes an unsigned 64 bit value as a varint.\n * @param {Long|number|string} value Value to write\n * @returns {Writer} `this`\n * @throws {TypeError} If `value` is a string and no long library is present.\n */\nWriter.prototype.uint64 = function write_uint64(value) {\n    var bits = LongBits.from(value);\n    return this._push(writeVarint64, bits.length(), bits);\n};\n\n/**\n * Writes a signed 64 bit value as a varint.\n * @function\n * @param {Long|number|string} value Value to write\n * @returns {Writer} `this`\n * @throws {TypeError} If `value` is a string and no long library is present.\n */\nWriter.prototype.int64 = Writer.prototype.uint64;\n\n/**\n * Writes a signed 64 bit value as a varint, zig-zag encoded.\n * @param {Long|number|string} value Value to write\n * @returns {Writer} `this`\n * @throws {TypeError} If `value` is a string and no long library is present.\n */\nWriter.prototype.sint64 = function write_sint64(value) {\n    var bits = LongBits.from(value).zzEncode();\n    return this._push(writeVarint64, bits.length(), bits);\n};\n\n/**\n * Writes a boolish value as a varint.\n * @param {boolean} value Value to write\n * @returns {Writer} `this`\n */\nWriter.prototype.bool = function write_bool(value) {\n    return this._push(writeByte, 1, value ? 1 : 0);\n};\n\nfunction writeFixed32(val, buf, pos) {\n    buf[pos    ] =  val         & 255;\n    buf[pos + 1] =  val >>> 8   & 255;\n    buf[pos + 2] =  val >>> 16  & 255;\n    buf[pos + 3] =  val >>> 24;\n}\n\n/**\n * Writes an unsigned 32 bit value as fixed 32 bits.\n * @param {number} value Value to write\n * @returns {Writer} `this`\n */\nWriter.prototype.fixed32 = function write_fixed32(value) {\n    return this._push(writeFixed32, 4, value >>> 0);\n};\n\n/**\n * Writes a signed 32 bit value as fixed 32 bits.\n * @function\n * @param {number} value Value to write\n * @returns {Writer} `this`\n */\nWriter.prototype.sfixed32 = Writer.prototype.fixed32;\n\n/**\n * Writes an unsigned 64 bit value as fixed 64 bits.\n * @param {Long|number|string} value Value to write\n * @returns {Writer} `this`\n * @throws {TypeError} If `value` is a string and no long library is present.\n */\nWriter.prototype.fixed64 = function write_fixed64(value) {\n    var bits = LongBits.from(value);\n    return this._push(writeFixed32, 4, bits.lo)._push(writeFixed32, 4, bits.hi);\n};\n\n/**\n * Writes a signed 64 bit value as fixed 64 bits.\n * @function\n * @param {Long|number|string} value Value to write\n * @returns {Writer} `this`\n * @throws {TypeError} If `value` is a string and no long library is present.\n */\nWriter.prototype.sfixed64 = Writer.prototype.fixed64;\n\n/**\n * Writes a float (32 bit).\n * @function\n * @param {number} value Value to write\n * @returns {Writer} `this`\n */\nWriter.prototype.float = function write_float(value) {\n    return this._push(util.float.writeFloatLE, 4, value);\n};\n\n/**\n * Writes a double (64 bit float).\n * @function\n * @param {number} value Value to write\n * @returns {Writer} `this`\n */\nWriter.prototype.double = function write_double(value) {\n    return this._push(util.float.writeDoubleLE, 8, value);\n};\n\nvar writeBytes = util.Array.prototype.set\n    ? function writeBytes_set(val, buf, pos) {\n        buf.set(val, pos); // also works for plain array values\n    }\n    /* istanbul ignore next */\n    : function writeBytes_for(val, buf, pos) {\n        for (var i = 0; i < val.length; ++i)\n            buf[pos + i] = val[i];\n    };\n\n/**\n * Writes a sequence of bytes.\n * @param {Uint8Array|string} value Buffer or base64 encoded string to write\n * @returns {Writer} `this`\n */\nWriter.prototype.bytes = function write_bytes(value) {\n    var len = value.length >>> 0;\n    if (!len)\n        return this._push(writeByte, 1, 0);\n    if (util.isString(value)) {\n        var buf = Writer.alloc(len = base64.length(value));\n        base64.decode(value, buf, 0);\n        value = buf;\n    }\n    return this.uint32(len)._push(writeBytes, len, value);\n};\n\n/**\n * Writes a string.\n * @param {string} value Value to write\n * @returns {Writer} `this`\n */\nWriter.prototype.string = function write_string(value) {\n    var len = utf8.length(value);\n    return len\n        ? this.uint32(len)._push(utf8.write, len, value)\n        : this._push(writeByte, 1, 0);\n};\n\n/**\n * Forks this writer's state by pushing it to a stack.\n * Calling {@link Writer#reset|reset} or {@link Writer#ldelim|ldelim} resets the writer to the previous state.\n * @returns {Writer} `this`\n */\nWriter.prototype.fork = function fork() {\n    this.states = new State(this);\n    this.head = this.tail = new Op(noop, 0, 0);\n    this.len = 0;\n    return this;\n};\n\n/**\n * Resets this instance to the last state.\n * @returns {Writer} `this`\n */\nWriter.prototype.reset = function reset() {\n    if (this.states) {\n        this.head   = this.states.head;\n        this.tail   = this.states.tail;\n        this.len    = this.states.len;\n        this.states = this.states.next;\n    } else {\n        this.head = this.tail = new Op(noop, 0, 0);\n        this.len  = 0;\n    }\n    return this;\n};\n\n/**\n * Resets to the last state and appends the fork state's current write length as a varint followed by its operations.\n * @returns {Writer} `this`\n */\nWriter.prototype.ldelim = function ldelim() {\n    var head = this.head,\n        tail = this.tail,\n        len  = this.len;\n    this.reset().uint32(len);\n    if (len) {\n        this.tail.next = head.next; // skip noop\n        this.tail = tail;\n        this.len += len;\n    }\n    return this;\n};\n\n/**\n * Finishes the write operation.\n * @returns {Uint8Array} Finished buffer\n */\nWriter.prototype.finish = function finish() {\n    var head = this.head.next, // skip noop\n        buf  = this.constructor.alloc(this.len),\n        pos  = 0;\n    while (head) {\n        head.fn(head.val, buf, pos);\n        pos += head.len;\n        head = head.next;\n    }\n    // this.head = this.tail = null;\n    return buf;\n};\n\nWriter._configure = function(BufferWriter_) {\n    BufferWriter = BufferWriter_;\n    Writer.create = create();\n    BufferWriter._configure();\n};\n", "\"use strict\";\nmodule.exports = BufferWriter;\n\n// extends Writer\nvar Writer = require(\"./writer\");\n(BufferWriter.prototype = Object.create(Writer.prototype)).constructor = BufferWriter;\n\nvar util = require(\"./util/minimal\");\n\n/**\n * Constructs a new buffer writer instance.\n * @classdesc Wire format writer using node buffers.\n * @extends Writer\n * @constructor\n */\nfunction BufferWriter() {\n    Writer.call(this);\n}\n\nBufferWriter._configure = function () {\n    /**\n     * Allocates a buffer of the specified size.\n     * @function\n     * @param {number} size Buffer size\n     * @returns {Buffer} Buffer\n     */\n    BufferWriter.alloc = util._Buffer_allocUnsafe;\n\n    BufferWriter.writeBytesBuffer = util.Buffer && util.Buffer.prototype instanceof Uint8Array && util.Buffer.prototype.set.name === \"set\"\n        ? function writeBytesBuffer_set(val, buf, pos) {\n          buf.set(val, pos); // faster than copy (requires node >= 4 where Buffers extend Uint8Array and set is properly inherited)\n          // also works for plain array values\n        }\n        /* istanbul ignore next */\n        : function writeBytesBuffer_copy(val, buf, pos) {\n          if (val.copy) // Buffer values\n            val.copy(buf, pos, 0, val.length);\n          else for (var i = 0; i < val.length;) // plain array values\n            buf[pos++] = val[i++];\n        };\n};\n\n\n/**\n * @override\n */\nBufferWriter.prototype.bytes = function write_bytes_buffer(value) {\n    if (util.isString(value))\n        value = util._Buffer_from(value, \"base64\");\n    var len = value.length >>> 0;\n    this.uint32(len);\n    if (len)\n        this._push(BufferWriter.writeBytesBuffer, len, value);\n    return this;\n};\n\nfunction writeStringBuffer(val, buf, pos) {\n    if (val.length < 40) // plain js is faster for short strings (probably due to redundant assertions)\n        util.utf8.write(val, buf, pos);\n    else if (buf.utf8Write)\n        buf.utf8Write(val, pos);\n    else\n        buf.write(val, pos);\n}\n\n/**\n * @override\n */\nBufferWriter.prototype.string = function write_string_buffer(value) {\n    var len = util.Buffer.byteLength(value);\n    this.uint32(len);\n    if (len)\n        this._push(writeStringBuffer, len, value);\n    return this;\n};\n\n\n/**\n * Finishes the write operation.\n * @name BufferWriter#finish\n * @function\n * @returns {Buffer} Finished buffer\n */\n\nBufferWriter._configure();\n", "\"use strict\";\nmodule.exports = Reader;\n\nvar util      = require(\"./util/minimal\");\n\nvar BufferReader; // cyclic\n\nvar LongBits  = util.LongBits,\n    utf8      = util.utf8;\n\n/* istanbul ignore next */\nfunction indexOutOfRange(reader, writeLength) {\n    return RangeError(\"index out of range: \" + reader.pos + \" + \" + (writeLength || 1) + \" > \" + reader.len);\n}\n\n/**\n * Constructs a new reader instance using the specified buffer.\n * @classdesc Wire format reader using `Uint8Array` if available, otherwise `Array`.\n * @constructor\n * @param {Uint8Array} buffer Buffer to read from\n */\nfunction Reader(buffer) {\n\n    /**\n     * Read buffer.\n     * @type {Uint8Array}\n     */\n    this.buf = buffer;\n\n    /**\n     * Read buffer position.\n     * @type {number}\n     */\n    this.pos = 0;\n\n    /**\n     * Read buffer length.\n     * @type {number}\n     */\n    this.len = buffer.length;\n}\n\nvar create_array = typeof Uint8Array !== \"undefined\"\n    ? function create_typed_array(buffer) {\n        if (buffer instanceof Uint8Array || Array.isArray(buffer))\n            return new Reader(buffer);\n        throw Error(\"illegal buffer\");\n    }\n    /* istanbul ignore next */\n    : function create_array(buffer) {\n        if (Array.isArray(buffer))\n            return new Reader(buffer);\n        throw Error(\"illegal buffer\");\n    };\n\nvar create = function create() {\n    return util.Buffer\n        ? function create_buffer_setup(buffer) {\n            return (Reader.create = function create_buffer(buffer) {\n                return util.Buffer.isBuffer(buffer)\n                    ? new BufferReader(buffer)\n                    /* istanbul ignore next */\n                    : create_array(buffer);\n            })(buffer);\n        }\n        /* istanbul ignore next */\n        : create_array;\n};\n\n/**\n * Creates a new reader using the specified buffer.\n * @function\n * @param {Uint8Array|Buffer} buffer Buffer to read from\n * @returns {Reader|BufferReader} A {@link BufferReader} if `buffer` is a Buffer, otherwise a {@link Reader}\n * @throws {Error} If `buffer` is not a valid buffer\n */\nReader.create = create();\n\nReader.prototype._slice = util.Array.prototype.subarray || /* istanbul ignore next */ util.Array.prototype.slice;\n\n/**\n * Reads a varint as an unsigned 32 bit value.\n * @function\n * @returns {number} Value read\n */\nReader.prototype.uint32 = (function read_uint32_setup() {\n    var value = 4294967295; // optimizer type-hint, tends to deopt otherwise (?!)\n    return function read_uint32() {\n        value = (         this.buf[this.pos] & 127       ) >>> 0; if (this.buf[this.pos++] < 128) return value;\n        value = (value | (this.buf[this.pos] & 127) <<  7) >>> 0; if (this.buf[this.pos++] < 128) return value;\n        value = (value | (this.buf[this.pos] & 127) << 14) >>> 0; if (this.buf[this.pos++] < 128) return value;\n        value = (value | (this.buf[this.pos] & 127) << 21) >>> 0; if (this.buf[this.pos++] < 128) return value;\n        value = (value | (this.buf[this.pos] &  15) << 28) >>> 0; if (this.buf[this.pos++] < 128) return value;\n\n        /* istanbul ignore if */\n        if ((this.pos += 5) > this.len) {\n            this.pos = this.len;\n            throw indexOutOfRange(this, 10);\n        }\n        return value;\n    };\n})();\n\n/**\n * Reads a varint as a signed 32 bit value.\n * @returns {number} Value read\n */\nReader.prototype.int32 = function read_int32() {\n    return this.uint32() | 0;\n};\n\n/**\n * Reads a zig-zag encoded varint as a signed 32 bit value.\n * @returns {number} Value read\n */\nReader.prototype.sint32 = function read_sint32() {\n    var value = this.uint32();\n    return value >>> 1 ^ -(value & 1) | 0;\n};\n\n/* eslint-disable no-invalid-this */\n\nfunction readLongVarint() {\n    // tends to deopt with local vars for octet etc.\n    var bits = new LongBits(0, 0);\n    var i = 0;\n    if (this.len - this.pos > 4) { // fast route (lo)\n        for (; i < 4; ++i) {\n            // 1st..4th\n            bits.lo = (bits.lo | (this.buf[this.pos] & 127) << i * 7) >>> 0;\n            if (this.buf[this.pos++] < 128)\n                return bits;\n        }\n        // 5th\n        bits.lo = (bits.lo | (this.buf[this.pos] & 127) << 28) >>> 0;\n        bits.hi = (bits.hi | (this.buf[this.pos] & 127) >>  4) >>> 0;\n        if (this.buf[this.pos++] < 128)\n            return bits;\n        i = 0;\n    } else {\n        for (; i < 3; ++i) {\n            /* istanbul ignore if */\n            if (this.pos >= this.len)\n                throw indexOutOfRange(this);\n            // 1st..3th\n            bits.lo = (bits.lo | (this.buf[this.pos] & 127) << i * 7) >>> 0;\n            if (this.buf[this.pos++] < 128)\n                return bits;\n        }\n        // 4th\n        bits.lo = (bits.lo | (this.buf[this.pos++] & 127) << i * 7) >>> 0;\n        return bits;\n    }\n    if (this.len - this.pos > 4) { // fast route (hi)\n        for (; i < 5; ++i) {\n            // 6th..10th\n            bits.hi = (bits.hi | (this.buf[this.pos] & 127) << i * 7 + 3) >>> 0;\n            if (this.buf[this.pos++] < 128)\n                return bits;\n        }\n    } else {\n        for (; i < 5; ++i) {\n            /* istanbul ignore if */\n            if (this.pos >= this.len)\n                throw indexOutOfRange(this);\n            // 6th..10th\n            bits.hi = (bits.hi | (this.buf[this.pos] & 127) << i * 7 + 3) >>> 0;\n            if (this.buf[this.pos++] < 128)\n                return bits;\n        }\n    }\n    /* istanbul ignore next */\n    throw Error(\"invalid varint encoding\");\n}\n\n/* eslint-enable no-invalid-this */\n\n/**\n * Reads a varint as a signed 64 bit value.\n * @name Reader#int64\n * @function\n * @returns {Long} Value read\n */\n\n/**\n * Reads a varint as an unsigned 64 bit value.\n * @name Reader#uint64\n * @function\n * @returns {Long} Value read\n */\n\n/**\n * Reads a zig-zag encoded varint as a signed 64 bit value.\n * @name Reader#sint64\n * @function\n * @returns {Long} Value read\n */\n\n/**\n * Reads a varint as a boolean.\n * @returns {boolean} Value read\n */\nReader.prototype.bool = function read_bool() {\n    return this.uint32() !== 0;\n};\n\nfunction readFixed32_end(buf, end) { // note that this uses `end`, not `pos`\n    return (buf[end - 4]\n          | buf[end - 3] << 8\n          | buf[end - 2] << 16\n          | buf[end - 1] << 24) >>> 0;\n}\n\n/**\n * Reads fixed 32 bits as an unsigned 32 bit integer.\n * @returns {number} Value read\n */\nReader.prototype.fixed32 = function read_fixed32() {\n\n    /* istanbul ignore if */\n    if (this.pos + 4 > this.len)\n        throw indexOutOfRange(this, 4);\n\n    return readFixed32_end(this.buf, this.pos += 4);\n};\n\n/**\n * Reads fixed 32 bits as a signed 32 bit integer.\n * @returns {number} Value read\n */\nReader.prototype.sfixed32 = function read_sfixed32() {\n\n    /* istanbul ignore if */\n    if (this.pos + 4 > this.len)\n        throw indexOutOfRange(this, 4);\n\n    return readFixed32_end(this.buf, this.pos += 4) | 0;\n};\n\n/* eslint-disable no-invalid-this */\n\nfunction readFixed64(/* this: Reader */) {\n\n    /* istanbul ignore if */\n    if (this.pos + 8 > this.len)\n        throw indexOutOfRange(this, 8);\n\n    return new LongBits(readFixed32_end(this.buf, this.pos += 4), readFixed32_end(this.buf, this.pos += 4));\n}\n\n/* eslint-enable no-invalid-this */\n\n/**\n * Reads fixed 64 bits.\n * @name Reader#fixed64\n * @function\n * @returns {Long} Value read\n */\n\n/**\n * Reads zig-zag encoded fixed 64 bits.\n * @name Reader#sfixed64\n * @function\n * @returns {Long} Value read\n */\n\n/**\n * Reads a float (32 bit) as a number.\n * @function\n * @returns {number} Value read\n */\nReader.prototype.float = function read_float() {\n\n    /* istanbul ignore if */\n    if (this.pos + 4 > this.len)\n        throw indexOutOfRange(this, 4);\n\n    var value = util.float.readFloatLE(this.buf, this.pos);\n    this.pos += 4;\n    return value;\n};\n\n/**\n * Reads a double (64 bit float) as a number.\n * @function\n * @returns {number} Value read\n */\nReader.prototype.double = function read_double() {\n\n    /* istanbul ignore if */\n    if (this.pos + 8 > this.len)\n        throw indexOutOfRange(this, 4);\n\n    var value = util.float.readDoubleLE(this.buf, this.pos);\n    this.pos += 8;\n    return value;\n};\n\n/**\n * Reads a sequence of bytes preceeded by its length as a varint.\n * @returns {Uint8Array} Value read\n */\nReader.prototype.bytes = function read_bytes() {\n    var length = this.uint32(),\n        start  = this.pos,\n        end    = this.pos + length;\n\n    /* istanbul ignore if */\n    if (end > this.len)\n        throw indexOutOfRange(this, length);\n\n    this.pos += length;\n    if (Array.isArray(this.buf)) // plain array\n        return this.buf.slice(start, end);\n    return start === end // fix for IE 10/Win8 and others' subarray returning array of size 1\n        ? new this.buf.constructor(0)\n        : this._slice.call(this.buf, start, end);\n};\n\n/**\n * Reads a string preceeded by its byte length as a varint.\n * @returns {string} Value read\n */\nReader.prototype.string = function read_string() {\n    var bytes = this.bytes();\n    return utf8.read(bytes, 0, bytes.length);\n};\n\n/**\n * Skips the specified number of bytes if specified, otherwise skips a varint.\n * @param {number} [length] Length if known, otherwise a varint is assumed\n * @returns {Reader} `this`\n */\nReader.prototype.skip = function skip(length) {\n    if (typeof length === \"number\") {\n        /* istanbul ignore if */\n        if (this.pos + length > this.len)\n            throw indexOutOfRange(this, length);\n        this.pos += length;\n    } else {\n        do {\n            /* istanbul ignore if */\n            if (this.pos >= this.len)\n                throw indexOutOfRange(this);\n        } while (this.buf[this.pos++] & 128);\n    }\n    return this;\n};\n\n/**\n * Skips the next element of the specified wire type.\n * @param {number} wireType Wire type received\n * @returns {Reader} `this`\n */\nReader.prototype.skipType = function(wireType) {\n    switch (wireType) {\n        case 0:\n            this.skip();\n            break;\n        case 1:\n            this.skip(8);\n            break;\n        case 2:\n            this.skip(this.uint32());\n            break;\n        case 3:\n            while ((wireType = this.uint32() & 7) !== 4) {\n                this.skipType(wireType);\n            }\n            break;\n        case 5:\n            this.skip(4);\n            break;\n\n        /* istanbul ignore next */\n        default:\n            throw Error(\"invalid wire type \" + wireType + \" at offset \" + this.pos);\n    }\n    return this;\n};\n\nReader._configure = function(BufferReader_) {\n    BufferReader = BufferReader_;\n    Reader.create = create();\n    BufferReader._configure();\n\n    var fn = util.Long ? \"toLong\" : /* istanbul ignore next */ \"toNumber\";\n    util.merge(Reader.prototype, {\n\n        int64: function read_int64() {\n            return readLongVarint.call(this)[fn](false);\n        },\n\n        uint64: function read_uint64() {\n            return readLongVarint.call(this)[fn](true);\n        },\n\n        sint64: function read_sint64() {\n            return readLongVarint.call(this).zzDecode()[fn](false);\n        },\n\n        fixed64: function read_fixed64() {\n            return readFixed64.call(this)[fn](true);\n        },\n\n        sfixed64: function read_sfixed64() {\n            return readFixed64.call(this)[fn](false);\n        }\n\n    });\n};\n", "\"use strict\";\nmodule.exports = BufferReader;\n\n// extends Reader\nvar Reader = require(\"./reader\");\n(BufferReader.prototype = Object.create(Reader.prototype)).constructor = BufferReader;\n\nvar util = require(\"./util/minimal\");\n\n/**\n * Constructs a new buffer reader instance.\n * @classdesc Wire format reader using node buffers.\n * @extends Reader\n * @constructor\n * @param {Buffer} buffer Buffer to read from\n */\nfunction BufferReader(buffer) {\n    Reader.call(this, buffer);\n\n    /**\n     * Read buffer.\n     * @name BufferReader#buf\n     * @type {Buffer}\n     */\n}\n\nBufferReader._configure = function () {\n    /* istanbul ignore else */\n    if (util.Buffer)\n        BufferReader.prototype._slice = util.Buffer.prototype.slice;\n};\n\n\n/**\n * @override\n */\nBufferReader.prototype.string = function read_string_buffer() {\n    var len = this.uint32(); // modifies pos\n    return this.buf.utf8Slice\n        ? this.buf.utf8Slice(this.pos, this.pos = Math.min(this.pos + len, this.len))\n        : this.buf.toString(\"utf-8\", this.pos, this.pos = Math.min(this.pos + len, this.len));\n};\n\n/**\n * Reads a sequence of bytes preceeded by its length as a varint.\n * @name BufferReader#bytes\n * @function\n * @returns {Buffer} Value read\n */\n\nBufferReader._configure();\n", "\"use strict\";\nmodule.exports = Service;\n\nvar util = require(\"../util/minimal\");\n\n// Extends EventEmitter\n(Service.prototype = Object.create(util.EventEmitter.prototype)).constructor = Service;\n\n/**\n * A service method callback as used by {@link rpc.ServiceMethod|ServiceMethod}.\n *\n * Differs from {@link RPCImplCallback} in that it is an actual callback of a service method which may not return `response = null`.\n * @typedef rpc.ServiceMethodCallback\n * @template TRes extends Message<TRes>\n * @type {function}\n * @param {Error|null} error Error, if any\n * @param {TRes} [response] Response message\n * @returns {undefined}\n */\n\n/**\n * A service method part of a {@link rpc.Service} as created by {@link Service.create}.\n * @typedef rpc.ServiceMethod\n * @template TReq extends Message<TReq>\n * @template TRes extends Message<TRes>\n * @type {function}\n * @param {TReq|Properties<TReq>} request Request message or plain object\n * @param {rpc.ServiceMethodCallback<TRes>} [callback] Node-style callback called with the error, if any, and the response message\n * @returns {Promise<Message<TRes>>} Promise if `callback` has been omitted, otherwise `undefined`\n */\n\n/**\n * Constructs a new RPC service instance.\n * @classdesc An RPC service as returned by {@link Service#create}.\n * @exports rpc.Service\n * @extends util.EventEmitter\n * @constructor\n * @param {RPCImpl} rpcImpl RPC implementation\n * @param {boolean} [requestDelimited=false] Whether requests are length-delimited\n * @param {boolean} [responseDelimited=false] Whether responses are length-delimited\n */\nfunction Service(rpcImpl, requestDelimited, responseDelimited) {\n\n    if (typeof rpcImpl !== \"function\")\n        throw TypeError(\"rpcImpl must be a function\");\n\n    util.EventEmitter.call(this);\n\n    /**\n     * RPC implementation. Becomes `null` once the service is ended.\n     * @type {RPCImpl|null}\n     */\n    this.rpcImpl = rpcImpl;\n\n    /**\n     * Whether requests are length-delimited.\n     * @type {boolean}\n     */\n    this.requestDelimited = Boolean(requestDelimited);\n\n    /**\n     * Whether responses are length-delimited.\n     * @type {boolean}\n     */\n    this.responseDelimited = Boolean(responseDelimited);\n}\n\n/**\n * Calls a service method through {@link rpc.Service#rpcImpl|rpcImpl}.\n * @param {Method|rpc.ServiceMethod<TReq,TRes>} method Reflected or static method\n * @param {Constructor<TReq>} requestCtor Request constructor\n * @param {Constructor<TRes>} responseCtor Response constructor\n * @param {TReq|Properties<TReq>} request Request message or plain object\n * @param {rpc.ServiceMethodCallback<TRes>} callback Service callback\n * @returns {undefined}\n * @template TReq extends Message<TReq>\n * @template TRes extends Message<TRes>\n */\nService.prototype.rpcCall = function rpcCall(method, requestCtor, responseCtor, request, callback) {\n\n    if (!request)\n        throw TypeError(\"request must be specified\");\n\n    var self = this;\n    if (!callback)\n        return util.asPromise(rpcCall, self, method, requestCtor, responseCtor, request);\n\n    if (!self.rpcImpl) {\n        setTimeout(function() { callback(Error(\"already ended\")); }, 0);\n        return undefined;\n    }\n\n    try {\n        return self.rpcImpl(\n            method,\n            requestCtor[self.requestDelimited ? \"encodeDelimited\" : \"encode\"](request).finish(),\n            function rpcCallback(err, response) {\n\n                if (err) {\n                    self.emit(\"error\", err, method);\n                    return callback(err);\n                }\n\n                if (response === null) {\n                    self.end(/* endedByRPC */ true);\n                    return undefined;\n                }\n\n                if (!(response instanceof responseCtor)) {\n                    try {\n                        response = responseCtor[self.responseDelimited ? \"decodeDelimited\" : \"decode\"](response);\n                    } catch (err) {\n                        self.emit(\"error\", err, method);\n                        return callback(err);\n                    }\n                }\n\n                self.emit(\"data\", response, method);\n                return callback(null, response);\n            }\n        );\n    } catch (err) {\n        self.emit(\"error\", err, method);\n        setTimeout(function() { callback(err); }, 0);\n        return undefined;\n    }\n};\n\n/**\n * Ends this service and emits the `end` event.\n * @param {boolean} [endedByRPC=false] Whether the service has been ended by the RPC implementation.\n * @returns {rpc.Service} `this`\n */\nService.prototype.end = function end(endedByRPC) {\n    if (this.rpcImpl) {\n        if (!endedByRPC) // signal end to rpcImpl\n            this.rpcImpl(null, null, null);\n        this.rpcImpl = null;\n        this.emit(\"end\").off();\n    }\n    return this;\n};\n", "\"use strict\";\n\n/**\n * Streaming RPC helpers.\n * @namespace\n */\nvar rpc = exports;\n\n/**\n * RPC implementation passed to {@link Service#create} performing a service request on network level, i.e. by utilizing http requests or websockets.\n * @typedef RPCImpl\n * @type {function}\n * @param {Method|rpc.ServiceMethod<Message<{}>,Message<{}>>} method Reflected or static method being called\n * @param {Uint8Array} requestData Request data\n * @param {RPCImplCallback} callback Callback function\n * @returns {undefined}\n * @example\n * function rpcImpl(method, requestData, callback) {\n *     if (protobuf.util.lcFirst(method.name) !== \"myMethod\") // compatible with static code\n *         throw Error(\"no such method\");\n *     asynchronouslyObtainAResponse(requestData, function(err, responseData) {\n *         callback(err, responseData);\n *     });\n * }\n */\n\n/**\n * Node-style callback as used by {@link RPCImpl}.\n * @typedef RPCImplCallback\n * @type {function}\n * @param {Error|null} error Error, if any, otherwise `null`\n * @param {Uint8Array|null} [response] Response data or `null` to signal end of stream, if there hasn't been an error\n * @returns {undefined}\n */\n\nrpc.Service = require(\"./rpc/service\");\n", "\"use strict\";\nmodule.exports = {};\n\n/**\n * Named roots.\n * This is where pbjs stores generated structures (the option `-r, --root` specifies a name).\n * Can also be used manually to make roots available accross modules.\n * @name roots\n * @type {Object.<string,Root>}\n * @example\n * // pbjs -r myroot -o compiled.js ...\n *\n * // in another module:\n * require(\"./compiled.js\");\n *\n * // in any subsequent module:\n * var root = protobuf.roots[\"myroot\"];\n */\n", "\"use strict\";\nvar protobuf = exports;\n\n/**\n * Build type, one of `\"full\"`, `\"light\"` or `\"minimal\"`.\n * @name build\n * @type {string}\n * @const\n */\nprotobuf.build = \"minimal\";\n\n// Serialization\nprotobuf.Writer       = require(\"./writer\");\nprotobuf.BufferWriter = require(\"./writer_buffer\");\nprotobuf.Reader       = require(\"./reader\");\nprotobuf.BufferReader = require(\"./reader_buffer\");\n\n// Utility\nprotobuf.util         = require(\"./util/minimal\");\nprotobuf.rpc          = require(\"./rpc\");\nprotobuf.roots        = require(\"./roots\");\nprotobuf.configure    = configure;\n\n/* istanbul ignore next */\n/**\n * Reconfigures the library according to the environment.\n * @returns {undefined}\n */\nfunction configure() {\n    protobuf.util._configure();\n    protobuf.Writer._configure(protobuf.BufferWriter);\n    protobuf.Reader._configure(protobuf.BufferReader);\n}\n\n// Set up buffer utility according to the environment\nconfigure();\n", "// minimal library entry point.\n\n\"use strict\";\nmodule.exports = require(\"./src/index-minimal\");\n", "\"use strict\";var $protobuf=_interopRequireWildcard(require(\"protobufjs/minimal\"));Object.defineProperty(exports,\"__esModule\",{value:!0}),exports.default=exports.google=exports.proto=void 0;function _getRequireWildcardCache(e){if(\"function\"!=typeof WeakMap)return null;var o=new WeakMap,t=new WeakMap;return(_getRequireWildcardCache=function(e){return e?t:o})(e)}function _interopRequireWildcard(e,o){if(!o&&e&&e.__esModule)return e;if(null===e||\"object\"!=typeof e&&\"function\"!=typeof e)return{default:e};var t=_getRequireWildcardCache(o);if(t&&t.has(e))return t.get(e);var n={},r=Object.defineProperty&&Object.getOwnPropertyDescriptor;for(var i in e)if(\"default\"!=i&&Object.prototype.hasOwnProperty.call(e,i)){var d=r?Object.getOwnPropertyDescriptor(e,i):null;d&&(d.get||d.set)?Object.defineProperty(n,i,d):n[i]=e[i]}return n.default=e,t&&t.set(e,n),n}const $Reader=$protobuf.Reader,$Writer=$protobuf.Writer,$util=$protobuf.util,$root=$protobuf.roots[\"default\"]||($protobuf.roots[\"default\"]={});exports.default=$root;const proto=$root.proto=(()=>{const e={TokenUnitBalance:function(){function e(e){if(e)for(var o=Object.keys(e),t=0;t<o.length;++t)null!=e[o[t]]&&(this[o[t]]=e[o[t]])}return e.prototype.tokenId=null,e.prototype.balance=$util.Long?$util.Long.fromBits(0,0,!0):0,e.create=function(o){return new e(o)},e.encode=function(e,o){return o||(o=$Writer.create()),null!=e.tokenId&&Object.hasOwnProperty.call(e,\"tokenId\")&&$root.proto.TokenID.encode(e.tokenId,o.uint32(10).fork()).ldelim(),null!=e.balance&&Object.hasOwnProperty.call(e,\"balance\")&&o.uint32(16).uint64(e.balance),o},e.decode=function(e,o){e instanceof $Reader||(e=$Reader.create(e));for(var n=void 0===o?e.len:e.pos+o,i=new $root.proto.TokenUnitBalance,d;e.pos<n;)switch(d=e.uint32(),d>>>3){case 1:i.tokenId=$root.proto.TokenID.decode(e,e.uint32());break;case 2:i.balance=e.uint64();break;default:e.skipType(7&d);}return i},e}(),SingleAccountBalances:function(){function e(e){if(this.tokenUnitBalances=[],e)for(var o=Object.keys(e),t=0;t<o.length;++t)null!=e[o[t]]&&(this[o[t]]=e[o[t]])}return e.prototype.accountID=null,e.prototype.hbarBalance=$util.Long?$util.Long.fromBits(0,0,!0):0,e.prototype.tokenUnitBalances=$util.emptyArray,e.create=function(o){return new e(o)},e.encode=function(e,o){if(o||(o=$Writer.create()),null!=e.accountID&&Object.hasOwnProperty.call(e,\"accountID\")&&$root.proto.AccountID.encode(e.accountID,o.uint32(10).fork()).ldelim(),null!=e.hbarBalance&&Object.hasOwnProperty.call(e,\"hbarBalance\")&&o.uint32(16).uint64(e.hbarBalance),null!=e.tokenUnitBalances&&e.tokenUnitBalances.length)for(var t=0;t<e.tokenUnitBalances.length;++t)$root.proto.TokenUnitBalance.encode(e.tokenUnitBalances[t],o.uint32(26).fork()).ldelim();return o},e.decode=function(e,o){e instanceof $Reader||(e=$Reader.create(e));for(var n=void 0===o?e.len:e.pos+o,i=new $root.proto.SingleAccountBalances,d;e.pos<n;)switch(d=e.uint32(),d>>>3){case 1:i.accountID=$root.proto.AccountID.decode(e,e.uint32());break;case 2:i.hbarBalance=e.uint64();break;case 3:i.tokenUnitBalances&&i.tokenUnitBalances.length||(i.tokenUnitBalances=[]),i.tokenUnitBalances.push($root.proto.TokenUnitBalance.decode(e,e.uint32()));break;default:e.skipType(7&d);}return i},e}(),AllAccountBalances:function(){function e(e){if(this.allAccounts=[],e)for(var o=Object.keys(e),t=0;t<o.length;++t)null!=e[o[t]]&&(this[o[t]]=e[o[t]])}return e.prototype.consensusTimestamp=null,e.prototype.allAccounts=$util.emptyArray,e.create=function(o){return new e(o)},e.encode=function(e,o){if(o||(o=$Writer.create()),null!=e.consensusTimestamp&&Object.hasOwnProperty.call(e,\"consensusTimestamp\")&&$root.proto.Timestamp.encode(e.consensusTimestamp,o.uint32(10).fork()).ldelim(),null!=e.allAccounts&&e.allAccounts.length)for(var t=0;t<e.allAccounts.length;++t)$root.proto.SingleAccountBalances.encode(e.allAccounts[t],o.uint32(18).fork()).ldelim();return o},e.decode=function(e,o){e instanceof $Reader||(e=$Reader.create(e));for(var n=void 0===o?e.len:e.pos+o,i=new $root.proto.AllAccountBalances,d;e.pos<n;)switch(d=e.uint32(),d>>>3){case 1:i.consensusTimestamp=$root.proto.Timestamp.decode(e,e.uint32());break;case 2:i.allAccounts&&i.allAccounts.length||(i.allAccounts=[]),i.allAccounts.push($root.proto.SingleAccountBalances.decode(e,e.uint32()));break;default:e.skipType(7&d);}return i},e}(),ShardID:function(){function e(e){if(e)for(var o=Object.keys(e),t=0;t<o.length;++t)null!=e[o[t]]&&(this[o[t]]=e[o[t]])}return e.prototype.shardNum=$util.Long?$util.Long.fromBits(0,0,!1):0,e.create=function(o){return new e(o)},e.encode=function(e,o){return o||(o=$Writer.create()),null!=e.shardNum&&Object.hasOwnProperty.call(e,\"shardNum\")&&o.uint32(8).int64(e.shardNum),o},e.decode=function(e,o){e instanceof $Reader||(e=$Reader.create(e));for(var n=void 0===o?e.len:e.pos+o,i=new $root.proto.ShardID,d;e.pos<n;)switch(d=e.uint32(),d>>>3){case 1:i.shardNum=e.int64();break;default:e.skipType(7&d);}return i},e}(),RealmID:function(){function e(e){if(e)for(var o=Object.keys(e),t=0;t<o.length;++t)null!=e[o[t]]&&(this[o[t]]=e[o[t]])}return e.prototype.shardNum=$util.Long?$util.Long.fromBits(0,0,!1):0,e.prototype.realmNum=$util.Long?$util.Long.fromBits(0,0,!1):0,e.create=function(o){return new e(o)},e.encode=function(e,o){return o||(o=$Writer.create()),null!=e.shardNum&&Object.hasOwnProperty.call(e,\"shardNum\")&&o.uint32(8).int64(e.shardNum),null!=e.realmNum&&Object.hasOwnProperty.call(e,\"realmNum\")&&o.uint32(16).int64(e.realmNum),o},e.decode=function(e,o){e instanceof $Reader||(e=$Reader.create(e));for(var n=void 0===o?e.len:e.pos+o,i=new $root.proto.RealmID,d;e.pos<n;)switch(d=e.uint32(),d>>>3){case 1:i.shardNum=e.int64();break;case 2:i.realmNum=e.int64();break;default:e.skipType(7&d);}return i},e}(),AccountID:function(){function e(e){if(e)for(var o=Object.keys(e),t=0;t<o.length;++t)null!=e[o[t]]&&(this[o[t]]=e[o[t]])}e.prototype.shardNum=$util.Long?$util.Long.fromBits(0,0,!1):0,e.prototype.realmNum=$util.Long?$util.Long.fromBits(0,0,!1):0,e.prototype.accountNum=null,e.prototype.alias=null;let o;return Object.defineProperty(e.prototype,\"account\",{get:$util.oneOfGetter(o=[\"accountNum\",\"alias\"]),set:$util.oneOfSetter(o)}),e.create=function(o){return new e(o)},e.encode=function(e,o){return o||(o=$Writer.create()),null!=e.shardNum&&Object.hasOwnProperty.call(e,\"shardNum\")&&o.uint32(8).int64(e.shardNum),null!=e.realmNum&&Object.hasOwnProperty.call(e,\"realmNum\")&&o.uint32(16).int64(e.realmNum),null!=e.accountNum&&Object.hasOwnProperty.call(e,\"accountNum\")&&o.uint32(24).int64(e.accountNum),null!=e.alias&&Object.hasOwnProperty.call(e,\"alias\")&&o.uint32(34).bytes(e.alias),o},e.decode=function(e,o){e instanceof $Reader||(e=$Reader.create(e));for(var n=void 0===o?e.len:e.pos+o,i=new $root.proto.AccountID,d;e.pos<n;)switch(d=e.uint32(),d>>>3){case 1:i.shardNum=e.int64();break;case 2:i.realmNum=e.int64();break;case 3:i.accountNum=e.int64();break;case 4:i.alias=e.bytes();break;default:e.skipType(7&d);}return i},e}(),FileID:function(){function e(e){if(e)for(var o=Object.keys(e),t=0;t<o.length;++t)null!=e[o[t]]&&(this[o[t]]=e[o[t]])}return e.prototype.shardNum=$util.Long?$util.Long.fromBits(0,0,!1):0,e.prototype.realmNum=$util.Long?$util.Long.fromBits(0,0,!1):0,e.prototype.fileNum=$util.Long?$util.Long.fromBits(0,0,!1):0,e.create=function(o){return new e(o)},e.encode=function(e,o){return o||(o=$Writer.create()),null!=e.shardNum&&Object.hasOwnProperty.call(e,\"shardNum\")&&o.uint32(8).int64(e.shardNum),null!=e.realmNum&&Object.hasOwnProperty.call(e,\"realmNum\")&&o.uint32(16).int64(e.realmNum),null!=e.fileNum&&Object.hasOwnProperty.call(e,\"fileNum\")&&o.uint32(24).int64(e.fileNum),o},e.decode=function(e,o){e instanceof $Reader||(e=$Reader.create(e));for(var n=void 0===o?e.len:e.pos+o,i=new $root.proto.FileID,d;e.pos<n;)switch(d=e.uint32(),d>>>3){case 1:i.shardNum=e.int64();break;case 2:i.realmNum=e.int64();break;case 3:i.fileNum=e.int64();break;default:e.skipType(7&d);}return i},e}(),ContractID:function(){function e(e){if(e)for(var o=Object.keys(e),t=0;t<o.length;++t)null!=e[o[t]]&&(this[o[t]]=e[o[t]])}return e.prototype.shardNum=$util.Long?$util.Long.fromBits(0,0,!1):0,e.prototype.realmNum=$util.Long?$util.Long.fromBits(0,0,!1):0,e.prototype.contractNum=$util.Long?$util.Long.fromBits(0,0,!1):0,e.create=function(o){return new e(o)},e.encode=function(e,o){return o||(o=$Writer.create()),null!=e.shardNum&&Object.hasOwnProperty.call(e,\"shardNum\")&&o.uint32(8).int64(e.shardNum),null!=e.realmNum&&Object.hasOwnProperty.call(e,\"realmNum\")&&o.uint32(16).int64(e.realmNum),null!=e.contractNum&&Object.hasOwnProperty.call(e,\"contractNum\")&&o.uint32(24).int64(e.contractNum),o},e.decode=function(e,o){e instanceof $Reader||(e=$Reader.create(e));for(var n=void 0===o?e.len:e.pos+o,i=new $root.proto.ContractID,d;e.pos<n;)switch(d=e.uint32(),d>>>3){case 1:i.shardNum=e.int64();break;case 2:i.realmNum=e.int64();break;case 3:i.contractNum=e.int64();break;default:e.skipType(7&d);}return i},e}(),TransactionID:function(){function e(e){if(e)for(var o=Object.keys(e),t=0;t<o.length;++t)null!=e[o[t]]&&(this[o[t]]=e[o[t]])}return e.prototype.transactionValidStart=null,e.prototype.accountID=null,e.prototype.scheduled=!1,e.prototype.nonce=0,e.create=function(o){return new e(o)},e.encode=function(e,o){return o||(o=$Writer.create()),null!=e.transactionValidStart&&Object.hasOwnProperty.call(e,\"transactionValidStart\")&&$root.proto.Timestamp.encode(e.transactionValidStart,o.uint32(10).fork()).ldelim(),null!=e.accountID&&Object.hasOwnProperty.call(e,\"accountID\")&&$root.proto.AccountID.encode(e.accountID,o.uint32(18).fork()).ldelim(),null!=e.scheduled&&Object.hasOwnProperty.call(e,\"scheduled\")&&o.uint32(24).bool(e.scheduled),null!=e.nonce&&Object.hasOwnProperty.call(e,\"nonce\")&&o.uint32(32).int32(e.nonce),o},e.decode=function(e,o){e instanceof $Reader||(e=$Reader.create(e));for(var n=void 0===o?e.len:e.pos+o,i=new $root.proto.TransactionID,d;e.pos<n;)switch(d=e.uint32(),d>>>3){case 1:i.transactionValidStart=$root.proto.Timestamp.decode(e,e.uint32());break;case 2:i.accountID=$root.proto.AccountID.decode(e,e.uint32());break;case 3:i.scheduled=e.bool();break;case 4:i.nonce=e.int32();break;default:e.skipType(7&d);}return i},e}(),AccountAmount:function(){function e(e){if(e)for(var o=Object.keys(e),t=0;t<o.length;++t)null!=e[o[t]]&&(this[o[t]]=e[o[t]])}return e.prototype.accountID=null,e.prototype.amount=$util.Long?$util.Long.fromBits(0,0,!1):0,e.create=function(o){return new e(o)},e.encode=function(e,o){return o||(o=$Writer.create()),null!=e.accountID&&Object.hasOwnProperty.call(e,\"accountID\")&&$root.proto.AccountID.encode(e.accountID,o.uint32(10).fork()).ldelim(),null!=e.amount&&Object.hasOwnProperty.call(e,\"amount\")&&o.uint32(16).sint64(e.amount),o},e.decode=function(e,o){e instanceof $Reader||(e=$Reader.create(e));for(var n=void 0===o?e.len:e.pos+o,i=new $root.proto.AccountAmount,d;e.pos<n;)switch(d=e.uint32(),d>>>3){case 1:i.accountID=$root.proto.AccountID.decode(e,e.uint32());break;case 2:i.amount=e.sint64();break;default:e.skipType(7&d);}return i},e}(),TransferList:function(){function e(e){if(this.accountAmounts=[],e)for(var o=Object.keys(e),t=0;t<o.length;++t)null!=e[o[t]]&&(this[o[t]]=e[o[t]])}return e.prototype.accountAmounts=$util.emptyArray,e.create=function(o){return new e(o)},e.encode=function(e,o){if(o||(o=$Writer.create()),null!=e.accountAmounts&&e.accountAmounts.length)for(var t=0;t<e.accountAmounts.length;++t)$root.proto.AccountAmount.encode(e.accountAmounts[t],o.uint32(10).fork()).ldelim();return o},e.decode=function(e,o){e instanceof $Reader||(e=$Reader.create(e));for(var n=void 0===o?e.len:e.pos+o,i=new $root.proto.TransferList,d;e.pos<n;)switch(d=e.uint32(),d>>>3){case 1:i.accountAmounts&&i.accountAmounts.length||(i.accountAmounts=[]),i.accountAmounts.push($root.proto.AccountAmount.decode(e,e.uint32()));break;default:e.skipType(7&d);}return i},e}(),NftTransfer:function(){function e(e){if(e)for(var o=Object.keys(e),t=0;t<o.length;++t)null!=e[o[t]]&&(this[o[t]]=e[o[t]])}return e.prototype.senderAccountID=null,e.prototype.receiverAccountID=null,e.prototype.serialNumber=$util.Long?$util.Long.fromBits(0,0,!1):0,e.create=function(o){return new e(o)},e.encode=function(e,o){return o||(o=$Writer.create()),null!=e.senderAccountID&&Object.hasOwnProperty.call(e,\"senderAccountID\")&&$root.proto.AccountID.encode(e.senderAccountID,o.uint32(10).fork()).ldelim(),null!=e.receiverAccountID&&Object.hasOwnProperty.call(e,\"receiverAccountID\")&&$root.proto.AccountID.encode(e.receiverAccountID,o.uint32(18).fork()).ldelim(),null!=e.serialNumber&&Object.hasOwnProperty.call(e,\"serialNumber\")&&o.uint32(24).int64(e.serialNumber),o},e.decode=function(e,o){e instanceof $Reader||(e=$Reader.create(e));for(var n=void 0===o?e.len:e.pos+o,i=new $root.proto.NftTransfer,d;e.pos<n;)switch(d=e.uint32(),d>>>3){case 1:i.senderAccountID=$root.proto.AccountID.decode(e,e.uint32());break;case 2:i.receiverAccountID=$root.proto.AccountID.decode(e,e.uint32());break;case 3:i.serialNumber=e.int64();break;default:e.skipType(7&d);}return i},e}(),TokenTransferList:function(){function e(e){if(this.transfers=[],this.nftTransfers=[],e)for(var o=Object.keys(e),t=0;t<o.length;++t)null!=e[o[t]]&&(this[o[t]]=e[o[t]])}return e.prototype.token=null,e.prototype.transfers=$util.emptyArray,e.prototype.nftTransfers=$util.emptyArray,e.create=function(o){return new e(o)},e.encode=function(e,o){if(o||(o=$Writer.create()),null!=e.token&&Object.hasOwnProperty.call(e,\"token\")&&$root.proto.TokenID.encode(e.token,o.uint32(10).fork()).ldelim(),null!=e.transfers&&e.transfers.length)for(var t=0;t<e.transfers.length;++t)$root.proto.AccountAmount.encode(e.transfers[t],o.uint32(18).fork()).ldelim();if(null!=e.nftTransfers&&e.nftTransfers.length)for(var t=0;t<e.nftTransfers.length;++t)$root.proto.NftTransfer.encode(e.nftTransfers[t],o.uint32(26).fork()).ldelim();return o},e.decode=function(e,o){e instanceof $Reader||(e=$Reader.create(e));for(var n=void 0===o?e.len:e.pos+o,i=new $root.proto.TokenTransferList,d;e.pos<n;)switch(d=e.uint32(),d>>>3){case 1:i.token=$root.proto.TokenID.decode(e,e.uint32());break;case 2:i.transfers&&i.transfers.length||(i.transfers=[]),i.transfers.push($root.proto.AccountAmount.decode(e,e.uint32()));break;case 3:i.nftTransfers&&i.nftTransfers.length||(i.nftTransfers=[]),i.nftTransfers.push($root.proto.NftTransfer.decode(e,e.uint32()));break;default:e.skipType(7&d);}return i},e}(),Fraction:function(){function e(e){if(e)for(var o=Object.keys(e),t=0;t<o.length;++t)null!=e[o[t]]&&(this[o[t]]=e[o[t]])}return e.prototype.numerator=$util.Long?$util.Long.fromBits(0,0,!1):0,e.prototype.denominator=$util.Long?$util.Long.fromBits(0,0,!1):0,e.create=function(o){return new e(o)},e.encode=function(e,o){return o||(o=$Writer.create()),null!=e.numerator&&Object.hasOwnProperty.call(e,\"numerator\")&&o.uint32(8).int64(e.numerator),null!=e.denominator&&Object.hasOwnProperty.call(e,\"denominator\")&&o.uint32(16).int64(e.denominator),o},e.decode=function(e,o){e instanceof $Reader||(e=$Reader.create(e));for(var n=void 0===o?e.len:e.pos+o,i=new $root.proto.Fraction,d;e.pos<n;)switch(d=e.uint32(),d>>>3){case 1:i.numerator=e.int64();break;case 2:i.denominator=e.int64();break;default:e.skipType(7&d);}return i},e}(),TopicID:function(){function e(e){if(e)for(var o=Object.keys(e),t=0;t<o.length;++t)null!=e[o[t]]&&(this[o[t]]=e[o[t]])}return e.prototype.shardNum=$util.Long?$util.Long.fromBits(0,0,!1):0,e.prototype.realmNum=$util.Long?$util.Long.fromBits(0,0,!1):0,e.prototype.topicNum=$util.Long?$util.Long.fromBits(0,0,!1):0,e.create=function(o){return new e(o)},e.encode=function(e,o){return o||(o=$Writer.create()),null!=e.shardNum&&Object.hasOwnProperty.call(e,\"shardNum\")&&o.uint32(8).int64(e.shardNum),null!=e.realmNum&&Object.hasOwnProperty.call(e,\"realmNum\")&&o.uint32(16).int64(e.realmNum),null!=e.topicNum&&Object.hasOwnProperty.call(e,\"topicNum\")&&o.uint32(24).int64(e.topicNum),o},e.decode=function(e,o){e instanceof $Reader||(e=$Reader.create(e));for(var n=void 0===o?e.len:e.pos+o,i=new $root.proto.TopicID,d;e.pos<n;)switch(d=e.uint32(),d>>>3){case 1:i.shardNum=e.int64();break;case 2:i.realmNum=e.int64();break;case 3:i.topicNum=e.int64();break;default:e.skipType(7&d);}return i},e}(),TokenID:function(){function e(e){if(e)for(var o=Object.keys(e),t=0;t<o.length;++t)null!=e[o[t]]&&(this[o[t]]=e[o[t]])}return e.prototype.shardNum=$util.Long?$util.Long.fromBits(0,0,!1):0,e.prototype.realmNum=$util.Long?$util.Long.fromBits(0,0,!1):0,e.prototype.tokenNum=$util.Long?$util.Long.fromBits(0,0,!1):0,e.create=function(o){return new e(o)},e.encode=function(e,o){return o||(o=$Writer.create()),null!=e.shardNum&&Object.hasOwnProperty.call(e,\"shardNum\")&&o.uint32(8).int64(e.shardNum),null!=e.realmNum&&Object.hasOwnProperty.call(e,\"realmNum\")&&o.uint32(16).int64(e.realmNum),null!=e.tokenNum&&Object.hasOwnProperty.call(e,\"tokenNum\")&&o.uint32(24).int64(e.tokenNum),o},e.decode=function(e,o){e instanceof $Reader||(e=$Reader.create(e));for(var n=void 0===o?e.len:e.pos+o,i=new $root.proto.TokenID,d;e.pos<n;)switch(d=e.uint32(),d>>>3){case 1:i.shardNum=e.int64();break;case 2:i.realmNum=e.int64();break;case 3:i.tokenNum=e.int64();break;default:e.skipType(7&d);}return i},e}(),ScheduleID:function(){function e(e){if(e)for(var o=Object.keys(e),t=0;t<o.length;++t)null!=e[o[t]]&&(this[o[t]]=e[o[t]])}return e.prototype.shardNum=$util.Long?$util.Long.fromBits(0,0,!1):0,e.prototype.realmNum=$util.Long?$util.Long.fromBits(0,0,!1):0,e.prototype.scheduleNum=$util.Long?$util.Long.fromBits(0,0,!1):0,e.create=function(o){return new e(o)},e.encode=function(e,o){return o||(o=$Writer.create()),null!=e.shardNum&&Object.hasOwnProperty.call(e,\"shardNum\")&&o.uint32(8).int64(e.shardNum),null!=e.realmNum&&Object.hasOwnProperty.call(e,\"realmNum\")&&o.uint32(16).int64(e.realmNum),null!=e.scheduleNum&&Object.hasOwnProperty.call(e,\"scheduleNum\")&&o.uint32(24).int64(e.scheduleNum),o},e.decode=function(e,o){e instanceof $Reader||(e=$Reader.create(e));for(var n=void 0===o?e.len:e.pos+o,i=new $root.proto.ScheduleID,d;e.pos<n;)switch(d=e.uint32(),d>>>3){case 1:i.shardNum=e.int64();break;case 2:i.realmNum=e.int64();break;case 3:i.scheduleNum=e.int64();break;default:e.skipType(7&d);}return i},e}(),TokenType:function(){const e={},o=Object.create(e);return o[e[0]=\"FUNGIBLE_COMMON\"]=0,o[e[1]=\"NON_FUNGIBLE_UNIQUE\"]=1,o}(),SubType:function(){const e={},o=Object.create(e);return o[e[0]=\"DEFAULT\"]=0,o[e[1]=\"TOKEN_FUNGIBLE_COMMON\"]=1,o[e[2]=\"TOKEN_NON_FUNGIBLE_UNIQUE\"]=2,o[e[3]=\"TOKEN_FUNGIBLE_COMMON_WITH_CUSTOM_FEES\"]=3,o[e[4]=\"TOKEN_NON_FUNGIBLE_UNIQUE_WITH_CUSTOM_FEES\"]=4,o}(),TokenSupplyType:function(){const e={},o=Object.create(e);return o[e[0]=\"INFINITE\"]=0,o[e[1]=\"FINITE\"]=1,o}(),TokenFreezeStatus:function(){const e={},o=Object.create(e);return o[e[0]=\"FreezeNotApplicable\"]=0,o[e[1]=\"Frozen\"]=1,o[e[2]=\"Unfrozen\"]=2,o}(),TokenKycStatus:function(){const e={},o=Object.create(e);return o[e[0]=\"KycNotApplicable\"]=0,o[e[1]=\"Granted\"]=1,o[e[2]=\"Revoked\"]=2,o}(),TokenPauseStatus:function(){const e={},o=Object.create(e);return o[e[0]=\"PauseNotApplicable\"]=0,o[e[1]=\"Paused\"]=1,o[e[2]=\"Unpaused\"]=2,o}(),Key:function(){function e(e){if(e)for(var o=Object.keys(e),t=0;t<o.length;++t)null!=e[o[t]]&&(this[o[t]]=e[o[t]])}e.prototype.contractID=null,e.prototype.ed25519=null,e.prototype.RSA_3072=null,e.prototype.ECDSA_384=null,e.prototype.thresholdKey=null,e.prototype.keyList=null,e.prototype.ECDSASecp256k1=null,e.prototype.delegatableContractId=null;let o;return Object.defineProperty(e.prototype,\"key\",{get:$util.oneOfGetter(o=[\"contractID\",\"ed25519\",\"RSA_3072\",\"ECDSA_384\",\"thresholdKey\",\"keyList\",\"ECDSASecp256k1\",\"delegatableContractId\"]),set:$util.oneOfSetter(o)}),e.create=function(o){return new e(o)},e.encode=function(e,o){return o||(o=$Writer.create()),null!=e.contractID&&Object.hasOwnProperty.call(e,\"contractID\")&&$root.proto.ContractID.encode(e.contractID,o.uint32(10).fork()).ldelim(),null!=e.ed25519&&Object.hasOwnProperty.call(e,\"ed25519\")&&o.uint32(18).bytes(e.ed25519),null!=e.RSA_3072&&Object.hasOwnProperty.call(e,\"RSA_3072\")&&o.uint32(26).bytes(e.RSA_3072),null!=e.ECDSA_384&&Object.hasOwnProperty.call(e,\"ECDSA_384\")&&o.uint32(34).bytes(e.ECDSA_384),null!=e.thresholdKey&&Object.hasOwnProperty.call(e,\"thresholdKey\")&&$root.proto.ThresholdKey.encode(e.thresholdKey,o.uint32(42).fork()).ldelim(),null!=e.keyList&&Object.hasOwnProperty.call(e,\"keyList\")&&$root.proto.KeyList.encode(e.keyList,o.uint32(50).fork()).ldelim(),null!=e.ECDSASecp256k1&&Object.hasOwnProperty.call(e,\"ECDSASecp256k1\")&&o.uint32(58).bytes(e.ECDSASecp256k1),null!=e.delegatableContractId&&Object.hasOwnProperty.call(e,\"delegatableContractId\")&&$root.proto.ContractID.encode(e.delegatableContractId,o.uint32(66).fork()).ldelim(),o},e.decode=function(e,o){e instanceof $Reader||(e=$Reader.create(e));for(var n=void 0===o?e.len:e.pos+o,i=new $root.proto.Key,d;e.pos<n;)switch(d=e.uint32(),d>>>3){case 1:i.contractID=$root.proto.ContractID.decode(e,e.uint32());break;case 2:i.ed25519=e.bytes();break;case 3:i.RSA_3072=e.bytes();break;case 4:i.ECDSA_384=e.bytes();break;case 5:i.thresholdKey=$root.proto.ThresholdKey.decode(e,e.uint32());break;case 6:i.keyList=$root.proto.KeyList.decode(e,e.uint32());break;case 7:i.ECDSASecp256k1=e.bytes();break;case 8:i.delegatableContractId=$root.proto.ContractID.decode(e,e.uint32());break;default:e.skipType(7&d);}return i},e}(),ThresholdKey:function(){function e(e){if(e)for(var o=Object.keys(e),t=0;t<o.length;++t)null!=e[o[t]]&&(this[o[t]]=e[o[t]])}return e.prototype.threshold=0,e.prototype.keys=null,e.create=function(o){return new e(o)},e.encode=function(e,o){return o||(o=$Writer.create()),null!=e.threshold&&Object.hasOwnProperty.call(e,\"threshold\")&&o.uint32(8).uint32(e.threshold),null!=e.keys&&Object.hasOwnProperty.call(e,\"keys\")&&$root.proto.KeyList.encode(e.keys,o.uint32(18).fork()).ldelim(),o},e.decode=function(e,o){e instanceof $Reader||(e=$Reader.create(e));for(var n=void 0===o?e.len:e.pos+o,i=new $root.proto.ThresholdKey,d;e.pos<n;)switch(d=e.uint32(),d>>>3){case 1:i.threshold=e.uint32();break;case 2:i.keys=$root.proto.KeyList.decode(e,e.uint32());break;default:e.skipType(7&d);}return i},e}(),KeyList:function(){function e(e){if(this.keys=[],e)for(var o=Object.keys(e),t=0;t<o.length;++t)null!=e[o[t]]&&(this[o[t]]=e[o[t]])}return e.prototype.keys=$util.emptyArray,e.create=function(o){return new e(o)},e.encode=function(e,o){if(o||(o=$Writer.create()),null!=e.keys&&e.keys.length)for(var t=0;t<e.keys.length;++t)$root.proto.Key.encode(e.keys[t],o.uint32(10).fork()).ldelim();return o},e.decode=function(e,o){e instanceof $Reader||(e=$Reader.create(e));for(var n=void 0===o?e.len:e.pos+o,i=new $root.proto.KeyList,d;e.pos<n;)switch(d=e.uint32(),d>>>3){case 1:i.keys&&i.keys.length||(i.keys=[]),i.keys.push($root.proto.Key.decode(e,e.uint32()));break;default:e.skipType(7&d);}return i},e}(),Signature:function(){function e(e){if(e)for(var o=Object.keys(e),t=0;t<o.length;++t)null!=e[o[t]]&&(this[o[t]]=e[o[t]])}e.prototype.contract=null,e.prototype.ed25519=null,e.prototype.RSA_3072=null,e.prototype.ECDSA_384=null,e.prototype.thresholdSignature=null,e.prototype.signatureList=null;let o;return Object.defineProperty(e.prototype,\"signature\",{get:$util.oneOfGetter(o=[\"contract\",\"ed25519\",\"RSA_3072\",\"ECDSA_384\",\"thresholdSignature\",\"signatureList\"]),set:$util.oneOfSetter(o)}),e.create=function(o){return new e(o)},e.encode=function(e,o){return o||(o=$Writer.create()),null!=e.contract&&Object.hasOwnProperty.call(e,\"contract\")&&o.uint32(10).bytes(e.contract),null!=e.ed25519&&Object.hasOwnProperty.call(e,\"ed25519\")&&o.uint32(18).bytes(e.ed25519),null!=e.RSA_3072&&Object.hasOwnProperty.call(e,\"RSA_3072\")&&o.uint32(26).bytes(e.RSA_3072),null!=e.ECDSA_384&&Object.hasOwnProperty.call(e,\"ECDSA_384\")&&o.uint32(34).bytes(e.ECDSA_384),null!=e.thresholdSignature&&Object.hasOwnProperty.call(e,\"thresholdSignature\")&&$root.proto.ThresholdSignature.encode(e.thresholdSignature,o.uint32(42).fork()).ldelim(),null!=e.signatureList&&Object.hasOwnProperty.call(e,\"signatureList\")&&$root.proto.SignatureList.encode(e.signatureList,o.uint32(50).fork()).ldelim(),o},e.decode=function(e,o){e instanceof $Reader||(e=$Reader.create(e));for(var n=void 0===o?e.len:e.pos+o,i=new $root.proto.Signature,d;e.pos<n;)switch(d=e.uint32(),d>>>3){case 1:i.contract=e.bytes();break;case 2:i.ed25519=e.bytes();break;case 3:i.RSA_3072=e.bytes();break;case 4:i.ECDSA_384=e.bytes();break;case 5:i.thresholdSignature=$root.proto.ThresholdSignature.decode(e,e.uint32());break;case 6:i.signatureList=$root.proto.SignatureList.decode(e,e.uint32());break;default:e.skipType(7&d);}return i},e}(),ThresholdSignature:function(){function e(e){if(e)for(var o=Object.keys(e),t=0;t<o.length;++t)null!=e[o[t]]&&(this[o[t]]=e[o[t]])}return e.prototype.sigs=null,e.create=function(o){return new e(o)},e.encode=function(e,o){return o||(o=$Writer.create()),null!=e.sigs&&Object.hasOwnProperty.call(e,\"sigs\")&&$root.proto.SignatureList.encode(e.sigs,o.uint32(18).fork()).ldelim(),o},e.decode=function(e,o){e instanceof $Reader||(e=$Reader.create(e));for(var n=void 0===o?e.len:e.pos+o,i=new $root.proto.ThresholdSignature,d;e.pos<n;)switch(d=e.uint32(),d>>>3){case 2:i.sigs=$root.proto.SignatureList.decode(e,e.uint32());break;default:e.skipType(7&d);}return i},e}(),SignatureList:function(){function e(e){if(this.sigs=[],e)for(var o=Object.keys(e),t=0;t<o.length;++t)null!=e[o[t]]&&(this[o[t]]=e[o[t]])}return e.prototype.sigs=$util.emptyArray,e.create=function(o){return new e(o)},e.encode=function(e,o){if(o||(o=$Writer.create()),null!=e.sigs&&e.sigs.length)for(var t=0;t<e.sigs.length;++t)$root.proto.Signature.encode(e.sigs[t],o.uint32(18).fork()).ldelim();return o},e.decode=function(e,o){e instanceof $Reader||(e=$Reader.create(e));for(var n=void 0===o?e.len:e.pos+o,i=new $root.proto.SignatureList,d;e.pos<n;)switch(d=e.uint32(),d>>>3){case 2:i.sigs&&i.sigs.length||(i.sigs=[]),i.sigs.push($root.proto.Signature.decode(e,e.uint32()));break;default:e.skipType(7&d);}return i},e}(),SignaturePair:function(){function e(e){if(e)for(var o=Object.keys(e),t=0;t<o.length;++t)null!=e[o[t]]&&(this[o[t]]=e[o[t]])}e.prototype.pubKeyPrefix=$util.newBuffer([]),e.prototype.contract=null,e.prototype.ed25519=null,e.prototype.RSA_3072=null,e.prototype.ECDSA_384=null,e.prototype.ECDSASecp256k1=null;let o;return Object.defineProperty(e.prototype,\"signature\",{get:$util.oneOfGetter(o=[\"contract\",\"ed25519\",\"RSA_3072\",\"ECDSA_384\",\"ECDSASecp256k1\"]),set:$util.oneOfSetter(o)}),e.create=function(o){return new e(o)},e.encode=function(e,o){return o||(o=$Writer.create()),null!=e.pubKeyPrefix&&Object.hasOwnProperty.call(e,\"pubKeyPrefix\")&&o.uint32(10).bytes(e.pubKeyPrefix),null!=e.contract&&Object.hasOwnProperty.call(e,\"contract\")&&o.uint32(18).bytes(e.contract),null!=e.ed25519&&Object.hasOwnProperty.call(e,\"ed25519\")&&o.uint32(26).bytes(e.ed25519),null!=e.RSA_3072&&Object.hasOwnProperty.call(e,\"RSA_3072\")&&o.uint32(34).bytes(e.RSA_3072),null!=e.ECDSA_384&&Object.hasOwnProperty.call(e,\"ECDSA_384\")&&o.uint32(42).bytes(e.ECDSA_384),null!=e.ECDSASecp256k1&&Object.hasOwnProperty.call(e,\"ECDSASecp256k1\")&&o.uint32(50).bytes(e.ECDSASecp256k1),o},e.decode=function(e,o){e instanceof $Reader||(e=$Reader.create(e));for(var n=void 0===o?e.len:e.pos+o,i=new $root.proto.SignaturePair,d;e.pos<n;)switch(d=e.uint32(),d>>>3){case 1:i.pubKeyPrefix=e.bytes();break;case 2:i.contract=e.bytes();break;case 3:i.ed25519=e.bytes();break;case 4:i.RSA_3072=e.bytes();break;case 5:i.ECDSA_384=e.bytes();break;case 6:i.ECDSASecp256k1=e.bytes();break;default:e.skipType(7&d);}return i},e}(),SignatureMap:function(){function e(e){if(this.sigPair=[],e)for(var o=Object.keys(e),t=0;t<o.length;++t)null!=e[o[t]]&&(this[o[t]]=e[o[t]])}return e.prototype.sigPair=$util.emptyArray,e.create=function(o){return new e(o)},e.encode=function(e,o){if(o||(o=$Writer.create()),null!=e.sigPair&&e.sigPair.length)for(var t=0;t<e.sigPair.length;++t)$root.proto.SignaturePair.encode(e.sigPair[t],o.uint32(10).fork()).ldelim();return o},e.decode=function(e,o){e instanceof $Reader||(e=$Reader.create(e));for(var n=void 0===o?e.len:e.pos+o,i=new $root.proto.SignatureMap,d;e.pos<n;)switch(d=e.uint32(),d>>>3){case 1:i.sigPair&&i.sigPair.length||(i.sigPair=[]),i.sigPair.push($root.proto.SignaturePair.decode(e,e.uint32()));break;default:e.skipType(7&d);}return i},e}(),HederaFunctionality:function(){const e={},o=Object.create(e);return o[e[0]=\"NONE\"]=0,o[e[1]=\"CryptoTransfer\"]=1,o[e[2]=\"CryptoUpdate\"]=2,o[e[3]=\"CryptoDelete\"]=3,o[e[4]=\"CryptoAddLiveHash\"]=4,o[e[5]=\"CryptoDeleteLiveHash\"]=5,o[e[6]=\"ContractCall\"]=6,o[e[7]=\"ContractCreate\"]=7,o[e[8]=\"ContractUpdate\"]=8,o[e[9]=\"FileCreate\"]=9,o[e[10]=\"FileAppend\"]=10,o[e[11]=\"FileUpdate\"]=11,o[e[12]=\"FileDelete\"]=12,o[e[13]=\"CryptoGetAccountBalance\"]=13,o[e[14]=\"CryptoGetAccountRecords\"]=14,o[e[15]=\"CryptoGetInfo\"]=15,o[e[16]=\"ContractCallLocal\"]=16,o[e[17]=\"ContractGetInfo\"]=17,o[e[18]=\"ContractGetBytecode\"]=18,o[e[19]=\"GetBySolidityID\"]=19,o[e[20]=\"GetByKey\"]=20,o[e[21]=\"CryptoGetLiveHash\"]=21,o[e[22]=\"CryptoGetStakers\"]=22,o[e[23]=\"FileGetContents\"]=23,o[e[24]=\"FileGetInfo\"]=24,o[e[25]=\"TransactionGetRecord\"]=25,o[e[26]=\"ContractGetRecords\"]=26,o[e[27]=\"CryptoCreate\"]=27,o[e[28]=\"SystemDelete\"]=28,o[e[29]=\"SystemUndelete\"]=29,o[e[30]=\"ContractDelete\"]=30,o[e[31]=\"Freeze\"]=31,o[e[32]=\"CreateTransactionRecord\"]=32,o[e[33]=\"CryptoAccountAutoRenew\"]=33,o[e[34]=\"ContractAutoRenew\"]=34,o[e[35]=\"GetVersionInfo\"]=35,o[e[36]=\"TransactionGetReceipt\"]=36,o[e[50]=\"ConsensusCreateTopic\"]=50,o[e[51]=\"ConsensusUpdateTopic\"]=51,o[e[52]=\"ConsensusDeleteTopic\"]=52,o[e[53]=\"ConsensusGetTopicInfo\"]=53,o[e[54]=\"ConsensusSubmitMessage\"]=54,o[e[55]=\"UncheckedSubmit\"]=55,o[e[56]=\"TokenCreate\"]=56,o[e[58]=\"TokenGetInfo\"]=58,o[e[59]=\"TokenFreezeAccount\"]=59,o[e[60]=\"TokenUnfreezeAccount\"]=60,o[e[61]=\"TokenGrantKycToAccount\"]=61,o[e[62]=\"TokenRevokeKycFromAccount\"]=62,o[e[63]=\"TokenDelete\"]=63,o[e[64]=\"TokenUpdate\"]=64,o[e[65]=\"TokenMint\"]=65,o[e[66]=\"TokenBurn\"]=66,o[e[67]=\"TokenAccountWipe\"]=67,o[e[68]=\"TokenAssociateToAccount\"]=68,o[e[69]=\"TokenDissociateFromAccount\"]=69,o[e[70]=\"ScheduleCreate\"]=70,o[e[71]=\"ScheduleDelete\"]=71,o[e[72]=\"ScheduleSign\"]=72,o[e[73]=\"ScheduleGetInfo\"]=73,o[e[74]=\"TokenGetAccountNftInfos\"]=74,o[e[75]=\"TokenGetNftInfo\"]=75,o[e[76]=\"TokenGetNftInfos\"]=76,o[e[77]=\"TokenFeeScheduleUpdate\"]=77,o[e[78]=\"NetworkGetExecutionTime\"]=78,o[e[79]=\"TokenPause\"]=79,o[e[80]=\"TokenUnpause\"]=80,o}(),FeeComponents:function(){function e(e){if(e)for(var o=Object.keys(e),t=0;t<o.length;++t)null!=e[o[t]]&&(this[o[t]]=e[o[t]])}return e.prototype.min=$util.Long?$util.Long.fromBits(0,0,!1):0,e.prototype.max=$util.Long?$util.Long.fromBits(0,0,!1):0,e.prototype.constant=$util.Long?$util.Long.fromBits(0,0,!1):0,e.prototype.bpt=$util.Long?$util.Long.fromBits(0,0,!1):0,e.prototype.vpt=$util.Long?$util.Long.fromBits(0,0,!1):0,e.prototype.rbh=$util.Long?$util.Long.fromBits(0,0,!1):0,e.prototype.sbh=$util.Long?$util.Long.fromBits(0,0,!1):0,e.prototype.gas=$util.Long?$util.Long.fromBits(0,0,!1):0,e.prototype.tv=$util.Long?$util.Long.fromBits(0,0,!1):0,e.prototype.bpr=$util.Long?$util.Long.fromBits(0,0,!1):0,e.prototype.sbpr=$util.Long?$util.Long.fromBits(0,0,!1):0,e.create=function(o){return new e(o)},e.encode=function(e,o){return o||(o=$Writer.create()),null!=e.min&&Object.hasOwnProperty.call(e,\"min\")&&o.uint32(8).int64(e.min),null!=e.max&&Object.hasOwnProperty.call(e,\"max\")&&o.uint32(16).int64(e.max),null!=e.constant&&Object.hasOwnProperty.call(e,\"constant\")&&o.uint32(24).int64(e.constant),null!=e.bpt&&Object.hasOwnProperty.call(e,\"bpt\")&&o.uint32(32).int64(e.bpt),null!=e.vpt&&Object.hasOwnProperty.call(e,\"vpt\")&&o.uint32(40).int64(e.vpt),null!=e.rbh&&Object.hasOwnProperty.call(e,\"rbh\")&&o.uint32(48).int64(e.rbh),null!=e.sbh&&Object.hasOwnProperty.call(e,\"sbh\")&&o.uint32(56).int64(e.sbh),null!=e.gas&&Object.hasOwnProperty.call(e,\"gas\")&&o.uint32(64).int64(e.gas),null!=e.tv&&Object.hasOwnProperty.call(e,\"tv\")&&o.uint32(72).int64(e.tv),null!=e.bpr&&Object.hasOwnProperty.call(e,\"bpr\")&&o.uint32(80).int64(e.bpr),null!=e.sbpr&&Object.hasOwnProperty.call(e,\"sbpr\")&&o.uint32(88).int64(e.sbpr),o},e.decode=function(e,o){e instanceof $Reader||(e=$Reader.create(e));for(var n=void 0===o?e.len:e.pos+o,i=new $root.proto.FeeComponents,d;e.pos<n;)switch(d=e.uint32(),d>>>3){case 1:i.min=e.int64();break;case 2:i.max=e.int64();break;case 3:i.constant=e.int64();break;case 4:i.bpt=e.int64();break;case 5:i.vpt=e.int64();break;case 6:i.rbh=e.int64();break;case 7:i.sbh=e.int64();break;case 8:i.gas=e.int64();break;case 9:i.tv=e.int64();break;case 10:i.bpr=e.int64();break;case 11:i.sbpr=e.int64();break;default:e.skipType(7&d);}return i},e}(),TransactionFeeSchedule:function(){function e(e){if(this.fees=[],e)for(var o=Object.keys(e),t=0;t<o.length;++t)null!=e[o[t]]&&(this[o[t]]=e[o[t]])}return e.prototype.hederaFunctionality=0,e.prototype.feeData=null,e.prototype.fees=$util.emptyArray,e.create=function(o){return new e(o)},e.encode=function(e,o){if(o||(o=$Writer.create()),null!=e.hederaFunctionality&&Object.hasOwnProperty.call(e,\"hederaFunctionality\")&&o.uint32(8).int32(e.hederaFunctionality),null!=e.feeData&&Object.hasOwnProperty.call(e,\"feeData\")&&$root.proto.FeeData.encode(e.feeData,o.uint32(18).fork()).ldelim(),null!=e.fees&&e.fees.length)for(var t=0;t<e.fees.length;++t)$root.proto.FeeData.encode(e.fees[t],o.uint32(26).fork()).ldelim();return o},e.decode=function(e,o){e instanceof $Reader||(e=$Reader.create(e));for(var n=void 0===o?e.len:e.pos+o,i=new $root.proto.TransactionFeeSchedule,d;e.pos<n;)switch(d=e.uint32(),d>>>3){case 1:i.hederaFunctionality=e.int32();break;case 2:i.feeData=$root.proto.FeeData.decode(e,e.uint32());break;case 3:i.fees&&i.fees.length||(i.fees=[]),i.fees.push($root.proto.FeeData.decode(e,e.uint32()));break;default:e.skipType(7&d);}return i},e}(),FeeData:function(){function e(e){if(e)for(var o=Object.keys(e),t=0;t<o.length;++t)null!=e[o[t]]&&(this[o[t]]=e[o[t]])}return e.prototype.nodedata=null,e.prototype.networkdata=null,e.prototype.servicedata=null,e.prototype.subType=0,e.create=function(o){return new e(o)},e.encode=function(e,o){return o||(o=$Writer.create()),null!=e.nodedata&&Object.hasOwnProperty.call(e,\"nodedata\")&&$root.proto.FeeComponents.encode(e.nodedata,o.uint32(10).fork()).ldelim(),null!=e.networkdata&&Object.hasOwnProperty.call(e,\"networkdata\")&&$root.proto.FeeComponents.encode(e.networkdata,o.uint32(18).fork()).ldelim(),null!=e.servicedata&&Object.hasOwnProperty.call(e,\"servicedata\")&&$root.proto.FeeComponents.encode(e.servicedata,o.uint32(26).fork()).ldelim(),null!=e.subType&&Object.hasOwnProperty.call(e,\"subType\")&&o.uint32(32).int32(e.subType),o},e.decode=function(e,o){e instanceof $Reader||(e=$Reader.create(e));for(var n=void 0===o?e.len:e.pos+o,i=new $root.proto.FeeData,d;e.pos<n;)switch(d=e.uint32(),d>>>3){case 1:i.nodedata=$root.proto.FeeComponents.decode(e,e.uint32());break;case 2:i.networkdata=$root.proto.FeeComponents.decode(e,e.uint32());break;case 3:i.servicedata=$root.proto.FeeComponents.decode(e,e.uint32());break;case 4:i.subType=e.int32();break;default:e.skipType(7&d);}return i},e}(),FeeSchedule:function(){function e(e){if(this.transactionFeeSchedule=[],e)for(var o=Object.keys(e),t=0;t<o.length;++t)null!=e[o[t]]&&(this[o[t]]=e[o[t]])}return e.prototype.transactionFeeSchedule=$util.emptyArray,e.prototype.expiryTime=null,e.create=function(o){return new e(o)},e.encode=function(e,o){if(o||(o=$Writer.create()),null!=e.transactionFeeSchedule&&e.transactionFeeSchedule.length)for(var t=0;t<e.transactionFeeSchedule.length;++t)$root.proto.TransactionFeeSchedule.encode(e.transactionFeeSchedule[t],o.uint32(10).fork()).ldelim();return null!=e.expiryTime&&Object.hasOwnProperty.call(e,\"expiryTime\")&&$root.proto.TimestampSeconds.encode(e.expiryTime,o.uint32(18).fork()).ldelim(),o},e.decode=function(e,o){e instanceof $Reader||(e=$Reader.create(e));for(var n=void 0===o?e.len:e.pos+o,i=new $root.proto.FeeSchedule,d;e.pos<n;)switch(d=e.uint32(),d>>>3){case 1:i.transactionFeeSchedule&&i.transactionFeeSchedule.length||(i.transactionFeeSchedule=[]),i.transactionFeeSchedule.push($root.proto.TransactionFeeSchedule.decode(e,e.uint32()));break;case 2:i.expiryTime=$root.proto.TimestampSeconds.decode(e,e.uint32());break;default:e.skipType(7&d);}return i},e}(),CurrentAndNextFeeSchedule:function(){function e(e){if(e)for(var o=Object.keys(e),t=0;t<o.length;++t)null!=e[o[t]]&&(this[o[t]]=e[o[t]])}return e.prototype.currentFeeSchedule=null,e.prototype.nextFeeSchedule=null,e.create=function(o){return new e(o)},e.encode=function(e,o){return o||(o=$Writer.create()),null!=e.currentFeeSchedule&&Object.hasOwnProperty.call(e,\"currentFeeSchedule\")&&$root.proto.FeeSchedule.encode(e.currentFeeSchedule,o.uint32(10).fork()).ldelim(),null!=e.nextFeeSchedule&&Object.hasOwnProperty.call(e,\"nextFeeSchedule\")&&$root.proto.FeeSchedule.encode(e.nextFeeSchedule,o.uint32(18).fork()).ldelim(),o},e.decode=function(e,o){e instanceof $Reader||(e=$Reader.create(e));for(var n=void 0===o?e.len:e.pos+o,i=new $root.proto.CurrentAndNextFeeSchedule,d;e.pos<n;)switch(d=e.uint32(),d>>>3){case 1:i.currentFeeSchedule=$root.proto.FeeSchedule.decode(e,e.uint32());break;case 2:i.nextFeeSchedule=$root.proto.FeeSchedule.decode(e,e.uint32());break;default:e.skipType(7&d);}return i},e}(),ServiceEndpoint:function(){function e(e){if(e)for(var o=Object.keys(e),t=0;t<o.length;++t)null!=e[o[t]]&&(this[o[t]]=e[o[t]])}return e.prototype.ipAddressV4=$util.newBuffer([]),e.prototype.port=0,e.create=function(o){return new e(o)},e.encode=function(e,o){return o||(o=$Writer.create()),null!=e.ipAddressV4&&Object.hasOwnProperty.call(e,\"ipAddressV4\")&&o.uint32(10).bytes(e.ipAddressV4),null!=e.port&&Object.hasOwnProperty.call(e,\"port\")&&o.uint32(16).int32(e.port),o},e.decode=function(e,o){e instanceof $Reader||(e=$Reader.create(e));for(var n=void 0===o?e.len:e.pos+o,i=new $root.proto.ServiceEndpoint,d;e.pos<n;)switch(d=e.uint32(),d>>>3){case 1:i.ipAddressV4=e.bytes();break;case 2:i.port=e.int32();break;default:e.skipType(7&d);}return i},e}(),NodeAddress:function(){function e(e){if(this.serviceEndpoint=[],e)for(var o=Object.keys(e),t=0;t<o.length;++t)null!=e[o[t]]&&(this[o[t]]=e[o[t]])}return e.prototype.ipAddress=$util.newBuffer([]),e.prototype.portno=0,e.prototype.memo=$util.newBuffer([]),e.prototype.RSA_PubKey=\"\",e.prototype.nodeId=$util.Long?$util.Long.fromBits(0,0,!1):0,e.prototype.nodeAccountId=null,e.prototype.nodeCertHash=$util.newBuffer([]),e.prototype.serviceEndpoint=$util.emptyArray,e.prototype.description=\"\",e.prototype.stake=$util.Long?$util.Long.fromBits(0,0,!1):0,e.create=function(o){return new e(o)},e.encode=function(e,o){if(o||(o=$Writer.create()),null!=e.ipAddress&&Object.hasOwnProperty.call(e,\"ipAddress\")&&o.uint32(10).bytes(e.ipAddress),null!=e.portno&&Object.hasOwnProperty.call(e,\"portno\")&&o.uint32(16).int32(e.portno),null!=e.memo&&Object.hasOwnProperty.call(e,\"memo\")&&o.uint32(26).bytes(e.memo),null!=e.RSA_PubKey&&Object.hasOwnProperty.call(e,\"RSA_PubKey\")&&o.uint32(34).string(e.RSA_PubKey),null!=e.nodeId&&Object.hasOwnProperty.call(e,\"nodeId\")&&o.uint32(40).int64(e.nodeId),null!=e.nodeAccountId&&Object.hasOwnProperty.call(e,\"nodeAccountId\")&&$root.proto.AccountID.encode(e.nodeAccountId,o.uint32(50).fork()).ldelim(),null!=e.nodeCertHash&&Object.hasOwnProperty.call(e,\"nodeCertHash\")&&o.uint32(58).bytes(e.nodeCertHash),null!=e.serviceEndpoint&&e.serviceEndpoint.length)for(var t=0;t<e.serviceEndpoint.length;++t)$root.proto.ServiceEndpoint.encode(e.serviceEndpoint[t],o.uint32(66).fork()).ldelim();return null!=e.description&&Object.hasOwnProperty.call(e,\"description\")&&o.uint32(74).string(e.description),null!=e.stake&&Object.hasOwnProperty.call(e,\"stake\")&&o.uint32(80).int64(e.stake),o},e.decode=function(e,o){e instanceof $Reader||(e=$Reader.create(e));for(var n=void 0===o?e.len:e.pos+o,i=new $root.proto.NodeAddress,d;e.pos<n;)switch(d=e.uint32(),d>>>3){case 1:i.ipAddress=e.bytes();break;case 2:i.portno=e.int32();break;case 3:i.memo=e.bytes();break;case 4:i.RSA_PubKey=e.string();break;case 5:i.nodeId=e.int64();break;case 6:i.nodeAccountId=$root.proto.AccountID.decode(e,e.uint32());break;case 7:i.nodeCertHash=e.bytes();break;case 8:i.serviceEndpoint&&i.serviceEndpoint.length||(i.serviceEndpoint=[]),i.serviceEndpoint.push($root.proto.ServiceEndpoint.decode(e,e.uint32()));break;case 9:i.description=e.string();break;case 10:i.stake=e.int64();break;default:e.skipType(7&d);}return i},e}(),NodeAddressBook:function(){function e(e){if(this.nodeAddress=[],e)for(var o=Object.keys(e),t=0;t<o.length;++t)null!=e[o[t]]&&(this[o[t]]=e[o[t]])}return e.prototype.nodeAddress=$util.emptyArray,e.create=function(o){return new e(o)},e.encode=function(e,o){if(o||(o=$Writer.create()),null!=e.nodeAddress&&e.nodeAddress.length)for(var t=0;t<e.nodeAddress.length;++t)$root.proto.NodeAddress.encode(e.nodeAddress[t],o.uint32(10).fork()).ldelim();return o},e.decode=function(e,o){e instanceof $Reader||(e=$Reader.create(e));for(var n=void 0===o?e.len:e.pos+o,i=new $root.proto.NodeAddressBook,d;e.pos<n;)switch(d=e.uint32(),d>>>3){case 1:i.nodeAddress&&i.nodeAddress.length||(i.nodeAddress=[]),i.nodeAddress.push($root.proto.NodeAddress.decode(e,e.uint32()));break;default:e.skipType(7&d);}return i},e}(),SemanticVersion:function(){function e(e){if(e)for(var o=Object.keys(e),t=0;t<o.length;++t)null!=e[o[t]]&&(this[o[t]]=e[o[t]])}return e.prototype.major=0,e.prototype.minor=0,e.prototype.patch=0,e.prototype.pre=\"\",e.prototype.build=\"\",e.create=function(o){return new e(o)},e.encode=function(e,o){return o||(o=$Writer.create()),null!=e.major&&Object.hasOwnProperty.call(e,\"major\")&&o.uint32(8).int32(e.major),null!=e.minor&&Object.hasOwnProperty.call(e,\"minor\")&&o.uint32(16).int32(e.minor),null!=e.patch&&Object.hasOwnProperty.call(e,\"patch\")&&o.uint32(24).int32(e.patch),null!=e.pre&&Object.hasOwnProperty.call(e,\"pre\")&&o.uint32(34).string(e.pre),null!=e.build&&Object.hasOwnProperty.call(e,\"build\")&&o.uint32(42).string(e.build),o},e.decode=function(e,o){e instanceof $Reader||(e=$Reader.create(e));for(var n=void 0===o?e.len:e.pos+o,i=new $root.proto.SemanticVersion,d;e.pos<n;)switch(d=e.uint32(),d>>>3){case 1:i.major=e.int32();break;case 2:i.minor=e.int32();break;case 3:i.patch=e.int32();break;case 4:i.pre=e.string();break;case 5:i.build=e.string();break;default:e.skipType(7&d);}return i},e}(),Setting:function(){function e(e){if(e)for(var o=Object.keys(e),t=0;t<o.length;++t)null!=e[o[t]]&&(this[o[t]]=e[o[t]])}return e.prototype.name=\"\",e.prototype.value=\"\",e.prototype.data=$util.newBuffer([]),e.create=function(o){return new e(o)},e.encode=function(e,o){return o||(o=$Writer.create()),null!=e.name&&Object.hasOwnProperty.call(e,\"name\")&&o.uint32(10).string(e.name),null!=e.value&&Object.hasOwnProperty.call(e,\"value\")&&o.uint32(18).string(e.value),null!=e.data&&Object.hasOwnProperty.call(e,\"data\")&&o.uint32(26).bytes(e.data),o},e.decode=function(e,o){e instanceof $Reader||(e=$Reader.create(e));for(var n=void 0===o?e.len:e.pos+o,i=new $root.proto.Setting,d;e.pos<n;)switch(d=e.uint32(),d>>>3){case 1:i.name=e.string();break;case 2:i.value=e.string();break;case 3:i.data=e.bytes();break;default:e.skipType(7&d);}return i},e}(),ServicesConfigurationList:function(){function e(e){if(this.nameValue=[],e)for(var o=Object.keys(e),t=0;t<o.length;++t)null!=e[o[t]]&&(this[o[t]]=e[o[t]])}return e.prototype.nameValue=$util.emptyArray,e.create=function(o){return new e(o)},e.encode=function(e,o){if(o||(o=$Writer.create()),null!=e.nameValue&&e.nameValue.length)for(var t=0;t<e.nameValue.length;++t)$root.proto.Setting.encode(e.nameValue[t],o.uint32(10).fork()).ldelim();return o},e.decode=function(e,o){e instanceof $Reader||(e=$Reader.create(e));for(var n=void 0===o?e.len:e.pos+o,i=new $root.proto.ServicesConfigurationList,d;e.pos<n;)switch(d=e.uint32(),d>>>3){case 1:i.nameValue&&i.nameValue.length||(i.nameValue=[]),i.nameValue.push($root.proto.Setting.decode(e,e.uint32()));break;default:e.skipType(7&d);}return i},e}(),TokenRelationship:function(){function e(e){if(e)for(var o=Object.keys(e),t=0;t<o.length;++t)null!=e[o[t]]&&(this[o[t]]=e[o[t]])}return e.prototype.tokenId=null,e.prototype.symbol=\"\",e.prototype.balance=$util.Long?$util.Long.fromBits(0,0,!0):0,e.prototype.kycStatus=0,e.prototype.freezeStatus=0,e.prototype.decimals=0,e.prototype.automaticAssociation=!1,e.create=function(o){return new e(o)},e.encode=function(e,o){return o||(o=$Writer.create()),null!=e.tokenId&&Object.hasOwnProperty.call(e,\"tokenId\")&&$root.proto.TokenID.encode(e.tokenId,o.uint32(10).fork()).ldelim(),null!=e.symbol&&Object.hasOwnProperty.call(e,\"symbol\")&&o.uint32(18).string(e.symbol),null!=e.balance&&Object.hasOwnProperty.call(e,\"balance\")&&o.uint32(24).uint64(e.balance),null!=e.kycStatus&&Object.hasOwnProperty.call(e,\"kycStatus\")&&o.uint32(32).int32(e.kycStatus),null!=e.freezeStatus&&Object.hasOwnProperty.call(e,\"freezeStatus\")&&o.uint32(40).int32(e.freezeStatus),null!=e.decimals&&Object.hasOwnProperty.call(e,\"decimals\")&&o.uint32(48).uint32(e.decimals),null!=e.automaticAssociation&&Object.hasOwnProperty.call(e,\"automaticAssociation\")&&o.uint32(56).bool(e.automaticAssociation),o},e.decode=function(e,o){e instanceof $Reader||(e=$Reader.create(e));for(var n=void 0===o?e.len:e.pos+o,i=new $root.proto.TokenRelationship,d;e.pos<n;)switch(d=e.uint32(),d>>>3){case 1:i.tokenId=$root.proto.TokenID.decode(e,e.uint32());break;case 2:i.symbol=e.string();break;case 3:i.balance=e.uint64();break;case 4:i.kycStatus=e.int32();break;case 5:i.freezeStatus=e.int32();break;case 6:i.decimals=e.uint32();break;case 7:i.automaticAssociation=e.bool();break;default:e.skipType(7&d);}return i},e}(),TokenBalance:function(){function e(e){if(e)for(var o=Object.keys(e),t=0;t<o.length;++t)null!=e[o[t]]&&(this[o[t]]=e[o[t]])}return e.prototype.tokenId=null,e.prototype.balance=$util.Long?$util.Long.fromBits(0,0,!0):0,e.prototype.decimals=0,e.create=function(o){return new e(o)},e.encode=function(e,o){return o||(o=$Writer.create()),null!=e.tokenId&&Object.hasOwnProperty.call(e,\"tokenId\")&&$root.proto.TokenID.encode(e.tokenId,o.uint32(10).fork()).ldelim(),null!=e.balance&&Object.hasOwnProperty.call(e,\"balance\")&&o.uint32(16).uint64(e.balance),null!=e.decimals&&Object.hasOwnProperty.call(e,\"decimals\")&&o.uint32(24).uint32(e.decimals),o},e.decode=function(e,o){e instanceof $Reader||(e=$Reader.create(e));for(var n=void 0===o?e.len:e.pos+o,i=new $root.proto.TokenBalance,d;e.pos<n;)switch(d=e.uint32(),d>>>3){case 1:i.tokenId=$root.proto.TokenID.decode(e,e.uint32());break;case 2:i.balance=e.uint64();break;case 3:i.decimals=e.uint32();break;default:e.skipType(7&d);}return i},e}(),TokenBalances:function(){function e(e){if(this.tokenBalances=[],e)for(var o=Object.keys(e),t=0;t<o.length;++t)null!=e[o[t]]&&(this[o[t]]=e[o[t]])}return e.prototype.tokenBalances=$util.emptyArray,e.create=function(o){return new e(o)},e.encode=function(e,o){if(o||(o=$Writer.create()),null!=e.tokenBalances&&e.tokenBalances.length)for(var t=0;t<e.tokenBalances.length;++t)$root.proto.TokenBalance.encode(e.tokenBalances[t],o.uint32(10).fork()).ldelim();return o},e.decode=function(e,o){e instanceof $Reader||(e=$Reader.create(e));for(var n=void 0===o?e.len:e.pos+o,i=new $root.proto.TokenBalances,d;e.pos<n;)switch(d=e.uint32(),d>>>3){case 1:i.tokenBalances&&i.tokenBalances.length||(i.tokenBalances=[]),i.tokenBalances.push($root.proto.TokenBalance.decode(e,e.uint32()));break;default:e.skipType(7&d);}return i},e}(),TokenAssociation:function(){function e(e){if(e)for(var o=Object.keys(e),t=0;t<o.length;++t)null!=e[o[t]]&&(this[o[t]]=e[o[t]])}return e.prototype.tokenId=null,e.prototype.accountId=null,e.create=function(o){return new e(o)},e.encode=function(e,o){return o||(o=$Writer.create()),null!=e.tokenId&&Object.hasOwnProperty.call(e,\"tokenId\")&&$root.proto.TokenID.encode(e.tokenId,o.uint32(10).fork()).ldelim(),null!=e.accountId&&Object.hasOwnProperty.call(e,\"accountId\")&&$root.proto.AccountID.encode(e.accountId,o.uint32(18).fork()).ldelim(),o},e.decode=function(e,o){e instanceof $Reader||(e=$Reader.create(e));for(var n=void 0===o?e.len:e.pos+o,i=new $root.proto.TokenAssociation,d;e.pos<n;)switch(d=e.uint32(),d>>>3){case 1:i.tokenId=$root.proto.TokenID.decode(e,e.uint32());break;case 2:i.accountId=$root.proto.AccountID.decode(e,e.uint32());break;default:e.skipType(7&d);}return i},e}(),Timestamp:function(){function e(e){if(e)for(var o=Object.keys(e),t=0;t<o.length;++t)null!=e[o[t]]&&(this[o[t]]=e[o[t]])}return e.prototype.seconds=$util.Long?$util.Long.fromBits(0,0,!1):0,e.prototype.nanos=0,e.create=function(o){return new e(o)},e.encode=function(e,o){return o||(o=$Writer.create()),null!=e.seconds&&Object.hasOwnProperty.call(e,\"seconds\")&&o.uint32(8).int64(e.seconds),null!=e.nanos&&Object.hasOwnProperty.call(e,\"nanos\")&&o.uint32(16).int32(e.nanos),o},e.decode=function(e,o){e instanceof $Reader||(e=$Reader.create(e));for(var n=void 0===o?e.len:e.pos+o,i=new $root.proto.Timestamp,d;e.pos<n;)switch(d=e.uint32(),d>>>3){case 1:i.seconds=e.int64();break;case 2:i.nanos=e.int32();break;default:e.skipType(7&d);}return i},e}(),TimestampSeconds:function(){function e(e){if(e)for(var o=Object.keys(e),t=0;t<o.length;++t)null!=e[o[t]]&&(this[o[t]]=e[o[t]])}return e.prototype.seconds=$util.Long?$util.Long.fromBits(0,0,!1):0,e.create=function(o){return new e(o)},e.encode=function(e,o){return o||(o=$Writer.create()),null!=e.seconds&&Object.hasOwnProperty.call(e,\"seconds\")&&o.uint32(8).int64(e.seconds),o},e.decode=function(e,o){e instanceof $Reader||(e=$Reader.create(e));for(var n=void 0===o?e.len:e.pos+o,i=new $root.proto.TimestampSeconds,d;e.pos<n;)switch(d=e.uint32(),d>>>3){case 1:i.seconds=e.int64();break;default:e.skipType(7&d);}return i},e}(),ConsensusCreateTopicTransactionBody:function(){function e(e){if(e)for(var o=Object.keys(e),t=0;t<o.length;++t)null!=e[o[t]]&&(this[o[t]]=e[o[t]])}return e.prototype.memo=\"\",e.prototype.adminKey=null,e.prototype.submitKey=null,e.prototype.autoRenewPeriod=null,e.prototype.autoRenewAccount=null,e.create=function(o){return new e(o)},e.encode=function(e,o){return o||(o=$Writer.create()),null!=e.memo&&Object.hasOwnProperty.call(e,\"memo\")&&o.uint32(10).string(e.memo),null!=e.adminKey&&Object.hasOwnProperty.call(e,\"adminKey\")&&$root.proto.Key.encode(e.adminKey,o.uint32(18).fork()).ldelim(),null!=e.submitKey&&Object.hasOwnProperty.call(e,\"submitKey\")&&$root.proto.Key.encode(e.submitKey,o.uint32(26).fork()).ldelim(),null!=e.autoRenewPeriod&&Object.hasOwnProperty.call(e,\"autoRenewPeriod\")&&$root.proto.Duration.encode(e.autoRenewPeriod,o.uint32(50).fork()).ldelim(),null!=e.autoRenewAccount&&Object.hasOwnProperty.call(e,\"autoRenewAccount\")&&$root.proto.AccountID.encode(e.autoRenewAccount,o.uint32(58).fork()).ldelim(),o},e.decode=function(e,o){e instanceof $Reader||(e=$Reader.create(e));for(var n=void 0===o?e.len:e.pos+o,i=new $root.proto.ConsensusCreateTopicTransactionBody,d;e.pos<n;)switch(d=e.uint32(),d>>>3){case 1:i.memo=e.string();break;case 2:i.adminKey=$root.proto.Key.decode(e,e.uint32());break;case 3:i.submitKey=$root.proto.Key.decode(e,e.uint32());break;case 6:i.autoRenewPeriod=$root.proto.Duration.decode(e,e.uint32());break;case 7:i.autoRenewAccount=$root.proto.AccountID.decode(e,e.uint32());break;default:e.skipType(7&d);}return i},e}(),Duration:function(){function e(e){if(e)for(var o=Object.keys(e),t=0;t<o.length;++t)null!=e[o[t]]&&(this[o[t]]=e[o[t]])}return e.prototype.seconds=$util.Long?$util.Long.fromBits(0,0,!1):0,e.create=function(o){return new e(o)},e.encode=function(e,o){return o||(o=$Writer.create()),null!=e.seconds&&Object.hasOwnProperty.call(e,\"seconds\")&&o.uint32(8).int64(e.seconds),o},e.decode=function(e,o){e instanceof $Reader||(e=$Reader.create(e));for(var n=void 0===o?e.len:e.pos+o,i=new $root.proto.Duration,d;e.pos<n;)switch(d=e.uint32(),d>>>3){case 1:i.seconds=e.int64();break;default:e.skipType(7&d);}return i},e}(),ConsensusDeleteTopicTransactionBody:function(){function e(e){if(e)for(var o=Object.keys(e),t=0;t<o.length;++t)null!=e[o[t]]&&(this[o[t]]=e[o[t]])}return e.prototype.topicID=null,e.create=function(o){return new e(o)},e.encode=function(e,o){return o||(o=$Writer.create()),null!=e.topicID&&Object.hasOwnProperty.call(e,\"topicID\")&&$root.proto.TopicID.encode(e.topicID,o.uint32(10).fork()).ldelim(),o},e.decode=function(e,o){e instanceof $Reader||(e=$Reader.create(e));for(var n=void 0===o?e.len:e.pos+o,i=new $root.proto.ConsensusDeleteTopicTransactionBody,d;e.pos<n;)switch(d=e.uint32(),d>>>3){case 1:i.topicID=$root.proto.TopicID.decode(e,e.uint32());break;default:e.skipType(7&d);}return i},e}(),ConsensusGetTopicInfoQuery:function(){function e(e){if(e)for(var o=Object.keys(e),t=0;t<o.length;++t)null!=e[o[t]]&&(this[o[t]]=e[o[t]])}return e.prototype.header=null,e.prototype.topicID=null,e.create=function(o){return new e(o)},e.encode=function(e,o){return o||(o=$Writer.create()),null!=e.header&&Object.hasOwnProperty.call(e,\"header\")&&$root.proto.QueryHeader.encode(e.header,o.uint32(10).fork()).ldelim(),null!=e.topicID&&Object.hasOwnProperty.call(e,\"topicID\")&&$root.proto.TopicID.encode(e.topicID,o.uint32(18).fork()).ldelim(),o},e.decode=function(e,o){e instanceof $Reader||(e=$Reader.create(e));for(var n=void 0===o?e.len:e.pos+o,i=new $root.proto.ConsensusGetTopicInfoQuery,d;e.pos<n;)switch(d=e.uint32(),d>>>3){case 1:i.header=$root.proto.QueryHeader.decode(e,e.uint32());break;case 2:i.topicID=$root.proto.TopicID.decode(e,e.uint32());break;default:e.skipType(7&d);}return i},e}(),ConsensusGetTopicInfoResponse:function(){function e(e){if(e)for(var o=Object.keys(e),t=0;t<o.length;++t)null!=e[o[t]]&&(this[o[t]]=e[o[t]])}return e.prototype.header=null,e.prototype.topicID=null,e.prototype.topicInfo=null,e.create=function(o){return new e(o)},e.encode=function(e,o){return o||(o=$Writer.create()),null!=e.header&&Object.hasOwnProperty.call(e,\"header\")&&$root.proto.ResponseHeader.encode(e.header,o.uint32(10).fork()).ldelim(),null!=e.topicID&&Object.hasOwnProperty.call(e,\"topicID\")&&$root.proto.TopicID.encode(e.topicID,o.uint32(18).fork()).ldelim(),null!=e.topicInfo&&Object.hasOwnProperty.call(e,\"topicInfo\")&&$root.proto.ConsensusTopicInfo.encode(e.topicInfo,o.uint32(42).fork()).ldelim(),o},e.decode=function(e,o){e instanceof $Reader||(e=$Reader.create(e));for(var n=void 0===o?e.len:e.pos+o,i=new $root.proto.ConsensusGetTopicInfoResponse,d;e.pos<n;)switch(d=e.uint32(),d>>>3){case 1:i.header=$root.proto.ResponseHeader.decode(e,e.uint32());break;case 2:i.topicID=$root.proto.TopicID.decode(e,e.uint32());break;case 5:i.topicInfo=$root.proto.ConsensusTopicInfo.decode(e,e.uint32());break;default:e.skipType(7&d);}return i},e}(),ResponseType:function(){const e={},o=Object.create(e);return o[e[0]=\"ANSWER_ONLY\"]=0,o[e[1]=\"ANSWER_STATE_PROOF\"]=1,o[e[2]=\"COST_ANSWER\"]=2,o[e[3]=\"COST_ANSWER_STATE_PROOF\"]=3,o}(),QueryHeader:function(){function e(e){if(e)for(var o=Object.keys(e),t=0;t<o.length;++t)null!=e[o[t]]&&(this[o[t]]=e[o[t]])}return e.prototype.payment=null,e.prototype.responseType=0,e.create=function(o){return new e(o)},e.encode=function(e,o){return o||(o=$Writer.create()),null!=e.payment&&Object.hasOwnProperty.call(e,\"payment\")&&$root.proto.Transaction.encode(e.payment,o.uint32(10).fork()).ldelim(),null!=e.responseType&&Object.hasOwnProperty.call(e,\"responseType\")&&o.uint32(16).int32(e.responseType),o},e.decode=function(e,o){e instanceof $Reader||(e=$Reader.create(e));for(var n=void 0===o?e.len:e.pos+o,i=new $root.proto.QueryHeader,d;e.pos<n;)switch(d=e.uint32(),d>>>3){case 1:i.payment=$root.proto.Transaction.decode(e,e.uint32());break;case 2:i.responseType=e.int32();break;default:e.skipType(7&d);}return i},e}(),Transaction:function(){function e(e){if(e)for(var o=Object.keys(e),t=0;t<o.length;++t)null!=e[o[t]]&&(this[o[t]]=e[o[t]])}return e.prototype.body=null,e.prototype.sigs=null,e.prototype.sigMap=null,e.prototype.bodyBytes=$util.newBuffer([]),e.prototype.signedTransactionBytes=$util.newBuffer([]),e.create=function(o){return new e(o)},e.encode=function(e,o){return o||(o=$Writer.create()),null!=e.body&&Object.hasOwnProperty.call(e,\"body\")&&$root.proto.TransactionBody.encode(e.body,o.uint32(10).fork()).ldelim(),null!=e.sigs&&Object.hasOwnProperty.call(e,\"sigs\")&&$root.proto.SignatureList.encode(e.sigs,o.uint32(18).fork()).ldelim(),null!=e.sigMap&&Object.hasOwnProperty.call(e,\"sigMap\")&&$root.proto.SignatureMap.encode(e.sigMap,o.uint32(26).fork()).ldelim(),null!=e.bodyBytes&&Object.hasOwnProperty.call(e,\"bodyBytes\")&&o.uint32(34).bytes(e.bodyBytes),null!=e.signedTransactionBytes&&Object.hasOwnProperty.call(e,\"signedTransactionBytes\")&&o.uint32(42).bytes(e.signedTransactionBytes),o},e.decode=function(e,o){e instanceof $Reader||(e=$Reader.create(e));for(var n=void 0===o?e.len:e.pos+o,i=new $root.proto.Transaction,d;e.pos<n;)switch(d=e.uint32(),d>>>3){case 1:i.body=$root.proto.TransactionBody.decode(e,e.uint32());break;case 2:i.sigs=$root.proto.SignatureList.decode(e,e.uint32());break;case 3:i.sigMap=$root.proto.SignatureMap.decode(e,e.uint32());break;case 4:i.bodyBytes=e.bytes();break;case 5:i.signedTransactionBytes=e.bytes();break;default:e.skipType(7&d);}return i},e}(),TransactionBody:function(){function e(e){if(e)for(var o=Object.keys(e),t=0;t<o.length;++t)null!=e[o[t]]&&(this[o[t]]=e[o[t]])}e.prototype.transactionID=null,e.prototype.nodeAccountID=null,e.prototype.transactionFee=$util.Long?$util.Long.fromBits(0,0,!0):0,e.prototype.transactionValidDuration=null,e.prototype.generateRecord=!1,e.prototype.memo=\"\",e.prototype.contractCall=null,e.prototype.contractCreateInstance=null,e.prototype.contractUpdateInstance=null,e.prototype.contractDeleteInstance=null,e.prototype.cryptoAddLiveHash=null,e.prototype.cryptoCreateAccount=null,e.prototype.cryptoDelete=null,e.prototype.cryptoDeleteLiveHash=null,e.prototype.cryptoTransfer=null,e.prototype.cryptoUpdateAccount=null,e.prototype.fileAppend=null,e.prototype.fileCreate=null,e.prototype.fileDelete=null,e.prototype.fileUpdate=null,e.prototype.systemDelete=null,e.prototype.systemUndelete=null,e.prototype.freeze=null,e.prototype.consensusCreateTopic=null,e.prototype.consensusUpdateTopic=null,e.prototype.consensusDeleteTopic=null,e.prototype.consensusSubmitMessage=null,e.prototype.uncheckedSubmit=null,e.prototype.tokenCreation=null,e.prototype.tokenFreeze=null,e.prototype.tokenUnfreeze=null,e.prototype.tokenGrantKyc=null,e.prototype.tokenRevokeKyc=null,e.prototype.tokenDeletion=null,e.prototype.tokenUpdate=null,e.prototype.tokenMint=null,e.prototype.tokenBurn=null,e.prototype.tokenWipe=null,e.prototype.tokenAssociate=null,e.prototype.tokenDissociate=null,e.prototype.tokenFeeScheduleUpdate=null,e.prototype.tokenPause=null,e.prototype.tokenUnpause=null,e.prototype.scheduleCreate=null,e.prototype.scheduleDelete=null,e.prototype.scheduleSign=null;let o;return Object.defineProperty(e.prototype,\"data\",{get:$util.oneOfGetter(o=[\"contractCall\",\"contractCreateInstance\",\"contractUpdateInstance\",\"contractDeleteInstance\",\"cryptoAddLiveHash\",\"cryptoCreateAccount\",\"cryptoDelete\",\"cryptoDeleteLiveHash\",\"cryptoTransfer\",\"cryptoUpdateAccount\",\"fileAppend\",\"fileCreate\",\"fileDelete\",\"fileUpdate\",\"systemDelete\",\"systemUndelete\",\"freeze\",\"consensusCreateTopic\",\"consensusUpdateTopic\",\"consensusDeleteTopic\",\"consensusSubmitMessage\",\"uncheckedSubmit\",\"tokenCreation\",\"tokenFreeze\",\"tokenUnfreeze\",\"tokenGrantKyc\",\"tokenRevokeKyc\",\"tokenDeletion\",\"tokenUpdate\",\"tokenMint\",\"tokenBurn\",\"tokenWipe\",\"tokenAssociate\",\"tokenDissociate\",\"tokenFeeScheduleUpdate\",\"tokenPause\",\"tokenUnpause\",\"scheduleCreate\",\"scheduleDelete\",\"scheduleSign\"]),set:$util.oneOfSetter(o)}),e.create=function(o){return new e(o)},e.encode=function(e,o){return o||(o=$Writer.create()),null!=e.transactionID&&Object.hasOwnProperty.call(e,\"transactionID\")&&$root.proto.TransactionID.encode(e.transactionID,o.uint32(10).fork()).ldelim(),null!=e.nodeAccountID&&Object.hasOwnProperty.call(e,\"nodeAccountID\")&&$root.proto.AccountID.encode(e.nodeAccountID,o.uint32(18).fork()).ldelim(),null!=e.transactionFee&&Object.hasOwnProperty.call(e,\"transactionFee\")&&o.uint32(24).uint64(e.transactionFee),null!=e.transactionValidDuration&&Object.hasOwnProperty.call(e,\"transactionValidDuration\")&&$root.proto.Duration.encode(e.transactionValidDuration,o.uint32(34).fork()).ldelim(),null!=e.generateRecord&&Object.hasOwnProperty.call(e,\"generateRecord\")&&o.uint32(40).bool(e.generateRecord),null!=e.memo&&Object.hasOwnProperty.call(e,\"memo\")&&o.uint32(50).string(e.memo),null!=e.contractCall&&Object.hasOwnProperty.call(e,\"contractCall\")&&$root.proto.ContractCallTransactionBody.encode(e.contractCall,o.uint32(58).fork()).ldelim(),null!=e.contractCreateInstance&&Object.hasOwnProperty.call(e,\"contractCreateInstance\")&&$root.proto.ContractCreateTransactionBody.encode(e.contractCreateInstance,o.uint32(66).fork()).ldelim(),null!=e.contractUpdateInstance&&Object.hasOwnProperty.call(e,\"contractUpdateInstance\")&&$root.proto.ContractUpdateTransactionBody.encode(e.contractUpdateInstance,o.uint32(74).fork()).ldelim(),null!=e.cryptoAddLiveHash&&Object.hasOwnProperty.call(e,\"cryptoAddLiveHash\")&&$root.proto.CryptoAddLiveHashTransactionBody.encode(e.cryptoAddLiveHash,o.uint32(82).fork()).ldelim(),null!=e.cryptoCreateAccount&&Object.hasOwnProperty.call(e,\"cryptoCreateAccount\")&&$root.proto.CryptoCreateTransactionBody.encode(e.cryptoCreateAccount,o.uint32(90).fork()).ldelim(),null!=e.cryptoDelete&&Object.hasOwnProperty.call(e,\"cryptoDelete\")&&$root.proto.CryptoDeleteTransactionBody.encode(e.cryptoDelete,o.uint32(98).fork()).ldelim(),null!=e.cryptoDeleteLiveHash&&Object.hasOwnProperty.call(e,\"cryptoDeleteLiveHash\")&&$root.proto.CryptoDeleteLiveHashTransactionBody.encode(e.cryptoDeleteLiveHash,o.uint32(106).fork()).ldelim(),null!=e.cryptoTransfer&&Object.hasOwnProperty.call(e,\"cryptoTransfer\")&&$root.proto.CryptoTransferTransactionBody.encode(e.cryptoTransfer,o.uint32(114).fork()).ldelim(),null!=e.cryptoUpdateAccount&&Object.hasOwnProperty.call(e,\"cryptoUpdateAccount\")&&$root.proto.CryptoUpdateTransactionBody.encode(e.cryptoUpdateAccount,o.uint32(122).fork()).ldelim(),null!=e.fileAppend&&Object.hasOwnProperty.call(e,\"fileAppend\")&&$root.proto.FileAppendTransactionBody.encode(e.fileAppend,o.uint32(130).fork()).ldelim(),null!=e.fileCreate&&Object.hasOwnProperty.call(e,\"fileCreate\")&&$root.proto.FileCreateTransactionBody.encode(e.fileCreate,o.uint32(138).fork()).ldelim(),null!=e.fileDelete&&Object.hasOwnProperty.call(e,\"fileDelete\")&&$root.proto.FileDeleteTransactionBody.encode(e.fileDelete,o.uint32(146).fork()).ldelim(),null!=e.fileUpdate&&Object.hasOwnProperty.call(e,\"fileUpdate\")&&$root.proto.FileUpdateTransactionBody.encode(e.fileUpdate,o.uint32(154).fork()).ldelim(),null!=e.systemDelete&&Object.hasOwnProperty.call(e,\"systemDelete\")&&$root.proto.SystemDeleteTransactionBody.encode(e.systemDelete,o.uint32(162).fork()).ldelim(),null!=e.systemUndelete&&Object.hasOwnProperty.call(e,\"systemUndelete\")&&$root.proto.SystemUndeleteTransactionBody.encode(e.systemUndelete,o.uint32(170).fork()).ldelim(),null!=e.contractDeleteInstance&&Object.hasOwnProperty.call(e,\"contractDeleteInstance\")&&$root.proto.ContractDeleteTransactionBody.encode(e.contractDeleteInstance,o.uint32(178).fork()).ldelim(),null!=e.freeze&&Object.hasOwnProperty.call(e,\"freeze\")&&$root.proto.FreezeTransactionBody.encode(e.freeze,o.uint32(186).fork()).ldelim(),null!=e.consensusCreateTopic&&Object.hasOwnProperty.call(e,\"consensusCreateTopic\")&&$root.proto.ConsensusCreateTopicTransactionBody.encode(e.consensusCreateTopic,o.uint32(194).fork()).ldelim(),null!=e.consensusUpdateTopic&&Object.hasOwnProperty.call(e,\"consensusUpdateTopic\")&&$root.proto.ConsensusUpdateTopicTransactionBody.encode(e.consensusUpdateTopic,o.uint32(202).fork()).ldelim(),null!=e.consensusDeleteTopic&&Object.hasOwnProperty.call(e,\"consensusDeleteTopic\")&&$root.proto.ConsensusDeleteTopicTransactionBody.encode(e.consensusDeleteTopic,o.uint32(210).fork()).ldelim(),null!=e.consensusSubmitMessage&&Object.hasOwnProperty.call(e,\"consensusSubmitMessage\")&&$root.proto.ConsensusSubmitMessageTransactionBody.encode(e.consensusSubmitMessage,o.uint32(218).fork()).ldelim(),null!=e.uncheckedSubmit&&Object.hasOwnProperty.call(e,\"uncheckedSubmit\")&&$root.proto.UncheckedSubmitBody.encode(e.uncheckedSubmit,o.uint32(226).fork()).ldelim(),null!=e.tokenCreation&&Object.hasOwnProperty.call(e,\"tokenCreation\")&&$root.proto.TokenCreateTransactionBody.encode(e.tokenCreation,o.uint32(234).fork()).ldelim(),null!=e.tokenFreeze&&Object.hasOwnProperty.call(e,\"tokenFreeze\")&&$root.proto.TokenFreezeAccountTransactionBody.encode(e.tokenFreeze,o.uint32(250).fork()).ldelim(),null!=e.tokenUnfreeze&&Object.hasOwnProperty.call(e,\"tokenUnfreeze\")&&$root.proto.TokenUnfreezeAccountTransactionBody.encode(e.tokenUnfreeze,o.uint32(258).fork()).ldelim(),null!=e.tokenGrantKyc&&Object.hasOwnProperty.call(e,\"tokenGrantKyc\")&&$root.proto.TokenGrantKycTransactionBody.encode(e.tokenGrantKyc,o.uint32(266).fork()).ldelim(),null!=e.tokenRevokeKyc&&Object.hasOwnProperty.call(e,\"tokenRevokeKyc\")&&$root.proto.TokenRevokeKycTransactionBody.encode(e.tokenRevokeKyc,o.uint32(274).fork()).ldelim(),null!=e.tokenDeletion&&Object.hasOwnProperty.call(e,\"tokenDeletion\")&&$root.proto.TokenDeleteTransactionBody.encode(e.tokenDeletion,o.uint32(282).fork()).ldelim(),null!=e.tokenUpdate&&Object.hasOwnProperty.call(e,\"tokenUpdate\")&&$root.proto.TokenUpdateTransactionBody.encode(e.tokenUpdate,o.uint32(290).fork()).ldelim(),null!=e.tokenMint&&Object.hasOwnProperty.call(e,\"tokenMint\")&&$root.proto.TokenMintTransactionBody.encode(e.tokenMint,o.uint32(298).fork()).ldelim(),null!=e.tokenBurn&&Object.hasOwnProperty.call(e,\"tokenBurn\")&&$root.proto.TokenBurnTransactionBody.encode(e.tokenBurn,o.uint32(306).fork()).ldelim(),null!=e.tokenWipe&&Object.hasOwnProperty.call(e,\"tokenWipe\")&&$root.proto.TokenWipeAccountTransactionBody.encode(e.tokenWipe,o.uint32(314).fork()).ldelim(),null!=e.tokenAssociate&&Object.hasOwnProperty.call(e,\"tokenAssociate\")&&$root.proto.TokenAssociateTransactionBody.encode(e.tokenAssociate,o.uint32(322).fork()).ldelim(),null!=e.tokenDissociate&&Object.hasOwnProperty.call(e,\"tokenDissociate\")&&$root.proto.TokenDissociateTransactionBody.encode(e.tokenDissociate,o.uint32(330).fork()).ldelim(),null!=e.scheduleCreate&&Object.hasOwnProperty.call(e,\"scheduleCreate\")&&$root.proto.ScheduleCreateTransactionBody.encode(e.scheduleCreate,o.uint32(338).fork()).ldelim(),null!=e.scheduleDelete&&Object.hasOwnProperty.call(e,\"scheduleDelete\")&&$root.proto.ScheduleDeleteTransactionBody.encode(e.scheduleDelete,o.uint32(346).fork()).ldelim(),null!=e.scheduleSign&&Object.hasOwnProperty.call(e,\"scheduleSign\")&&$root.proto.ScheduleSignTransactionBody.encode(e.scheduleSign,o.uint32(354).fork()).ldelim(),null!=e.tokenFeeScheduleUpdate&&Object.hasOwnProperty.call(e,\"tokenFeeScheduleUpdate\")&&$root.proto.TokenFeeScheduleUpdateTransactionBody.encode(e.tokenFeeScheduleUpdate,o.uint32(362).fork()).ldelim(),null!=e.tokenPause&&Object.hasOwnProperty.call(e,\"tokenPause\")&&$root.proto.TokenPauseTransactionBody.encode(e.tokenPause,o.uint32(370).fork()).ldelim(),null!=e.tokenUnpause&&Object.hasOwnProperty.call(e,\"tokenUnpause\")&&$root.proto.TokenUnpauseTransactionBody.encode(e.tokenUnpause,o.uint32(378).fork()).ldelim(),o},e.decode=function(e,o){e instanceof $Reader||(e=$Reader.create(e));for(var n=void 0===o?e.len:e.pos+o,i=new $root.proto.TransactionBody,d;e.pos<n;)switch(d=e.uint32(),d>>>3){case 1:i.transactionID=$root.proto.TransactionID.decode(e,e.uint32());break;case 2:i.nodeAccountID=$root.proto.AccountID.decode(e,e.uint32());break;case 3:i.transactionFee=e.uint64();break;case 4:i.transactionValidDuration=$root.proto.Duration.decode(e,e.uint32());break;case 5:i.generateRecord=e.bool();break;case 6:i.memo=e.string();break;case 7:i.contractCall=$root.proto.ContractCallTransactionBody.decode(e,e.uint32());break;case 8:i.contractCreateInstance=$root.proto.ContractCreateTransactionBody.decode(e,e.uint32());break;case 9:i.contractUpdateInstance=$root.proto.ContractUpdateTransactionBody.decode(e,e.uint32());break;case 22:i.contractDeleteInstance=$root.proto.ContractDeleteTransactionBody.decode(e,e.uint32());break;case 10:i.cryptoAddLiveHash=$root.proto.CryptoAddLiveHashTransactionBody.decode(e,e.uint32());break;case 11:i.cryptoCreateAccount=$root.proto.CryptoCreateTransactionBody.decode(e,e.uint32());break;case 12:i.cryptoDelete=$root.proto.CryptoDeleteTransactionBody.decode(e,e.uint32());break;case 13:i.cryptoDeleteLiveHash=$root.proto.CryptoDeleteLiveHashTransactionBody.decode(e,e.uint32());break;case 14:i.cryptoTransfer=$root.proto.CryptoTransferTransactionBody.decode(e,e.uint32());break;case 15:i.cryptoUpdateAccount=$root.proto.CryptoUpdateTransactionBody.decode(e,e.uint32());break;case 16:i.fileAppend=$root.proto.FileAppendTransactionBody.decode(e,e.uint32());break;case 17:i.fileCreate=$root.proto.FileCreateTransactionBody.decode(e,e.uint32());break;case 18:i.fileDelete=$root.proto.FileDeleteTransactionBody.decode(e,e.uint32());break;case 19:i.fileUpdate=$root.proto.FileUpdateTransactionBody.decode(e,e.uint32());break;case 20:i.systemDelete=$root.proto.SystemDeleteTransactionBody.decode(e,e.uint32());break;case 21:i.systemUndelete=$root.proto.SystemUndeleteTransactionBody.decode(e,e.uint32());break;case 23:i.freeze=$root.proto.FreezeTransactionBody.decode(e,e.uint32());break;case 24:i.consensusCreateTopic=$root.proto.ConsensusCreateTopicTransactionBody.decode(e,e.uint32());break;case 25:i.consensusUpdateTopic=$root.proto.ConsensusUpdateTopicTransactionBody.decode(e,e.uint32());break;case 26:i.consensusDeleteTopic=$root.proto.ConsensusDeleteTopicTransactionBody.decode(e,e.uint32());break;case 27:i.consensusSubmitMessage=$root.proto.ConsensusSubmitMessageTransactionBody.decode(e,e.uint32());break;case 28:i.uncheckedSubmit=$root.proto.UncheckedSubmitBody.decode(e,e.uint32());break;case 29:i.tokenCreation=$root.proto.TokenCreateTransactionBody.decode(e,e.uint32());break;case 31:i.tokenFreeze=$root.proto.TokenFreezeAccountTransactionBody.decode(e,e.uint32());break;case 32:i.tokenUnfreeze=$root.proto.TokenUnfreezeAccountTransactionBody.decode(e,e.uint32());break;case 33:i.tokenGrantKyc=$root.proto.TokenGrantKycTransactionBody.decode(e,e.uint32());break;case 34:i.tokenRevokeKyc=$root.proto.TokenRevokeKycTransactionBody.decode(e,e.uint32());break;case 35:i.tokenDeletion=$root.proto.TokenDeleteTransactionBody.decode(e,e.uint32());break;case 36:i.tokenUpdate=$root.proto.TokenUpdateTransactionBody.decode(e,e.uint32());break;case 37:i.tokenMint=$root.proto.TokenMintTransactionBody.decode(e,e.uint32());break;case 38:i.tokenBurn=$root.proto.TokenBurnTransactionBody.decode(e,e.uint32());break;case 39:i.tokenWipe=$root.proto.TokenWipeAccountTransactionBody.decode(e,e.uint32());break;case 40:i.tokenAssociate=$root.proto.TokenAssociateTransactionBody.decode(e,e.uint32());break;case 41:i.tokenDissociate=$root.proto.TokenDissociateTransactionBody.decode(e,e.uint32());break;case 45:i.tokenFeeScheduleUpdate=$root.proto.TokenFeeScheduleUpdateTransactionBody.decode(e,e.uint32());break;case 46:i.tokenPause=$root.proto.TokenPauseTransactionBody.decode(e,e.uint32());break;case 47:i.tokenUnpause=$root.proto.TokenUnpauseTransactionBody.decode(e,e.uint32());break;case 42:i.scheduleCreate=$root.proto.ScheduleCreateTransactionBody.decode(e,e.uint32());break;case 43:i.scheduleDelete=$root.proto.ScheduleDeleteTransactionBody.decode(e,e.uint32());break;case 44:i.scheduleSign=$root.proto.ScheduleSignTransactionBody.decode(e,e.uint32());break;default:e.skipType(7&d);}return i},e}(),SystemDeleteTransactionBody:function(){function e(e){if(e)for(var o=Object.keys(e),t=0;t<o.length;++t)null!=e[o[t]]&&(this[o[t]]=e[o[t]])}e.prototype.fileID=null,e.prototype.contractID=null,e.prototype.expirationTime=null;let o;return Object.defineProperty(e.prototype,\"id\",{get:$util.oneOfGetter(o=[\"fileID\",\"contractID\"]),set:$util.oneOfSetter(o)}),e.create=function(o){return new e(o)},e.encode=function(e,o){return o||(o=$Writer.create()),null!=e.fileID&&Object.hasOwnProperty.call(e,\"fileID\")&&$root.proto.FileID.encode(e.fileID,o.uint32(10).fork()).ldelim(),null!=e.contractID&&Object.hasOwnProperty.call(e,\"contractID\")&&$root.proto.ContractID.encode(e.contractID,o.uint32(18).fork()).ldelim(),null!=e.expirationTime&&Object.hasOwnProperty.call(e,\"expirationTime\")&&$root.proto.TimestampSeconds.encode(e.expirationTime,o.uint32(26).fork()).ldelim(),o},e.decode=function(e,o){e instanceof $Reader||(e=$Reader.create(e));for(var n=void 0===o?e.len:e.pos+o,i=new $root.proto.SystemDeleteTransactionBody,d;e.pos<n;)switch(d=e.uint32(),d>>>3){case 1:i.fileID=$root.proto.FileID.decode(e,e.uint32());break;case 2:i.contractID=$root.proto.ContractID.decode(e,e.uint32());break;case 3:i.expirationTime=$root.proto.TimestampSeconds.decode(e,e.uint32());break;default:e.skipType(7&d);}return i},e}(),SystemUndeleteTransactionBody:function(){function e(e){if(e)for(var o=Object.keys(e),t=0;t<o.length;++t)null!=e[o[t]]&&(this[o[t]]=e[o[t]])}e.prototype.fileID=null,e.prototype.contractID=null;let o;return Object.defineProperty(e.prototype,\"id\",{get:$util.oneOfGetter(o=[\"fileID\",\"contractID\"]),set:$util.oneOfSetter(o)}),e.create=function(o){return new e(o)},e.encode=function(e,o){return o||(o=$Writer.create()),null!=e.fileID&&Object.hasOwnProperty.call(e,\"fileID\")&&$root.proto.FileID.encode(e.fileID,o.uint32(10).fork()).ldelim(),null!=e.contractID&&Object.hasOwnProperty.call(e,\"contractID\")&&$root.proto.ContractID.encode(e.contractID,o.uint32(18).fork()).ldelim(),o},e.decode=function(e,o){e instanceof $Reader||(e=$Reader.create(e));for(var n=void 0===o?e.len:e.pos+o,i=new $root.proto.SystemUndeleteTransactionBody,d;e.pos<n;)switch(d=e.uint32(),d>>>3){case 1:i.fileID=$root.proto.FileID.decode(e,e.uint32());break;case 2:i.contractID=$root.proto.ContractID.decode(e,e.uint32());break;default:e.skipType(7&d);}return i},e}(),FreezeTransactionBody:function(){function e(e){if(e)for(var o=Object.keys(e),t=0;t<o.length;++t)null!=e[o[t]]&&(this[o[t]]=e[o[t]])}return e.prototype.startHour=0,e.prototype.startMin=0,e.prototype.endHour=0,e.prototype.endMin=0,e.prototype.updateFile=null,e.prototype.fileHash=$util.newBuffer([]),e.prototype.startTime=null,e.prototype.freezeType=0,e.create=function(o){return new e(o)},e.encode=function(e,o){return o||(o=$Writer.create()),null!=e.startHour&&Object.hasOwnProperty.call(e,\"startHour\")&&o.uint32(8).int32(e.startHour),null!=e.startMin&&Object.hasOwnProperty.call(e,\"startMin\")&&o.uint32(16).int32(e.startMin),null!=e.endHour&&Object.hasOwnProperty.call(e,\"endHour\")&&o.uint32(24).int32(e.endHour),null!=e.endMin&&Object.hasOwnProperty.call(e,\"endMin\")&&o.uint32(32).int32(e.endMin),null!=e.updateFile&&Object.hasOwnProperty.call(e,\"updateFile\")&&$root.proto.FileID.encode(e.updateFile,o.uint32(42).fork()).ldelim(),null!=e.fileHash&&Object.hasOwnProperty.call(e,\"fileHash\")&&o.uint32(50).bytes(e.fileHash),null!=e.startTime&&Object.hasOwnProperty.call(e,\"startTime\")&&$root.proto.Timestamp.encode(e.startTime,o.uint32(58).fork()).ldelim(),null!=e.freezeType&&Object.hasOwnProperty.call(e,\"freezeType\")&&o.uint32(64).int32(e.freezeType),o},e.decode=function(e,o){e instanceof $Reader||(e=$Reader.create(e));for(var n=void 0===o?e.len:e.pos+o,i=new $root.proto.FreezeTransactionBody,d;e.pos<n;)switch(d=e.uint32(),d>>>3){case 1:i.startHour=e.int32();break;case 2:i.startMin=e.int32();break;case 3:i.endHour=e.int32();break;case 4:i.endMin=e.int32();break;case 5:i.updateFile=$root.proto.FileID.decode(e,e.uint32());break;case 6:i.fileHash=e.bytes();break;case 7:i.startTime=$root.proto.Timestamp.decode(e,e.uint32());break;case 8:i.freezeType=e.int32();break;default:e.skipType(7&d);}return i},e}(),FreezeType:function(){const e={},o=Object.create(e);return o[e[0]=\"UNKNOWN_FREEZE_TYPE\"]=0,o[e[1]=\"FREEZE_ONLY\"]=1,o[e[2]=\"PREPARE_UPGRADE\"]=2,o[e[3]=\"FREEZE_UPGRADE\"]=3,o[e[4]=\"FREEZE_ABORT\"]=4,o[e[5]=\"TELEMETRY_UPGRADE\"]=5,o}(),ContractCallTransactionBody:function(){function e(e){if(e)for(var o=Object.keys(e),t=0;t<o.length;++t)null!=e[o[t]]&&(this[o[t]]=e[o[t]])}return e.prototype.contractID=null,e.prototype.gas=$util.Long?$util.Long.fromBits(0,0,!1):0,e.prototype.amount=$util.Long?$util.Long.fromBits(0,0,!1):0,e.prototype.functionParameters=$util.newBuffer([]),e.create=function(o){return new e(o)},e.encode=function(e,o){return o||(o=$Writer.create()),null!=e.contractID&&Object.hasOwnProperty.call(e,\"contractID\")&&$root.proto.ContractID.encode(e.contractID,o.uint32(10).fork()).ldelim(),null!=e.gas&&Object.hasOwnProperty.call(e,\"gas\")&&o.uint32(16).int64(e.gas),null!=e.amount&&Object.hasOwnProperty.call(e,\"amount\")&&o.uint32(24).int64(e.amount),null!=e.functionParameters&&Object.hasOwnProperty.call(e,\"functionParameters\")&&o.uint32(34).bytes(e.functionParameters),o},e.decode=function(e,o){e instanceof $Reader||(e=$Reader.create(e));for(var n=void 0===o?e.len:e.pos+o,i=new $root.proto.ContractCallTransactionBody,d;e.pos<n;)switch(d=e.uint32(),d>>>3){case 1:i.contractID=$root.proto.ContractID.decode(e,e.uint32());break;case 2:i.gas=e.int64();break;case 3:i.amount=e.int64();break;case 4:i.functionParameters=e.bytes();break;default:e.skipType(7&d);}return i},e}(),ContractCreateTransactionBody:function(){function e(e){if(e)for(var o=Object.keys(e),t=0;t<o.length;++t)null!=e[o[t]]&&(this[o[t]]=e[o[t]])}return e.prototype.fileID=null,e.prototype.adminKey=null,e.prototype.gas=$util.Long?$util.Long.fromBits(0,0,!1):0,e.prototype.initialBalance=$util.Long?$util.Long.fromBits(0,0,!1):0,e.prototype.proxyAccountID=null,e.prototype.autoRenewPeriod=null,e.prototype.constructorParameters=$util.newBuffer([]),e.prototype.shardID=null,e.prototype.realmID=null,e.prototype.newRealmAdminKey=null,e.prototype.memo=\"\",e.create=function(o){return new e(o)},e.encode=function(e,o){return o||(o=$Writer.create()),null!=e.fileID&&Object.hasOwnProperty.call(e,\"fileID\")&&$root.proto.FileID.encode(e.fileID,o.uint32(10).fork()).ldelim(),null!=e.adminKey&&Object.hasOwnProperty.call(e,\"adminKey\")&&$root.proto.Key.encode(e.adminKey,o.uint32(26).fork()).ldelim(),null!=e.gas&&Object.hasOwnProperty.call(e,\"gas\")&&o.uint32(32).int64(e.gas),null!=e.initialBalance&&Object.hasOwnProperty.call(e,\"initialBalance\")&&o.uint32(40).int64(e.initialBalance),null!=e.proxyAccountID&&Object.hasOwnProperty.call(e,\"proxyAccountID\")&&$root.proto.AccountID.encode(e.proxyAccountID,o.uint32(50).fork()).ldelim(),null!=e.autoRenewPeriod&&Object.hasOwnProperty.call(e,\"autoRenewPeriod\")&&$root.proto.Duration.encode(e.autoRenewPeriod,o.uint32(66).fork()).ldelim(),null!=e.constructorParameters&&Object.hasOwnProperty.call(e,\"constructorParameters\")&&o.uint32(74).bytes(e.constructorParameters),null!=e.shardID&&Object.hasOwnProperty.call(e,\"shardID\")&&$root.proto.ShardID.encode(e.shardID,o.uint32(82).fork()).ldelim(),null!=e.realmID&&Object.hasOwnProperty.call(e,\"realmID\")&&$root.proto.RealmID.encode(e.realmID,o.uint32(90).fork()).ldelim(),null!=e.newRealmAdminKey&&Object.hasOwnProperty.call(e,\"newRealmAdminKey\")&&$root.proto.Key.encode(e.newRealmAdminKey,o.uint32(98).fork()).ldelim(),null!=e.memo&&Object.hasOwnProperty.call(e,\"memo\")&&o.uint32(106).string(e.memo),o},e.decode=function(e,o){e instanceof $Reader||(e=$Reader.create(e));for(var n=void 0===o?e.len:e.pos+o,i=new $root.proto.ContractCreateTransactionBody,d;e.pos<n;)switch(d=e.uint32(),d>>>3){case 1:i.fileID=$root.proto.FileID.decode(e,e.uint32());break;case 3:i.adminKey=$root.proto.Key.decode(e,e.uint32());break;case 4:i.gas=e.int64();break;case 5:i.initialBalance=e.int64();break;case 6:i.proxyAccountID=$root.proto.AccountID.decode(e,e.uint32());break;case 8:i.autoRenewPeriod=$root.proto.Duration.decode(e,e.uint32());break;case 9:i.constructorParameters=e.bytes();break;case 10:i.shardID=$root.proto.ShardID.decode(e,e.uint32());break;case 11:i.realmID=$root.proto.RealmID.decode(e,e.uint32());break;case 12:i.newRealmAdminKey=$root.proto.Key.decode(e,e.uint32());break;case 13:i.memo=e.string();break;default:e.skipType(7&d);}return i},e}(),ContractUpdateTransactionBody:function(){function e(e){if(e)for(var o=Object.keys(e),t=0;t<o.length;++t)null!=e[o[t]]&&(this[o[t]]=e[o[t]])}e.prototype.contractID=null,e.prototype.expirationTime=null,e.prototype.adminKey=null,e.prototype.proxyAccountID=null,e.prototype.autoRenewPeriod=null,e.prototype.fileID=null,e.prototype.memo=null,e.prototype.memoWrapper=null;let o;return Object.defineProperty(e.prototype,\"memoField\",{get:$util.oneOfGetter(o=[\"memo\",\"memoWrapper\"]),set:$util.oneOfSetter(o)}),e.create=function(o){return new e(o)},e.encode=function(e,o){return o||(o=$Writer.create()),null!=e.contractID&&Object.hasOwnProperty.call(e,\"contractID\")&&$root.proto.ContractID.encode(e.contractID,o.uint32(10).fork()).ldelim(),null!=e.expirationTime&&Object.hasOwnProperty.call(e,\"expirationTime\")&&$root.proto.Timestamp.encode(e.expirationTime,o.uint32(18).fork()).ldelim(),null!=e.adminKey&&Object.hasOwnProperty.call(e,\"adminKey\")&&$root.proto.Key.encode(e.adminKey,o.uint32(26).fork()).ldelim(),null!=e.proxyAccountID&&Object.hasOwnProperty.call(e,\"proxyAccountID\")&&$root.proto.AccountID.encode(e.proxyAccountID,o.uint32(50).fork()).ldelim(),null!=e.autoRenewPeriod&&Object.hasOwnProperty.call(e,\"autoRenewPeriod\")&&$root.proto.Duration.encode(e.autoRenewPeriod,o.uint32(58).fork()).ldelim(),null!=e.fileID&&Object.hasOwnProperty.call(e,\"fileID\")&&$root.proto.FileID.encode(e.fileID,o.uint32(66).fork()).ldelim(),null!=e.memo&&Object.hasOwnProperty.call(e,\"memo\")&&o.uint32(74).string(e.memo),null!=e.memoWrapper&&Object.hasOwnProperty.call(e,\"memoWrapper\")&&$root.google.protobuf.StringValue.encode(e.memoWrapper,o.uint32(82).fork()).ldelim(),o},e.decode=function(e,o){e instanceof $Reader||(e=$Reader.create(e));for(var n=void 0===o?e.len:e.pos+o,i=new $root.proto.ContractUpdateTransactionBody,d;e.pos<n;)switch(d=e.uint32(),d>>>3){case 1:i.contractID=$root.proto.ContractID.decode(e,e.uint32());break;case 2:i.expirationTime=$root.proto.Timestamp.decode(e,e.uint32());break;case 3:i.adminKey=$root.proto.Key.decode(e,e.uint32());break;case 6:i.proxyAccountID=$root.proto.AccountID.decode(e,e.uint32());break;case 7:i.autoRenewPeriod=$root.proto.Duration.decode(e,e.uint32());break;case 8:i.fileID=$root.proto.FileID.decode(e,e.uint32());break;case 9:i.memo=e.string();break;case 10:i.memoWrapper=$root.google.protobuf.StringValue.decode(e,e.uint32());break;default:e.skipType(7&d);}return i},e}(),LiveHash:function(){function e(e){if(e)for(var o=Object.keys(e),t=0;t<o.length;++t)null!=e[o[t]]&&(this[o[t]]=e[o[t]])}return e.prototype.accountId=null,e.prototype.hash=$util.newBuffer([]),e.prototype.keys=null,e.prototype.duration=null,e.create=function(o){return new e(o)},e.encode=function(e,o){return o||(o=$Writer.create()),null!=e.accountId&&Object.hasOwnProperty.call(e,\"accountId\")&&$root.proto.AccountID.encode(e.accountId,o.uint32(10).fork()).ldelim(),null!=e.hash&&Object.hasOwnProperty.call(e,\"hash\")&&o.uint32(18).bytes(e.hash),null!=e.keys&&Object.hasOwnProperty.call(e,\"keys\")&&$root.proto.KeyList.encode(e.keys,o.uint32(26).fork()).ldelim(),null!=e.duration&&Object.hasOwnProperty.call(e,\"duration\")&&$root.proto.Duration.encode(e.duration,o.uint32(42).fork()).ldelim(),o},e.decode=function(e,o){e instanceof $Reader||(e=$Reader.create(e));for(var n=void 0===o?e.len:e.pos+o,i=new $root.proto.LiveHash,d;e.pos<n;)switch(d=e.uint32(),d>>>3){case 1:i.accountId=$root.proto.AccountID.decode(e,e.uint32());break;case 2:i.hash=e.bytes();break;case 3:i.keys=$root.proto.KeyList.decode(e,e.uint32());break;case 5:i.duration=$root.proto.Duration.decode(e,e.uint32());break;default:e.skipType(7&d);}return i},e}(),CryptoAddLiveHashTransactionBody:function(){function e(e){if(e)for(var o=Object.keys(e),t=0;t<o.length;++t)null!=e[o[t]]&&(this[o[t]]=e[o[t]])}return e.prototype.liveHash=null,e.create=function(o){return new e(o)},e.encode=function(e,o){return o||(o=$Writer.create()),null!=e.liveHash&&Object.hasOwnProperty.call(e,\"liveHash\")&&$root.proto.LiveHash.encode(e.liveHash,o.uint32(26).fork()).ldelim(),o},e.decode=function(e,o){e instanceof $Reader||(e=$Reader.create(e));for(var n=void 0===o?e.len:e.pos+o,i=new $root.proto.CryptoAddLiveHashTransactionBody,d;e.pos<n;)switch(d=e.uint32(),d>>>3){case 3:i.liveHash=$root.proto.LiveHash.decode(e,e.uint32());break;default:e.skipType(7&d);}return i},e}(),CryptoCreateTransactionBody:function(){function e(e){if(e)for(var o=Object.keys(e),t=0;t<o.length;++t)null!=e[o[t]]&&(this[o[t]]=e[o[t]])}return e.prototype.key=null,e.prototype.initialBalance=$util.Long?$util.Long.fromBits(0,0,!0):0,e.prototype.proxyAccountID=null,e.prototype.sendRecordThreshold=$util.Long?$util.Long.fromBits(0,0,!0):0,e.prototype.receiveRecordThreshold=$util.Long?$util.Long.fromBits(0,0,!0):0,e.prototype.receiverSigRequired=!1,e.prototype.autoRenewPeriod=null,e.prototype.shardID=null,e.prototype.realmID=null,e.prototype.newRealmAdminKey=null,e.prototype.memo=\"\",e.prototype.maxAutomaticTokenAssociations=0,e.create=function(o){return new e(o)},e.encode=function(e,o){return o||(o=$Writer.create()),null!=e.key&&Object.hasOwnProperty.call(e,\"key\")&&$root.proto.Key.encode(e.key,o.uint32(10).fork()).ldelim(),null!=e.initialBalance&&Object.hasOwnProperty.call(e,\"initialBalance\")&&o.uint32(16).uint64(e.initialBalance),null!=e.proxyAccountID&&Object.hasOwnProperty.call(e,\"proxyAccountID\")&&$root.proto.AccountID.encode(e.proxyAccountID,o.uint32(26).fork()).ldelim(),null!=e.sendRecordThreshold&&Object.hasOwnProperty.call(e,\"sendRecordThreshold\")&&o.uint32(48).uint64(e.sendRecordThreshold),null!=e.receiveRecordThreshold&&Object.hasOwnProperty.call(e,\"receiveRecordThreshold\")&&o.uint32(56).uint64(e.receiveRecordThreshold),null!=e.receiverSigRequired&&Object.hasOwnProperty.call(e,\"receiverSigRequired\")&&o.uint32(64).bool(e.receiverSigRequired),null!=e.autoRenewPeriod&&Object.hasOwnProperty.call(e,\"autoRenewPeriod\")&&$root.proto.Duration.encode(e.autoRenewPeriod,o.uint32(74).fork()).ldelim(),null!=e.shardID&&Object.hasOwnProperty.call(e,\"shardID\")&&$root.proto.ShardID.encode(e.shardID,o.uint32(82).fork()).ldelim(),null!=e.realmID&&Object.hasOwnProperty.call(e,\"realmID\")&&$root.proto.RealmID.encode(e.realmID,o.uint32(90).fork()).ldelim(),null!=e.newRealmAdminKey&&Object.hasOwnProperty.call(e,\"newRealmAdminKey\")&&$root.proto.Key.encode(e.newRealmAdminKey,o.uint32(98).fork()).ldelim(),null!=e.memo&&Object.hasOwnProperty.call(e,\"memo\")&&o.uint32(106).string(e.memo),null!=e.maxAutomaticTokenAssociations&&Object.hasOwnProperty.call(e,\"maxAutomaticTokenAssociations\")&&o.uint32(112).int32(e.maxAutomaticTokenAssociations),o},e.decode=function(e,o){e instanceof $Reader||(e=$Reader.create(e));for(var n=void 0===o?e.len:e.pos+o,i=new $root.proto.CryptoCreateTransactionBody,d;e.pos<n;)switch(d=e.uint32(),d>>>3){case 1:i.key=$root.proto.Key.decode(e,e.uint32());break;case 2:i.initialBalance=e.uint64();break;case 3:i.proxyAccountID=$root.proto.AccountID.decode(e,e.uint32());break;case 6:i.sendRecordThreshold=e.uint64();break;case 7:i.receiveRecordThreshold=e.uint64();break;case 8:i.receiverSigRequired=e.bool();break;case 9:i.autoRenewPeriod=$root.proto.Duration.decode(e,e.uint32());break;case 10:i.shardID=$root.proto.ShardID.decode(e,e.uint32());break;case 11:i.realmID=$root.proto.RealmID.decode(e,e.uint32());break;case 12:i.newRealmAdminKey=$root.proto.Key.decode(e,e.uint32());break;case 13:i.memo=e.string();break;case 14:i.maxAutomaticTokenAssociations=e.int32();break;default:e.skipType(7&d);}return i},e}(),CryptoDeleteTransactionBody:function(){function e(e){if(e)for(var o=Object.keys(e),t=0;t<o.length;++t)null!=e[o[t]]&&(this[o[t]]=e[o[t]])}return e.prototype.transferAccountID=null,e.prototype.deleteAccountID=null,e.create=function(o){return new e(o)},e.encode=function(e,o){return o||(o=$Writer.create()),null!=e.transferAccountID&&Object.hasOwnProperty.call(e,\"transferAccountID\")&&$root.proto.AccountID.encode(e.transferAccountID,o.uint32(10).fork()).ldelim(),null!=e.deleteAccountID&&Object.hasOwnProperty.call(e,\"deleteAccountID\")&&$root.proto.AccountID.encode(e.deleteAccountID,o.uint32(18).fork()).ldelim(),o},e.decode=function(e,o){e instanceof $Reader||(e=$Reader.create(e));for(var n=void 0===o?e.len:e.pos+o,i=new $root.proto.CryptoDeleteTransactionBody,d;e.pos<n;)switch(d=e.uint32(),d>>>3){case 1:i.transferAccountID=$root.proto.AccountID.decode(e,e.uint32());break;case 2:i.deleteAccountID=$root.proto.AccountID.decode(e,e.uint32());break;default:e.skipType(7&d);}return i},e}(),CryptoDeleteLiveHashTransactionBody:function(){function e(e){if(e)for(var o=Object.keys(e),t=0;t<o.length;++t)null!=e[o[t]]&&(this[o[t]]=e[o[t]])}return e.prototype.accountOfLiveHash=null,e.prototype.liveHashToDelete=$util.newBuffer([]),e.create=function(o){return new e(o)},e.encode=function(e,o){return o||(o=$Writer.create()),null!=e.accountOfLiveHash&&Object.hasOwnProperty.call(e,\"accountOfLiveHash\")&&$root.proto.AccountID.encode(e.accountOfLiveHash,o.uint32(10).fork()).ldelim(),null!=e.liveHashToDelete&&Object.hasOwnProperty.call(e,\"liveHashToDelete\")&&o.uint32(18).bytes(e.liveHashToDelete),o},e.decode=function(e,o){e instanceof $Reader||(e=$Reader.create(e));for(var n=void 0===o?e.len:e.pos+o,i=new $root.proto.CryptoDeleteLiveHashTransactionBody,d;e.pos<n;)switch(d=e.uint32(),d>>>3){case 1:i.accountOfLiveHash=$root.proto.AccountID.decode(e,e.uint32());break;case 2:i.liveHashToDelete=e.bytes();break;default:e.skipType(7&d);}return i},e}(),CryptoTransferTransactionBody:function(){function e(e){if(this.tokenTransfers=[],e)for(var o=Object.keys(e),t=0;t<o.length;++t)null!=e[o[t]]&&(this[o[t]]=e[o[t]])}return e.prototype.transfers=null,e.prototype.tokenTransfers=$util.emptyArray,e.create=function(o){return new e(o)},e.encode=function(e,o){if(o||(o=$Writer.create()),null!=e.transfers&&Object.hasOwnProperty.call(e,\"transfers\")&&$root.proto.TransferList.encode(e.transfers,o.uint32(10).fork()).ldelim(),null!=e.tokenTransfers&&e.tokenTransfers.length)for(var t=0;t<e.tokenTransfers.length;++t)$root.proto.TokenTransferList.encode(e.tokenTransfers[t],o.uint32(18).fork()).ldelim();return o},e.decode=function(e,o){e instanceof $Reader||(e=$Reader.create(e));for(var n=void 0===o?e.len:e.pos+o,i=new $root.proto.CryptoTransferTransactionBody,d;e.pos<n;)switch(d=e.uint32(),d>>>3){case 1:i.transfers=$root.proto.TransferList.decode(e,e.uint32());break;case 2:i.tokenTransfers&&i.tokenTransfers.length||(i.tokenTransfers=[]),i.tokenTransfers.push($root.proto.TokenTransferList.decode(e,e.uint32()));break;default:e.skipType(7&d);}return i},e}(),CryptoUpdateTransactionBody:function(){function e(e){if(e)for(var o=Object.keys(e),t=0;t<o.length;++t)null!=e[o[t]]&&(this[o[t]]=e[o[t]])}e.prototype.accountIDToUpdate=null,e.prototype.key=null,e.prototype.proxyAccountID=null,e.prototype.proxyFraction=0,e.prototype.sendRecordThreshold=null,e.prototype.sendRecordThresholdWrapper=null,e.prototype.receiveRecordThreshold=null,e.prototype.receiveRecordThresholdWrapper=null,e.prototype.autoRenewPeriod=null,e.prototype.expirationTime=null,e.prototype.receiverSigRequired=null,e.prototype.receiverSigRequiredWrapper=null,e.prototype.memo=null,e.prototype.maxAutomaticTokenAssociations=null;let o;return Object.defineProperty(e.prototype,\"sendRecordThresholdField\",{get:$util.oneOfGetter(o=[\"sendRecordThreshold\",\"sendRecordThresholdWrapper\"]),set:$util.oneOfSetter(o)}),Object.defineProperty(e.prototype,\"receiveRecordThresholdField\",{get:$util.oneOfGetter(o=[\"receiveRecordThreshold\",\"receiveRecordThresholdWrapper\"]),set:$util.oneOfSetter(o)}),Object.defineProperty(e.prototype,\"receiverSigRequiredField\",{get:$util.oneOfGetter(o=[\"receiverSigRequired\",\"receiverSigRequiredWrapper\"]),set:$util.oneOfSetter(o)}),e.create=function(o){return new e(o)},e.encode=function(e,o){return o||(o=$Writer.create()),null!=e.accountIDToUpdate&&Object.hasOwnProperty.call(e,\"accountIDToUpdate\")&&$root.proto.AccountID.encode(e.accountIDToUpdate,o.uint32(18).fork()).ldelim(),null!=e.key&&Object.hasOwnProperty.call(e,\"key\")&&$root.proto.Key.encode(e.key,o.uint32(26).fork()).ldelim(),null!=e.proxyAccountID&&Object.hasOwnProperty.call(e,\"proxyAccountID\")&&$root.proto.AccountID.encode(e.proxyAccountID,o.uint32(34).fork()).ldelim(),null!=e.proxyFraction&&Object.hasOwnProperty.call(e,\"proxyFraction\")&&o.uint32(40).int32(e.proxyFraction),null!=e.sendRecordThreshold&&Object.hasOwnProperty.call(e,\"sendRecordThreshold\")&&o.uint32(48).uint64(e.sendRecordThreshold),null!=e.receiveRecordThreshold&&Object.hasOwnProperty.call(e,\"receiveRecordThreshold\")&&o.uint32(56).uint64(e.receiveRecordThreshold),null!=e.autoRenewPeriod&&Object.hasOwnProperty.call(e,\"autoRenewPeriod\")&&$root.proto.Duration.encode(e.autoRenewPeriod,o.uint32(66).fork()).ldelim(),null!=e.expirationTime&&Object.hasOwnProperty.call(e,\"expirationTime\")&&$root.proto.Timestamp.encode(e.expirationTime,o.uint32(74).fork()).ldelim(),null!=e.receiverSigRequired&&Object.hasOwnProperty.call(e,\"receiverSigRequired\")&&o.uint32(80).bool(e.receiverSigRequired),null!=e.sendRecordThresholdWrapper&&Object.hasOwnProperty.call(e,\"sendRecordThresholdWrapper\")&&$root.google.protobuf.UInt64Value.encode(e.sendRecordThresholdWrapper,o.uint32(90).fork()).ldelim(),null!=e.receiveRecordThresholdWrapper&&Object.hasOwnProperty.call(e,\"receiveRecordThresholdWrapper\")&&$root.google.protobuf.UInt64Value.encode(e.receiveRecordThresholdWrapper,o.uint32(98).fork()).ldelim(),null!=e.receiverSigRequiredWrapper&&Object.hasOwnProperty.call(e,\"receiverSigRequiredWrapper\")&&$root.google.protobuf.BoolValue.encode(e.receiverSigRequiredWrapper,o.uint32(106).fork()).ldelim(),null!=e.memo&&Object.hasOwnProperty.call(e,\"memo\")&&$root.google.protobuf.StringValue.encode(e.memo,o.uint32(114).fork()).ldelim(),null!=e.maxAutomaticTokenAssociations&&Object.hasOwnProperty.call(e,\"maxAutomaticTokenAssociations\")&&$root.google.protobuf.Int32Value.encode(e.maxAutomaticTokenAssociations,o.uint32(122).fork()).ldelim(),o},e.decode=function(e,o){e instanceof $Reader||(e=$Reader.create(e));for(var n=void 0===o?e.len:e.pos+o,i=new $root.proto.CryptoUpdateTransactionBody,d;e.pos<n;)switch(d=e.uint32(),d>>>3){case 2:i.accountIDToUpdate=$root.proto.AccountID.decode(e,e.uint32());break;case 3:i.key=$root.proto.Key.decode(e,e.uint32());break;case 4:i.proxyAccountID=$root.proto.AccountID.decode(e,e.uint32());break;case 5:i.proxyFraction=e.int32();break;case 6:i.sendRecordThreshold=e.uint64();break;case 11:i.sendRecordThresholdWrapper=$root.google.protobuf.UInt64Value.decode(e,e.uint32());break;case 7:i.receiveRecordThreshold=e.uint64();break;case 12:i.receiveRecordThresholdWrapper=$root.google.protobuf.UInt64Value.decode(e,e.uint32());break;case 8:i.autoRenewPeriod=$root.proto.Duration.decode(e,e.uint32());break;case 9:i.expirationTime=$root.proto.Timestamp.decode(e,e.uint32());break;case 10:i.receiverSigRequired=e.bool();break;case 13:i.receiverSigRequiredWrapper=$root.google.protobuf.BoolValue.decode(e,e.uint32());break;case 14:i.memo=$root.google.protobuf.StringValue.decode(e,e.uint32());break;case 15:i.maxAutomaticTokenAssociations=$root.google.protobuf.Int32Value.decode(e,e.uint32());break;default:e.skipType(7&d);}return i},e}(),FileAppendTransactionBody:function(){function e(e){if(e)for(var o=Object.keys(e),t=0;t<o.length;++t)null!=e[o[t]]&&(this[o[t]]=e[o[t]])}return e.prototype.fileID=null,e.prototype.contents=$util.newBuffer([]),e.create=function(o){return new e(o)},e.encode=function(e,o){return o||(o=$Writer.create()),null!=e.fileID&&Object.hasOwnProperty.call(e,\"fileID\")&&$root.proto.FileID.encode(e.fileID,o.uint32(18).fork()).ldelim(),null!=e.contents&&Object.hasOwnProperty.call(e,\"contents\")&&o.uint32(34).bytes(e.contents),o},e.decode=function(e,o){e instanceof $Reader||(e=$Reader.create(e));for(var n=void 0===o?e.len:e.pos+o,i=new $root.proto.FileAppendTransactionBody,d;e.pos<n;)switch(d=e.uint32(),d>>>3){case 2:i.fileID=$root.proto.FileID.decode(e,e.uint32());break;case 4:i.contents=e.bytes();break;default:e.skipType(7&d);}return i},e}(),FileCreateTransactionBody:function(){function e(e){if(e)for(var o=Object.keys(e),t=0;t<o.length;++t)null!=e[o[t]]&&(this[o[t]]=e[o[t]])}return e.prototype.expirationTime=null,e.prototype.keys=null,e.prototype.contents=$util.newBuffer([]),e.prototype.shardID=null,e.prototype.realmID=null,e.prototype.newRealmAdminKey=null,e.prototype.memo=\"\",e.create=function(o){return new e(o)},e.encode=function(e,o){return o||(o=$Writer.create()),null!=e.expirationTime&&Object.hasOwnProperty.call(e,\"expirationTime\")&&$root.proto.Timestamp.encode(e.expirationTime,o.uint32(18).fork()).ldelim(),null!=e.keys&&Object.hasOwnProperty.call(e,\"keys\")&&$root.proto.KeyList.encode(e.keys,o.uint32(26).fork()).ldelim(),null!=e.contents&&Object.hasOwnProperty.call(e,\"contents\")&&o.uint32(34).bytes(e.contents),null!=e.shardID&&Object.hasOwnProperty.call(e,\"shardID\")&&$root.proto.ShardID.encode(e.shardID,o.uint32(42).fork()).ldelim(),null!=e.realmID&&Object.hasOwnProperty.call(e,\"realmID\")&&$root.proto.RealmID.encode(e.realmID,o.uint32(50).fork()).ldelim(),null!=e.newRealmAdminKey&&Object.hasOwnProperty.call(e,\"newRealmAdminKey\")&&$root.proto.Key.encode(e.newRealmAdminKey,o.uint32(58).fork()).ldelim(),null!=e.memo&&Object.hasOwnProperty.call(e,\"memo\")&&o.uint32(66).string(e.memo),o},e.decode=function(e,o){e instanceof $Reader||(e=$Reader.create(e));for(var n=void 0===o?e.len:e.pos+o,i=new $root.proto.FileCreateTransactionBody,d;e.pos<n;)switch(d=e.uint32(),d>>>3){case 2:i.expirationTime=$root.proto.Timestamp.decode(e,e.uint32());break;case 3:i.keys=$root.proto.KeyList.decode(e,e.uint32());break;case 4:i.contents=e.bytes();break;case 5:i.shardID=$root.proto.ShardID.decode(e,e.uint32());break;case 6:i.realmID=$root.proto.RealmID.decode(e,e.uint32());break;case 7:i.newRealmAdminKey=$root.proto.Key.decode(e,e.uint32());break;case 8:i.memo=e.string();break;default:e.skipType(7&d);}return i},e}(),FileDeleteTransactionBody:function(){function e(e){if(e)for(var o=Object.keys(e),t=0;t<o.length;++t)null!=e[o[t]]&&(this[o[t]]=e[o[t]])}return e.prototype.fileID=null,e.create=function(o){return new e(o)},e.encode=function(e,o){return o||(o=$Writer.create()),null!=e.fileID&&Object.hasOwnProperty.call(e,\"fileID\")&&$root.proto.FileID.encode(e.fileID,o.uint32(18).fork()).ldelim(),o},e.decode=function(e,o){e instanceof $Reader||(e=$Reader.create(e));for(var n=void 0===o?e.len:e.pos+o,i=new $root.proto.FileDeleteTransactionBody,d;e.pos<n;)switch(d=e.uint32(),d>>>3){case 2:i.fileID=$root.proto.FileID.decode(e,e.uint32());break;default:e.skipType(7&d);}return i},e}(),FileUpdateTransactionBody:function(){function e(e){if(e)for(var o=Object.keys(e),t=0;t<o.length;++t)null!=e[o[t]]&&(this[o[t]]=e[o[t]])}return e.prototype.fileID=null,e.prototype.expirationTime=null,e.prototype.keys=null,e.prototype.contents=$util.newBuffer([]),e.prototype.memo=null,e.create=function(o){return new e(o)},e.encode=function(e,o){return o||(o=$Writer.create()),null!=e.fileID&&Object.hasOwnProperty.call(e,\"fileID\")&&$root.proto.FileID.encode(e.fileID,o.uint32(10).fork()).ldelim(),null!=e.expirationTime&&Object.hasOwnProperty.call(e,\"expirationTime\")&&$root.proto.Timestamp.encode(e.expirationTime,o.uint32(18).fork()).ldelim(),null!=e.keys&&Object.hasOwnProperty.call(e,\"keys\")&&$root.proto.KeyList.encode(e.keys,o.uint32(26).fork()).ldelim(),null!=e.contents&&Object.hasOwnProperty.call(e,\"contents\")&&o.uint32(34).bytes(e.contents),null!=e.memo&&Object.hasOwnProperty.call(e,\"memo\")&&$root.google.protobuf.StringValue.encode(e.memo,o.uint32(42).fork()).ldelim(),o},e.decode=function(e,o){e instanceof $Reader||(e=$Reader.create(e));for(var n=void 0===o?e.len:e.pos+o,i=new $root.proto.FileUpdateTransactionBody,d;e.pos<n;)switch(d=e.uint32(),d>>>3){case 1:i.fileID=$root.proto.FileID.decode(e,e.uint32());break;case 2:i.expirationTime=$root.proto.Timestamp.decode(e,e.uint32());break;case 3:i.keys=$root.proto.KeyList.decode(e,e.uint32());break;case 4:i.contents=e.bytes();break;case 5:i.memo=$root.google.protobuf.StringValue.decode(e,e.uint32());break;default:e.skipType(7&d);}return i},e}(),ContractDeleteTransactionBody:function(){function e(e){if(e)for(var o=Object.keys(e),t=0;t<o.length;++t)null!=e[o[t]]&&(this[o[t]]=e[o[t]])}e.prototype.contractID=null,e.prototype.transferAccountID=null,e.prototype.transferContractID=null;let o;return Object.defineProperty(e.prototype,\"obtainers\",{get:$util.oneOfGetter(o=[\"transferAccountID\",\"transferContractID\"]),set:$util.oneOfSetter(o)}),e.create=function(o){return new e(o)},e.encode=function(e,o){return o||(o=$Writer.create()),null!=e.contractID&&Object.hasOwnProperty.call(e,\"contractID\")&&$root.proto.ContractID.encode(e.contractID,o.uint32(10).fork()).ldelim(),null!=e.transferAccountID&&Object.hasOwnProperty.call(e,\"transferAccountID\")&&$root.proto.AccountID.encode(e.transferAccountID,o.uint32(18).fork()).ldelim(),null!=e.transferContractID&&Object.hasOwnProperty.call(e,\"transferContractID\")&&$root.proto.ContractID.encode(e.transferContractID,o.uint32(26).fork()).ldelim(),o},e.decode=function(e,o){e instanceof $Reader||(e=$Reader.create(e));for(var n=void 0===o?e.len:e.pos+o,i=new $root.proto.ContractDeleteTransactionBody,d;e.pos<n;)switch(d=e.uint32(),d>>>3){case 1:i.contractID=$root.proto.ContractID.decode(e,e.uint32());break;case 2:i.transferAccountID=$root.proto.AccountID.decode(e,e.uint32());break;case 3:i.transferContractID=$root.proto.ContractID.decode(e,e.uint32());break;default:e.skipType(7&d);}return i},e}(),ConsensusUpdateTopicTransactionBody:function(){function e(e){if(e)for(var o=Object.keys(e),t=0;t<o.length;++t)null!=e[o[t]]&&(this[o[t]]=e[o[t]])}return e.prototype.topicID=null,e.prototype.memo=null,e.prototype.expirationTime=null,e.prototype.adminKey=null,e.prototype.submitKey=null,e.prototype.autoRenewPeriod=null,e.prototype.autoRenewAccount=null,e.create=function(o){return new e(o)},e.encode=function(e,o){return o||(o=$Writer.create()),null!=e.topicID&&Object.hasOwnProperty.call(e,\"topicID\")&&$root.proto.TopicID.encode(e.topicID,o.uint32(10).fork()).ldelim(),null!=e.memo&&Object.hasOwnProperty.call(e,\"memo\")&&$root.google.protobuf.StringValue.encode(e.memo,o.uint32(18).fork()).ldelim(),null!=e.expirationTime&&Object.hasOwnProperty.call(e,\"expirationTime\")&&$root.proto.Timestamp.encode(e.expirationTime,o.uint32(34).fork()).ldelim(),null!=e.adminKey&&Object.hasOwnProperty.call(e,\"adminKey\")&&$root.proto.Key.encode(e.adminKey,o.uint32(50).fork()).ldelim(),null!=e.submitKey&&Object.hasOwnProperty.call(e,\"submitKey\")&&$root.proto.Key.encode(e.submitKey,o.uint32(58).fork()).ldelim(),null!=e.autoRenewPeriod&&Object.hasOwnProperty.call(e,\"autoRenewPeriod\")&&$root.proto.Duration.encode(e.autoRenewPeriod,o.uint32(66).fork()).ldelim(),null!=e.autoRenewAccount&&Object.hasOwnProperty.call(e,\"autoRenewAccount\")&&$root.proto.AccountID.encode(e.autoRenewAccount,o.uint32(74).fork()).ldelim(),o},e.decode=function(e,o){e instanceof $Reader||(e=$Reader.create(e));for(var n=void 0===o?e.len:e.pos+o,i=new $root.proto.ConsensusUpdateTopicTransactionBody,d;e.pos<n;)switch(d=e.uint32(),d>>>3){case 1:i.topicID=$root.proto.TopicID.decode(e,e.uint32());break;case 2:i.memo=$root.google.protobuf.StringValue.decode(e,e.uint32());break;case 4:i.expirationTime=$root.proto.Timestamp.decode(e,e.uint32());break;case 6:i.adminKey=$root.proto.Key.decode(e,e.uint32());break;case 7:i.submitKey=$root.proto.Key.decode(e,e.uint32());break;case 8:i.autoRenewPeriod=$root.proto.Duration.decode(e,e.uint32());break;case 9:i.autoRenewAccount=$root.proto.AccountID.decode(e,e.uint32());break;default:e.skipType(7&d);}return i},e}(),ConsensusMessageChunkInfo:function(){function e(e){if(e)for(var o=Object.keys(e),t=0;t<o.length;++t)null!=e[o[t]]&&(this[o[t]]=e[o[t]])}return e.prototype.initialTransactionID=null,e.prototype.total=0,e.prototype.number=0,e.create=function(o){return new e(o)},e.encode=function(e,o){return o||(o=$Writer.create()),null!=e.initialTransactionID&&Object.hasOwnProperty.call(e,\"initialTransactionID\")&&$root.proto.TransactionID.encode(e.initialTransactionID,o.uint32(10).fork()).ldelim(),null!=e.total&&Object.hasOwnProperty.call(e,\"total\")&&o.uint32(16).int32(e.total),null!=e.number&&Object.hasOwnProperty.call(e,\"number\")&&o.uint32(24).int32(e.number),o},e.decode=function(e,o){e instanceof $Reader||(e=$Reader.create(e));for(var n=void 0===o?e.len:e.pos+o,i=new $root.proto.ConsensusMessageChunkInfo,d;e.pos<n;)switch(d=e.uint32(),d>>>3){case 1:i.initialTransactionID=$root.proto.TransactionID.decode(e,e.uint32());break;case 2:i.total=e.int32();break;case 3:i.number=e.int32();break;default:e.skipType(7&d);}return i},e}(),ConsensusSubmitMessageTransactionBody:function(){function e(e){if(e)for(var o=Object.keys(e),t=0;t<o.length;++t)null!=e[o[t]]&&(this[o[t]]=e[o[t]])}return e.prototype.topicID=null,e.prototype.message=$util.newBuffer([]),e.prototype.chunkInfo=null,e.create=function(o){return new e(o)},e.encode=function(e,o){return o||(o=$Writer.create()),null!=e.topicID&&Object.hasOwnProperty.call(e,\"topicID\")&&$root.proto.TopicID.encode(e.topicID,o.uint32(10).fork()).ldelim(),null!=e.message&&Object.hasOwnProperty.call(e,\"message\")&&o.uint32(18).bytes(e.message),null!=e.chunkInfo&&Object.hasOwnProperty.call(e,\"chunkInfo\")&&$root.proto.ConsensusMessageChunkInfo.encode(e.chunkInfo,o.uint32(26).fork()).ldelim(),o},e.decode=function(e,o){e instanceof $Reader||(e=$Reader.create(e));for(var n=void 0===o?e.len:e.pos+o,i=new $root.proto.ConsensusSubmitMessageTransactionBody,d;e.pos<n;)switch(d=e.uint32(),d>>>3){case 1:i.topicID=$root.proto.TopicID.decode(e,e.uint32());break;case 2:i.message=e.bytes();break;case 3:i.chunkInfo=$root.proto.ConsensusMessageChunkInfo.decode(e,e.uint32());break;default:e.skipType(7&d);}return i},e}(),UncheckedSubmitBody:function(){function e(e){if(e)for(var o=Object.keys(e),t=0;t<o.length;++t)null!=e[o[t]]&&(this[o[t]]=e[o[t]])}return e.prototype.transactionBytes=$util.newBuffer([]),e.create=function(o){return new e(o)},e.encode=function(e,o){return o||(o=$Writer.create()),null!=e.transactionBytes&&Object.hasOwnProperty.call(e,\"transactionBytes\")&&o.uint32(10).bytes(e.transactionBytes),o},e.decode=function(e,o){e instanceof $Reader||(e=$Reader.create(e));for(var n=void 0===o?e.len:e.pos+o,i=new $root.proto.UncheckedSubmitBody,d;e.pos<n;)switch(d=e.uint32(),d>>>3){case 1:i.transactionBytes=e.bytes();break;default:e.skipType(7&d);}return i},e}(),TokenCreateTransactionBody:function(){function e(e){if(this.customFees=[],e)for(var o=Object.keys(e),t=0;t<o.length;++t)null!=e[o[t]]&&(this[o[t]]=e[o[t]])}return e.prototype.name=\"\",e.prototype.symbol=\"\",e.prototype.decimals=0,e.prototype.initialSupply=$util.Long?$util.Long.fromBits(0,0,!0):0,e.prototype.treasury=null,e.prototype.adminKey=null,e.prototype.kycKey=null,e.prototype.freezeKey=null,e.prototype.wipeKey=null,e.prototype.supplyKey=null,e.prototype.freezeDefault=!1,e.prototype.expiry=null,e.prototype.autoRenewAccount=null,e.prototype.autoRenewPeriod=null,e.prototype.memo=\"\",e.prototype.tokenType=0,e.prototype.supplyType=0,e.prototype.maxSupply=$util.Long?$util.Long.fromBits(0,0,!1):0,e.prototype.feeScheduleKey=null,e.prototype.customFees=$util.emptyArray,e.prototype.pauseKey=null,e.create=function(o){return new e(o)},e.encode=function(e,o){if(o||(o=$Writer.create()),null!=e.name&&Object.hasOwnProperty.call(e,\"name\")&&o.uint32(10).string(e.name),null!=e.symbol&&Object.hasOwnProperty.call(e,\"symbol\")&&o.uint32(18).string(e.symbol),null!=e.decimals&&Object.hasOwnProperty.call(e,\"decimals\")&&o.uint32(24).uint32(e.decimals),null!=e.initialSupply&&Object.hasOwnProperty.call(e,\"initialSupply\")&&o.uint32(32).uint64(e.initialSupply),null!=e.treasury&&Object.hasOwnProperty.call(e,\"treasury\")&&$root.proto.AccountID.encode(e.treasury,o.uint32(42).fork()).ldelim(),null!=e.adminKey&&Object.hasOwnProperty.call(e,\"adminKey\")&&$root.proto.Key.encode(e.adminKey,o.uint32(50).fork()).ldelim(),null!=e.kycKey&&Object.hasOwnProperty.call(e,\"kycKey\")&&$root.proto.Key.encode(e.kycKey,o.uint32(58).fork()).ldelim(),null!=e.freezeKey&&Object.hasOwnProperty.call(e,\"freezeKey\")&&$root.proto.Key.encode(e.freezeKey,o.uint32(66).fork()).ldelim(),null!=e.wipeKey&&Object.hasOwnProperty.call(e,\"wipeKey\")&&$root.proto.Key.encode(e.wipeKey,o.uint32(74).fork()).ldelim(),null!=e.supplyKey&&Object.hasOwnProperty.call(e,\"supplyKey\")&&$root.proto.Key.encode(e.supplyKey,o.uint32(82).fork()).ldelim(),null!=e.freezeDefault&&Object.hasOwnProperty.call(e,\"freezeDefault\")&&o.uint32(88).bool(e.freezeDefault),null!=e.expiry&&Object.hasOwnProperty.call(e,\"expiry\")&&$root.proto.Timestamp.encode(e.expiry,o.uint32(106).fork()).ldelim(),null!=e.autoRenewAccount&&Object.hasOwnProperty.call(e,\"autoRenewAccount\")&&$root.proto.AccountID.encode(e.autoRenewAccount,o.uint32(114).fork()).ldelim(),null!=e.autoRenewPeriod&&Object.hasOwnProperty.call(e,\"autoRenewPeriod\")&&$root.proto.Duration.encode(e.autoRenewPeriod,o.uint32(122).fork()).ldelim(),null!=e.memo&&Object.hasOwnProperty.call(e,\"memo\")&&o.uint32(130).string(e.memo),null!=e.tokenType&&Object.hasOwnProperty.call(e,\"tokenType\")&&o.uint32(136).int32(e.tokenType),null!=e.supplyType&&Object.hasOwnProperty.call(e,\"supplyType\")&&o.uint32(144).int32(e.supplyType),null!=e.maxSupply&&Object.hasOwnProperty.call(e,\"maxSupply\")&&o.uint32(152).int64(e.maxSupply),null!=e.feeScheduleKey&&Object.hasOwnProperty.call(e,\"feeScheduleKey\")&&$root.proto.Key.encode(e.feeScheduleKey,o.uint32(162).fork()).ldelim(),null!=e.customFees&&e.customFees.length)for(var t=0;t<e.customFees.length;++t)$root.proto.CustomFee.encode(e.customFees[t],o.uint32(170).fork()).ldelim();return null!=e.pauseKey&&Object.hasOwnProperty.call(e,\"pauseKey\")&&$root.proto.Key.encode(e.pauseKey,o.uint32(178).fork()).ldelim(),o},e.decode=function(e,o){e instanceof $Reader||(e=$Reader.create(e));for(var n=void 0===o?e.len:e.pos+o,i=new $root.proto.TokenCreateTransactionBody,d;e.pos<n;)switch(d=e.uint32(),d>>>3){case 1:i.name=e.string();break;case 2:i.symbol=e.string();break;case 3:i.decimals=e.uint32();break;case 4:i.initialSupply=e.uint64();break;case 5:i.treasury=$root.proto.AccountID.decode(e,e.uint32());break;case 6:i.adminKey=$root.proto.Key.decode(e,e.uint32());break;case 7:i.kycKey=$root.proto.Key.decode(e,e.uint32());break;case 8:i.freezeKey=$root.proto.Key.decode(e,e.uint32());break;case 9:i.wipeKey=$root.proto.Key.decode(e,e.uint32());break;case 10:i.supplyKey=$root.proto.Key.decode(e,e.uint32());break;case 11:i.freezeDefault=e.bool();break;case 13:i.expiry=$root.proto.Timestamp.decode(e,e.uint32());break;case 14:i.autoRenewAccount=$root.proto.AccountID.decode(e,e.uint32());break;case 15:i.autoRenewPeriod=$root.proto.Duration.decode(e,e.uint32());break;case 16:i.memo=e.string();break;case 17:i.tokenType=e.int32();break;case 18:i.supplyType=e.int32();break;case 19:i.maxSupply=e.int64();break;case 20:i.feeScheduleKey=$root.proto.Key.decode(e,e.uint32());break;case 21:i.customFees&&i.customFees.length||(i.customFees=[]),i.customFees.push($root.proto.CustomFee.decode(e,e.uint32()));break;case 22:i.pauseKey=$root.proto.Key.decode(e,e.uint32());break;default:e.skipType(7&d);}return i},e}(),FractionalFee:function(){function e(e){if(e)for(var o=Object.keys(e),t=0;t<o.length;++t)null!=e[o[t]]&&(this[o[t]]=e[o[t]])}return e.prototype.fractionalAmount=null,e.prototype.minimumAmount=$util.Long?$util.Long.fromBits(0,0,!1):0,e.prototype.maximumAmount=$util.Long?$util.Long.fromBits(0,0,!1):0,e.prototype.netOfTransfers=!1,e.create=function(o){return new e(o)},e.encode=function(e,o){return o||(o=$Writer.create()),null!=e.fractionalAmount&&Object.hasOwnProperty.call(e,\"fractionalAmount\")&&$root.proto.Fraction.encode(e.fractionalAmount,o.uint32(10).fork()).ldelim(),null!=e.minimumAmount&&Object.hasOwnProperty.call(e,\"minimumAmount\")&&o.uint32(16).int64(e.minimumAmount),null!=e.maximumAmount&&Object.hasOwnProperty.call(e,\"maximumAmount\")&&o.uint32(24).int64(e.maximumAmount),null!=e.netOfTransfers&&Object.hasOwnProperty.call(e,\"netOfTransfers\")&&o.uint32(32).bool(e.netOfTransfers),o},e.decode=function(e,o){e instanceof $Reader||(e=$Reader.create(e));for(var n=void 0===o?e.len:e.pos+o,i=new $root.proto.FractionalFee,d;e.pos<n;)switch(d=e.uint32(),d>>>3){case 1:i.fractionalAmount=$root.proto.Fraction.decode(e,e.uint32());break;case 2:i.minimumAmount=e.int64();break;case 3:i.maximumAmount=e.int64();break;case 4:i.netOfTransfers=e.bool();break;default:e.skipType(7&d);}return i},e}(),FixedFee:function(){function e(e){if(e)for(var o=Object.keys(e),t=0;t<o.length;++t)null!=e[o[t]]&&(this[o[t]]=e[o[t]])}return e.prototype.amount=$util.Long?$util.Long.fromBits(0,0,!1):0,e.prototype.denominatingTokenId=null,e.create=function(o){return new e(o)},e.encode=function(e,o){return o||(o=$Writer.create()),null!=e.amount&&Object.hasOwnProperty.call(e,\"amount\")&&o.uint32(8).int64(e.amount),null!=e.denominatingTokenId&&Object.hasOwnProperty.call(e,\"denominatingTokenId\")&&$root.proto.TokenID.encode(e.denominatingTokenId,o.uint32(18).fork()).ldelim(),o},e.decode=function(e,o){e instanceof $Reader||(e=$Reader.create(e));for(var n=void 0===o?e.len:e.pos+o,i=new $root.proto.FixedFee,d;e.pos<n;)switch(d=e.uint32(),d>>>3){case 1:i.amount=e.int64();break;case 2:i.denominatingTokenId=$root.proto.TokenID.decode(e,e.uint32());break;default:e.skipType(7&d);}return i},e}(),RoyaltyFee:function(){function e(e){if(e)for(var o=Object.keys(e),t=0;t<o.length;++t)null!=e[o[t]]&&(this[o[t]]=e[o[t]])}return e.prototype.exchangeValueFraction=null,e.prototype.fallbackFee=null,e.create=function(o){return new e(o)},e.encode=function(e,o){return o||(o=$Writer.create()),null!=e.exchangeValueFraction&&Object.hasOwnProperty.call(e,\"exchangeValueFraction\")&&$root.proto.Fraction.encode(e.exchangeValueFraction,o.uint32(10).fork()).ldelim(),null!=e.fallbackFee&&Object.hasOwnProperty.call(e,\"fallbackFee\")&&$root.proto.FixedFee.encode(e.fallbackFee,o.uint32(18).fork()).ldelim(),o},e.decode=function(e,o){e instanceof $Reader||(e=$Reader.create(e));for(var n=void 0===o?e.len:e.pos+o,i=new $root.proto.RoyaltyFee,d;e.pos<n;)switch(d=e.uint32(),d>>>3){case 1:i.exchangeValueFraction=$root.proto.Fraction.decode(e,e.uint32());break;case 2:i.fallbackFee=$root.proto.FixedFee.decode(e,e.uint32());break;default:e.skipType(7&d);}return i},e}(),CustomFee:function(){function e(e){if(e)for(var o=Object.keys(e),t=0;t<o.length;++t)null!=e[o[t]]&&(this[o[t]]=e[o[t]])}e.prototype.fixedFee=null,e.prototype.fractionalFee=null,e.prototype.royaltyFee=null,e.prototype.feeCollectorAccountId=null;let o;return Object.defineProperty(e.prototype,\"fee\",{get:$util.oneOfGetter(o=[\"fixedFee\",\"fractionalFee\",\"royaltyFee\"]),set:$util.oneOfSetter(o)}),e.create=function(o){return new e(o)},e.encode=function(e,o){return o||(o=$Writer.create()),null!=e.fixedFee&&Object.hasOwnProperty.call(e,\"fixedFee\")&&$root.proto.FixedFee.encode(e.fixedFee,o.uint32(10).fork()).ldelim(),null!=e.fractionalFee&&Object.hasOwnProperty.call(e,\"fractionalFee\")&&$root.proto.FractionalFee.encode(e.fractionalFee,o.uint32(18).fork()).ldelim(),null!=e.feeCollectorAccountId&&Object.hasOwnProperty.call(e,\"feeCollectorAccountId\")&&$root.proto.AccountID.encode(e.feeCollectorAccountId,o.uint32(26).fork()).ldelim(),null!=e.royaltyFee&&Object.hasOwnProperty.call(e,\"royaltyFee\")&&$root.proto.RoyaltyFee.encode(e.royaltyFee,o.uint32(34).fork()).ldelim(),o},e.decode=function(e,o){e instanceof $Reader||(e=$Reader.create(e));for(var n=void 0===o?e.len:e.pos+o,i=new $root.proto.CustomFee,d;e.pos<n;)switch(d=e.uint32(),d>>>3){case 1:i.fixedFee=$root.proto.FixedFee.decode(e,e.uint32());break;case 2:i.fractionalFee=$root.proto.FractionalFee.decode(e,e.uint32());break;case 4:i.royaltyFee=$root.proto.RoyaltyFee.decode(e,e.uint32());break;case 3:i.feeCollectorAccountId=$root.proto.AccountID.decode(e,e.uint32());break;default:e.skipType(7&d);}return i},e}(),AssessedCustomFee:function(){function e(e){if(this.effectivePayerAccountId=[],e)for(var o=Object.keys(e),t=0;t<o.length;++t)null!=e[o[t]]&&(this[o[t]]=e[o[t]])}return e.prototype.amount=$util.Long?$util.Long.fromBits(0,0,!1):0,e.prototype.tokenId=null,e.prototype.feeCollectorAccountId=null,e.prototype.effectivePayerAccountId=$util.emptyArray,e.create=function(o){return new e(o)},e.encode=function(e,o){if(o||(o=$Writer.create()),null!=e.amount&&Object.hasOwnProperty.call(e,\"amount\")&&o.uint32(8).int64(e.amount),null!=e.tokenId&&Object.hasOwnProperty.call(e,\"tokenId\")&&$root.proto.TokenID.encode(e.tokenId,o.uint32(18).fork()).ldelim(),null!=e.feeCollectorAccountId&&Object.hasOwnProperty.call(e,\"feeCollectorAccountId\")&&$root.proto.AccountID.encode(e.feeCollectorAccountId,o.uint32(26).fork()).ldelim(),null!=e.effectivePayerAccountId&&e.effectivePayerAccountId.length)for(var t=0;t<e.effectivePayerAccountId.length;++t)$root.proto.AccountID.encode(e.effectivePayerAccountId[t],o.uint32(34).fork()).ldelim();return o},e.decode=function(e,o){e instanceof $Reader||(e=$Reader.create(e));for(var n=void 0===o?e.len:e.pos+o,i=new $root.proto.AssessedCustomFee,d;e.pos<n;)switch(d=e.uint32(),d>>>3){case 1:i.amount=e.int64();break;case 2:i.tokenId=$root.proto.TokenID.decode(e,e.uint32());break;case 3:i.feeCollectorAccountId=$root.proto.AccountID.decode(e,e.uint32());break;case 4:i.effectivePayerAccountId&&i.effectivePayerAccountId.length||(i.effectivePayerAccountId=[]),i.effectivePayerAccountId.push($root.proto.AccountID.decode(e,e.uint32()));break;default:e.skipType(7&d);}return i},e}(),TokenFreezeAccountTransactionBody:function(){function e(e){if(e)for(var o=Object.keys(e),t=0;t<o.length;++t)null!=e[o[t]]&&(this[o[t]]=e[o[t]])}return e.prototype.token=null,e.prototype.account=null,e.create=function(o){return new e(o)},e.encode=function(e,o){return o||(o=$Writer.create()),null!=e.token&&Object.hasOwnProperty.call(e,\"token\")&&$root.proto.TokenID.encode(e.token,o.uint32(10).fork()).ldelim(),null!=e.account&&Object.hasOwnProperty.call(e,\"account\")&&$root.proto.AccountID.encode(e.account,o.uint32(18).fork()).ldelim(),o},e.decode=function(e,o){e instanceof $Reader||(e=$Reader.create(e));for(var n=void 0===o?e.len:e.pos+o,i=new $root.proto.TokenFreezeAccountTransactionBody,d;e.pos<n;)switch(d=e.uint32(),d>>>3){case 1:i.token=$root.proto.TokenID.decode(e,e.uint32());break;case 2:i.account=$root.proto.AccountID.decode(e,e.uint32());break;default:e.skipType(7&d);}return i},e}(),TokenUnfreezeAccountTransactionBody:function(){function e(e){if(e)for(var o=Object.keys(e),t=0;t<o.length;++t)null!=e[o[t]]&&(this[o[t]]=e[o[t]])}return e.prototype.token=null,e.prototype.account=null,e.create=function(o){return new e(o)},e.encode=function(e,o){return o||(o=$Writer.create()),null!=e.token&&Object.hasOwnProperty.call(e,\"token\")&&$root.proto.TokenID.encode(e.token,o.uint32(10).fork()).ldelim(),null!=e.account&&Object.hasOwnProperty.call(e,\"account\")&&$root.proto.AccountID.encode(e.account,o.uint32(18).fork()).ldelim(),o},e.decode=function(e,o){e instanceof $Reader||(e=$Reader.create(e));for(var n=void 0===o?e.len:e.pos+o,i=new $root.proto.TokenUnfreezeAccountTransactionBody,d;e.pos<n;)switch(d=e.uint32(),d>>>3){case 1:i.token=$root.proto.TokenID.decode(e,e.uint32());break;case 2:i.account=$root.proto.AccountID.decode(e,e.uint32());break;default:e.skipType(7&d);}return i},e}(),TokenGrantKycTransactionBody:function(){function e(e){if(e)for(var o=Object.keys(e),t=0;t<o.length;++t)null!=e[o[t]]&&(this[o[t]]=e[o[t]])}return e.prototype.token=null,e.prototype.account=null,e.create=function(o){return new e(o)},e.encode=function(e,o){return o||(o=$Writer.create()),null!=e.token&&Object.hasOwnProperty.call(e,\"token\")&&$root.proto.TokenID.encode(e.token,o.uint32(10).fork()).ldelim(),null!=e.account&&Object.hasOwnProperty.call(e,\"account\")&&$root.proto.AccountID.encode(e.account,o.uint32(18).fork()).ldelim(),o},e.decode=function(e,o){e instanceof $Reader||(e=$Reader.create(e));for(var n=void 0===o?e.len:e.pos+o,i=new $root.proto.TokenGrantKycTransactionBody,d;e.pos<n;)switch(d=e.uint32(),d>>>3){case 1:i.token=$root.proto.TokenID.decode(e,e.uint32());break;case 2:i.account=$root.proto.AccountID.decode(e,e.uint32());break;default:e.skipType(7&d);}return i},e}(),TokenRevokeKycTransactionBody:function(){function e(e){if(e)for(var o=Object.keys(e),t=0;t<o.length;++t)null!=e[o[t]]&&(this[o[t]]=e[o[t]])}return e.prototype.token=null,e.prototype.account=null,e.create=function(o){return new e(o)},e.encode=function(e,o){return o||(o=$Writer.create()),null!=e.token&&Object.hasOwnProperty.call(e,\"token\")&&$root.proto.TokenID.encode(e.token,o.uint32(10).fork()).ldelim(),null!=e.account&&Object.hasOwnProperty.call(e,\"account\")&&$root.proto.AccountID.encode(e.account,o.uint32(18).fork()).ldelim(),o},e.decode=function(e,o){e instanceof $Reader||(e=$Reader.create(e));for(var n=void 0===o?e.len:e.pos+o,i=new $root.proto.TokenRevokeKycTransactionBody,d;e.pos<n;)switch(d=e.uint32(),d>>>3){case 1:i.token=$root.proto.TokenID.decode(e,e.uint32());break;case 2:i.account=$root.proto.AccountID.decode(e,e.uint32());break;default:e.skipType(7&d);}return i},e}(),TokenDeleteTransactionBody:function(){function e(e){if(e)for(var o=Object.keys(e),t=0;t<o.length;++t)null!=e[o[t]]&&(this[o[t]]=e[o[t]])}return e.prototype.token=null,e.create=function(o){return new e(o)},e.encode=function(e,o){return o||(o=$Writer.create()),null!=e.token&&Object.hasOwnProperty.call(e,\"token\")&&$root.proto.TokenID.encode(e.token,o.uint32(10).fork()).ldelim(),o},e.decode=function(e,o){e instanceof $Reader||(e=$Reader.create(e));for(var n=void 0===o?e.len:e.pos+o,i=new $root.proto.TokenDeleteTransactionBody,d;e.pos<n;)switch(d=e.uint32(),d>>>3){case 1:i.token=$root.proto.TokenID.decode(e,e.uint32());break;default:e.skipType(7&d);}return i},e}(),TokenUpdateTransactionBody:function(){function e(e){if(e)for(var o=Object.keys(e),t=0;t<o.length;++t)null!=e[o[t]]&&(this[o[t]]=e[o[t]])}return e.prototype.token=null,e.prototype.symbol=\"\",e.prototype.name=\"\",e.prototype.treasury=null,e.prototype.adminKey=null,e.prototype.kycKey=null,e.prototype.freezeKey=null,e.prototype.wipeKey=null,e.prototype.supplyKey=null,e.prototype.autoRenewAccount=null,e.prototype.autoRenewPeriod=null,e.prototype.expiry=null,e.prototype.memo=null,e.prototype.feeScheduleKey=null,e.prototype.pauseKey=null,e.create=function(o){return new e(o)},e.encode=function(e,o){return o||(o=$Writer.create()),null!=e.token&&Object.hasOwnProperty.call(e,\"token\")&&$root.proto.TokenID.encode(e.token,o.uint32(10).fork()).ldelim(),null!=e.symbol&&Object.hasOwnProperty.call(e,\"symbol\")&&o.uint32(18).string(e.symbol),null!=e.name&&Object.hasOwnProperty.call(e,\"name\")&&o.uint32(26).string(e.name),null!=e.treasury&&Object.hasOwnProperty.call(e,\"treasury\")&&$root.proto.AccountID.encode(e.treasury,o.uint32(34).fork()).ldelim(),null!=e.adminKey&&Object.hasOwnProperty.call(e,\"adminKey\")&&$root.proto.Key.encode(e.adminKey,o.uint32(42).fork()).ldelim(),null!=e.kycKey&&Object.hasOwnProperty.call(e,\"kycKey\")&&$root.proto.Key.encode(e.kycKey,o.uint32(50).fork()).ldelim(),null!=e.freezeKey&&Object.hasOwnProperty.call(e,\"freezeKey\")&&$root.proto.Key.encode(e.freezeKey,o.uint32(58).fork()).ldelim(),null!=e.wipeKey&&Object.hasOwnProperty.call(e,\"wipeKey\")&&$root.proto.Key.encode(e.wipeKey,o.uint32(66).fork()).ldelim(),null!=e.supplyKey&&Object.hasOwnProperty.call(e,\"supplyKey\")&&$root.proto.Key.encode(e.supplyKey,o.uint32(74).fork()).ldelim(),null!=e.autoRenewAccount&&Object.hasOwnProperty.call(e,\"autoRenewAccount\")&&$root.proto.AccountID.encode(e.autoRenewAccount,o.uint32(82).fork()).ldelim(),null!=e.autoRenewPeriod&&Object.hasOwnProperty.call(e,\"autoRenewPeriod\")&&$root.proto.Duration.encode(e.autoRenewPeriod,o.uint32(90).fork()).ldelim(),null!=e.expiry&&Object.hasOwnProperty.call(e,\"expiry\")&&$root.proto.Timestamp.encode(e.expiry,o.uint32(98).fork()).ldelim(),null!=e.memo&&Object.hasOwnProperty.call(e,\"memo\")&&$root.google.protobuf.StringValue.encode(e.memo,o.uint32(106).fork()).ldelim(),null!=e.feeScheduleKey&&Object.hasOwnProperty.call(e,\"feeScheduleKey\")&&$root.proto.Key.encode(e.feeScheduleKey,o.uint32(114).fork()).ldelim(),null!=e.pauseKey&&Object.hasOwnProperty.call(e,\"pauseKey\")&&$root.proto.Key.encode(e.pauseKey,o.uint32(122).fork()).ldelim(),o},e.decode=function(e,o){e instanceof $Reader||(e=$Reader.create(e));for(var n=void 0===o?e.len:e.pos+o,i=new $root.proto.TokenUpdateTransactionBody,d;e.pos<n;)switch(d=e.uint32(),d>>>3){case 1:i.token=$root.proto.TokenID.decode(e,e.uint32());break;case 2:i.symbol=e.string();break;case 3:i.name=e.string();break;case 4:i.treasury=$root.proto.AccountID.decode(e,e.uint32());break;case 5:i.adminKey=$root.proto.Key.decode(e,e.uint32());break;case 6:i.kycKey=$root.proto.Key.decode(e,e.uint32());break;case 7:i.freezeKey=$root.proto.Key.decode(e,e.uint32());break;case 8:i.wipeKey=$root.proto.Key.decode(e,e.uint32());break;case 9:i.supplyKey=$root.proto.Key.decode(e,e.uint32());break;case 10:i.autoRenewAccount=$root.proto.AccountID.decode(e,e.uint32());break;case 11:i.autoRenewPeriod=$root.proto.Duration.decode(e,e.uint32());break;case 12:i.expiry=$root.proto.Timestamp.decode(e,e.uint32());break;case 13:i.memo=$root.google.protobuf.StringValue.decode(e,e.uint32());break;case 14:i.feeScheduleKey=$root.proto.Key.decode(e,e.uint32());break;case 15:i.pauseKey=$root.proto.Key.decode(e,e.uint32());break;default:e.skipType(7&d);}return i},e}(),TokenMintTransactionBody:function(){function e(e){if(this.metadata=[],e)for(var o=Object.keys(e),t=0;t<o.length;++t)null!=e[o[t]]&&(this[o[t]]=e[o[t]])}return e.prototype.token=null,e.prototype.amount=$util.Long?$util.Long.fromBits(0,0,!0):0,e.prototype.metadata=$util.emptyArray,e.create=function(o){return new e(o)},e.encode=function(e,o){if(o||(o=$Writer.create()),null!=e.token&&Object.hasOwnProperty.call(e,\"token\")&&$root.proto.TokenID.encode(e.token,o.uint32(10).fork()).ldelim(),null!=e.amount&&Object.hasOwnProperty.call(e,\"amount\")&&o.uint32(16).uint64(e.amount),null!=e.metadata&&e.metadata.length)for(var t=0;t<e.metadata.length;++t)o.uint32(26).bytes(e.metadata[t]);return o},e.decode=function(e,o){e instanceof $Reader||(e=$Reader.create(e));for(var n=void 0===o?e.len:e.pos+o,i=new $root.proto.TokenMintTransactionBody,d;e.pos<n;)switch(d=e.uint32(),d>>>3){case 1:i.token=$root.proto.TokenID.decode(e,e.uint32());break;case 2:i.amount=e.uint64();break;case 3:i.metadata&&i.metadata.length||(i.metadata=[]),i.metadata.push(e.bytes());break;default:e.skipType(7&d);}return i},e}(),TokenBurnTransactionBody:function(){function e(e){if(this.serialNumbers=[],e)for(var o=Object.keys(e),t=0;t<o.length;++t)null!=e[o[t]]&&(this[o[t]]=e[o[t]])}return e.prototype.token=null,e.prototype.amount=$util.Long?$util.Long.fromBits(0,0,!0):0,e.prototype.serialNumbers=$util.emptyArray,e.create=function(o){return new e(o)},e.encode=function(e,o){if(o||(o=$Writer.create()),null!=e.token&&Object.hasOwnProperty.call(e,\"token\")&&$root.proto.TokenID.encode(e.token,o.uint32(10).fork()).ldelim(),null!=e.amount&&Object.hasOwnProperty.call(e,\"amount\")&&o.uint32(16).uint64(e.amount),null!=e.serialNumbers&&e.serialNumbers.length){o.uint32(26).fork();for(var t=0;t<e.serialNumbers.length;++t)o.int64(e.serialNumbers[t]);o.ldelim()}return o},e.decode=function(e,o){e instanceof $Reader||(e=$Reader.create(e));for(var n=void 0===o?e.len:e.pos+o,i=new $root.proto.TokenBurnTransactionBody,d;e.pos<n;)switch(d=e.uint32(),d>>>3){case 1:i.token=$root.proto.TokenID.decode(e,e.uint32());break;case 2:i.amount=e.uint64();break;case 3:if(i.serialNumbers&&i.serialNumbers.length||(i.serialNumbers=[]),2==(7&d))for(var a=e.uint32()+e.pos;e.pos<a;)i.serialNumbers.push(e.int64());else i.serialNumbers.push(e.int64());break;default:e.skipType(7&d);}return i},e}(),TokenWipeAccountTransactionBody:function(){function e(e){if(this.serialNumbers=[],e)for(var o=Object.keys(e),t=0;t<o.length;++t)null!=e[o[t]]&&(this[o[t]]=e[o[t]])}return e.prototype.token=null,e.prototype.account=null,e.prototype.amount=$util.Long?$util.Long.fromBits(0,0,!0):0,e.prototype.serialNumbers=$util.emptyArray,e.create=function(o){return new e(o)},e.encode=function(e,o){if(o||(o=$Writer.create()),null!=e.token&&Object.hasOwnProperty.call(e,\"token\")&&$root.proto.TokenID.encode(e.token,o.uint32(10).fork()).ldelim(),null!=e.account&&Object.hasOwnProperty.call(e,\"account\")&&$root.proto.AccountID.encode(e.account,o.uint32(18).fork()).ldelim(),null!=e.amount&&Object.hasOwnProperty.call(e,\"amount\")&&o.uint32(24).uint64(e.amount),null!=e.serialNumbers&&e.serialNumbers.length){o.uint32(34).fork();for(var t=0;t<e.serialNumbers.length;++t)o.int64(e.serialNumbers[t]);o.ldelim()}return o},e.decode=function(e,o){e instanceof $Reader||(e=$Reader.create(e));for(var n=void 0===o?e.len:e.pos+o,i=new $root.proto.TokenWipeAccountTransactionBody,d;e.pos<n;)switch(d=e.uint32(),d>>>3){case 1:i.token=$root.proto.TokenID.decode(e,e.uint32());break;case 2:i.account=$root.proto.AccountID.decode(e,e.uint32());break;case 3:i.amount=e.uint64();break;case 4:if(i.serialNumbers&&i.serialNumbers.length||(i.serialNumbers=[]),2==(7&d))for(var a=e.uint32()+e.pos;e.pos<a;)i.serialNumbers.push(e.int64());else i.serialNumbers.push(e.int64());break;default:e.skipType(7&d);}return i},e}(),TokenAssociateTransactionBody:function(){function e(e){if(this.tokens=[],e)for(var o=Object.keys(e),t=0;t<o.length;++t)null!=e[o[t]]&&(this[o[t]]=e[o[t]])}return e.prototype.account=null,e.prototype.tokens=$util.emptyArray,e.create=function(o){return new e(o)},e.encode=function(e,o){if(o||(o=$Writer.create()),null!=e.account&&Object.hasOwnProperty.call(e,\"account\")&&$root.proto.AccountID.encode(e.account,o.uint32(10).fork()).ldelim(),null!=e.tokens&&e.tokens.length)for(var t=0;t<e.tokens.length;++t)$root.proto.TokenID.encode(e.tokens[t],o.uint32(18).fork()).ldelim();return o},e.decode=function(e,o){e instanceof $Reader||(e=$Reader.create(e));for(var n=void 0===o?e.len:e.pos+o,i=new $root.proto.TokenAssociateTransactionBody,d;e.pos<n;)switch(d=e.uint32(),d>>>3){case 1:i.account=$root.proto.AccountID.decode(e,e.uint32());break;case 2:i.tokens&&i.tokens.length||(i.tokens=[]),i.tokens.push($root.proto.TokenID.decode(e,e.uint32()));break;default:e.skipType(7&d);}return i},e}(),TokenDissociateTransactionBody:function(){function e(e){if(this.tokens=[],e)for(var o=Object.keys(e),t=0;t<o.length;++t)null!=e[o[t]]&&(this[o[t]]=e[o[t]])}return e.prototype.account=null,e.prototype.tokens=$util.emptyArray,e.create=function(o){return new e(o)},e.encode=function(e,o){if(o||(o=$Writer.create()),null!=e.account&&Object.hasOwnProperty.call(e,\"account\")&&$root.proto.AccountID.encode(e.account,o.uint32(10).fork()).ldelim(),null!=e.tokens&&e.tokens.length)for(var t=0;t<e.tokens.length;++t)$root.proto.TokenID.encode(e.tokens[t],o.uint32(18).fork()).ldelim();return o},e.decode=function(e,o){e instanceof $Reader||(e=$Reader.create(e));for(var n=void 0===o?e.len:e.pos+o,i=new $root.proto.TokenDissociateTransactionBody,d;e.pos<n;)switch(d=e.uint32(),d>>>3){case 1:i.account=$root.proto.AccountID.decode(e,e.uint32());break;case 2:i.tokens&&i.tokens.length||(i.tokens=[]),i.tokens.push($root.proto.TokenID.decode(e,e.uint32()));break;default:e.skipType(7&d);}return i},e}(),TokenFeeScheduleUpdateTransactionBody:function(){function e(e){if(this.customFees=[],e)for(var o=Object.keys(e),t=0;t<o.length;++t)null!=e[o[t]]&&(this[o[t]]=e[o[t]])}return e.prototype.tokenId=null,e.prototype.customFees=$util.emptyArray,e.create=function(o){return new e(o)},e.encode=function(e,o){if(o||(o=$Writer.create()),null!=e.tokenId&&Object.hasOwnProperty.call(e,\"tokenId\")&&$root.proto.TokenID.encode(e.tokenId,o.uint32(10).fork()).ldelim(),null!=e.customFees&&e.customFees.length)for(var t=0;t<e.customFees.length;++t)$root.proto.CustomFee.encode(e.customFees[t],o.uint32(18).fork()).ldelim();return o},e.decode=function(e,o){e instanceof $Reader||(e=$Reader.create(e));for(var n=void 0===o?e.len:e.pos+o,i=new $root.proto.TokenFeeScheduleUpdateTransactionBody,d;e.pos<n;)switch(d=e.uint32(),d>>>3){case 1:i.tokenId=$root.proto.TokenID.decode(e,e.uint32());break;case 2:i.customFees&&i.customFees.length||(i.customFees=[]),i.customFees.push($root.proto.CustomFee.decode(e,e.uint32()));break;default:e.skipType(7&d);}return i},e}(),TokenPauseTransactionBody:function(){function e(e){if(e)for(var o=Object.keys(e),t=0;t<o.length;++t)null!=e[o[t]]&&(this[o[t]]=e[o[t]])}return e.prototype.token=null,e.create=function(o){return new e(o)},e.encode=function(e,o){return o||(o=$Writer.create()),null!=e.token&&Object.hasOwnProperty.call(e,\"token\")&&$root.proto.TokenID.encode(e.token,o.uint32(10).fork()).ldelim(),o},e.decode=function(e,o){e instanceof $Reader||(e=$Reader.create(e));for(var n=void 0===o?e.len:e.pos+o,i=new $root.proto.TokenPauseTransactionBody,d;e.pos<n;)switch(d=e.uint32(),d>>>3){case 1:i.token=$root.proto.TokenID.decode(e,e.uint32());break;default:e.skipType(7&d);}return i},e}(),TokenUnpauseTransactionBody:function(){function e(e){if(e)for(var o=Object.keys(e),t=0;t<o.length;++t)null!=e[o[t]]&&(this[o[t]]=e[o[t]])}return e.prototype.token=null,e.create=function(o){return new e(o)},e.encode=function(e,o){return o||(o=$Writer.create()),null!=e.token&&Object.hasOwnProperty.call(e,\"token\")&&$root.proto.TokenID.encode(e.token,o.uint32(10).fork()).ldelim(),o},e.decode=function(e,o){e instanceof $Reader||(e=$Reader.create(e));for(var n=void 0===o?e.len:e.pos+o,i=new $root.proto.TokenUnpauseTransactionBody,d;e.pos<n;)switch(d=e.uint32(),d>>>3){case 1:i.token=$root.proto.TokenID.decode(e,e.uint32());break;default:e.skipType(7&d);}return i},e}(),ScheduleCreateTransactionBody:function(){function e(e){if(e)for(var o=Object.keys(e),t=0;t<o.length;++t)null!=e[o[t]]&&(this[o[t]]=e[o[t]])}return e.prototype.scheduledTransactionBody=null,e.prototype.memo=\"\",e.prototype.adminKey=null,e.prototype.payerAccountID=null,e.create=function(o){return new e(o)},e.encode=function(e,o){return o||(o=$Writer.create()),null!=e.scheduledTransactionBody&&Object.hasOwnProperty.call(e,\"scheduledTransactionBody\")&&$root.proto.SchedulableTransactionBody.encode(e.scheduledTransactionBody,o.uint32(10).fork()).ldelim(),null!=e.memo&&Object.hasOwnProperty.call(e,\"memo\")&&o.uint32(18).string(e.memo),null!=e.adminKey&&Object.hasOwnProperty.call(e,\"adminKey\")&&$root.proto.Key.encode(e.adminKey,o.uint32(26).fork()).ldelim(),null!=e.payerAccountID&&Object.hasOwnProperty.call(e,\"payerAccountID\")&&$root.proto.AccountID.encode(e.payerAccountID,o.uint32(34).fork()).ldelim(),o},e.decode=function(e,o){e instanceof $Reader||(e=$Reader.create(e));for(var n=void 0===o?e.len:e.pos+o,i=new $root.proto.ScheduleCreateTransactionBody,d;e.pos<n;)switch(d=e.uint32(),d>>>3){case 1:i.scheduledTransactionBody=$root.proto.SchedulableTransactionBody.decode(e,e.uint32());break;case 2:i.memo=e.string();break;case 3:i.adminKey=$root.proto.Key.decode(e,e.uint32());break;case 4:i.payerAccountID=$root.proto.AccountID.decode(e,e.uint32());break;default:e.skipType(7&d);}return i},e}(),SchedulableTransactionBody:function(){function e(e){if(e)for(var o=Object.keys(e),t=0;t<o.length;++t)null!=e[o[t]]&&(this[o[t]]=e[o[t]])}e.prototype.transactionFee=$util.Long?$util.Long.fromBits(0,0,!0):0,e.prototype.memo=\"\",e.prototype.contractCall=null,e.prototype.contractCreateInstance=null,e.prototype.contractUpdateInstance=null,e.prototype.contractDeleteInstance=null,e.prototype.cryptoCreateAccount=null,e.prototype.cryptoDelete=null,e.prototype.cryptoTransfer=null,e.prototype.cryptoUpdateAccount=null,e.prototype.fileAppend=null,e.prototype.fileCreate=null,e.prototype.fileDelete=null,e.prototype.fileUpdate=null,e.prototype.systemDelete=null,e.prototype.systemUndelete=null,e.prototype.freeze=null,e.prototype.consensusCreateTopic=null,e.prototype.consensusUpdateTopic=null,e.prototype.consensusDeleteTopic=null,e.prototype.consensusSubmitMessage=null,e.prototype.tokenCreation=null,e.prototype.tokenFreeze=null,e.prototype.tokenUnfreeze=null,e.prototype.tokenGrantKyc=null,e.prototype.tokenRevokeKyc=null,e.prototype.tokenDeletion=null,e.prototype.tokenUpdate=null,e.prototype.tokenMint=null,e.prototype.tokenBurn=null,e.prototype.tokenWipe=null,e.prototype.tokenAssociate=null,e.prototype.tokenDissociate=null,e.prototype.tokenPause=null,e.prototype.tokenUnpause=null,e.prototype.scheduleDelete=null;let o;return Object.defineProperty(e.prototype,\"data\",{get:$util.oneOfGetter(o=[\"contractCall\",\"contractCreateInstance\",\"contractUpdateInstance\",\"contractDeleteInstance\",\"cryptoCreateAccount\",\"cryptoDelete\",\"cryptoTransfer\",\"cryptoUpdateAccount\",\"fileAppend\",\"fileCreate\",\"fileDelete\",\"fileUpdate\",\"systemDelete\",\"systemUndelete\",\"freeze\",\"consensusCreateTopic\",\"consensusUpdateTopic\",\"consensusDeleteTopic\",\"consensusSubmitMessage\",\"tokenCreation\",\"tokenFreeze\",\"tokenUnfreeze\",\"tokenGrantKyc\",\"tokenRevokeKyc\",\"tokenDeletion\",\"tokenUpdate\",\"tokenMint\",\"tokenBurn\",\"tokenWipe\",\"tokenAssociate\",\"tokenDissociate\",\"tokenPause\",\"tokenUnpause\",\"scheduleDelete\"]),set:$util.oneOfSetter(o)}),e.create=function(o){return new e(o)},e.encode=function(e,o){return o||(o=$Writer.create()),null!=e.transactionFee&&Object.hasOwnProperty.call(e,\"transactionFee\")&&o.uint32(8).uint64(e.transactionFee),null!=e.memo&&Object.hasOwnProperty.call(e,\"memo\")&&o.uint32(18).string(e.memo),null!=e.contractCall&&Object.hasOwnProperty.call(e,\"contractCall\")&&$root.proto.ContractCallTransactionBody.encode(e.contractCall,o.uint32(26).fork()).ldelim(),null!=e.contractCreateInstance&&Object.hasOwnProperty.call(e,\"contractCreateInstance\")&&$root.proto.ContractCreateTransactionBody.encode(e.contractCreateInstance,o.uint32(34).fork()).ldelim(),null!=e.contractUpdateInstance&&Object.hasOwnProperty.call(e,\"contractUpdateInstance\")&&$root.proto.ContractUpdateTransactionBody.encode(e.contractUpdateInstance,o.uint32(42).fork()).ldelim(),null!=e.contractDeleteInstance&&Object.hasOwnProperty.call(e,\"contractDeleteInstance\")&&$root.proto.ContractDeleteTransactionBody.encode(e.contractDeleteInstance,o.uint32(50).fork()).ldelim(),null!=e.cryptoCreateAccount&&Object.hasOwnProperty.call(e,\"cryptoCreateAccount\")&&$root.proto.CryptoCreateTransactionBody.encode(e.cryptoCreateAccount,o.uint32(58).fork()).ldelim(),null!=e.cryptoDelete&&Object.hasOwnProperty.call(e,\"cryptoDelete\")&&$root.proto.CryptoDeleteTransactionBody.encode(e.cryptoDelete,o.uint32(66).fork()).ldelim(),null!=e.cryptoTransfer&&Object.hasOwnProperty.call(e,\"cryptoTransfer\")&&$root.proto.CryptoTransferTransactionBody.encode(e.cryptoTransfer,o.uint32(74).fork()).ldelim(),null!=e.cryptoUpdateAccount&&Object.hasOwnProperty.call(e,\"cryptoUpdateAccount\")&&$root.proto.CryptoUpdateTransactionBody.encode(e.cryptoUpdateAccount,o.uint32(82).fork()).ldelim(),null!=e.fileAppend&&Object.hasOwnProperty.call(e,\"fileAppend\")&&$root.proto.FileAppendTransactionBody.encode(e.fileAppend,o.uint32(90).fork()).ldelim(),null!=e.fileCreate&&Object.hasOwnProperty.call(e,\"fileCreate\")&&$root.proto.FileCreateTransactionBody.encode(e.fileCreate,o.uint32(98).fork()).ldelim(),null!=e.fileDelete&&Object.hasOwnProperty.call(e,\"fileDelete\")&&$root.proto.FileDeleteTransactionBody.encode(e.fileDelete,o.uint32(106).fork()).ldelim(),null!=e.fileUpdate&&Object.hasOwnProperty.call(e,\"fileUpdate\")&&$root.proto.FileUpdateTransactionBody.encode(e.fileUpdate,o.uint32(114).fork()).ldelim(),null!=e.systemDelete&&Object.hasOwnProperty.call(e,\"systemDelete\")&&$root.proto.SystemDeleteTransactionBody.encode(e.systemDelete,o.uint32(122).fork()).ldelim(),null!=e.systemUndelete&&Object.hasOwnProperty.call(e,\"systemUndelete\")&&$root.proto.SystemUndeleteTransactionBody.encode(e.systemUndelete,o.uint32(130).fork()).ldelim(),null!=e.freeze&&Object.hasOwnProperty.call(e,\"freeze\")&&$root.proto.FreezeTransactionBody.encode(e.freeze,o.uint32(138).fork()).ldelim(),null!=e.consensusCreateTopic&&Object.hasOwnProperty.call(e,\"consensusCreateTopic\")&&$root.proto.ConsensusCreateTopicTransactionBody.encode(e.consensusCreateTopic,o.uint32(146).fork()).ldelim(),null!=e.consensusUpdateTopic&&Object.hasOwnProperty.call(e,\"consensusUpdateTopic\")&&$root.proto.ConsensusUpdateTopicTransactionBody.encode(e.consensusUpdateTopic,o.uint32(154).fork()).ldelim(),null!=e.consensusDeleteTopic&&Object.hasOwnProperty.call(e,\"consensusDeleteTopic\")&&$root.proto.ConsensusDeleteTopicTransactionBody.encode(e.consensusDeleteTopic,o.uint32(162).fork()).ldelim(),null!=e.consensusSubmitMessage&&Object.hasOwnProperty.call(e,\"consensusSubmitMessage\")&&$root.proto.ConsensusSubmitMessageTransactionBody.encode(e.consensusSubmitMessage,o.uint32(170).fork()).ldelim(),null!=e.tokenCreation&&Object.hasOwnProperty.call(e,\"tokenCreation\")&&$root.proto.TokenCreateTransactionBody.encode(e.tokenCreation,o.uint32(178).fork()).ldelim(),null!=e.tokenFreeze&&Object.hasOwnProperty.call(e,\"tokenFreeze\")&&$root.proto.TokenFreezeAccountTransactionBody.encode(e.tokenFreeze,o.uint32(186).fork()).ldelim(),null!=e.tokenUnfreeze&&Object.hasOwnProperty.call(e,\"tokenUnfreeze\")&&$root.proto.TokenUnfreezeAccountTransactionBody.encode(e.tokenUnfreeze,o.uint32(194).fork()).ldelim(),null!=e.tokenGrantKyc&&Object.hasOwnProperty.call(e,\"tokenGrantKyc\")&&$root.proto.TokenGrantKycTransactionBody.encode(e.tokenGrantKyc,o.uint32(202).fork()).ldelim(),null!=e.tokenRevokeKyc&&Object.hasOwnProperty.call(e,\"tokenRevokeKyc\")&&$root.proto.TokenRevokeKycTransactionBody.encode(e.tokenRevokeKyc,o.uint32(210).fork()).ldelim(),null!=e.tokenDeletion&&Object.hasOwnProperty.call(e,\"tokenDeletion\")&&$root.proto.TokenDeleteTransactionBody.encode(e.tokenDeletion,o.uint32(218).fork()).ldelim(),null!=e.tokenUpdate&&Object.hasOwnProperty.call(e,\"tokenUpdate\")&&$root.proto.TokenUpdateTransactionBody.encode(e.tokenUpdate,o.uint32(226).fork()).ldelim(),null!=e.tokenMint&&Object.hasOwnProperty.call(e,\"tokenMint\")&&$root.proto.TokenMintTransactionBody.encode(e.tokenMint,o.uint32(234).fork()).ldelim(),null!=e.tokenBurn&&Object.hasOwnProperty.call(e,\"tokenBurn\")&&$root.proto.TokenBurnTransactionBody.encode(e.tokenBurn,o.uint32(242).fork()).ldelim(),null!=e.tokenWipe&&Object.hasOwnProperty.call(e,\"tokenWipe\")&&$root.proto.TokenWipeAccountTransactionBody.encode(e.tokenWipe,o.uint32(250).fork()).ldelim(),null!=e.tokenAssociate&&Object.hasOwnProperty.call(e,\"tokenAssociate\")&&$root.proto.TokenAssociateTransactionBody.encode(e.tokenAssociate,o.uint32(258).fork()).ldelim(),null!=e.tokenDissociate&&Object.hasOwnProperty.call(e,\"tokenDissociate\")&&$root.proto.TokenDissociateTransactionBody.encode(e.tokenDissociate,o.uint32(266).fork()).ldelim(),null!=e.scheduleDelete&&Object.hasOwnProperty.call(e,\"scheduleDelete\")&&$root.proto.ScheduleDeleteTransactionBody.encode(e.scheduleDelete,o.uint32(274).fork()).ldelim(),null!=e.tokenPause&&Object.hasOwnProperty.call(e,\"tokenPause\")&&$root.proto.TokenPauseTransactionBody.encode(e.tokenPause,o.uint32(282).fork()).ldelim(),null!=e.tokenUnpause&&Object.hasOwnProperty.call(e,\"tokenUnpause\")&&$root.proto.TokenUnpauseTransactionBody.encode(e.tokenUnpause,o.uint32(290).fork()).ldelim(),o},e.decode=function(e,o){e instanceof $Reader||(e=$Reader.create(e));for(var n=void 0===o?e.len:e.pos+o,i=new $root.proto.SchedulableTransactionBody,d;e.pos<n;)switch(d=e.uint32(),d>>>3){case 1:i.transactionFee=e.uint64();break;case 2:i.memo=e.string();break;case 3:i.contractCall=$root.proto.ContractCallTransactionBody.decode(e,e.uint32());break;case 4:i.contractCreateInstance=$root.proto.ContractCreateTransactionBody.decode(e,e.uint32());break;case 5:i.contractUpdateInstance=$root.proto.ContractUpdateTransactionBody.decode(e,e.uint32());break;case 6:i.contractDeleteInstance=$root.proto.ContractDeleteTransactionBody.decode(e,e.uint32());break;case 7:i.cryptoCreateAccount=$root.proto.CryptoCreateTransactionBody.decode(e,e.uint32());break;case 8:i.cryptoDelete=$root.proto.CryptoDeleteTransactionBody.decode(e,e.uint32());break;case 9:i.cryptoTransfer=$root.proto.CryptoTransferTransactionBody.decode(e,e.uint32());break;case 10:i.cryptoUpdateAccount=$root.proto.CryptoUpdateTransactionBody.decode(e,e.uint32());break;case 11:i.fileAppend=$root.proto.FileAppendTransactionBody.decode(e,e.uint32());break;case 12:i.fileCreate=$root.proto.FileCreateTransactionBody.decode(e,e.uint32());break;case 13:i.fileDelete=$root.proto.FileDeleteTransactionBody.decode(e,e.uint32());break;case 14:i.fileUpdate=$root.proto.FileUpdateTransactionBody.decode(e,e.uint32());break;case 15:i.systemDelete=$root.proto.SystemDeleteTransactionBody.decode(e,e.uint32());break;case 16:i.systemUndelete=$root.proto.SystemUndeleteTransactionBody.decode(e,e.uint32());break;case 17:i.freeze=$root.proto.FreezeTransactionBody.decode(e,e.uint32());break;case 18:i.consensusCreateTopic=$root.proto.ConsensusCreateTopicTransactionBody.decode(e,e.uint32());break;case 19:i.consensusUpdateTopic=$root.proto.ConsensusUpdateTopicTransactionBody.decode(e,e.uint32());break;case 20:i.consensusDeleteTopic=$root.proto.ConsensusDeleteTopicTransactionBody.decode(e,e.uint32());break;case 21:i.consensusSubmitMessage=$root.proto.ConsensusSubmitMessageTransactionBody.decode(e,e.uint32());break;case 22:i.tokenCreation=$root.proto.TokenCreateTransactionBody.decode(e,e.uint32());break;case 23:i.tokenFreeze=$root.proto.TokenFreezeAccountTransactionBody.decode(e,e.uint32());break;case 24:i.tokenUnfreeze=$root.proto.TokenUnfreezeAccountTransactionBody.decode(e,e.uint32());break;case 25:i.tokenGrantKyc=$root.proto.TokenGrantKycTransactionBody.decode(e,e.uint32());break;case 26:i.tokenRevokeKyc=$root.proto.TokenRevokeKycTransactionBody.decode(e,e.uint32());break;case 27:i.tokenDeletion=$root.proto.TokenDeleteTransactionBody.decode(e,e.uint32());break;case 28:i.tokenUpdate=$root.proto.TokenUpdateTransactionBody.decode(e,e.uint32());break;case 29:i.tokenMint=$root.proto.TokenMintTransactionBody.decode(e,e.uint32());break;case 30:i.tokenBurn=$root.proto.TokenBurnTransactionBody.decode(e,e.uint32());break;case 31:i.tokenWipe=$root.proto.TokenWipeAccountTransactionBody.decode(e,e.uint32());break;case 32:i.tokenAssociate=$root.proto.TokenAssociateTransactionBody.decode(e,e.uint32());break;case 33:i.tokenDissociate=$root.proto.TokenDissociateTransactionBody.decode(e,e.uint32());break;case 35:i.tokenPause=$root.proto.TokenPauseTransactionBody.decode(e,e.uint32());break;case 36:i.tokenUnpause=$root.proto.TokenUnpauseTransactionBody.decode(e,e.uint32());break;case 34:i.scheduleDelete=$root.proto.ScheduleDeleteTransactionBody.decode(e,e.uint32());break;default:e.skipType(7&d);}return i},e}(),ScheduleDeleteTransactionBody:function(){function e(e){if(e)for(var o=Object.keys(e),t=0;t<o.length;++t)null!=e[o[t]]&&(this[o[t]]=e[o[t]])}return e.prototype.scheduleID=null,e.create=function(o){return new e(o)},e.encode=function(e,o){return o||(o=$Writer.create()),null!=e.scheduleID&&Object.hasOwnProperty.call(e,\"scheduleID\")&&$root.proto.ScheduleID.encode(e.scheduleID,o.uint32(10).fork()).ldelim(),o},e.decode=function(e,o){e instanceof $Reader||(e=$Reader.create(e));for(var n=void 0===o?e.len:e.pos+o,i=new $root.proto.ScheduleDeleteTransactionBody,d;e.pos<n;)switch(d=e.uint32(),d>>>3){case 1:i.scheduleID=$root.proto.ScheduleID.decode(e,e.uint32());break;default:e.skipType(7&d);}return i},e}(),ScheduleSignTransactionBody:function(){function e(e){if(e)for(var o=Object.keys(e),t=0;t<o.length;++t)null!=e[o[t]]&&(this[o[t]]=e[o[t]])}return e.prototype.scheduleID=null,e.create=function(o){return new e(o)},e.encode=function(e,o){return o||(o=$Writer.create()),null!=e.scheduleID&&Object.hasOwnProperty.call(e,\"scheduleID\")&&$root.proto.ScheduleID.encode(e.scheduleID,o.uint32(10).fork()).ldelim(),o},e.decode=function(e,o){e instanceof $Reader||(e=$Reader.create(e));for(var n=void 0===o?e.len:e.pos+o,i=new $root.proto.ScheduleSignTransactionBody,d;e.pos<n;)switch(d=e.uint32(),d>>>3){case 1:i.scheduleID=$root.proto.ScheduleID.decode(e,e.uint32());break;default:e.skipType(7&d);}return i},e}(),ResponseHeader:function(){function e(e){if(e)for(var o=Object.keys(e),t=0;t<o.length;++t)null!=e[o[t]]&&(this[o[t]]=e[o[t]])}return e.prototype.nodeTransactionPrecheckCode=0,e.prototype.responseType=0,e.prototype.cost=$util.Long?$util.Long.fromBits(0,0,!0):0,e.prototype.stateProof=$util.newBuffer([]),e.create=function(o){return new e(o)},e.encode=function(e,o){return o||(o=$Writer.create()),null!=e.nodeTransactionPrecheckCode&&Object.hasOwnProperty.call(e,\"nodeTransactionPrecheckCode\")&&o.uint32(8).int32(e.nodeTransactionPrecheckCode),null!=e.responseType&&Object.hasOwnProperty.call(e,\"responseType\")&&o.uint32(16).int32(e.responseType),null!=e.cost&&Object.hasOwnProperty.call(e,\"cost\")&&o.uint32(24).uint64(e.cost),null!=e.stateProof&&Object.hasOwnProperty.call(e,\"stateProof\")&&o.uint32(34).bytes(e.stateProof),o},e.decode=function(e,o){e instanceof $Reader||(e=$Reader.create(e));for(var n=void 0===o?e.len:e.pos+o,i=new $root.proto.ResponseHeader,d;e.pos<n;)switch(d=e.uint32(),d>>>3){case 1:i.nodeTransactionPrecheckCode=e.int32();break;case 2:i.responseType=e.int32();break;case 3:i.cost=e.uint64();break;case 4:i.stateProof=e.bytes();break;default:e.skipType(7&d);}return i},e}(),TransactionResponse:function(){function e(e){if(e)for(var o=Object.keys(e),t=0;t<o.length;++t)null!=e[o[t]]&&(this[o[t]]=e[o[t]])}return e.prototype.nodeTransactionPrecheckCode=0,e.prototype.cost=$util.Long?$util.Long.fromBits(0,0,!0):0,e.create=function(o){return new e(o)},e.encode=function(e,o){return o||(o=$Writer.create()),null!=e.nodeTransactionPrecheckCode&&Object.hasOwnProperty.call(e,\"nodeTransactionPrecheckCode\")&&o.uint32(8).int32(e.nodeTransactionPrecheckCode),null!=e.cost&&Object.hasOwnProperty.call(e,\"cost\")&&o.uint32(16).uint64(e.cost),o},e.decode=function(e,o){e instanceof $Reader||(e=$Reader.create(e));for(var n=void 0===o?e.len:e.pos+o,i=new $root.proto.TransactionResponse,d;e.pos<n;)switch(d=e.uint32(),d>>>3){case 1:i.nodeTransactionPrecheckCode=e.int32();break;case 2:i.cost=e.uint64();break;default:e.skipType(7&d);}return i},e}(),ResponseCodeEnum:function(){const e={},o=Object.create(e);return o[e[0]=\"OK\"]=0,o[e[1]=\"INVALID_TRANSACTION\"]=1,o[e[2]=\"PAYER_ACCOUNT_NOT_FOUND\"]=2,o[e[3]=\"INVALID_NODE_ACCOUNT\"]=3,o[e[4]=\"TRANSACTION_EXPIRED\"]=4,o[e[5]=\"INVALID_TRANSACTION_START\"]=5,o[e[6]=\"INVALID_TRANSACTION_DURATION\"]=6,o[e[7]=\"INVALID_SIGNATURE\"]=7,o[e[8]=\"MEMO_TOO_LONG\"]=8,o[e[9]=\"INSUFFICIENT_TX_FEE\"]=9,o[e[10]=\"INSUFFICIENT_PAYER_BALANCE\"]=10,o[e[11]=\"DUPLICATE_TRANSACTION\"]=11,o[e[12]=\"BUSY\"]=12,o[e[13]=\"NOT_SUPPORTED\"]=13,o[e[14]=\"INVALID_FILE_ID\"]=14,o[e[15]=\"INVALID_ACCOUNT_ID\"]=15,o[e[16]=\"INVALID_CONTRACT_ID\"]=16,o[e[17]=\"INVALID_TRANSACTION_ID\"]=17,o[e[18]=\"RECEIPT_NOT_FOUND\"]=18,o[e[19]=\"RECORD_NOT_FOUND\"]=19,o[e[20]=\"INVALID_SOLIDITY_ID\"]=20,o[e[21]=\"UNKNOWN\"]=21,o[e[22]=\"SUCCESS\"]=22,o[e[23]=\"FAIL_INVALID\"]=23,o[e[24]=\"FAIL_FEE\"]=24,o[e[25]=\"FAIL_BALANCE\"]=25,o[e[26]=\"KEY_REQUIRED\"]=26,o[e[27]=\"BAD_ENCODING\"]=27,o[e[28]=\"INSUFFICIENT_ACCOUNT_BALANCE\"]=28,o[e[29]=\"INVALID_SOLIDITY_ADDRESS\"]=29,o[e[30]=\"INSUFFICIENT_GAS\"]=30,o[e[31]=\"CONTRACT_SIZE_LIMIT_EXCEEDED\"]=31,o[e[32]=\"LOCAL_CALL_MODIFICATION_EXCEPTION\"]=32,o[e[33]=\"CONTRACT_REVERT_EXECUTED\"]=33,o[e[34]=\"CONTRACT_EXECUTION_EXCEPTION\"]=34,o[e[35]=\"INVALID_RECEIVING_NODE_ACCOUNT\"]=35,o[e[36]=\"MISSING_QUERY_HEADER\"]=36,o[e[37]=\"ACCOUNT_UPDATE_FAILED\"]=37,o[e[38]=\"INVALID_KEY_ENCODING\"]=38,o[e[39]=\"NULL_SOLIDITY_ADDRESS\"]=39,o[e[40]=\"CONTRACT_UPDATE_FAILED\"]=40,o[e[41]=\"INVALID_QUERY_HEADER\"]=41,o[e[42]=\"INVALID_FEE_SUBMITTED\"]=42,o[e[43]=\"INVALID_PAYER_SIGNATURE\"]=43,o[e[44]=\"KEY_NOT_PROVIDED\"]=44,o[e[45]=\"INVALID_EXPIRATION_TIME\"]=45,o[e[46]=\"NO_WACL_KEY\"]=46,o[e[47]=\"FILE_CONTENT_EMPTY\"]=47,o[e[48]=\"INVALID_ACCOUNT_AMOUNTS\"]=48,o[e[49]=\"EMPTY_TRANSACTION_BODY\"]=49,o[e[50]=\"INVALID_TRANSACTION_BODY\"]=50,o[e[51]=\"INVALID_SIGNATURE_TYPE_MISMATCHING_KEY\"]=51,o[e[52]=\"INVALID_SIGNATURE_COUNT_MISMATCHING_KEY\"]=52,o[e[53]=\"EMPTY_LIVE_HASH_BODY\"]=53,o[e[54]=\"EMPTY_LIVE_HASH\"]=54,o[e[55]=\"EMPTY_LIVE_HASH_KEYS\"]=55,o[e[56]=\"INVALID_LIVE_HASH_SIZE\"]=56,o[e[57]=\"EMPTY_QUERY_BODY\"]=57,o[e[58]=\"EMPTY_LIVE_HASH_QUERY\"]=58,o[e[59]=\"LIVE_HASH_NOT_FOUND\"]=59,o[e[60]=\"ACCOUNT_ID_DOES_NOT_EXIST\"]=60,o[e[61]=\"LIVE_HASH_ALREADY_EXISTS\"]=61,o[e[62]=\"INVALID_FILE_WACL\"]=62,o[e[63]=\"SERIALIZATION_FAILED\"]=63,o[e[64]=\"TRANSACTION_OVERSIZE\"]=64,o[e[65]=\"TRANSACTION_TOO_MANY_LAYERS\"]=65,o[e[66]=\"CONTRACT_DELETED\"]=66,o[e[67]=\"PLATFORM_NOT_ACTIVE\"]=67,o[e[68]=\"KEY_PREFIX_MISMATCH\"]=68,o[e[69]=\"PLATFORM_TRANSACTION_NOT_CREATED\"]=69,o[e[70]=\"INVALID_RENEWAL_PERIOD\"]=70,o[e[71]=\"INVALID_PAYER_ACCOUNT_ID\"]=71,o[e[72]=\"ACCOUNT_DELETED\"]=72,o[e[73]=\"FILE_DELETED\"]=73,o[e[74]=\"ACCOUNT_REPEATED_IN_ACCOUNT_AMOUNTS\"]=74,o[e[75]=\"SETTING_NEGATIVE_ACCOUNT_BALANCE\"]=75,o[e[76]=\"OBTAINER_REQUIRED\"]=76,o[e[77]=\"OBTAINER_SAME_CONTRACT_ID\"]=77,o[e[78]=\"OBTAINER_DOES_NOT_EXIST\"]=78,o[e[79]=\"MODIFYING_IMMUTABLE_CONTRACT\"]=79,o[e[80]=\"FILE_SYSTEM_EXCEPTION\"]=80,o[e[81]=\"AUTORENEW_DURATION_NOT_IN_RANGE\"]=81,o[e[82]=\"ERROR_DECODING_BYTESTRING\"]=82,o[e[83]=\"CONTRACT_FILE_EMPTY\"]=83,o[e[84]=\"CONTRACT_BYTECODE_EMPTY\"]=84,o[e[85]=\"INVALID_INITIAL_BALANCE\"]=85,o[e[86]=\"INVALID_RECEIVE_RECORD_THRESHOLD\"]=86,o[e[87]=\"INVALID_SEND_RECORD_THRESHOLD\"]=87,o[e[88]=\"ACCOUNT_IS_NOT_GENESIS_ACCOUNT\"]=88,o[e[89]=\"PAYER_ACCOUNT_UNAUTHORIZED\"]=89,o[e[90]=\"INVALID_FREEZE_TRANSACTION_BODY\"]=90,o[e[91]=\"FREEZE_TRANSACTION_BODY_NOT_FOUND\"]=91,o[e[92]=\"TRANSFER_LIST_SIZE_LIMIT_EXCEEDED\"]=92,o[e[93]=\"RESULT_SIZE_LIMIT_EXCEEDED\"]=93,o[e[94]=\"NOT_SPECIAL_ACCOUNT\"]=94,o[e[95]=\"CONTRACT_NEGATIVE_GAS\"]=95,o[e[96]=\"CONTRACT_NEGATIVE_VALUE\"]=96,o[e[97]=\"INVALID_FEE_FILE\"]=97,o[e[98]=\"INVALID_EXCHANGE_RATE_FILE\"]=98,o[e[99]=\"INSUFFICIENT_LOCAL_CALL_GAS\"]=99,o[e[100]=\"ENTITY_NOT_ALLOWED_TO_DELETE\"]=100,o[e[101]=\"AUTHORIZATION_FAILED\"]=101,o[e[102]=\"FILE_UPLOADED_PROTO_INVALID\"]=102,o[e[103]=\"FILE_UPLOADED_PROTO_NOT_SAVED_TO_DISK\"]=103,o[e[104]=\"FEE_SCHEDULE_FILE_PART_UPLOADED\"]=104,o[e[105]=\"EXCHANGE_RATE_CHANGE_LIMIT_EXCEEDED\"]=105,o[e[106]=\"MAX_CONTRACT_STORAGE_EXCEEDED\"]=106,o[e[107]=\"TRANSFER_ACCOUNT_SAME_AS_DELETE_ACCOUNT\"]=107,o[e[108]=\"TOTAL_LEDGER_BALANCE_INVALID\"]=108,o[e[110]=\"EXPIRATION_REDUCTION_NOT_ALLOWED\"]=110,o[e[111]=\"MAX_GAS_LIMIT_EXCEEDED\"]=111,o[e[112]=\"MAX_FILE_SIZE_EXCEEDED\"]=112,o[e[113]=\"RECEIVER_SIG_REQUIRED\"]=113,o[e[150]=\"INVALID_TOPIC_ID\"]=150,o[e[155]=\"INVALID_ADMIN_KEY\"]=155,o[e[156]=\"INVALID_SUBMIT_KEY\"]=156,o[e[157]=\"UNAUTHORIZED\"]=157,o[e[158]=\"INVALID_TOPIC_MESSAGE\"]=158,o[e[159]=\"INVALID_AUTORENEW_ACCOUNT\"]=159,o[e[160]=\"AUTORENEW_ACCOUNT_NOT_ALLOWED\"]=160,o[e[162]=\"TOPIC_EXPIRED\"]=162,o[e[163]=\"INVALID_CHUNK_NUMBER\"]=163,o[e[164]=\"INVALID_CHUNK_TRANSACTION_ID\"]=164,o[e[165]=\"ACCOUNT_FROZEN_FOR_TOKEN\"]=165,o[e[166]=\"TOKENS_PER_ACCOUNT_LIMIT_EXCEEDED\"]=166,o[e[167]=\"INVALID_TOKEN_ID\"]=167,o[e[168]=\"INVALID_TOKEN_DECIMALS\"]=168,o[e[169]=\"INVALID_TOKEN_INITIAL_SUPPLY\"]=169,o[e[170]=\"INVALID_TREASURY_ACCOUNT_FOR_TOKEN\"]=170,o[e[171]=\"INVALID_TOKEN_SYMBOL\"]=171,o[e[172]=\"TOKEN_HAS_NO_FREEZE_KEY\"]=172,o[e[173]=\"TRANSFERS_NOT_ZERO_SUM_FOR_TOKEN\"]=173,o[e[174]=\"MISSING_TOKEN_SYMBOL\"]=174,o[e[175]=\"TOKEN_SYMBOL_TOO_LONG\"]=175,o[e[176]=\"ACCOUNT_KYC_NOT_GRANTED_FOR_TOKEN\"]=176,o[e[177]=\"TOKEN_HAS_NO_KYC_KEY\"]=177,o[e[178]=\"INSUFFICIENT_TOKEN_BALANCE\"]=178,o[e[179]=\"TOKEN_WAS_DELETED\"]=179,o[e[180]=\"TOKEN_HAS_NO_SUPPLY_KEY\"]=180,o[e[181]=\"TOKEN_HAS_NO_WIPE_KEY\"]=181,o[e[182]=\"INVALID_TOKEN_MINT_AMOUNT\"]=182,o[e[183]=\"INVALID_TOKEN_BURN_AMOUNT\"]=183,o[e[184]=\"TOKEN_NOT_ASSOCIATED_TO_ACCOUNT\"]=184,o[e[185]=\"CANNOT_WIPE_TOKEN_TREASURY_ACCOUNT\"]=185,o[e[186]=\"INVALID_KYC_KEY\"]=186,o[e[187]=\"INVALID_WIPE_KEY\"]=187,o[e[188]=\"INVALID_FREEZE_KEY\"]=188,o[e[189]=\"INVALID_SUPPLY_KEY\"]=189,o[e[190]=\"MISSING_TOKEN_NAME\"]=190,o[e[191]=\"TOKEN_NAME_TOO_LONG\"]=191,o[e[192]=\"INVALID_WIPING_AMOUNT\"]=192,o[e[193]=\"TOKEN_IS_IMMUTABLE\"]=193,o[e[194]=\"TOKEN_ALREADY_ASSOCIATED_TO_ACCOUNT\"]=194,o[e[195]=\"TRANSACTION_REQUIRES_ZERO_TOKEN_BALANCES\"]=195,o[e[196]=\"ACCOUNT_IS_TREASURY\"]=196,o[e[197]=\"TOKEN_ID_REPEATED_IN_TOKEN_LIST\"]=197,o[e[198]=\"TOKEN_TRANSFER_LIST_SIZE_LIMIT_EXCEEDED\"]=198,o[e[199]=\"EMPTY_TOKEN_TRANSFER_BODY\"]=199,o[e[200]=\"EMPTY_TOKEN_TRANSFER_ACCOUNT_AMOUNTS\"]=200,o[e[201]=\"INVALID_SCHEDULE_ID\"]=201,o[e[202]=\"SCHEDULE_IS_IMMUTABLE\"]=202,o[e[203]=\"INVALID_SCHEDULE_PAYER_ID\"]=203,o[e[204]=\"INVALID_SCHEDULE_ACCOUNT_ID\"]=204,o[e[205]=\"NO_NEW_VALID_SIGNATURES\"]=205,o[e[206]=\"UNRESOLVABLE_REQUIRED_SIGNERS\"]=206,o[e[207]=\"SCHEDULED_TRANSACTION_NOT_IN_WHITELIST\"]=207,o[e[208]=\"SOME_SIGNATURES_WERE_INVALID\"]=208,o[e[209]=\"TRANSACTION_ID_FIELD_NOT_ALLOWED\"]=209,o[e[210]=\"IDENTICAL_SCHEDULE_ALREADY_CREATED\"]=210,o[e[211]=\"INVALID_ZERO_BYTE_IN_STRING\"]=211,o[e[212]=\"SCHEDULE_ALREADY_DELETED\"]=212,o[e[213]=\"SCHEDULE_ALREADY_EXECUTED\"]=213,o[e[214]=\"MESSAGE_SIZE_TOO_LARGE\"]=214,o[e[215]=\"OPERATION_REPEATED_IN_BUCKET_GROUPS\"]=215,o[e[216]=\"BUCKET_CAPACITY_OVERFLOW\"]=216,o[e[217]=\"NODE_CAPACITY_NOT_SUFFICIENT_FOR_OPERATION\"]=217,o[e[218]=\"BUCKET_HAS_NO_THROTTLE_GROUPS\"]=218,o[e[219]=\"THROTTLE_GROUP_HAS_ZERO_OPS_PER_SEC\"]=219,o[e[220]=\"SUCCESS_BUT_MISSING_EXPECTED_OPERATION\"]=220,o[e[221]=\"UNPARSEABLE_THROTTLE_DEFINITIONS\"]=221,o[e[222]=\"INVALID_THROTTLE_DEFINITIONS\"]=222,o[e[223]=\"ACCOUNT_EXPIRED_AND_PENDING_REMOVAL\"]=223,o[e[224]=\"INVALID_TOKEN_MAX_SUPPLY\"]=224,o[e[225]=\"INVALID_TOKEN_NFT_SERIAL_NUMBER\"]=225,o[e[226]=\"INVALID_NFT_ID\"]=226,o[e[227]=\"METADATA_TOO_LONG\"]=227,o[e[228]=\"BATCH_SIZE_LIMIT_EXCEEDED\"]=228,o[e[229]=\"INVALID_QUERY_RANGE\"]=229,o[e[230]=\"FRACTION_DIVIDES_BY_ZERO\"]=230,o[e[231]=\"INSUFFICIENT_PAYER_BALANCE_FOR_CUSTOM_FEE\"]=231,o[e[232]=\"CUSTOM_FEES_LIST_TOO_LONG\"]=232,o[e[233]=\"INVALID_CUSTOM_FEE_COLLECTOR\"]=233,o[e[234]=\"INVALID_TOKEN_ID_IN_CUSTOM_FEES\"]=234,o[e[235]=\"TOKEN_NOT_ASSOCIATED_TO_FEE_COLLECTOR\"]=235,o[e[236]=\"TOKEN_MAX_SUPPLY_REACHED\"]=236,o[e[237]=\"SENDER_DOES_NOT_OWN_NFT_SERIAL_NO\"]=237,o[e[238]=\"CUSTOM_FEE_NOT_FULLY_SPECIFIED\"]=238,o[e[239]=\"CUSTOM_FEE_MUST_BE_POSITIVE\"]=239,o[e[240]=\"TOKEN_HAS_NO_FEE_SCHEDULE_KEY\"]=240,o[e[241]=\"CUSTOM_FEE_OUTSIDE_NUMERIC_RANGE\"]=241,o[e[242]=\"ROYALTY_FRACTION_CANNOT_EXCEED_ONE\"]=242,o[e[243]=\"FRACTIONAL_FEE_MAX_AMOUNT_LESS_THAN_MIN_AMOUNT\"]=243,o[e[244]=\"CUSTOM_SCHEDULE_ALREADY_HAS_NO_FEES\"]=244,o[e[245]=\"CUSTOM_FEE_DENOMINATION_MUST_BE_FUNGIBLE_COMMON\"]=245,o[e[246]=\"CUSTOM_FRACTIONAL_FEE_ONLY_ALLOWED_FOR_FUNGIBLE_COMMON\"]=246,o[e[247]=\"INVALID_CUSTOM_FEE_SCHEDULE_KEY\"]=247,o[e[248]=\"INVALID_TOKEN_MINT_METADATA\"]=248,o[e[249]=\"INVALID_TOKEN_BURN_METADATA\"]=249,o[e[250]=\"CURRENT_TREASURY_STILL_OWNS_NFTS\"]=250,o[e[251]=\"ACCOUNT_STILL_OWNS_NFTS\"]=251,o[e[252]=\"TREASURY_MUST_OWN_BURNED_NFT\"]=252,o[e[253]=\"ACCOUNT_DOES_NOT_OWN_WIPED_NFT\"]=253,o[e[254]=\"ACCOUNT_AMOUNT_TRANSFERS_ONLY_ALLOWED_FOR_FUNGIBLE_COMMON\"]=254,o[e[255]=\"MAX_NFTS_IN_PRICE_REGIME_HAVE_BEEN_MINTED\"]=255,o[e[256]=\"PAYER_ACCOUNT_DELETED\"]=256,o[e[257]=\"CUSTOM_FEE_CHARGING_EXCEEDED_MAX_RECURSION_DEPTH\"]=257,o[e[258]=\"CUSTOM_FEE_CHARGING_EXCEEDED_MAX_ACCOUNT_AMOUNTS\"]=258,o[e[259]=\"INSUFFICIENT_SENDER_ACCOUNT_BALANCE_FOR_CUSTOM_FEE\"]=259,o[e[260]=\"SERIAL_NUMBER_LIMIT_REACHED\"]=260,o[e[261]=\"CUSTOM_ROYALTY_FEE_ONLY_ALLOWED_FOR_NON_FUNGIBLE_UNIQUE\"]=261,o[e[262]=\"NO_REMAINING_AUTOMATIC_ASSOCIATIONS\"]=262,o[e[263]=\"EXISTING_AUTOMATIC_ASSOCIATIONS_EXCEED_GIVEN_LIMIT\"]=263,o[e[264]=\"REQUESTED_NUM_AUTOMATIC_ASSOCIATIONS_EXCEEDS_ASSOCIATION_LIMIT\"]=264,o[e[265]=\"TOKEN_IS_PAUSED\"]=265,o[e[266]=\"TOKEN_HAS_NO_PAUSE_KEY\"]=266,o[e[267]=\"INVALID_PAUSE_KEY\"]=267,o[e[268]=\"FREEZE_UPDATE_FILE_DOES_NOT_EXIST\"]=268,o[e[269]=\"FREEZE_UPDATE_FILE_HASH_DOES_NOT_MATCH\"]=269,o[e[270]=\"NO_UPGRADE_HAS_BEEN_PREPARED\"]=270,o[e[271]=\"NO_FREEZE_IS_SCHEDULED\"]=271,o[e[272]=\"UPDATE_FILE_HASH_CHANGED_SINCE_PREPARE_UPGRADE\"]=272,o[e[273]=\"FREEZE_START_TIME_MUST_BE_FUTURE\"]=273,o[e[274]=\"PREPARED_UPDATE_FILE_IS_IMMUTABLE\"]=274,o[e[275]=\"FREEZE_ALREADY_SCHEDULED\"]=275,o[e[276]=\"FREEZE_UPGRADE_IN_PROGRESS\"]=276,o[e[277]=\"UPDATE_FILE_ID_DOES_NOT_MATCH_PREPARED\"]=277,o[e[278]=\"UPDATE_FILE_HASH_DOES_NOT_MATCH_PREPARED\"]=278,o[e[279]=\"CONSENSUS_GAS_EXHAUSTED\"]=279,o[e[280]=\"REVERTED_SUCCESS\"]=280,o[e[281]=\"MAX_STORAGE_IN_PRICE_REGIME_HAS_BEEN_USED\"]=281,o[e[282]=\"INVALID_ALIAS_KEY\"]=282,o}(),ConsensusTopicInfo:function(){function e(e){if(e)for(var o=Object.keys(e),t=0;t<o.length;++t)null!=e[o[t]]&&(this[o[t]]=e[o[t]])}return e.prototype.memo=\"\",e.prototype.runningHash=$util.newBuffer([]),e.prototype.sequenceNumber=$util.Long?$util.Long.fromBits(0,0,!0):0,e.prototype.expirationTime=null,e.prototype.adminKey=null,e.prototype.submitKey=null,e.prototype.autoRenewPeriod=null,e.prototype.autoRenewAccount=null,e.prototype.ledgerId=$util.newBuffer([]),e.create=function(o){return new e(o)},e.encode=function(e,o){return o||(o=$Writer.create()),null!=e.memo&&Object.hasOwnProperty.call(e,\"memo\")&&o.uint32(10).string(e.memo),null!=e.runningHash&&Object.hasOwnProperty.call(e,\"runningHash\")&&o.uint32(18).bytes(e.runningHash),null!=e.sequenceNumber&&Object.hasOwnProperty.call(e,\"sequenceNumber\")&&o.uint32(24).uint64(e.sequenceNumber),null!=e.expirationTime&&Object.hasOwnProperty.call(e,\"expirationTime\")&&$root.proto.Timestamp.encode(e.expirationTime,o.uint32(34).fork()).ldelim(),null!=e.adminKey&&Object.hasOwnProperty.call(e,\"adminKey\")&&$root.proto.Key.encode(e.adminKey,o.uint32(42).fork()).ldelim(),null!=e.submitKey&&Object.hasOwnProperty.call(e,\"submitKey\")&&$root.proto.Key.encode(e.submitKey,o.uint32(50).fork()).ldelim(),null!=e.autoRenewPeriod&&Object.hasOwnProperty.call(e,\"autoRenewPeriod\")&&$root.proto.Duration.encode(e.autoRenewPeriod,o.uint32(58).fork()).ldelim(),null!=e.autoRenewAccount&&Object.hasOwnProperty.call(e,\"autoRenewAccount\")&&$root.proto.AccountID.encode(e.autoRenewAccount,o.uint32(66).fork()).ldelim(),null!=e.ledgerId&&Object.hasOwnProperty.call(e,\"ledgerId\")&&o.uint32(74).bytes(e.ledgerId),o},e.decode=function(e,o){e instanceof $Reader||(e=$Reader.create(e));for(var n=void 0===o?e.len:e.pos+o,i=new $root.proto.ConsensusTopicInfo,d;e.pos<n;)switch(d=e.uint32(),d>>>3){case 1:i.memo=e.string();break;case 2:i.runningHash=e.bytes();break;case 3:i.sequenceNumber=e.uint64();break;case 4:i.expirationTime=$root.proto.Timestamp.decode(e,e.uint32());break;case 5:i.adminKey=$root.proto.Key.decode(e,e.uint32());break;case 6:i.submitKey=$root.proto.Key.decode(e,e.uint32());break;case 7:i.autoRenewPeriod=$root.proto.Duration.decode(e,e.uint32());break;case 8:i.autoRenewAccount=$root.proto.AccountID.decode(e,e.uint32());break;case 9:i.ledgerId=e.bytes();break;default:e.skipType(7&d);}return i},e}(),ConsensusService:function(){function e(e,o,t){$protobuf.rpc.Service.call(this,e,o,t)}return(e.prototype=Object.create($protobuf.rpc.Service.prototype)).constructor=e,e.create=function(e,o,t){return new this(e,o,t)},Object.defineProperty(e.prototype.createTopic=function e(o,t){return this.rpcCall(e,$root.proto.Transaction,$root.proto.TransactionResponse,o,t)},\"name\",{value:\"createTopic\"}),Object.defineProperty(e.prototype.updateTopic=function e(o,t){return this.rpcCall(e,$root.proto.Transaction,$root.proto.TransactionResponse,o,t)},\"name\",{value:\"updateTopic\"}),Object.defineProperty(e.prototype.deleteTopic=function e(o,t){return this.rpcCall(e,$root.proto.Transaction,$root.proto.TransactionResponse,o,t)},\"name\",{value:\"deleteTopic\"}),Object.defineProperty(e.prototype.getTopicInfo=function e(o,t){return this.rpcCall(e,$root.proto.Query,$root.proto.Response,o,t)},\"name\",{value:\"getTopicInfo\"}),Object.defineProperty(e.prototype.submitMessage=function e(o,t){return this.rpcCall(e,$root.proto.Transaction,$root.proto.TransactionResponse,o,t)},\"name\",{value:\"submitMessage\"}),e}(),Query:function(){function e(e){if(e)for(var o=Object.keys(e),t=0;t<o.length;++t)null!=e[o[t]]&&(this[o[t]]=e[o[t]])}e.prototype.getByKey=null,e.prototype.getBySolidityID=null,e.prototype.contractCallLocal=null,e.prototype.contractGetInfo=null,e.prototype.contractGetBytecode=null,e.prototype.ContractGetRecords=null,e.prototype.cryptogetAccountBalance=null,e.prototype.cryptoGetAccountRecords=null,e.prototype.cryptoGetInfo=null,e.prototype.cryptoGetLiveHash=null,e.prototype.cryptoGetProxyStakers=null,e.prototype.fileGetContents=null,e.prototype.fileGetInfo=null,e.prototype.transactionGetReceipt=null,e.prototype.transactionGetRecord=null,e.prototype.transactionGetFastRecord=null,e.prototype.consensusGetTopicInfo=null,e.prototype.networkGetVersionInfo=null,e.prototype.tokenGetInfo=null,e.prototype.scheduleGetInfo=null,e.prototype.tokenGetAccountNftInfos=null,e.prototype.tokenGetNftInfo=null,e.prototype.tokenGetNftInfos=null,e.prototype.networkGetExecutionTime=null;let o;return Object.defineProperty(e.prototype,\"query\",{get:$util.oneOfGetter(o=[\"getByKey\",\"getBySolidityID\",\"contractCallLocal\",\"contractGetInfo\",\"contractGetBytecode\",\"ContractGetRecords\",\"cryptogetAccountBalance\",\"cryptoGetAccountRecords\",\"cryptoGetInfo\",\"cryptoGetLiveHash\",\"cryptoGetProxyStakers\",\"fileGetContents\",\"fileGetInfo\",\"transactionGetReceipt\",\"transactionGetRecord\",\"transactionGetFastRecord\",\"consensusGetTopicInfo\",\"networkGetVersionInfo\",\"tokenGetInfo\",\"scheduleGetInfo\",\"tokenGetAccountNftInfos\",\"tokenGetNftInfo\",\"tokenGetNftInfos\",\"networkGetExecutionTime\"]),set:$util.oneOfSetter(o)}),e.create=function(o){return new e(o)},e.encode=function(e,o){return o||(o=$Writer.create()),null!=e.getByKey&&Object.hasOwnProperty.call(e,\"getByKey\")&&$root.proto.GetByKeyQuery.encode(e.getByKey,o.uint32(10).fork()).ldelim(),null!=e.getBySolidityID&&Object.hasOwnProperty.call(e,\"getBySolidityID\")&&$root.proto.GetBySolidityIDQuery.encode(e.getBySolidityID,o.uint32(18).fork()).ldelim(),null!=e.contractCallLocal&&Object.hasOwnProperty.call(e,\"contractCallLocal\")&&$root.proto.ContractCallLocalQuery.encode(e.contractCallLocal,o.uint32(26).fork()).ldelim(),null!=e.contractGetInfo&&Object.hasOwnProperty.call(e,\"contractGetInfo\")&&$root.proto.ContractGetInfoQuery.encode(e.contractGetInfo,o.uint32(34).fork()).ldelim(),null!=e.contractGetBytecode&&Object.hasOwnProperty.call(e,\"contractGetBytecode\")&&$root.proto.ContractGetBytecodeQuery.encode(e.contractGetBytecode,o.uint32(42).fork()).ldelim(),null!=e.ContractGetRecords&&Object.hasOwnProperty.call(e,\"ContractGetRecords\")&&$root.proto.ContractGetRecordsQuery.encode(e.ContractGetRecords,o.uint32(50).fork()).ldelim(),null!=e.cryptogetAccountBalance&&Object.hasOwnProperty.call(e,\"cryptogetAccountBalance\")&&$root.proto.CryptoGetAccountBalanceQuery.encode(e.cryptogetAccountBalance,o.uint32(58).fork()).ldelim(),null!=e.cryptoGetAccountRecords&&Object.hasOwnProperty.call(e,\"cryptoGetAccountRecords\")&&$root.proto.CryptoGetAccountRecordsQuery.encode(e.cryptoGetAccountRecords,o.uint32(66).fork()).ldelim(),null!=e.cryptoGetInfo&&Object.hasOwnProperty.call(e,\"cryptoGetInfo\")&&$root.proto.CryptoGetInfoQuery.encode(e.cryptoGetInfo,o.uint32(74).fork()).ldelim(),null!=e.cryptoGetLiveHash&&Object.hasOwnProperty.call(e,\"cryptoGetLiveHash\")&&$root.proto.CryptoGetLiveHashQuery.encode(e.cryptoGetLiveHash,o.uint32(82).fork()).ldelim(),null!=e.cryptoGetProxyStakers&&Object.hasOwnProperty.call(e,\"cryptoGetProxyStakers\")&&$root.proto.CryptoGetStakersQuery.encode(e.cryptoGetProxyStakers,o.uint32(90).fork()).ldelim(),null!=e.fileGetContents&&Object.hasOwnProperty.call(e,\"fileGetContents\")&&$root.proto.FileGetContentsQuery.encode(e.fileGetContents,o.uint32(98).fork()).ldelim(),null!=e.fileGetInfo&&Object.hasOwnProperty.call(e,\"fileGetInfo\")&&$root.proto.FileGetInfoQuery.encode(e.fileGetInfo,o.uint32(106).fork()).ldelim(),null!=e.transactionGetReceipt&&Object.hasOwnProperty.call(e,\"transactionGetReceipt\")&&$root.proto.TransactionGetReceiptQuery.encode(e.transactionGetReceipt,o.uint32(114).fork()).ldelim(),null!=e.transactionGetRecord&&Object.hasOwnProperty.call(e,\"transactionGetRecord\")&&$root.proto.TransactionGetRecordQuery.encode(e.transactionGetRecord,o.uint32(122).fork()).ldelim(),null!=e.transactionGetFastRecord&&Object.hasOwnProperty.call(e,\"transactionGetFastRecord\")&&$root.proto.TransactionGetFastRecordQuery.encode(e.transactionGetFastRecord,o.uint32(130).fork()).ldelim(),null!=e.consensusGetTopicInfo&&Object.hasOwnProperty.call(e,\"consensusGetTopicInfo\")&&$root.proto.ConsensusGetTopicInfoQuery.encode(e.consensusGetTopicInfo,o.uint32(402).fork()).ldelim(),null!=e.networkGetVersionInfo&&Object.hasOwnProperty.call(e,\"networkGetVersionInfo\")&&$root.proto.NetworkGetVersionInfoQuery.encode(e.networkGetVersionInfo,o.uint32(410).fork()).ldelim(),null!=e.tokenGetInfo&&Object.hasOwnProperty.call(e,\"tokenGetInfo\")&&$root.proto.TokenGetInfoQuery.encode(e.tokenGetInfo,o.uint32(418).fork()).ldelim(),null!=e.scheduleGetInfo&&Object.hasOwnProperty.call(e,\"scheduleGetInfo\")&&$root.proto.ScheduleGetInfoQuery.encode(e.scheduleGetInfo,o.uint32(426).fork()).ldelim(),null!=e.tokenGetAccountNftInfos&&Object.hasOwnProperty.call(e,\"tokenGetAccountNftInfos\")&&$root.proto.TokenGetAccountNftInfosQuery.encode(e.tokenGetAccountNftInfos,o.uint32(434).fork()).ldelim(),null!=e.tokenGetNftInfo&&Object.hasOwnProperty.call(e,\"tokenGetNftInfo\")&&$root.proto.TokenGetNftInfoQuery.encode(e.tokenGetNftInfo,o.uint32(442).fork()).ldelim(),null!=e.tokenGetNftInfos&&Object.hasOwnProperty.call(e,\"tokenGetNftInfos\")&&$root.proto.TokenGetNftInfosQuery.encode(e.tokenGetNftInfos,o.uint32(450).fork()).ldelim(),null!=e.networkGetExecutionTime&&Object.hasOwnProperty.call(e,\"networkGetExecutionTime\")&&$root.proto.NetworkGetExecutionTimeQuery.encode(e.networkGetExecutionTime,o.uint32(458).fork()).ldelim(),o},e.decode=function(e,o){e instanceof $Reader||(e=$Reader.create(e));for(var n=void 0===o?e.len:e.pos+o,i=new $root.proto.Query,d;e.pos<n;)switch(d=e.uint32(),d>>>3){case 1:i.getByKey=$root.proto.GetByKeyQuery.decode(e,e.uint32());break;case 2:i.getBySolidityID=$root.proto.GetBySolidityIDQuery.decode(e,e.uint32());break;case 3:i.contractCallLocal=$root.proto.ContractCallLocalQuery.decode(e,e.uint32());break;case 4:i.contractGetInfo=$root.proto.ContractGetInfoQuery.decode(e,e.uint32());break;case 5:i.contractGetBytecode=$root.proto.ContractGetBytecodeQuery.decode(e,e.uint32());break;case 6:i.ContractGetRecords=$root.proto.ContractGetRecordsQuery.decode(e,e.uint32());break;case 7:i.cryptogetAccountBalance=$root.proto.CryptoGetAccountBalanceQuery.decode(e,e.uint32());break;case 8:i.cryptoGetAccountRecords=$root.proto.CryptoGetAccountRecordsQuery.decode(e,e.uint32());break;case 9:i.cryptoGetInfo=$root.proto.CryptoGetInfoQuery.decode(e,e.uint32());break;case 10:i.cryptoGetLiveHash=$root.proto.CryptoGetLiveHashQuery.decode(e,e.uint32());break;case 11:i.cryptoGetProxyStakers=$root.proto.CryptoGetStakersQuery.decode(e,e.uint32());break;case 12:i.fileGetContents=$root.proto.FileGetContentsQuery.decode(e,e.uint32());break;case 13:i.fileGetInfo=$root.proto.FileGetInfoQuery.decode(e,e.uint32());break;case 14:i.transactionGetReceipt=$root.proto.TransactionGetReceiptQuery.decode(e,e.uint32());break;case 15:i.transactionGetRecord=$root.proto.TransactionGetRecordQuery.decode(e,e.uint32());break;case 16:i.transactionGetFastRecord=$root.proto.TransactionGetFastRecordQuery.decode(e,e.uint32());break;case 50:i.consensusGetTopicInfo=$root.proto.ConsensusGetTopicInfoQuery.decode(e,e.uint32());break;case 51:i.networkGetVersionInfo=$root.proto.NetworkGetVersionInfoQuery.decode(e,e.uint32());break;case 52:i.tokenGetInfo=$root.proto.TokenGetInfoQuery.decode(e,e.uint32());break;case 53:i.scheduleGetInfo=$root.proto.ScheduleGetInfoQuery.decode(e,e.uint32());break;case 54:i.tokenGetAccountNftInfos=$root.proto.TokenGetAccountNftInfosQuery.decode(e,e.uint32());break;case 55:i.tokenGetNftInfo=$root.proto.TokenGetNftInfoQuery.decode(e,e.uint32());break;case 56:i.tokenGetNftInfos=$root.proto.TokenGetNftInfosQuery.decode(e,e.uint32());break;case 57:i.networkGetExecutionTime=$root.proto.NetworkGetExecutionTimeQuery.decode(e,e.uint32());break;default:e.skipType(7&d);}return i},e}(),GetByKeyQuery:function(){function e(e){if(e)for(var o=Object.keys(e),t=0;t<o.length;++t)null!=e[o[t]]&&(this[o[t]]=e[o[t]])}return e.prototype.header=null,e.prototype.key=null,e.create=function(o){return new e(o)},e.encode=function(e,o){return o||(o=$Writer.create()),null!=e.header&&Object.hasOwnProperty.call(e,\"header\")&&$root.proto.QueryHeader.encode(e.header,o.uint32(10).fork()).ldelim(),null!=e.key&&Object.hasOwnProperty.call(e,\"key\")&&$root.proto.Key.encode(e.key,o.uint32(18).fork()).ldelim(),o},e.decode=function(e,o){e instanceof $Reader||(e=$Reader.create(e));for(var n=void 0===o?e.len:e.pos+o,i=new $root.proto.GetByKeyQuery,d;e.pos<n;)switch(d=e.uint32(),d>>>3){case 1:i.header=$root.proto.QueryHeader.decode(e,e.uint32());break;case 2:i.key=$root.proto.Key.decode(e,e.uint32());break;default:e.skipType(7&d);}return i},e}(),EntityID:function(){function e(e){if(e)for(var o=Object.keys(e),t=0;t<o.length;++t)null!=e[o[t]]&&(this[o[t]]=e[o[t]])}e.prototype.accountID=null,e.prototype.liveHash=null,e.prototype.fileID=null,e.prototype.contractID=null;let o;return Object.defineProperty(e.prototype,\"entity\",{get:$util.oneOfGetter(o=[\"accountID\",\"liveHash\",\"fileID\",\"contractID\"]),set:$util.oneOfSetter(o)}),e.create=function(o){return new e(o)},e.encode=function(e,o){return o||(o=$Writer.create()),null!=e.accountID&&Object.hasOwnProperty.call(e,\"accountID\")&&$root.proto.AccountID.encode(e.accountID,o.uint32(10).fork()).ldelim(),null!=e.liveHash&&Object.hasOwnProperty.call(e,\"liveHash\")&&$root.proto.LiveHash.encode(e.liveHash,o.uint32(18).fork()).ldelim(),null!=e.fileID&&Object.hasOwnProperty.call(e,\"fileID\")&&$root.proto.FileID.encode(e.fileID,o.uint32(26).fork()).ldelim(),null!=e.contractID&&Object.hasOwnProperty.call(e,\"contractID\")&&$root.proto.ContractID.encode(e.contractID,o.uint32(34).fork()).ldelim(),o},e.decode=function(e,o){e instanceof $Reader||(e=$Reader.create(e));for(var n=void 0===o?e.len:e.pos+o,i=new $root.proto.EntityID,d;e.pos<n;)switch(d=e.uint32(),d>>>3){case 1:i.accountID=$root.proto.AccountID.decode(e,e.uint32());break;case 2:i.liveHash=$root.proto.LiveHash.decode(e,e.uint32());break;case 3:i.fileID=$root.proto.FileID.decode(e,e.uint32());break;case 4:i.contractID=$root.proto.ContractID.decode(e,e.uint32());break;default:e.skipType(7&d);}return i},e}(),GetByKeyResponse:function(){function e(e){if(this.entities=[],e)for(var o=Object.keys(e),t=0;t<o.length;++t)null!=e[o[t]]&&(this[o[t]]=e[o[t]])}return e.prototype.header=null,e.prototype.entities=$util.emptyArray,e.create=function(o){return new e(o)},e.encode=function(e,o){if(o||(o=$Writer.create()),null!=e.header&&Object.hasOwnProperty.call(e,\"header\")&&$root.proto.ResponseHeader.encode(e.header,o.uint32(10).fork()).ldelim(),null!=e.entities&&e.entities.length)for(var t=0;t<e.entities.length;++t)$root.proto.EntityID.encode(e.entities[t],o.uint32(18).fork()).ldelim();return o},e.decode=function(e,o){e instanceof $Reader||(e=$Reader.create(e));for(var n=void 0===o?e.len:e.pos+o,i=new $root.proto.GetByKeyResponse,d;e.pos<n;)switch(d=e.uint32(),d>>>3){case 1:i.header=$root.proto.ResponseHeader.decode(e,e.uint32());break;case 2:i.entities&&i.entities.length||(i.entities=[]),i.entities.push($root.proto.EntityID.decode(e,e.uint32()));break;default:e.skipType(7&d);}return i},e}(),GetBySolidityIDQuery:function(){function e(e){if(e)for(var o=Object.keys(e),t=0;t<o.length;++t)null!=e[o[t]]&&(this[o[t]]=e[o[t]])}return e.prototype.header=null,e.prototype.solidityID=\"\",e.create=function(o){return new e(o)},e.encode=function(e,o){return o||(o=$Writer.create()),null!=e.header&&Object.hasOwnProperty.call(e,\"header\")&&$root.proto.QueryHeader.encode(e.header,o.uint32(10).fork()).ldelim(),null!=e.solidityID&&Object.hasOwnProperty.call(e,\"solidityID\")&&o.uint32(18).string(e.solidityID),o},e.decode=function(e,o){e instanceof $Reader||(e=$Reader.create(e));for(var n=void 0===o?e.len:e.pos+o,i=new $root.proto.GetBySolidityIDQuery,d;e.pos<n;)switch(d=e.uint32(),d>>>3){case 1:i.header=$root.proto.QueryHeader.decode(e,e.uint32());break;case 2:i.solidityID=e.string();break;default:e.skipType(7&d);}return i},e}(),GetBySolidityIDResponse:function(){function e(e){if(e)for(var o=Object.keys(e),t=0;t<o.length;++t)null!=e[o[t]]&&(this[o[t]]=e[o[t]])}return e.prototype.header=null,e.prototype.accountID=null,e.prototype.fileID=null,e.prototype.contractID=null,e.create=function(o){return new e(o)},e.encode=function(e,o){return o||(o=$Writer.create()),null!=e.header&&Object.hasOwnProperty.call(e,\"header\")&&$root.proto.ResponseHeader.encode(e.header,o.uint32(10).fork()).ldelim(),null!=e.accountID&&Object.hasOwnProperty.call(e,\"accountID\")&&$root.proto.AccountID.encode(e.accountID,o.uint32(18).fork()).ldelim(),null!=e.fileID&&Object.hasOwnProperty.call(e,\"fileID\")&&$root.proto.FileID.encode(e.fileID,o.uint32(26).fork()).ldelim(),null!=e.contractID&&Object.hasOwnProperty.call(e,\"contractID\")&&$root.proto.ContractID.encode(e.contractID,o.uint32(34).fork()).ldelim(),o},e.decode=function(e,o){e instanceof $Reader||(e=$Reader.create(e));for(var n=void 0===o?e.len:e.pos+o,i=new $root.proto.GetBySolidityIDResponse,d;e.pos<n;)switch(d=e.uint32(),d>>>3){case 1:i.header=$root.proto.ResponseHeader.decode(e,e.uint32());break;case 2:i.accountID=$root.proto.AccountID.decode(e,e.uint32());break;case 3:i.fileID=$root.proto.FileID.decode(e,e.uint32());break;case 4:i.contractID=$root.proto.ContractID.decode(e,e.uint32());break;default:e.skipType(7&d);}return i},e}(),ContractLoginfo:function(){function e(e){if(this.topic=[],e)for(var o=Object.keys(e),t=0;t<o.length;++t)null!=e[o[t]]&&(this[o[t]]=e[o[t]])}return e.prototype.contractID=null,e.prototype.bloom=$util.newBuffer([]),e.prototype.topic=$util.emptyArray,e.prototype.data=$util.newBuffer([]),e.create=function(o){return new e(o)},e.encode=function(e,o){if(o||(o=$Writer.create()),null!=e.contractID&&Object.hasOwnProperty.call(e,\"contractID\")&&$root.proto.ContractID.encode(e.contractID,o.uint32(10).fork()).ldelim(),null!=e.bloom&&Object.hasOwnProperty.call(e,\"bloom\")&&o.uint32(18).bytes(e.bloom),null!=e.topic&&e.topic.length)for(var t=0;t<e.topic.length;++t)o.uint32(26).bytes(e.topic[t]);return null!=e.data&&Object.hasOwnProperty.call(e,\"data\")&&o.uint32(34).bytes(e.data),o},e.decode=function(e,o){e instanceof $Reader||(e=$Reader.create(e));for(var n=void 0===o?e.len:e.pos+o,i=new $root.proto.ContractLoginfo,d;e.pos<n;)switch(d=e.uint32(),d>>>3){case 1:i.contractID=$root.proto.ContractID.decode(e,e.uint32());break;case 2:i.bloom=e.bytes();break;case 3:i.topic&&i.topic.length||(i.topic=[]),i.topic.push(e.bytes());break;case 4:i.data=e.bytes();break;default:e.skipType(7&d);}return i},e}(),ContractFunctionResult:function(){function e(e){if(this.logInfo=[],this.createdContractIDs=[],e)for(var o=Object.keys(e),t=0;t<o.length;++t)null!=e[o[t]]&&(this[o[t]]=e[o[t]])}return e.prototype.contractID=null,e.prototype.contractCallResult=$util.newBuffer([]),e.prototype.errorMessage=\"\",e.prototype.bloom=$util.newBuffer([]),e.prototype.gasUsed=$util.Long?$util.Long.fromBits(0,0,!0):0,e.prototype.logInfo=$util.emptyArray,e.prototype.createdContractIDs=$util.emptyArray,e.create=function(o){return new e(o)},e.encode=function(e,o){if(o||(o=$Writer.create()),null!=e.contractID&&Object.hasOwnProperty.call(e,\"contractID\")&&$root.proto.ContractID.encode(e.contractID,o.uint32(10).fork()).ldelim(),null!=e.contractCallResult&&Object.hasOwnProperty.call(e,\"contractCallResult\")&&o.uint32(18).bytes(e.contractCallResult),null!=e.errorMessage&&Object.hasOwnProperty.call(e,\"errorMessage\")&&o.uint32(26).string(e.errorMessage),null!=e.bloom&&Object.hasOwnProperty.call(e,\"bloom\")&&o.uint32(34).bytes(e.bloom),null!=e.gasUsed&&Object.hasOwnProperty.call(e,\"gasUsed\")&&o.uint32(40).uint64(e.gasUsed),null!=e.logInfo&&e.logInfo.length)for(var t=0;t<e.logInfo.length;++t)$root.proto.ContractLoginfo.encode(e.logInfo[t],o.uint32(50).fork()).ldelim();if(null!=e.createdContractIDs&&e.createdContractIDs.length)for(var t=0;t<e.createdContractIDs.length;++t)$root.proto.ContractID.encode(e.createdContractIDs[t],o.uint32(58).fork()).ldelim();return o},e.decode=function(e,o){e instanceof $Reader||(e=$Reader.create(e));for(var n=void 0===o?e.len:e.pos+o,i=new $root.proto.ContractFunctionResult,d;e.pos<n;)switch(d=e.uint32(),d>>>3){case 1:i.contractID=$root.proto.ContractID.decode(e,e.uint32());break;case 2:i.contractCallResult=e.bytes();break;case 3:i.errorMessage=e.string();break;case 4:i.bloom=e.bytes();break;case 5:i.gasUsed=e.uint64();break;case 6:i.logInfo&&i.logInfo.length||(i.logInfo=[]),i.logInfo.push($root.proto.ContractLoginfo.decode(e,e.uint32()));break;case 7:i.createdContractIDs&&i.createdContractIDs.length||(i.createdContractIDs=[]),i.createdContractIDs.push($root.proto.ContractID.decode(e,e.uint32()));break;default:e.skipType(7&d);}return i},e}(),ContractCallLocalQuery:function(){function e(e){if(e)for(var o=Object.keys(e),t=0;t<o.length;++t)null!=e[o[t]]&&(this[o[t]]=e[o[t]])}return e.prototype.header=null,e.prototype.contractID=null,e.prototype.gas=$util.Long?$util.Long.fromBits(0,0,!1):0,e.prototype.functionParameters=$util.newBuffer([]),e.prototype.maxResultSize=$util.Long?$util.Long.fromBits(0,0,!1):0,e.create=function(o){return new e(o)},e.encode=function(e,o){return o||(o=$Writer.create()),null!=e.header&&Object.hasOwnProperty.call(e,\"header\")&&$root.proto.QueryHeader.encode(e.header,o.uint32(10).fork()).ldelim(),null!=e.contractID&&Object.hasOwnProperty.call(e,\"contractID\")&&$root.proto.ContractID.encode(e.contractID,o.uint32(18).fork()).ldelim(),null!=e.gas&&Object.hasOwnProperty.call(e,\"gas\")&&o.uint32(24).int64(e.gas),null!=e.functionParameters&&Object.hasOwnProperty.call(e,\"functionParameters\")&&o.uint32(34).bytes(e.functionParameters),null!=e.maxResultSize&&Object.hasOwnProperty.call(e,\"maxResultSize\")&&o.uint32(40).int64(e.maxResultSize),o},e.decode=function(e,o){e instanceof $Reader||(e=$Reader.create(e));for(var n=void 0===o?e.len:e.pos+o,i=new $root.proto.ContractCallLocalQuery,d;e.pos<n;)switch(d=e.uint32(),d>>>3){case 1:i.header=$root.proto.QueryHeader.decode(e,e.uint32());break;case 2:i.contractID=$root.proto.ContractID.decode(e,e.uint32());break;case 3:i.gas=e.int64();break;case 4:i.functionParameters=e.bytes();break;case 5:i.maxResultSize=e.int64();break;default:e.skipType(7&d);}return i},e}(),ContractCallLocalResponse:function(){function e(e){if(e)for(var o=Object.keys(e),t=0;t<o.length;++t)null!=e[o[t]]&&(this[o[t]]=e[o[t]])}return e.prototype.header=null,e.prototype.functionResult=null,e.create=function(o){return new e(o)},e.encode=function(e,o){return o||(o=$Writer.create()),null!=e.header&&Object.hasOwnProperty.call(e,\"header\")&&$root.proto.ResponseHeader.encode(e.header,o.uint32(10).fork()).ldelim(),null!=e.functionResult&&Object.hasOwnProperty.call(e,\"functionResult\")&&$root.proto.ContractFunctionResult.encode(e.functionResult,o.uint32(18).fork()).ldelim(),o},e.decode=function(e,o){e instanceof $Reader||(e=$Reader.create(e));for(var n=void 0===o?e.len:e.pos+o,i=new $root.proto.ContractCallLocalResponse,d;e.pos<n;)switch(d=e.uint32(),d>>>3){case 1:i.header=$root.proto.ResponseHeader.decode(e,e.uint32());break;case 2:i.functionResult=$root.proto.ContractFunctionResult.decode(e,e.uint32());break;default:e.skipType(7&d);}return i},e}(),ContractGetInfoQuery:function(){function e(e){if(e)for(var o=Object.keys(e),t=0;t<o.length;++t)null!=e[o[t]]&&(this[o[t]]=e[o[t]])}return e.prototype.header=null,e.prototype.contractID=null,e.create=function(o){return new e(o)},e.encode=function(e,o){return o||(o=$Writer.create()),null!=e.header&&Object.hasOwnProperty.call(e,\"header\")&&$root.proto.QueryHeader.encode(e.header,o.uint32(10).fork()).ldelim(),null!=e.contractID&&Object.hasOwnProperty.call(e,\"contractID\")&&$root.proto.ContractID.encode(e.contractID,o.uint32(18).fork()).ldelim(),o},e.decode=function(e,o){e instanceof $Reader||(e=$Reader.create(e));for(var n=void 0===o?e.len:e.pos+o,i=new $root.proto.ContractGetInfoQuery,d;e.pos<n;)switch(d=e.uint32(),d>>>3){case 1:i.header=$root.proto.QueryHeader.decode(e,e.uint32());break;case 2:i.contractID=$root.proto.ContractID.decode(e,e.uint32());break;default:e.skipType(7&d);}return i},e}(),ContractGetInfoResponse:function(){function e(e){if(e)for(var o=Object.keys(e),t=0;t<o.length;++t)null!=e[o[t]]&&(this[o[t]]=e[o[t]])}return e.prototype.header=null,e.prototype.contractInfo=null,e.create=function(o){return new e(o)},e.encode=function(e,o){return o||(o=$Writer.create()),null!=e.header&&Object.hasOwnProperty.call(e,\"header\")&&$root.proto.ResponseHeader.encode(e.header,o.uint32(10).fork()).ldelim(),null!=e.contractInfo&&Object.hasOwnProperty.call(e,\"contractInfo\")&&$root.proto.ContractGetInfoResponse.ContractInfo.encode(e.contractInfo,o.uint32(18).fork()).ldelim(),o},e.decode=function(e,o){e instanceof $Reader||(e=$Reader.create(e));for(var n=void 0===o?e.len:e.pos+o,i=new $root.proto.ContractGetInfoResponse,d;e.pos<n;)switch(d=e.uint32(),d>>>3){case 1:i.header=$root.proto.ResponseHeader.decode(e,e.uint32());break;case 2:i.contractInfo=$root.proto.ContractGetInfoResponse.ContractInfo.decode(e,e.uint32());break;default:e.skipType(7&d);}return i},e.ContractInfo=function(){function e(e){if(this.tokenRelationships=[],e)for(var o=Object.keys(e),t=0;t<o.length;++t)null!=e[o[t]]&&(this[o[t]]=e[o[t]])}return e.prototype.contractID=null,e.prototype.accountID=null,e.prototype.contractAccountID=\"\",e.prototype.adminKey=null,e.prototype.expirationTime=null,e.prototype.autoRenewPeriod=null,e.prototype.storage=$util.Long?$util.Long.fromBits(0,0,!1):0,e.prototype.memo=\"\",e.prototype.balance=$util.Long?$util.Long.fromBits(0,0,!0):0,e.prototype.deleted=!1,e.prototype.tokenRelationships=$util.emptyArray,e.prototype.ledgerId=$util.newBuffer([]),e.create=function(o){return new e(o)},e.encode=function(e,o){if(o||(o=$Writer.create()),null!=e.contractID&&Object.hasOwnProperty.call(e,\"contractID\")&&$root.proto.ContractID.encode(e.contractID,o.uint32(10).fork()).ldelim(),null!=e.accountID&&Object.hasOwnProperty.call(e,\"accountID\")&&$root.proto.AccountID.encode(e.accountID,o.uint32(18).fork()).ldelim(),null!=e.contractAccountID&&Object.hasOwnProperty.call(e,\"contractAccountID\")&&o.uint32(26).string(e.contractAccountID),null!=e.adminKey&&Object.hasOwnProperty.call(e,\"adminKey\")&&$root.proto.Key.encode(e.adminKey,o.uint32(34).fork()).ldelim(),null!=e.expirationTime&&Object.hasOwnProperty.call(e,\"expirationTime\")&&$root.proto.Timestamp.encode(e.expirationTime,o.uint32(42).fork()).ldelim(),null!=e.autoRenewPeriod&&Object.hasOwnProperty.call(e,\"autoRenewPeriod\")&&$root.proto.Duration.encode(e.autoRenewPeriod,o.uint32(50).fork()).ldelim(),null!=e.storage&&Object.hasOwnProperty.call(e,\"storage\")&&o.uint32(56).int64(e.storage),null!=e.memo&&Object.hasOwnProperty.call(e,\"memo\")&&o.uint32(66).string(e.memo),null!=e.balance&&Object.hasOwnProperty.call(e,\"balance\")&&o.uint32(72).uint64(e.balance),null!=e.deleted&&Object.hasOwnProperty.call(e,\"deleted\")&&o.uint32(80).bool(e.deleted),null!=e.tokenRelationships&&e.tokenRelationships.length)for(var t=0;t<e.tokenRelationships.length;++t)$root.proto.TokenRelationship.encode(e.tokenRelationships[t],o.uint32(90).fork()).ldelim();return null!=e.ledgerId&&Object.hasOwnProperty.call(e,\"ledgerId\")&&o.uint32(98).bytes(e.ledgerId),o},e.decode=function(e,o){e instanceof $Reader||(e=$Reader.create(e));for(var n=void 0===o?e.len:e.pos+o,i=new $root.proto.ContractGetInfoResponse.ContractInfo,d;e.pos<n;)switch(d=e.uint32(),d>>>3){case 1:i.contractID=$root.proto.ContractID.decode(e,e.uint32());break;case 2:i.accountID=$root.proto.AccountID.decode(e,e.uint32());break;case 3:i.contractAccountID=e.string();break;case 4:i.adminKey=$root.proto.Key.decode(e,e.uint32());break;case 5:i.expirationTime=$root.proto.Timestamp.decode(e,e.uint32());break;case 6:i.autoRenewPeriod=$root.proto.Duration.decode(e,e.uint32());break;case 7:i.storage=e.int64();break;case 8:i.memo=e.string();break;case 9:i.balance=e.uint64();break;case 10:i.deleted=e.bool();break;case 11:i.tokenRelationships&&i.tokenRelationships.length||(i.tokenRelationships=[]),i.tokenRelationships.push($root.proto.TokenRelationship.decode(e,e.uint32()));break;case 12:i.ledgerId=e.bytes();break;default:e.skipType(7&d);}return i},e}(),e}(),ContractGetBytecodeQuery:function(){function e(e){if(e)for(var o=Object.keys(e),t=0;t<o.length;++t)null!=e[o[t]]&&(this[o[t]]=e[o[t]])}return e.prototype.header=null,e.prototype.contractID=null,e.create=function(o){return new e(o)},e.encode=function(e,o){return o||(o=$Writer.create()),null!=e.header&&Object.hasOwnProperty.call(e,\"header\")&&$root.proto.QueryHeader.encode(e.header,o.uint32(10).fork()).ldelim(),null!=e.contractID&&Object.hasOwnProperty.call(e,\"contractID\")&&$root.proto.ContractID.encode(e.contractID,o.uint32(18).fork()).ldelim(),o},e.decode=function(e,o){e instanceof $Reader||(e=$Reader.create(e));for(var n=void 0===o?e.len:e.pos+o,i=new $root.proto.ContractGetBytecodeQuery,d;e.pos<n;)switch(d=e.uint32(),d>>>3){case 1:i.header=$root.proto.QueryHeader.decode(e,e.uint32());break;case 2:i.contractID=$root.proto.ContractID.decode(e,e.uint32());break;default:e.skipType(7&d);}return i},e}(),ContractGetBytecodeResponse:function(){function e(e){if(e)for(var o=Object.keys(e),t=0;t<o.length;++t)null!=e[o[t]]&&(this[o[t]]=e[o[t]])}return e.prototype.header=null,e.prototype.bytecode=$util.newBuffer([]),e.create=function(o){return new e(o)},e.encode=function(e,o){return o||(o=$Writer.create()),null!=e.header&&Object.hasOwnProperty.call(e,\"header\")&&$root.proto.ResponseHeader.encode(e.header,o.uint32(10).fork()).ldelim(),null!=e.bytecode&&Object.hasOwnProperty.call(e,\"bytecode\")&&o.uint32(50).bytes(e.bytecode),o},e.decode=function(e,o){e instanceof $Reader||(e=$Reader.create(e));for(var n=void 0===o?e.len:e.pos+o,i=new $root.proto.ContractGetBytecodeResponse,d;e.pos<n;)switch(d=e.uint32(),d>>>3){case 1:i.header=$root.proto.ResponseHeader.decode(e,e.uint32());break;case 6:i.bytecode=e.bytes();break;default:e.skipType(7&d);}return i},e}(),ContractGetRecordsQuery:function(){function e(e){if(e)for(var o=Object.keys(e),t=0;t<o.length;++t)null!=e[o[t]]&&(this[o[t]]=e[o[t]])}return e.prototype.header=null,e.prototype.contractID=null,e.create=function(o){return new e(o)},e.encode=function(e,o){return o||(o=$Writer.create()),null!=e.header&&Object.hasOwnProperty.call(e,\"header\")&&$root.proto.QueryHeader.encode(e.header,o.uint32(10).fork()).ldelim(),null!=e.contractID&&Object.hasOwnProperty.call(e,\"contractID\")&&$root.proto.ContractID.encode(e.contractID,o.uint32(18).fork()).ldelim(),o},e.decode=function(e,o){e instanceof $Reader||(e=$Reader.create(e));for(var n=void 0===o?e.len:e.pos+o,i=new $root.proto.ContractGetRecordsQuery,d;e.pos<n;)switch(d=e.uint32(),d>>>3){case 1:i.header=$root.proto.QueryHeader.decode(e,e.uint32());break;case 2:i.contractID=$root.proto.ContractID.decode(e,e.uint32());break;default:e.skipType(7&d);}return i},e}(),ContractGetRecordsResponse:function(){function e(e){if(this.records=[],e)for(var o=Object.keys(e),t=0;t<o.length;++t)null!=e[o[t]]&&(this[o[t]]=e[o[t]])}return e.prototype.header=null,e.prototype.contractID=null,e.prototype.records=$util.emptyArray,e.create=function(o){return new e(o)},e.encode=function(e,o){if(o||(o=$Writer.create()),null!=e.header&&Object.hasOwnProperty.call(e,\"header\")&&$root.proto.ResponseHeader.encode(e.header,o.uint32(10).fork()).ldelim(),null!=e.contractID&&Object.hasOwnProperty.call(e,\"contractID\")&&$root.proto.ContractID.encode(e.contractID,o.uint32(18).fork()).ldelim(),null!=e.records&&e.records.length)for(var t=0;t<e.records.length;++t)$root.proto.TransactionRecord.encode(e.records[t],o.uint32(26).fork()).ldelim();return o},e.decode=function(e,o){e instanceof $Reader||(e=$Reader.create(e));for(var n=void 0===o?e.len:e.pos+o,i=new $root.proto.ContractGetRecordsResponse,d;e.pos<n;)switch(d=e.uint32(),d>>>3){case 1:i.header=$root.proto.ResponseHeader.decode(e,e.uint32());break;case 2:i.contractID=$root.proto.ContractID.decode(e,e.uint32());break;case 3:i.records&&i.records.length||(i.records=[]),i.records.push($root.proto.TransactionRecord.decode(e,e.uint32()));break;default:e.skipType(7&d);}return i},e}(),TransactionRecord:function(){function e(e){if(this.tokenTransferLists=[],this.assessedCustomFees=[],this.automaticTokenAssociations=[],e)for(var o=Object.keys(e),t=0;t<o.length;++t)null!=e[o[t]]&&(this[o[t]]=e[o[t]])}e.prototype.receipt=null,e.prototype.transactionHash=$util.newBuffer([]),e.prototype.consensusTimestamp=null,e.prototype.transactionID=null,e.prototype.memo=\"\",e.prototype.transactionFee=$util.Long?$util.Long.fromBits(0,0,!0):0,e.prototype.contractCallResult=null,e.prototype.contractCreateResult=null,e.prototype.transferList=null,e.prototype.tokenTransferLists=$util.emptyArray,e.prototype.scheduleRef=null,e.prototype.assessedCustomFees=$util.emptyArray,e.prototype.automaticTokenAssociations=$util.emptyArray,e.prototype.parentConsensusTimestamp=null,e.prototype.alias=$util.newBuffer([]);let o;return Object.defineProperty(e.prototype,\"body\",{get:$util.oneOfGetter(o=[\"contractCallResult\",\"contractCreateResult\"]),set:$util.oneOfSetter(o)}),e.create=function(o){return new e(o)},e.encode=function(e,o){if(o||(o=$Writer.create()),null!=e.receipt&&Object.hasOwnProperty.call(e,\"receipt\")&&$root.proto.TransactionReceipt.encode(e.receipt,o.uint32(10).fork()).ldelim(),null!=e.transactionHash&&Object.hasOwnProperty.call(e,\"transactionHash\")&&o.uint32(18).bytes(e.transactionHash),null!=e.consensusTimestamp&&Object.hasOwnProperty.call(e,\"consensusTimestamp\")&&$root.proto.Timestamp.encode(e.consensusTimestamp,o.uint32(26).fork()).ldelim(),null!=e.transactionID&&Object.hasOwnProperty.call(e,\"transactionID\")&&$root.proto.TransactionID.encode(e.transactionID,o.uint32(34).fork()).ldelim(),null!=e.memo&&Object.hasOwnProperty.call(e,\"memo\")&&o.uint32(42).string(e.memo),null!=e.transactionFee&&Object.hasOwnProperty.call(e,\"transactionFee\")&&o.uint32(48).uint64(e.transactionFee),null!=e.contractCallResult&&Object.hasOwnProperty.call(e,\"contractCallResult\")&&$root.proto.ContractFunctionResult.encode(e.contractCallResult,o.uint32(58).fork()).ldelim(),null!=e.contractCreateResult&&Object.hasOwnProperty.call(e,\"contractCreateResult\")&&$root.proto.ContractFunctionResult.encode(e.contractCreateResult,o.uint32(66).fork()).ldelim(),null!=e.transferList&&Object.hasOwnProperty.call(e,\"transferList\")&&$root.proto.TransferList.encode(e.transferList,o.uint32(82).fork()).ldelim(),null!=e.tokenTransferLists&&e.tokenTransferLists.length)for(var t=0;t<e.tokenTransferLists.length;++t)$root.proto.TokenTransferList.encode(e.tokenTransferLists[t],o.uint32(90).fork()).ldelim();if(null!=e.scheduleRef&&Object.hasOwnProperty.call(e,\"scheduleRef\")&&$root.proto.ScheduleID.encode(e.scheduleRef,o.uint32(98).fork()).ldelim(),null!=e.assessedCustomFees&&e.assessedCustomFees.length)for(var t=0;t<e.assessedCustomFees.length;++t)$root.proto.AssessedCustomFee.encode(e.assessedCustomFees[t],o.uint32(106).fork()).ldelim();if(null!=e.automaticTokenAssociations&&e.automaticTokenAssociations.length)for(var t=0;t<e.automaticTokenAssociations.length;++t)$root.proto.TokenAssociation.encode(e.automaticTokenAssociations[t],o.uint32(114).fork()).ldelim();return null!=e.parentConsensusTimestamp&&Object.hasOwnProperty.call(e,\"parentConsensusTimestamp\")&&$root.proto.Timestamp.encode(e.parentConsensusTimestamp,o.uint32(122).fork()).ldelim(),null!=e.alias&&Object.hasOwnProperty.call(e,\"alias\")&&o.uint32(130).bytes(e.alias),o},e.decode=function(e,o){e instanceof $Reader||(e=$Reader.create(e));for(var n=void 0===o?e.len:e.pos+o,i=new $root.proto.TransactionRecord,d;e.pos<n;)switch(d=e.uint32(),d>>>3){case 1:i.receipt=$root.proto.TransactionReceipt.decode(e,e.uint32());break;case 2:i.transactionHash=e.bytes();break;case 3:i.consensusTimestamp=$root.proto.Timestamp.decode(e,e.uint32());break;case 4:i.transactionID=$root.proto.TransactionID.decode(e,e.uint32());break;case 5:i.memo=e.string();break;case 6:i.transactionFee=e.uint64();break;case 7:i.contractCallResult=$root.proto.ContractFunctionResult.decode(e,e.uint32());break;case 8:i.contractCreateResult=$root.proto.ContractFunctionResult.decode(e,e.uint32());break;case 10:i.transferList=$root.proto.TransferList.decode(e,e.uint32());break;case 11:i.tokenTransferLists&&i.tokenTransferLists.length||(i.tokenTransferLists=[]),i.tokenTransferLists.push($root.proto.TokenTransferList.decode(e,e.uint32()));break;case 12:i.scheduleRef=$root.proto.ScheduleID.decode(e,e.uint32());break;case 13:i.assessedCustomFees&&i.assessedCustomFees.length||(i.assessedCustomFees=[]),i.assessedCustomFees.push($root.proto.AssessedCustomFee.decode(e,e.uint32()));break;case 14:i.automaticTokenAssociations&&i.automaticTokenAssociations.length||(i.automaticTokenAssociations=[]),i.automaticTokenAssociations.push($root.proto.TokenAssociation.decode(e,e.uint32()));break;case 15:i.parentConsensusTimestamp=$root.proto.Timestamp.decode(e,e.uint32());break;case 16:i.alias=e.bytes();break;default:e.skipType(7&d);}return i},e}(),TransactionReceipt:function(){function e(e){if(this.serialNumbers=[],e)for(var o=Object.keys(e),t=0;t<o.length;++t)null!=e[o[t]]&&(this[o[t]]=e[o[t]])}return e.prototype.status=0,e.prototype.accountID=null,e.prototype.fileID=null,e.prototype.contractID=null,e.prototype.exchangeRate=null,e.prototype.topicID=null,e.prototype.topicSequenceNumber=$util.Long?$util.Long.fromBits(0,0,!0):0,e.prototype.topicRunningHash=$util.newBuffer([]),e.prototype.topicRunningHashVersion=$util.Long?$util.Long.fromBits(0,0,!0):0,e.prototype.tokenID=null,e.prototype.newTotalSupply=$util.Long?$util.Long.fromBits(0,0,!0):0,e.prototype.scheduleID=null,e.prototype.scheduledTransactionID=null,e.prototype.serialNumbers=$util.emptyArray,e.create=function(o){return new e(o)},e.encode=function(e,o){if(o||(o=$Writer.create()),null!=e.status&&Object.hasOwnProperty.call(e,\"status\")&&o.uint32(8).int32(e.status),null!=e.accountID&&Object.hasOwnProperty.call(e,\"accountID\")&&$root.proto.AccountID.encode(e.accountID,o.uint32(18).fork()).ldelim(),null!=e.fileID&&Object.hasOwnProperty.call(e,\"fileID\")&&$root.proto.FileID.encode(e.fileID,o.uint32(26).fork()).ldelim(),null!=e.contractID&&Object.hasOwnProperty.call(e,\"contractID\")&&$root.proto.ContractID.encode(e.contractID,o.uint32(34).fork()).ldelim(),null!=e.exchangeRate&&Object.hasOwnProperty.call(e,\"exchangeRate\")&&$root.proto.ExchangeRateSet.encode(e.exchangeRate,o.uint32(42).fork()).ldelim(),null!=e.topicID&&Object.hasOwnProperty.call(e,\"topicID\")&&$root.proto.TopicID.encode(e.topicID,o.uint32(50).fork()).ldelim(),null!=e.topicSequenceNumber&&Object.hasOwnProperty.call(e,\"topicSequenceNumber\")&&o.uint32(56).uint64(e.topicSequenceNumber),null!=e.topicRunningHash&&Object.hasOwnProperty.call(e,\"topicRunningHash\")&&o.uint32(66).bytes(e.topicRunningHash),null!=e.topicRunningHashVersion&&Object.hasOwnProperty.call(e,\"topicRunningHashVersion\")&&o.uint32(72).uint64(e.topicRunningHashVersion),null!=e.tokenID&&Object.hasOwnProperty.call(e,\"tokenID\")&&$root.proto.TokenID.encode(e.tokenID,o.uint32(82).fork()).ldelim(),null!=e.newTotalSupply&&Object.hasOwnProperty.call(e,\"newTotalSupply\")&&o.uint32(88).uint64(e.newTotalSupply),null!=e.scheduleID&&Object.hasOwnProperty.call(e,\"scheduleID\")&&$root.proto.ScheduleID.encode(e.scheduleID,o.uint32(98).fork()).ldelim(),null!=e.scheduledTransactionID&&Object.hasOwnProperty.call(e,\"scheduledTransactionID\")&&$root.proto.TransactionID.encode(e.scheduledTransactionID,o.uint32(106).fork()).ldelim(),null!=e.serialNumbers&&e.serialNumbers.length){o.uint32(114).fork();for(var t=0;t<e.serialNumbers.length;++t)o.int64(e.serialNumbers[t]);o.ldelim()}return o},e.decode=function(e,o){e instanceof $Reader||(e=$Reader.create(e));for(var n=void 0===o?e.len:e.pos+o,i=new $root.proto.TransactionReceipt,d;e.pos<n;)switch(d=e.uint32(),d>>>3){case 1:i.status=e.int32();break;case 2:i.accountID=$root.proto.AccountID.decode(e,e.uint32());break;case 3:i.fileID=$root.proto.FileID.decode(e,e.uint32());break;case 4:i.contractID=$root.proto.ContractID.decode(e,e.uint32());break;case 5:i.exchangeRate=$root.proto.ExchangeRateSet.decode(e,e.uint32());break;case 6:i.topicID=$root.proto.TopicID.decode(e,e.uint32());break;case 7:i.topicSequenceNumber=e.uint64();break;case 8:i.topicRunningHash=e.bytes();break;case 9:i.topicRunningHashVersion=e.uint64();break;case 10:i.tokenID=$root.proto.TokenID.decode(e,e.uint32());break;case 11:i.newTotalSupply=e.uint64();break;case 12:i.scheduleID=$root.proto.ScheduleID.decode(e,e.uint32());break;case 13:i.scheduledTransactionID=$root.proto.TransactionID.decode(e,e.uint32());break;case 14:if(i.serialNumbers&&i.serialNumbers.length||(i.serialNumbers=[]),2==(7&d))for(var a=e.uint32()+e.pos;e.pos<a;)i.serialNumbers.push(e.int64());else i.serialNumbers.push(e.int64());break;default:e.skipType(7&d);}return i},e}(),ExchangeRate:function(){function e(e){if(e)for(var o=Object.keys(e),t=0;t<o.length;++t)null!=e[o[t]]&&(this[o[t]]=e[o[t]])}return e.prototype.hbarEquiv=0,e.prototype.centEquiv=0,e.prototype.expirationTime=null,e.create=function(o){return new e(o)},e.encode=function(e,o){return o||(o=$Writer.create()),null!=e.hbarEquiv&&Object.hasOwnProperty.call(e,\"hbarEquiv\")&&o.uint32(8).int32(e.hbarEquiv),null!=e.centEquiv&&Object.hasOwnProperty.call(e,\"centEquiv\")&&o.uint32(16).int32(e.centEquiv),null!=e.expirationTime&&Object.hasOwnProperty.call(e,\"expirationTime\")&&$root.proto.TimestampSeconds.encode(e.expirationTime,o.uint32(26).fork()).ldelim(),o},e.decode=function(e,o){e instanceof $Reader||(e=$Reader.create(e));for(var n=void 0===o?e.len:e.pos+o,i=new $root.proto.ExchangeRate,d;e.pos<n;)switch(d=e.uint32(),d>>>3){case 1:i.hbarEquiv=e.int32();break;case 2:i.centEquiv=e.int32();break;case 3:i.expirationTime=$root.proto.TimestampSeconds.decode(e,e.uint32());break;default:e.skipType(7&d);}return i},e}(),ExchangeRateSet:function(){function e(e){if(e)for(var o=Object.keys(e),t=0;t<o.length;++t)null!=e[o[t]]&&(this[o[t]]=e[o[t]])}return e.prototype.currentRate=null,e.prototype.nextRate=null,e.create=function(o){return new e(o)},e.encode=function(e,o){return o||(o=$Writer.create()),null!=e.currentRate&&Object.hasOwnProperty.call(e,\"currentRate\")&&$root.proto.ExchangeRate.encode(e.currentRate,o.uint32(10).fork()).ldelim(),null!=e.nextRate&&Object.hasOwnProperty.call(e,\"nextRate\")&&$root.proto.ExchangeRate.encode(e.nextRate,o.uint32(18).fork()).ldelim(),o},e.decode=function(e,o){e instanceof $Reader||(e=$Reader.create(e));for(var n=void 0===o?e.len:e.pos+o,i=new $root.proto.ExchangeRateSet,d;e.pos<n;)switch(d=e.uint32(),d>>>3){case 1:i.currentRate=$root.proto.ExchangeRate.decode(e,e.uint32());break;case 2:i.nextRate=$root.proto.ExchangeRate.decode(e,e.uint32());break;default:e.skipType(7&d);}return i},e}(),CryptoGetAccountBalanceQuery:function(){function e(e){if(e)for(var o=Object.keys(e),t=0;t<o.length;++t)null!=e[o[t]]&&(this[o[t]]=e[o[t]])}e.prototype.header=null,e.prototype.accountID=null,e.prototype.contractID=null;let o;return Object.defineProperty(e.prototype,\"balanceSource\",{get:$util.oneOfGetter(o=[\"accountID\",\"contractID\"]),set:$util.oneOfSetter(o)}),e.create=function(o){return new e(o)},e.encode=function(e,o){return o||(o=$Writer.create()),null!=e.header&&Object.hasOwnProperty.call(e,\"header\")&&$root.proto.QueryHeader.encode(e.header,o.uint32(10).fork()).ldelim(),null!=e.accountID&&Object.hasOwnProperty.call(e,\"accountID\")&&$root.proto.AccountID.encode(e.accountID,o.uint32(18).fork()).ldelim(),null!=e.contractID&&Object.hasOwnProperty.call(e,\"contractID\")&&$root.proto.ContractID.encode(e.contractID,o.uint32(26).fork()).ldelim(),o},e.decode=function(e,o){e instanceof $Reader||(e=$Reader.create(e));for(var n=void 0===o?e.len:e.pos+o,i=new $root.proto.CryptoGetAccountBalanceQuery,d;e.pos<n;)switch(d=e.uint32(),d>>>3){case 1:i.header=$root.proto.QueryHeader.decode(e,e.uint32());break;case 2:i.accountID=$root.proto.AccountID.decode(e,e.uint32());break;case 3:i.contractID=$root.proto.ContractID.decode(e,e.uint32());break;default:e.skipType(7&d);}return i},e}(),CryptoGetAccountBalanceResponse:function(){function e(e){if(this.tokenBalances=[],e)for(var o=Object.keys(e),t=0;t<o.length;++t)null!=e[o[t]]&&(this[o[t]]=e[o[t]])}return e.prototype.header=null,e.prototype.accountID=null,e.prototype.balance=$util.Long?$util.Long.fromBits(0,0,!0):0,e.prototype.tokenBalances=$util.emptyArray,e.create=function(o){return new e(o)},e.encode=function(e,o){if(o||(o=$Writer.create()),null!=e.header&&Object.hasOwnProperty.call(e,\"header\")&&$root.proto.ResponseHeader.encode(e.header,o.uint32(10).fork()).ldelim(),null!=e.accountID&&Object.hasOwnProperty.call(e,\"accountID\")&&$root.proto.AccountID.encode(e.accountID,o.uint32(18).fork()).ldelim(),null!=e.balance&&Object.hasOwnProperty.call(e,\"balance\")&&o.uint32(24).uint64(e.balance),null!=e.tokenBalances&&e.tokenBalances.length)for(var t=0;t<e.tokenBalances.length;++t)$root.proto.TokenBalance.encode(e.tokenBalances[t],o.uint32(34).fork()).ldelim();return o},e.decode=function(e,o){e instanceof $Reader||(e=$Reader.create(e));for(var n=void 0===o?e.len:e.pos+o,i=new $root.proto.CryptoGetAccountBalanceResponse,d;e.pos<n;)switch(d=e.uint32(),d>>>3){case 1:i.header=$root.proto.ResponseHeader.decode(e,e.uint32());break;case 2:i.accountID=$root.proto.AccountID.decode(e,e.uint32());break;case 3:i.balance=e.uint64();break;case 4:i.tokenBalances&&i.tokenBalances.length||(i.tokenBalances=[]),i.tokenBalances.push($root.proto.TokenBalance.decode(e,e.uint32()));break;default:e.skipType(7&d);}return i},e}(),CryptoGetAccountRecordsQuery:function(){function e(e){if(e)for(var o=Object.keys(e),t=0;t<o.length;++t)null!=e[o[t]]&&(this[o[t]]=e[o[t]])}return e.prototype.header=null,e.prototype.accountID=null,e.create=function(o){return new e(o)},e.encode=function(e,o){return o||(o=$Writer.create()),null!=e.header&&Object.hasOwnProperty.call(e,\"header\")&&$root.proto.QueryHeader.encode(e.header,o.uint32(10).fork()).ldelim(),null!=e.accountID&&Object.hasOwnProperty.call(e,\"accountID\")&&$root.proto.AccountID.encode(e.accountID,o.uint32(18).fork()).ldelim(),o},e.decode=function(e,o){e instanceof $Reader||(e=$Reader.create(e));for(var n=void 0===o?e.len:e.pos+o,i=new $root.proto.CryptoGetAccountRecordsQuery,d;e.pos<n;)switch(d=e.uint32(),d>>>3){case 1:i.header=$root.proto.QueryHeader.decode(e,e.uint32());break;case 2:i.accountID=$root.proto.AccountID.decode(e,e.uint32());break;default:e.skipType(7&d);}return i},e}(),CryptoGetAccountRecordsResponse:function(){function e(e){if(this.records=[],e)for(var o=Object.keys(e),t=0;t<o.length;++t)null!=e[o[t]]&&(this[o[t]]=e[o[t]])}return e.prototype.header=null,e.prototype.accountID=null,e.prototype.records=$util.emptyArray,e.create=function(o){return new e(o)},e.encode=function(e,o){if(o||(o=$Writer.create()),null!=e.header&&Object.hasOwnProperty.call(e,\"header\")&&$root.proto.ResponseHeader.encode(e.header,o.uint32(10).fork()).ldelim(),null!=e.accountID&&Object.hasOwnProperty.call(e,\"accountID\")&&$root.proto.AccountID.encode(e.accountID,o.uint32(18).fork()).ldelim(),null!=e.records&&e.records.length)for(var t=0;t<e.records.length;++t)$root.proto.TransactionRecord.encode(e.records[t],o.uint32(26).fork()).ldelim();return o},e.decode=function(e,o){e instanceof $Reader||(e=$Reader.create(e));for(var n=void 0===o?e.len:e.pos+o,i=new $root.proto.CryptoGetAccountRecordsResponse,d;e.pos<n;)switch(d=e.uint32(),d>>>3){case 1:i.header=$root.proto.ResponseHeader.decode(e,e.uint32());break;case 2:i.accountID=$root.proto.AccountID.decode(e,e.uint32());break;case 3:i.records&&i.records.length||(i.records=[]),i.records.push($root.proto.TransactionRecord.decode(e,e.uint32()));break;default:e.skipType(7&d);}return i},e}(),CryptoGetInfoQuery:function(){function e(e){if(e)for(var o=Object.keys(e),t=0;t<o.length;++t)null!=e[o[t]]&&(this[o[t]]=e[o[t]])}return e.prototype.header=null,e.prototype.accountID=null,e.create=function(o){return new e(o)},e.encode=function(e,o){return o||(o=$Writer.create()),null!=e.header&&Object.hasOwnProperty.call(e,\"header\")&&$root.proto.QueryHeader.encode(e.header,o.uint32(10).fork()).ldelim(),null!=e.accountID&&Object.hasOwnProperty.call(e,\"accountID\")&&$root.proto.AccountID.encode(e.accountID,o.uint32(18).fork()).ldelim(),o},e.decode=function(e,o){e instanceof $Reader||(e=$Reader.create(e));for(var n=void 0===o?e.len:e.pos+o,i=new $root.proto.CryptoGetInfoQuery,d;e.pos<n;)switch(d=e.uint32(),d>>>3){case 1:i.header=$root.proto.QueryHeader.decode(e,e.uint32());break;case 2:i.accountID=$root.proto.AccountID.decode(e,e.uint32());break;default:e.skipType(7&d);}return i},e}(),CryptoGetInfoResponse:function(){function e(e){if(e)for(var o=Object.keys(e),t=0;t<o.length;++t)null!=e[o[t]]&&(this[o[t]]=e[o[t]])}return e.prototype.header=null,e.prototype.accountInfo=null,e.create=function(o){return new e(o)},e.encode=function(e,o){return o||(o=$Writer.create()),null!=e.header&&Object.hasOwnProperty.call(e,\"header\")&&$root.proto.ResponseHeader.encode(e.header,o.uint32(10).fork()).ldelim(),null!=e.accountInfo&&Object.hasOwnProperty.call(e,\"accountInfo\")&&$root.proto.CryptoGetInfoResponse.AccountInfo.encode(e.accountInfo,o.uint32(18).fork()).ldelim(),o},e.decode=function(e,o){e instanceof $Reader||(e=$Reader.create(e));for(var n=void 0===o?e.len:e.pos+o,i=new $root.proto.CryptoGetInfoResponse,d;e.pos<n;)switch(d=e.uint32(),d>>>3){case 1:i.header=$root.proto.ResponseHeader.decode(e,e.uint32());break;case 2:i.accountInfo=$root.proto.CryptoGetInfoResponse.AccountInfo.decode(e,e.uint32());break;default:e.skipType(7&d);}return i},e.AccountInfo=function(){function e(e){if(this.liveHashes=[],this.tokenRelationships=[],e)for(var o=Object.keys(e),t=0;t<o.length;++t)null!=e[o[t]]&&(this[o[t]]=e[o[t]])}return e.prototype.accountID=null,e.prototype.contractAccountID=\"\",e.prototype.deleted=!1,e.prototype.proxyAccountID=null,e.prototype.proxyReceived=$util.Long?$util.Long.fromBits(0,0,!1):0,e.prototype.key=null,e.prototype.balance=$util.Long?$util.Long.fromBits(0,0,!0):0,e.prototype.generateSendRecordThreshold=$util.Long?$util.Long.fromBits(0,0,!0):0,e.prototype.generateReceiveRecordThreshold=$util.Long?$util.Long.fromBits(0,0,!0):0,e.prototype.receiverSigRequired=!1,e.prototype.expirationTime=null,e.prototype.autoRenewPeriod=null,e.prototype.liveHashes=$util.emptyArray,e.prototype.tokenRelationships=$util.emptyArray,e.prototype.memo=\"\",e.prototype.ownedNfts=$util.Long?$util.Long.fromBits(0,0,!1):0,e.prototype.maxAutomaticTokenAssociations=0,e.prototype.alias=$util.newBuffer([]),e.prototype.ledgerId=$util.newBuffer([]),e.create=function(o){return new e(o)},e.encode=function(e,o){if(o||(o=$Writer.create()),null!=e.accountID&&Object.hasOwnProperty.call(e,\"accountID\")&&$root.proto.AccountID.encode(e.accountID,o.uint32(10).fork()).ldelim(),null!=e.contractAccountID&&Object.hasOwnProperty.call(e,\"contractAccountID\")&&o.uint32(18).string(e.contractAccountID),null!=e.deleted&&Object.hasOwnProperty.call(e,\"deleted\")&&o.uint32(24).bool(e.deleted),null!=e.proxyAccountID&&Object.hasOwnProperty.call(e,\"proxyAccountID\")&&$root.proto.AccountID.encode(e.proxyAccountID,o.uint32(34).fork()).ldelim(),null!=e.proxyReceived&&Object.hasOwnProperty.call(e,\"proxyReceived\")&&o.uint32(48).int64(e.proxyReceived),null!=e.key&&Object.hasOwnProperty.call(e,\"key\")&&$root.proto.Key.encode(e.key,o.uint32(58).fork()).ldelim(),null!=e.balance&&Object.hasOwnProperty.call(e,\"balance\")&&o.uint32(64).uint64(e.balance),null!=e.generateSendRecordThreshold&&Object.hasOwnProperty.call(e,\"generateSendRecordThreshold\")&&o.uint32(72).uint64(e.generateSendRecordThreshold),null!=e.generateReceiveRecordThreshold&&Object.hasOwnProperty.call(e,\"generateReceiveRecordThreshold\")&&o.uint32(80).uint64(e.generateReceiveRecordThreshold),null!=e.receiverSigRequired&&Object.hasOwnProperty.call(e,\"receiverSigRequired\")&&o.uint32(88).bool(e.receiverSigRequired),null!=e.expirationTime&&Object.hasOwnProperty.call(e,\"expirationTime\")&&$root.proto.Timestamp.encode(e.expirationTime,o.uint32(98).fork()).ldelim(),null!=e.autoRenewPeriod&&Object.hasOwnProperty.call(e,\"autoRenewPeriod\")&&$root.proto.Duration.encode(e.autoRenewPeriod,o.uint32(106).fork()).ldelim(),null!=e.liveHashes&&e.liveHashes.length)for(var t=0;t<e.liveHashes.length;++t)$root.proto.LiveHash.encode(e.liveHashes[t],o.uint32(114).fork()).ldelim();if(null!=e.tokenRelationships&&e.tokenRelationships.length)for(var t=0;t<e.tokenRelationships.length;++t)$root.proto.TokenRelationship.encode(e.tokenRelationships[t],o.uint32(122).fork()).ldelim();return null!=e.memo&&Object.hasOwnProperty.call(e,\"memo\")&&o.uint32(130).string(e.memo),null!=e.ownedNfts&&Object.hasOwnProperty.call(e,\"ownedNfts\")&&o.uint32(136).int64(e.ownedNfts),null!=e.maxAutomaticTokenAssociations&&Object.hasOwnProperty.call(e,\"maxAutomaticTokenAssociations\")&&o.uint32(144).int32(e.maxAutomaticTokenAssociations),null!=e.alias&&Object.hasOwnProperty.call(e,\"alias\")&&o.uint32(154).bytes(e.alias),null!=e.ledgerId&&Object.hasOwnProperty.call(e,\"ledgerId\")&&o.uint32(162).bytes(e.ledgerId),o},e.decode=function(e,o){e instanceof $Reader||(e=$Reader.create(e));for(var n=void 0===o?e.len:e.pos+o,i=new $root.proto.CryptoGetInfoResponse.AccountInfo,d;e.pos<n;)switch(d=e.uint32(),d>>>3){case 1:i.accountID=$root.proto.AccountID.decode(e,e.uint32());break;case 2:i.contractAccountID=e.string();break;case 3:i.deleted=e.bool();break;case 4:i.proxyAccountID=$root.proto.AccountID.decode(e,e.uint32());break;case 6:i.proxyReceived=e.int64();break;case 7:i.key=$root.proto.Key.decode(e,e.uint32());break;case 8:i.balance=e.uint64();break;case 9:i.generateSendRecordThreshold=e.uint64();break;case 10:i.generateReceiveRecordThreshold=e.uint64();break;case 11:i.receiverSigRequired=e.bool();break;case 12:i.expirationTime=$root.proto.Timestamp.decode(e,e.uint32());break;case 13:i.autoRenewPeriod=$root.proto.Duration.decode(e,e.uint32());break;case 14:i.liveHashes&&i.liveHashes.length||(i.liveHashes=[]),i.liveHashes.push($root.proto.LiveHash.decode(e,e.uint32()));break;case 15:i.tokenRelationships&&i.tokenRelationships.length||(i.tokenRelationships=[]),i.tokenRelationships.push($root.proto.TokenRelationship.decode(e,e.uint32()));break;case 16:i.memo=e.string();break;case 17:i.ownedNfts=e.int64();break;case 18:i.maxAutomaticTokenAssociations=e.int32();break;case 19:i.alias=e.bytes();break;case 20:i.ledgerId=e.bytes();break;default:e.skipType(7&d);}return i},e}(),e}(),CryptoGetLiveHashQuery:function(){function e(e){if(e)for(var o=Object.keys(e),t=0;t<o.length;++t)null!=e[o[t]]&&(this[o[t]]=e[o[t]])}return e.prototype.header=null,e.prototype.accountID=null,e.prototype.hash=$util.newBuffer([]),e.create=function(o){return new e(o)},e.encode=function(e,o){return o||(o=$Writer.create()),null!=e.header&&Object.hasOwnProperty.call(e,\"header\")&&$root.proto.QueryHeader.encode(e.header,o.uint32(10).fork()).ldelim(),null!=e.accountID&&Object.hasOwnProperty.call(e,\"accountID\")&&$root.proto.AccountID.encode(e.accountID,o.uint32(18).fork()).ldelim(),null!=e.hash&&Object.hasOwnProperty.call(e,\"hash\")&&o.uint32(26).bytes(e.hash),o},e.decode=function(e,o){e instanceof $Reader||(e=$Reader.create(e));for(var n=void 0===o?e.len:e.pos+o,i=new $root.proto.CryptoGetLiveHashQuery,d;e.pos<n;)switch(d=e.uint32(),d>>>3){case 1:i.header=$root.proto.QueryHeader.decode(e,e.uint32());break;case 2:i.accountID=$root.proto.AccountID.decode(e,e.uint32());break;case 3:i.hash=e.bytes();break;default:e.skipType(7&d);}return i},e}(),CryptoGetLiveHashResponse:function(){function e(e){if(e)for(var o=Object.keys(e),t=0;t<o.length;++t)null!=e[o[t]]&&(this[o[t]]=e[o[t]])}return e.prototype.header=null,e.prototype.liveHash=null,e.create=function(o){return new e(o)},e.encode=function(e,o){return o||(o=$Writer.create()),null!=e.header&&Object.hasOwnProperty.call(e,\"header\")&&$root.proto.ResponseHeader.encode(e.header,o.uint32(10).fork()).ldelim(),null!=e.liveHash&&Object.hasOwnProperty.call(e,\"liveHash\")&&$root.proto.LiveHash.encode(e.liveHash,o.uint32(18).fork()).ldelim(),o},e.decode=function(e,o){e instanceof $Reader||(e=$Reader.create(e));for(var n=void 0===o?e.len:e.pos+o,i=new $root.proto.CryptoGetLiveHashResponse,d;e.pos<n;)switch(d=e.uint32(),d>>>3){case 1:i.header=$root.proto.ResponseHeader.decode(e,e.uint32());break;case 2:i.liveHash=$root.proto.LiveHash.decode(e,e.uint32());break;default:e.skipType(7&d);}return i},e}(),CryptoGetStakersQuery:function(){function e(e){if(e)for(var o=Object.keys(e),t=0;t<o.length;++t)null!=e[o[t]]&&(this[o[t]]=e[o[t]])}return e.prototype.header=null,e.prototype.accountID=null,e.create=function(o){return new e(o)},e.encode=function(e,o){return o||(o=$Writer.create()),null!=e.header&&Object.hasOwnProperty.call(e,\"header\")&&$root.proto.QueryHeader.encode(e.header,o.uint32(10).fork()).ldelim(),null!=e.accountID&&Object.hasOwnProperty.call(e,\"accountID\")&&$root.proto.AccountID.encode(e.accountID,o.uint32(18).fork()).ldelim(),o},e.decode=function(e,o){e instanceof $Reader||(e=$Reader.create(e));for(var n=void 0===o?e.len:e.pos+o,i=new $root.proto.CryptoGetStakersQuery,d;e.pos<n;)switch(d=e.uint32(),d>>>3){case 1:i.header=$root.proto.QueryHeader.decode(e,e.uint32());break;case 2:i.accountID=$root.proto.AccountID.decode(e,e.uint32());break;default:e.skipType(7&d);}return i},e}(),ProxyStaker:function(){function e(e){if(e)for(var o=Object.keys(e),t=0;t<o.length;++t)null!=e[o[t]]&&(this[o[t]]=e[o[t]])}return e.prototype.accountID=null,e.prototype.amount=$util.Long?$util.Long.fromBits(0,0,!1):0,e.create=function(o){return new e(o)},e.encode=function(e,o){return o||(o=$Writer.create()),null!=e.accountID&&Object.hasOwnProperty.call(e,\"accountID\")&&$root.proto.AccountID.encode(e.accountID,o.uint32(10).fork()).ldelim(),null!=e.amount&&Object.hasOwnProperty.call(e,\"amount\")&&o.uint32(16).int64(e.amount),o},e.decode=function(e,o){e instanceof $Reader||(e=$Reader.create(e));for(var n=void 0===o?e.len:e.pos+o,i=new $root.proto.ProxyStaker,d;e.pos<n;)switch(d=e.uint32(),d>>>3){case 1:i.accountID=$root.proto.AccountID.decode(e,e.uint32());break;case 2:i.amount=e.int64();break;default:e.skipType(7&d);}return i},e}(),AllProxyStakers:function(){function e(e){if(this.proxyStaker=[],e)for(var o=Object.keys(e),t=0;t<o.length;++t)null!=e[o[t]]&&(this[o[t]]=e[o[t]])}return e.prototype.accountID=null,e.prototype.proxyStaker=$util.emptyArray,e.create=function(o){return new e(o)},e.encode=function(e,o){if(o||(o=$Writer.create()),null!=e.accountID&&Object.hasOwnProperty.call(e,\"accountID\")&&$root.proto.AccountID.encode(e.accountID,o.uint32(10).fork()).ldelim(),null!=e.proxyStaker&&e.proxyStaker.length)for(var t=0;t<e.proxyStaker.length;++t)$root.proto.ProxyStaker.encode(e.proxyStaker[t],o.uint32(18).fork()).ldelim();return o},e.decode=function(e,o){e instanceof $Reader||(e=$Reader.create(e));for(var n=void 0===o?e.len:e.pos+o,i=new $root.proto.AllProxyStakers,d;e.pos<n;)switch(d=e.uint32(),d>>>3){case 1:i.accountID=$root.proto.AccountID.decode(e,e.uint32());break;case 2:i.proxyStaker&&i.proxyStaker.length||(i.proxyStaker=[]),i.proxyStaker.push($root.proto.ProxyStaker.decode(e,e.uint32()));break;default:e.skipType(7&d);}return i},e}(),CryptoGetStakersResponse:function(){function e(e){if(e)for(var o=Object.keys(e),t=0;t<o.length;++t)null!=e[o[t]]&&(this[o[t]]=e[o[t]])}return e.prototype.header=null,e.prototype.stakers=null,e.create=function(o){return new e(o)},e.encode=function(e,o){return o||(o=$Writer.create()),null!=e.header&&Object.hasOwnProperty.call(e,\"header\")&&$root.proto.ResponseHeader.encode(e.header,o.uint32(10).fork()).ldelim(),null!=e.stakers&&Object.hasOwnProperty.call(e,\"stakers\")&&$root.proto.AllProxyStakers.encode(e.stakers,o.uint32(26).fork()).ldelim(),o},e.decode=function(e,o){e instanceof $Reader||(e=$Reader.create(e));for(var n=void 0===o?e.len:e.pos+o,i=new $root.proto.CryptoGetStakersResponse,d;e.pos<n;)switch(d=e.uint32(),d>>>3){case 1:i.header=$root.proto.ResponseHeader.decode(e,e.uint32());break;case 3:i.stakers=$root.proto.AllProxyStakers.decode(e,e.uint32());break;default:e.skipType(7&d);}return i},e}(),FileGetContentsQuery:function(){function e(e){if(e)for(var o=Object.keys(e),t=0;t<o.length;++t)null!=e[o[t]]&&(this[o[t]]=e[o[t]])}return e.prototype.header=null,e.prototype.fileID=null,e.create=function(o){return new e(o)},e.encode=function(e,o){return o||(o=$Writer.create()),null!=e.header&&Object.hasOwnProperty.call(e,\"header\")&&$root.proto.QueryHeader.encode(e.header,o.uint32(10).fork()).ldelim(),null!=e.fileID&&Object.hasOwnProperty.call(e,\"fileID\")&&$root.proto.FileID.encode(e.fileID,o.uint32(18).fork()).ldelim(),o},e.decode=function(e,o){e instanceof $Reader||(e=$Reader.create(e));for(var n=void 0===o?e.len:e.pos+o,i=new $root.proto.FileGetContentsQuery,d;e.pos<n;)switch(d=e.uint32(),d>>>3){case 1:i.header=$root.proto.QueryHeader.decode(e,e.uint32());break;case 2:i.fileID=$root.proto.FileID.decode(e,e.uint32());break;default:e.skipType(7&d);}return i},e}(),FileGetContentsResponse:function(){function e(e){if(e)for(var o=Object.keys(e),t=0;t<o.length;++t)null!=e[o[t]]&&(this[o[t]]=e[o[t]])}return e.prototype.header=null,e.prototype.fileContents=null,e.create=function(o){return new e(o)},e.encode=function(e,o){return o||(o=$Writer.create()),null!=e.header&&Object.hasOwnProperty.call(e,\"header\")&&$root.proto.ResponseHeader.encode(e.header,o.uint32(10).fork()).ldelim(),null!=e.fileContents&&Object.hasOwnProperty.call(e,\"fileContents\")&&$root.proto.FileGetContentsResponse.FileContents.encode(e.fileContents,o.uint32(18).fork()).ldelim(),o},e.decode=function(e,o){e instanceof $Reader||(e=$Reader.create(e));for(var n=void 0===o?e.len:e.pos+o,i=new $root.proto.FileGetContentsResponse,d;e.pos<n;)switch(d=e.uint32(),d>>>3){case 1:i.header=$root.proto.ResponseHeader.decode(e,e.uint32());break;case 2:i.fileContents=$root.proto.FileGetContentsResponse.FileContents.decode(e,e.uint32());break;default:e.skipType(7&d);}return i},e.FileContents=function(){function e(e){if(e)for(var o=Object.keys(e),t=0;t<o.length;++t)null!=e[o[t]]&&(this[o[t]]=e[o[t]])}return e.prototype.fileID=null,e.prototype.contents=$util.newBuffer([]),e.create=function(o){return new e(o)},e.encode=function(e,o){return o||(o=$Writer.create()),null!=e.fileID&&Object.hasOwnProperty.call(e,\"fileID\")&&$root.proto.FileID.encode(e.fileID,o.uint32(10).fork()).ldelim(),null!=e.contents&&Object.hasOwnProperty.call(e,\"contents\")&&o.uint32(18).bytes(e.contents),o},e.decode=function(e,o){e instanceof $Reader||(e=$Reader.create(e));for(var n=void 0===o?e.len:e.pos+o,i=new $root.proto.FileGetContentsResponse.FileContents,d;e.pos<n;)switch(d=e.uint32(),d>>>3){case 1:i.fileID=$root.proto.FileID.decode(e,e.uint32());break;case 2:i.contents=e.bytes();break;default:e.skipType(7&d);}return i},e}(),e}(),FileGetInfoQuery:function(){function e(e){if(e)for(var o=Object.keys(e),t=0;t<o.length;++t)null!=e[o[t]]&&(this[o[t]]=e[o[t]])}return e.prototype.header=null,e.prototype.fileID=null,e.create=function(o){return new e(o)},e.encode=function(e,o){return o||(o=$Writer.create()),null!=e.header&&Object.hasOwnProperty.call(e,\"header\")&&$root.proto.QueryHeader.encode(e.header,o.uint32(10).fork()).ldelim(),null!=e.fileID&&Object.hasOwnProperty.call(e,\"fileID\")&&$root.proto.FileID.encode(e.fileID,o.uint32(18).fork()).ldelim(),o},e.decode=function(e,o){e instanceof $Reader||(e=$Reader.create(e));for(var n=void 0===o?e.len:e.pos+o,i=new $root.proto.FileGetInfoQuery,d;e.pos<n;)switch(d=e.uint32(),d>>>3){case 1:i.header=$root.proto.QueryHeader.decode(e,e.uint32());break;case 2:i.fileID=$root.proto.FileID.decode(e,e.uint32());break;default:e.skipType(7&d);}return i},e}(),FileGetInfoResponse:function(){function e(e){if(e)for(var o=Object.keys(e),t=0;t<o.length;++t)null!=e[o[t]]&&(this[o[t]]=e[o[t]])}return e.prototype.header=null,e.prototype.fileInfo=null,e.create=function(o){return new e(o)},e.encode=function(e,o){return o||(o=$Writer.create()),null!=e.header&&Object.hasOwnProperty.call(e,\"header\")&&$root.proto.ResponseHeader.encode(e.header,o.uint32(10).fork()).ldelim(),null!=e.fileInfo&&Object.hasOwnProperty.call(e,\"fileInfo\")&&$root.proto.FileGetInfoResponse.FileInfo.encode(e.fileInfo,o.uint32(18).fork()).ldelim(),o},e.decode=function(e,o){e instanceof $Reader||(e=$Reader.create(e));for(var n=void 0===o?e.len:e.pos+o,i=new $root.proto.FileGetInfoResponse,d;e.pos<n;)switch(d=e.uint32(),d>>>3){case 1:i.header=$root.proto.ResponseHeader.decode(e,e.uint32());break;case 2:i.fileInfo=$root.proto.FileGetInfoResponse.FileInfo.decode(e,e.uint32());break;default:e.skipType(7&d);}return i},e.FileInfo=function(){function e(e){if(e)for(var o=Object.keys(e),t=0;t<o.length;++t)null!=e[o[t]]&&(this[o[t]]=e[o[t]])}return e.prototype.fileID=null,e.prototype.size=$util.Long?$util.Long.fromBits(0,0,!1):0,e.prototype.expirationTime=null,e.prototype.deleted=!1,e.prototype.keys=null,e.prototype.memo=\"\",e.prototype.ledgerId=$util.newBuffer([]),e.create=function(o){return new e(o)},e.encode=function(e,o){return o||(o=$Writer.create()),null!=e.fileID&&Object.hasOwnProperty.call(e,\"fileID\")&&$root.proto.FileID.encode(e.fileID,o.uint32(10).fork()).ldelim(),null!=e.size&&Object.hasOwnProperty.call(e,\"size\")&&o.uint32(16).int64(e.size),null!=e.expirationTime&&Object.hasOwnProperty.call(e,\"expirationTime\")&&$root.proto.Timestamp.encode(e.expirationTime,o.uint32(26).fork()).ldelim(),null!=e.deleted&&Object.hasOwnProperty.call(e,\"deleted\")&&o.uint32(32).bool(e.deleted),null!=e.keys&&Object.hasOwnProperty.call(e,\"keys\")&&$root.proto.KeyList.encode(e.keys,o.uint32(42).fork()).ldelim(),null!=e.memo&&Object.hasOwnProperty.call(e,\"memo\")&&o.uint32(50).string(e.memo),null!=e.ledgerId&&Object.hasOwnProperty.call(e,\"ledgerId\")&&o.uint32(58).bytes(e.ledgerId),o},e.decode=function(e,o){e instanceof $Reader||(e=$Reader.create(e));for(var n=void 0===o?e.len:e.pos+o,i=new $root.proto.FileGetInfoResponse.FileInfo,d;e.pos<n;)switch(d=e.uint32(),d>>>3){case 1:i.fileID=$root.proto.FileID.decode(e,e.uint32());break;case 2:i.size=e.int64();break;case 3:i.expirationTime=$root.proto.Timestamp.decode(e,e.uint32());break;case 4:i.deleted=e.bool();break;case 5:i.keys=$root.proto.KeyList.decode(e,e.uint32());break;case 6:i.memo=e.string();break;case 7:i.ledgerId=e.bytes();break;default:e.skipType(7&d);}return i},e}(),e}(),TransactionGetReceiptQuery:function(){function e(e){if(e)for(var o=Object.keys(e),t=0;t<o.length;++t)null!=e[o[t]]&&(this[o[t]]=e[o[t]])}return e.prototype.header=null,e.prototype.transactionID=null,e.prototype.includeDuplicates=!1,e.prototype.includeChildReceipts=!1,e.create=function(o){return new e(o)},e.encode=function(e,o){return o||(o=$Writer.create()),null!=e.header&&Object.hasOwnProperty.call(e,\"header\")&&$root.proto.QueryHeader.encode(e.header,o.uint32(10).fork()).ldelim(),null!=e.transactionID&&Object.hasOwnProperty.call(e,\"transactionID\")&&$root.proto.TransactionID.encode(e.transactionID,o.uint32(18).fork()).ldelim(),null!=e.includeDuplicates&&Object.hasOwnProperty.call(e,\"includeDuplicates\")&&o.uint32(24).bool(e.includeDuplicates),null!=e.includeChildReceipts&&Object.hasOwnProperty.call(e,\"includeChildReceipts\")&&o.uint32(32).bool(e.includeChildReceipts),o},e.decode=function(e,o){e instanceof $Reader||(e=$Reader.create(e));for(var n=void 0===o?e.len:e.pos+o,i=new $root.proto.TransactionGetReceiptQuery,d;e.pos<n;)switch(d=e.uint32(),d>>>3){case 1:i.header=$root.proto.QueryHeader.decode(e,e.uint32());break;case 2:i.transactionID=$root.proto.TransactionID.decode(e,e.uint32());break;case 3:i.includeDuplicates=e.bool();break;case 4:i.includeChildReceipts=e.bool();break;default:e.skipType(7&d);}return i},e}(),TransactionGetReceiptResponse:function(){function e(e){if(this.duplicateTransactionReceipts=[],this.childTransactionReceipts=[],e)for(var o=Object.keys(e),t=0;t<o.length;++t)null!=e[o[t]]&&(this[o[t]]=e[o[t]])}return e.prototype.header=null,e.prototype.receipt=null,e.prototype.duplicateTransactionReceipts=$util.emptyArray,e.prototype.childTransactionReceipts=$util.emptyArray,e.create=function(o){return new e(o)},e.encode=function(e,o){if(o||(o=$Writer.create()),null!=e.header&&Object.hasOwnProperty.call(e,\"header\")&&$root.proto.ResponseHeader.encode(e.header,o.uint32(10).fork()).ldelim(),null!=e.receipt&&Object.hasOwnProperty.call(e,\"receipt\")&&$root.proto.TransactionReceipt.encode(e.receipt,o.uint32(18).fork()).ldelim(),null!=e.duplicateTransactionReceipts&&e.duplicateTransactionReceipts.length)for(var t=0;t<e.duplicateTransactionReceipts.length;++t)$root.proto.TransactionReceipt.encode(e.duplicateTransactionReceipts[t],o.uint32(34).fork()).ldelim();if(null!=e.childTransactionReceipts&&e.childTransactionReceipts.length)for(var t=0;t<e.childTransactionReceipts.length;++t)$root.proto.TransactionReceipt.encode(e.childTransactionReceipts[t],o.uint32(42).fork()).ldelim();return o},e.decode=function(e,o){e instanceof $Reader||(e=$Reader.create(e));for(var n=void 0===o?e.len:e.pos+o,i=new $root.proto.TransactionGetReceiptResponse,d;e.pos<n;)switch(d=e.uint32(),d>>>3){case 1:i.header=$root.proto.ResponseHeader.decode(e,e.uint32());break;case 2:i.receipt=$root.proto.TransactionReceipt.decode(e,e.uint32());break;case 4:i.duplicateTransactionReceipts&&i.duplicateTransactionReceipts.length||(i.duplicateTransactionReceipts=[]),i.duplicateTransactionReceipts.push($root.proto.TransactionReceipt.decode(e,e.uint32()));break;case 5:i.childTransactionReceipts&&i.childTransactionReceipts.length||(i.childTransactionReceipts=[]),i.childTransactionReceipts.push($root.proto.TransactionReceipt.decode(e,e.uint32()));break;default:e.skipType(7&d);}return i},e}(),TransactionGetRecordQuery:function(){function e(e){if(e)for(var o=Object.keys(e),t=0;t<o.length;++t)null!=e[o[t]]&&(this[o[t]]=e[o[t]])}return e.prototype.header=null,e.prototype.transactionID=null,e.prototype.includeDuplicates=!1,e.prototype.includeChildRecords=!1,e.create=function(o){return new e(o)},e.encode=function(e,o){return o||(o=$Writer.create()),null!=e.header&&Object.hasOwnProperty.call(e,\"header\")&&$root.proto.QueryHeader.encode(e.header,o.uint32(10).fork()).ldelim(),null!=e.transactionID&&Object.hasOwnProperty.call(e,\"transactionID\")&&$root.proto.TransactionID.encode(e.transactionID,o.uint32(18).fork()).ldelim(),null!=e.includeDuplicates&&Object.hasOwnProperty.call(e,\"includeDuplicates\")&&o.uint32(24).bool(e.includeDuplicates),null!=e.includeChildRecords&&Object.hasOwnProperty.call(e,\"includeChildRecords\")&&o.uint32(32).bool(e.includeChildRecords),o},e.decode=function(e,o){e instanceof $Reader||(e=$Reader.create(e));for(var n=void 0===o?e.len:e.pos+o,i=new $root.proto.TransactionGetRecordQuery,d;e.pos<n;)switch(d=e.uint32(),d>>>3){case 1:i.header=$root.proto.QueryHeader.decode(e,e.uint32());break;case 2:i.transactionID=$root.proto.TransactionID.decode(e,e.uint32());break;case 3:i.includeDuplicates=e.bool();break;case 4:i.includeChildRecords=e.bool();break;default:e.skipType(7&d);}return i},e}(),TransactionGetRecordResponse:function(){function e(e){if(this.duplicateTransactionRecords=[],this.childTransactionRecords=[],e)for(var o=Object.keys(e),t=0;t<o.length;++t)null!=e[o[t]]&&(this[o[t]]=e[o[t]])}return e.prototype.header=null,e.prototype.transactionRecord=null,e.prototype.duplicateTransactionRecords=$util.emptyArray,e.prototype.childTransactionRecords=$util.emptyArray,e.create=function(o){return new e(o)},e.encode=function(e,o){if(o||(o=$Writer.create()),null!=e.header&&Object.hasOwnProperty.call(e,\"header\")&&$root.proto.ResponseHeader.encode(e.header,o.uint32(10).fork()).ldelim(),null!=e.transactionRecord&&Object.hasOwnProperty.call(e,\"transactionRecord\")&&$root.proto.TransactionRecord.encode(e.transactionRecord,o.uint32(26).fork()).ldelim(),null!=e.duplicateTransactionRecords&&e.duplicateTransactionRecords.length)for(var t=0;t<e.duplicateTransactionRecords.length;++t)$root.proto.TransactionRecord.encode(e.duplicateTransactionRecords[t],o.uint32(34).fork()).ldelim();if(null!=e.childTransactionRecords&&e.childTransactionRecords.length)for(var t=0;t<e.childTransactionRecords.length;++t)$root.proto.TransactionRecord.encode(e.childTransactionRecords[t],o.uint32(42).fork()).ldelim();return o},e.decode=function(e,o){e instanceof $Reader||(e=$Reader.create(e));for(var n=void 0===o?e.len:e.pos+o,i=new $root.proto.TransactionGetRecordResponse,d;e.pos<n;)switch(d=e.uint32(),d>>>3){case 1:i.header=$root.proto.ResponseHeader.decode(e,e.uint32());break;case 3:i.transactionRecord=$root.proto.TransactionRecord.decode(e,e.uint32());break;case 4:i.duplicateTransactionRecords&&i.duplicateTransactionRecords.length||(i.duplicateTransactionRecords=[]),i.duplicateTransactionRecords.push($root.proto.TransactionRecord.decode(e,e.uint32()));break;case 5:i.childTransactionRecords&&i.childTransactionRecords.length||(i.childTransactionRecords=[]),i.childTransactionRecords.push($root.proto.TransactionRecord.decode(e,e.uint32()));break;default:e.skipType(7&d);}return i},e}(),TransactionGetFastRecordQuery:function(){function e(e){if(e)for(var o=Object.keys(e),t=0;t<o.length;++t)null!=e[o[t]]&&(this[o[t]]=e[o[t]])}return e.prototype.header=null,e.prototype.transactionID=null,e.create=function(o){return new e(o)},e.encode=function(e,o){return o||(o=$Writer.create()),null!=e.header&&Object.hasOwnProperty.call(e,\"header\")&&$root.proto.QueryHeader.encode(e.header,o.uint32(10).fork()).ldelim(),null!=e.transactionID&&Object.hasOwnProperty.call(e,\"transactionID\")&&$root.proto.TransactionID.encode(e.transactionID,o.uint32(18).fork()).ldelim(),o},e.decode=function(e,o){e instanceof $Reader||(e=$Reader.create(e));for(var n=void 0===o?e.len:e.pos+o,i=new $root.proto.TransactionGetFastRecordQuery,d;e.pos<n;)switch(d=e.uint32(),d>>>3){case 1:i.header=$root.proto.QueryHeader.decode(e,e.uint32());break;case 2:i.transactionID=$root.proto.TransactionID.decode(e,e.uint32());break;default:e.skipType(7&d);}return i},e}(),TransactionGetFastRecordResponse:function(){function e(e){if(e)for(var o=Object.keys(e),t=0;t<o.length;++t)null!=e[o[t]]&&(this[o[t]]=e[o[t]])}return e.prototype.header=null,e.prototype.transactionRecord=null,e.create=function(o){return new e(o)},e.encode=function(e,o){return o||(o=$Writer.create()),null!=e.header&&Object.hasOwnProperty.call(e,\"header\")&&$root.proto.ResponseHeader.encode(e.header,o.uint32(10).fork()).ldelim(),null!=e.transactionRecord&&Object.hasOwnProperty.call(e,\"transactionRecord\")&&$root.proto.TransactionRecord.encode(e.transactionRecord,o.uint32(18).fork()).ldelim(),o},e.decode=function(e,o){e instanceof $Reader||(e=$Reader.create(e));for(var n=void 0===o?e.len:e.pos+o,i=new $root.proto.TransactionGetFastRecordResponse,d;e.pos<n;)switch(d=e.uint32(),d>>>3){case 1:i.header=$root.proto.ResponseHeader.decode(e,e.uint32());break;case 2:i.transactionRecord=$root.proto.TransactionRecord.decode(e,e.uint32());break;default:e.skipType(7&d);}return i},e}(),NetworkGetVersionInfoQuery:function(){function e(e){if(e)for(var o=Object.keys(e),t=0;t<o.length;++t)null!=e[o[t]]&&(this[o[t]]=e[o[t]])}return e.prototype.header=null,e.create=function(o){return new e(o)},e.encode=function(e,o){return o||(o=$Writer.create()),null!=e.header&&Object.hasOwnProperty.call(e,\"header\")&&$root.proto.QueryHeader.encode(e.header,o.uint32(10).fork()).ldelim(),o},e.decode=function(e,o){e instanceof $Reader||(e=$Reader.create(e));for(var n=void 0===o?e.len:e.pos+o,i=new $root.proto.NetworkGetVersionInfoQuery,d;e.pos<n;)switch(d=e.uint32(),d>>>3){case 1:i.header=$root.proto.QueryHeader.decode(e,e.uint32());break;default:e.skipType(7&d);}return i},e}(),NetworkGetVersionInfoResponse:function(){function e(e){if(e)for(var o=Object.keys(e),t=0;t<o.length;++t)null!=e[o[t]]&&(this[o[t]]=e[o[t]])}return e.prototype.header=null,e.prototype.hapiProtoVersion=null,e.prototype.hederaServicesVersion=null,e.create=function(o){return new e(o)},e.encode=function(e,o){return o||(o=$Writer.create()),null!=e.header&&Object.hasOwnProperty.call(e,\"header\")&&$root.proto.ResponseHeader.encode(e.header,o.uint32(10).fork()).ldelim(),null!=e.hapiProtoVersion&&Object.hasOwnProperty.call(e,\"hapiProtoVersion\")&&$root.proto.SemanticVersion.encode(e.hapiProtoVersion,o.uint32(18).fork()).ldelim(),null!=e.hederaServicesVersion&&Object.hasOwnProperty.call(e,\"hederaServicesVersion\")&&$root.proto.SemanticVersion.encode(e.hederaServicesVersion,o.uint32(26).fork()).ldelim(),o},e.decode=function(e,o){e instanceof $Reader||(e=$Reader.create(e));for(var n=void 0===o?e.len:e.pos+o,i=new $root.proto.NetworkGetVersionInfoResponse,d;e.pos<n;)switch(d=e.uint32(),d>>>3){case 1:i.header=$root.proto.ResponseHeader.decode(e,e.uint32());break;case 2:i.hapiProtoVersion=$root.proto.SemanticVersion.decode(e,e.uint32());break;case 3:i.hederaServicesVersion=$root.proto.SemanticVersion.decode(e,e.uint32());break;default:e.skipType(7&d);}return i},e}(),NetworkGetExecutionTimeQuery:function(){function e(e){if(this.transactionIds=[],e)for(var o=Object.keys(e),t=0;t<o.length;++t)null!=e[o[t]]&&(this[o[t]]=e[o[t]])}return e.prototype.header=null,e.prototype.transactionIds=$util.emptyArray,e.create=function(o){return new e(o)},e.encode=function(e,o){if(o||(o=$Writer.create()),null!=e.header&&Object.hasOwnProperty.call(e,\"header\")&&$root.proto.QueryHeader.encode(e.header,o.uint32(10).fork()).ldelim(),null!=e.transactionIds&&e.transactionIds.length)for(var t=0;t<e.transactionIds.length;++t)$root.proto.TransactionID.encode(e.transactionIds[t],o.uint32(18).fork()).ldelim();return o},e.decode=function(e,o){e instanceof $Reader||(e=$Reader.create(e));for(var n=void 0===o?e.len:e.pos+o,i=new $root.proto.NetworkGetExecutionTimeQuery,d;e.pos<n;)switch(d=e.uint32(),d>>>3){case 1:i.header=$root.proto.QueryHeader.decode(e,e.uint32());break;case 2:i.transactionIds&&i.transactionIds.length||(i.transactionIds=[]),i.transactionIds.push($root.proto.TransactionID.decode(e,e.uint32()));break;default:e.skipType(7&d);}return i},e}(),NetworkGetExecutionTimeResponse:function(){function e(e){if(this.executionTimes=[],e)for(var o=Object.keys(e),t=0;t<o.length;++t)null!=e[o[t]]&&(this[o[t]]=e[o[t]])}return e.prototype.header=null,e.prototype.executionTimes=$util.emptyArray,e.create=function(o){return new e(o)},e.encode=function(e,o){if(o||(o=$Writer.create()),null!=e.header&&Object.hasOwnProperty.call(e,\"header\")&&$root.proto.ResponseHeader.encode(e.header,o.uint32(10).fork()).ldelim(),null!=e.executionTimes&&e.executionTimes.length){o.uint32(18).fork();for(var t=0;t<e.executionTimes.length;++t)o.uint64(e.executionTimes[t]);o.ldelim()}return o},e.decode=function(e,o){e instanceof $Reader||(e=$Reader.create(e));for(var n=void 0===o?e.len:e.pos+o,i=new $root.proto.NetworkGetExecutionTimeResponse,d;e.pos<n;)switch(d=e.uint32(),d>>>3){case 1:i.header=$root.proto.ResponseHeader.decode(e,e.uint32());break;case 2:if(i.executionTimes&&i.executionTimes.length||(i.executionTimes=[]),2==(7&d))for(var a=e.uint32()+e.pos;e.pos<a;)i.executionTimes.push(e.uint64());else i.executionTimes.push(e.uint64());break;default:e.skipType(7&d);}return i},e}(),TokenGetInfoQuery:function(){function e(e){if(e)for(var o=Object.keys(e),t=0;t<o.length;++t)null!=e[o[t]]&&(this[o[t]]=e[o[t]])}return e.prototype.header=null,e.prototype.token=null,e.create=function(o){return new e(o)},e.encode=function(e,o){return o||(o=$Writer.create()),null!=e.header&&Object.hasOwnProperty.call(e,\"header\")&&$root.proto.QueryHeader.encode(e.header,o.uint32(10).fork()).ldelim(),null!=e.token&&Object.hasOwnProperty.call(e,\"token\")&&$root.proto.TokenID.encode(e.token,o.uint32(18).fork()).ldelim(),o},e.decode=function(e,o){e instanceof $Reader||(e=$Reader.create(e));for(var n=void 0===o?e.len:e.pos+o,i=new $root.proto.TokenGetInfoQuery,d;e.pos<n;)switch(d=e.uint32(),d>>>3){case 1:i.header=$root.proto.QueryHeader.decode(e,e.uint32());break;case 2:i.token=$root.proto.TokenID.decode(e,e.uint32());break;default:e.skipType(7&d);}return i},e}(),TokenInfo:function(){function e(e){if(this.customFees=[],e)for(var o=Object.keys(e),t=0;t<o.length;++t)null!=e[o[t]]&&(this[o[t]]=e[o[t]])}return e.prototype.tokenId=null,e.prototype.name=\"\",e.prototype.symbol=\"\",e.prototype.decimals=0,e.prototype.totalSupply=$util.Long?$util.Long.fromBits(0,0,!0):0,e.prototype.treasury=null,e.prototype.adminKey=null,e.prototype.kycKey=null,e.prototype.freezeKey=null,e.prototype.wipeKey=null,e.prototype.supplyKey=null,e.prototype.defaultFreezeStatus=0,e.prototype.defaultKycStatus=0,e.prototype.deleted=!1,e.prototype.autoRenewAccount=null,e.prototype.autoRenewPeriod=null,e.prototype.expiry=null,e.prototype.memo=\"\",e.prototype.tokenType=0,e.prototype.supplyType=0,e.prototype.maxSupply=$util.Long?$util.Long.fromBits(0,0,!1):0,e.prototype.feeScheduleKey=null,e.prototype.customFees=$util.emptyArray,e.prototype.pauseKey=null,e.prototype.pauseStatus=0,e.prototype.ledgerId=$util.newBuffer([]),e.create=function(o){return new e(o)},e.encode=function(e,o){if(o||(o=$Writer.create()),null!=e.tokenId&&Object.hasOwnProperty.call(e,\"tokenId\")&&$root.proto.TokenID.encode(e.tokenId,o.uint32(10).fork()).ldelim(),null!=e.name&&Object.hasOwnProperty.call(e,\"name\")&&o.uint32(18).string(e.name),null!=e.symbol&&Object.hasOwnProperty.call(e,\"symbol\")&&o.uint32(26).string(e.symbol),null!=e.decimals&&Object.hasOwnProperty.call(e,\"decimals\")&&o.uint32(32).uint32(e.decimals),null!=e.totalSupply&&Object.hasOwnProperty.call(e,\"totalSupply\")&&o.uint32(40).uint64(e.totalSupply),null!=e.treasury&&Object.hasOwnProperty.call(e,\"treasury\")&&$root.proto.AccountID.encode(e.treasury,o.uint32(50).fork()).ldelim(),null!=e.adminKey&&Object.hasOwnProperty.call(e,\"adminKey\")&&$root.proto.Key.encode(e.adminKey,o.uint32(58).fork()).ldelim(),null!=e.kycKey&&Object.hasOwnProperty.call(e,\"kycKey\")&&$root.proto.Key.encode(e.kycKey,o.uint32(66).fork()).ldelim(),null!=e.freezeKey&&Object.hasOwnProperty.call(e,\"freezeKey\")&&$root.proto.Key.encode(e.freezeKey,o.uint32(74).fork()).ldelim(),null!=e.wipeKey&&Object.hasOwnProperty.call(e,\"wipeKey\")&&$root.proto.Key.encode(e.wipeKey,o.uint32(82).fork()).ldelim(),null!=e.supplyKey&&Object.hasOwnProperty.call(e,\"supplyKey\")&&$root.proto.Key.encode(e.supplyKey,o.uint32(90).fork()).ldelim(),null!=e.defaultFreezeStatus&&Object.hasOwnProperty.call(e,\"defaultFreezeStatus\")&&o.uint32(96).int32(e.defaultFreezeStatus),null!=e.defaultKycStatus&&Object.hasOwnProperty.call(e,\"defaultKycStatus\")&&o.uint32(104).int32(e.defaultKycStatus),null!=e.deleted&&Object.hasOwnProperty.call(e,\"deleted\")&&o.uint32(112).bool(e.deleted),null!=e.autoRenewAccount&&Object.hasOwnProperty.call(e,\"autoRenewAccount\")&&$root.proto.AccountID.encode(e.autoRenewAccount,o.uint32(122).fork()).ldelim(),null!=e.autoRenewPeriod&&Object.hasOwnProperty.call(e,\"autoRenewPeriod\")&&$root.proto.Duration.encode(e.autoRenewPeriod,o.uint32(130).fork()).ldelim(),null!=e.expiry&&Object.hasOwnProperty.call(e,\"expiry\")&&$root.proto.Timestamp.encode(e.expiry,o.uint32(138).fork()).ldelim(),null!=e.memo&&Object.hasOwnProperty.call(e,\"memo\")&&o.uint32(146).string(e.memo),null!=e.tokenType&&Object.hasOwnProperty.call(e,\"tokenType\")&&o.uint32(152).int32(e.tokenType),null!=e.supplyType&&Object.hasOwnProperty.call(e,\"supplyType\")&&o.uint32(160).int32(e.supplyType),null!=e.maxSupply&&Object.hasOwnProperty.call(e,\"maxSupply\")&&o.uint32(168).int64(e.maxSupply),null!=e.feeScheduleKey&&Object.hasOwnProperty.call(e,\"feeScheduleKey\")&&$root.proto.Key.encode(e.feeScheduleKey,o.uint32(178).fork()).ldelim(),null!=e.customFees&&e.customFees.length)for(var t=0;t<e.customFees.length;++t)$root.proto.CustomFee.encode(e.customFees[t],o.uint32(186).fork()).ldelim();return null!=e.pauseKey&&Object.hasOwnProperty.call(e,\"pauseKey\")&&$root.proto.Key.encode(e.pauseKey,o.uint32(194).fork()).ldelim(),null!=e.pauseStatus&&Object.hasOwnProperty.call(e,\"pauseStatus\")&&o.uint32(200).int32(e.pauseStatus),null!=e.ledgerId&&Object.hasOwnProperty.call(e,\"ledgerId\")&&o.uint32(210).bytes(e.ledgerId),o},e.decode=function(e,o){e instanceof $Reader||(e=$Reader.create(e));for(var n=void 0===o?e.len:e.pos+o,i=new $root.proto.TokenInfo,d;e.pos<n;)switch(d=e.uint32(),d>>>3){case 1:i.tokenId=$root.proto.TokenID.decode(e,e.uint32());break;case 2:i.name=e.string();break;case 3:i.symbol=e.string();break;case 4:i.decimals=e.uint32();break;case 5:i.totalSupply=e.uint64();break;case 6:i.treasury=$root.proto.AccountID.decode(e,e.uint32());break;case 7:i.adminKey=$root.proto.Key.decode(e,e.uint32());break;case 8:i.kycKey=$root.proto.Key.decode(e,e.uint32());break;case 9:i.freezeKey=$root.proto.Key.decode(e,e.uint32());break;case 10:i.wipeKey=$root.proto.Key.decode(e,e.uint32());break;case 11:i.supplyKey=$root.proto.Key.decode(e,e.uint32());break;case 12:i.defaultFreezeStatus=e.int32();break;case 13:i.defaultKycStatus=e.int32();break;case 14:i.deleted=e.bool();break;case 15:i.autoRenewAccount=$root.proto.AccountID.decode(e,e.uint32());break;case 16:i.autoRenewPeriod=$root.proto.Duration.decode(e,e.uint32());break;case 17:i.expiry=$root.proto.Timestamp.decode(e,e.uint32());break;case 18:i.memo=e.string();break;case 19:i.tokenType=e.int32();break;case 20:i.supplyType=e.int32();break;case 21:i.maxSupply=e.int64();break;case 22:i.feeScheduleKey=$root.proto.Key.decode(e,e.uint32());break;case 23:i.customFees&&i.customFees.length||(i.customFees=[]),i.customFees.push($root.proto.CustomFee.decode(e,e.uint32()));break;case 24:i.pauseKey=$root.proto.Key.decode(e,e.uint32());break;case 25:i.pauseStatus=e.int32();break;case 26:i.ledgerId=e.bytes();break;default:e.skipType(7&d);}return i},e}(),TokenGetInfoResponse:function(){function e(e){if(e)for(var o=Object.keys(e),t=0;t<o.length;++t)null!=e[o[t]]&&(this[o[t]]=e[o[t]])}return e.prototype.header=null,e.prototype.tokenInfo=null,e.create=function(o){return new e(o)},e.encode=function(e,o){return o||(o=$Writer.create()),null!=e.header&&Object.hasOwnProperty.call(e,\"header\")&&$root.proto.ResponseHeader.encode(e.header,o.uint32(10).fork()).ldelim(),null!=e.tokenInfo&&Object.hasOwnProperty.call(e,\"tokenInfo\")&&$root.proto.TokenInfo.encode(e.tokenInfo,o.uint32(18).fork()).ldelim(),o},e.decode=function(e,o){e instanceof $Reader||(e=$Reader.create(e));for(var n=void 0===o?e.len:e.pos+o,i=new $root.proto.TokenGetInfoResponse,d;e.pos<n;)switch(d=e.uint32(),d>>>3){case 1:i.header=$root.proto.ResponseHeader.decode(e,e.uint32());break;case 2:i.tokenInfo=$root.proto.TokenInfo.decode(e,e.uint32());break;default:e.skipType(7&d);}return i},e}(),ScheduleGetInfoQuery:function(){function e(e){if(e)for(var o=Object.keys(e),t=0;t<o.length;++t)null!=e[o[t]]&&(this[o[t]]=e[o[t]])}return e.prototype.header=null,e.prototype.scheduleID=null,e.create=function(o){return new e(o)},e.encode=function(e,o){return o||(o=$Writer.create()),null!=e.header&&Object.hasOwnProperty.call(e,\"header\")&&$root.proto.QueryHeader.encode(e.header,o.uint32(10).fork()).ldelim(),null!=e.scheduleID&&Object.hasOwnProperty.call(e,\"scheduleID\")&&$root.proto.ScheduleID.encode(e.scheduleID,o.uint32(18).fork()).ldelim(),o},e.decode=function(e,o){e instanceof $Reader||(e=$Reader.create(e));for(var n=void 0===o?e.len:e.pos+o,i=new $root.proto.ScheduleGetInfoQuery,d;e.pos<n;)switch(d=e.uint32(),d>>>3){case 1:i.header=$root.proto.QueryHeader.decode(e,e.uint32());break;case 2:i.scheduleID=$root.proto.ScheduleID.decode(e,e.uint32());break;default:e.skipType(7&d);}return i},e}(),ScheduleInfo:function(){function e(e){if(e)for(var o=Object.keys(e),t=0;t<o.length;++t)null!=e[o[t]]&&(this[o[t]]=e[o[t]])}e.prototype.scheduleID=null,e.prototype.deletionTime=null,e.prototype.executionTime=null,e.prototype.expirationTime=null,e.prototype.scheduledTransactionBody=null,e.prototype.memo=\"\",e.prototype.adminKey=null,e.prototype.signers=null,e.prototype.creatorAccountID=null,e.prototype.payerAccountID=null,e.prototype.scheduledTransactionID=null,e.prototype.ledgerId=$util.newBuffer([]);let o;return Object.defineProperty(e.prototype,\"data\",{get:$util.oneOfGetter(o=[\"deletionTime\",\"executionTime\"]),set:$util.oneOfSetter(o)}),e.create=function(o){return new e(o)},e.encode=function(e,o){return o||(o=$Writer.create()),null!=e.scheduleID&&Object.hasOwnProperty.call(e,\"scheduleID\")&&$root.proto.ScheduleID.encode(e.scheduleID,o.uint32(10).fork()).ldelim(),null!=e.deletionTime&&Object.hasOwnProperty.call(e,\"deletionTime\")&&$root.proto.Timestamp.encode(e.deletionTime,o.uint32(18).fork()).ldelim(),null!=e.executionTime&&Object.hasOwnProperty.call(e,\"executionTime\")&&$root.proto.Timestamp.encode(e.executionTime,o.uint32(26).fork()).ldelim(),null!=e.expirationTime&&Object.hasOwnProperty.call(e,\"expirationTime\")&&$root.proto.Timestamp.encode(e.expirationTime,o.uint32(34).fork()).ldelim(),null!=e.scheduledTransactionBody&&Object.hasOwnProperty.call(e,\"scheduledTransactionBody\")&&$root.proto.SchedulableTransactionBody.encode(e.scheduledTransactionBody,o.uint32(42).fork()).ldelim(),null!=e.memo&&Object.hasOwnProperty.call(e,\"memo\")&&o.uint32(50).string(e.memo),null!=e.adminKey&&Object.hasOwnProperty.call(e,\"adminKey\")&&$root.proto.Key.encode(e.adminKey,o.uint32(58).fork()).ldelim(),null!=e.signers&&Object.hasOwnProperty.call(e,\"signers\")&&$root.proto.KeyList.encode(e.signers,o.uint32(66).fork()).ldelim(),null!=e.creatorAccountID&&Object.hasOwnProperty.call(e,\"creatorAccountID\")&&$root.proto.AccountID.encode(e.creatorAccountID,o.uint32(74).fork()).ldelim(),null!=e.payerAccountID&&Object.hasOwnProperty.call(e,\"payerAccountID\")&&$root.proto.AccountID.encode(e.payerAccountID,o.uint32(82).fork()).ldelim(),null!=e.scheduledTransactionID&&Object.hasOwnProperty.call(e,\"scheduledTransactionID\")&&$root.proto.TransactionID.encode(e.scheduledTransactionID,o.uint32(90).fork()).ldelim(),null!=e.ledgerId&&Object.hasOwnProperty.call(e,\"ledgerId\")&&o.uint32(98).bytes(e.ledgerId),o},e.decode=function(e,o){e instanceof $Reader||(e=$Reader.create(e));for(var n=void 0===o?e.len:e.pos+o,i=new $root.proto.ScheduleInfo,d;e.pos<n;)switch(d=e.uint32(),d>>>3){case 1:i.scheduleID=$root.proto.ScheduleID.decode(e,e.uint32());break;case 2:i.deletionTime=$root.proto.Timestamp.decode(e,e.uint32());break;case 3:i.executionTime=$root.proto.Timestamp.decode(e,e.uint32());break;case 4:i.expirationTime=$root.proto.Timestamp.decode(e,e.uint32());break;case 5:i.scheduledTransactionBody=$root.proto.SchedulableTransactionBody.decode(e,e.uint32());break;case 6:i.memo=e.string();break;case 7:i.adminKey=$root.proto.Key.decode(e,e.uint32());break;case 8:i.signers=$root.proto.KeyList.decode(e,e.uint32());break;case 9:i.creatorAccountID=$root.proto.AccountID.decode(e,e.uint32());break;case 10:i.payerAccountID=$root.proto.AccountID.decode(e,e.uint32());break;case 11:i.scheduledTransactionID=$root.proto.TransactionID.decode(e,e.uint32());break;case 12:i.ledgerId=e.bytes();break;default:e.skipType(7&d);}return i},e}(),ScheduleGetInfoResponse:function(){function e(e){if(e)for(var o=Object.keys(e),t=0;t<o.length;++t)null!=e[o[t]]&&(this[o[t]]=e[o[t]])}return e.prototype.header=null,e.prototype.scheduleInfo=null,e.create=function(o){return new e(o)},e.encode=function(e,o){return o||(o=$Writer.create()),null!=e.header&&Object.hasOwnProperty.call(e,\"header\")&&$root.proto.ResponseHeader.encode(e.header,o.uint32(10).fork()).ldelim(),null!=e.scheduleInfo&&Object.hasOwnProperty.call(e,\"scheduleInfo\")&&$root.proto.ScheduleInfo.encode(e.scheduleInfo,o.uint32(18).fork()).ldelim(),o},e.decode=function(e,o){e instanceof $Reader||(e=$Reader.create(e));for(var n=void 0===o?e.len:e.pos+o,i=new $root.proto.ScheduleGetInfoResponse,d;e.pos<n;)switch(d=e.uint32(),d>>>3){case 1:i.header=$root.proto.ResponseHeader.decode(e,e.uint32());break;case 2:i.scheduleInfo=$root.proto.ScheduleInfo.decode(e,e.uint32());break;default:e.skipType(7&d);}return i},e}(),TokenGetAccountNftInfosQuery:function(){function e(e){if(e)for(var o=Object.keys(e),t=0;t<o.length;++t)null!=e[o[t]]&&(this[o[t]]=e[o[t]])}return e.prototype.header=null,e.prototype.accountID=null,e.prototype.start=$util.Long?$util.Long.fromBits(0,0,!1):0,e.prototype.end=$util.Long?$util.Long.fromBits(0,0,!1):0,e.create=function(o){return new e(o)},e.encode=function(e,o){return o||(o=$Writer.create()),null!=e.header&&Object.hasOwnProperty.call(e,\"header\")&&$root.proto.QueryHeader.encode(e.header,o.uint32(10).fork()).ldelim(),null!=e.accountID&&Object.hasOwnProperty.call(e,\"accountID\")&&$root.proto.AccountID.encode(e.accountID,o.uint32(18).fork()).ldelim(),null!=e.start&&Object.hasOwnProperty.call(e,\"start\")&&o.uint32(24).int64(e.start),null!=e.end&&Object.hasOwnProperty.call(e,\"end\")&&o.uint32(32).int64(e.end),o},e.decode=function(e,o){e instanceof $Reader||(e=$Reader.create(e));for(var n=void 0===o?e.len:e.pos+o,i=new $root.proto.TokenGetAccountNftInfosQuery,d;e.pos<n;)switch(d=e.uint32(),d>>>3){case 1:i.header=$root.proto.QueryHeader.decode(e,e.uint32());break;case 2:i.accountID=$root.proto.AccountID.decode(e,e.uint32());break;case 3:i.start=e.int64();break;case 4:i.end=e.int64();break;default:e.skipType(7&d);}return i},e}(),TokenGetAccountNftInfosResponse:function(){function e(e){if(this.nfts=[],e)for(var o=Object.keys(e),t=0;t<o.length;++t)null!=e[o[t]]&&(this[o[t]]=e[o[t]])}return e.prototype.header=null,e.prototype.nfts=$util.emptyArray,e.create=function(o){return new e(o)},e.encode=function(e,o){if(o||(o=$Writer.create()),null!=e.header&&Object.hasOwnProperty.call(e,\"header\")&&$root.proto.ResponseHeader.encode(e.header,o.uint32(10).fork()).ldelim(),null!=e.nfts&&e.nfts.length)for(var t=0;t<e.nfts.length;++t)$root.proto.TokenNftInfo.encode(e.nfts[t],o.uint32(18).fork()).ldelim();return o},e.decode=function(e,o){e instanceof $Reader||(e=$Reader.create(e));for(var n=void 0===o?e.len:e.pos+o,i=new $root.proto.TokenGetAccountNftInfosResponse,d;e.pos<n;)switch(d=e.uint32(),d>>>3){case 1:i.header=$root.proto.ResponseHeader.decode(e,e.uint32());break;case 2:i.nfts&&i.nfts.length||(i.nfts=[]),i.nfts.push($root.proto.TokenNftInfo.decode(e,e.uint32()));break;default:e.skipType(7&d);}return i},e}(),NftID:function(){function e(e){if(e)for(var o=Object.keys(e),t=0;t<o.length;++t)null!=e[o[t]]&&(this[o[t]]=e[o[t]])}return e.prototype.tokenID=null,e.prototype.serialNumber=$util.Long?$util.Long.fromBits(0,0,!1):0,e.create=function(o){return new e(o)},e.encode=function(e,o){return o||(o=$Writer.create()),null!=e.tokenID&&Object.hasOwnProperty.call(e,\"tokenID\")&&$root.proto.TokenID.encode(e.tokenID,o.uint32(10).fork()).ldelim(),null!=e.serialNumber&&Object.hasOwnProperty.call(e,\"serialNumber\")&&o.uint32(16).int64(e.serialNumber),o},e.decode=function(e,o){e instanceof $Reader||(e=$Reader.create(e));for(var n=void 0===o?e.len:e.pos+o,i=new $root.proto.NftID,d;e.pos<n;)switch(d=e.uint32(),d>>>3){case 1:i.tokenID=$root.proto.TokenID.decode(e,e.uint32());break;case 2:i.serialNumber=e.int64();break;default:e.skipType(7&d);}return i},e}(),TokenGetNftInfoQuery:function(){function e(e){if(e)for(var o=Object.keys(e),t=0;t<o.length;++t)null!=e[o[t]]&&(this[o[t]]=e[o[t]])}return e.prototype.header=null,e.prototype.nftID=null,e.create=function(o){return new e(o)},e.encode=function(e,o){return o||(o=$Writer.create()),null!=e.header&&Object.hasOwnProperty.call(e,\"header\")&&$root.proto.QueryHeader.encode(e.header,o.uint32(10).fork()).ldelim(),null!=e.nftID&&Object.hasOwnProperty.call(e,\"nftID\")&&$root.proto.NftID.encode(e.nftID,o.uint32(18).fork()).ldelim(),o},e.decode=function(e,o){e instanceof $Reader||(e=$Reader.create(e));for(var n=void 0===o?e.len:e.pos+o,i=new $root.proto.TokenGetNftInfoQuery,d;e.pos<n;)switch(d=e.uint32(),d>>>3){case 1:i.header=$root.proto.QueryHeader.decode(e,e.uint32());break;case 2:i.nftID=$root.proto.NftID.decode(e,e.uint32());break;default:e.skipType(7&d);}return i},e}(),TokenNftInfo:function(){function e(e){if(e)for(var o=Object.keys(e),t=0;t<o.length;++t)null!=e[o[t]]&&(this[o[t]]=e[o[t]])}return e.prototype.nftID=null,e.prototype.accountID=null,e.prototype.creationTime=null,e.prototype.metadata=$util.newBuffer([]),e.prototype.ledgerId=$util.newBuffer([]),e.create=function(o){return new e(o)},e.encode=function(e,o){return o||(o=$Writer.create()),null!=e.nftID&&Object.hasOwnProperty.call(e,\"nftID\")&&$root.proto.NftID.encode(e.nftID,o.uint32(10).fork()).ldelim(),null!=e.accountID&&Object.hasOwnProperty.call(e,\"accountID\")&&$root.proto.AccountID.encode(e.accountID,o.uint32(18).fork()).ldelim(),null!=e.creationTime&&Object.hasOwnProperty.call(e,\"creationTime\")&&$root.proto.Timestamp.encode(e.creationTime,o.uint32(26).fork()).ldelim(),null!=e.metadata&&Object.hasOwnProperty.call(e,\"metadata\")&&o.uint32(34).bytes(e.metadata),null!=e.ledgerId&&Object.hasOwnProperty.call(e,\"ledgerId\")&&o.uint32(42).bytes(e.ledgerId),o},e.decode=function(e,o){e instanceof $Reader||(e=$Reader.create(e));for(var n=void 0===o?e.len:e.pos+o,i=new $root.proto.TokenNftInfo,d;e.pos<n;)switch(d=e.uint32(),d>>>3){case 1:i.nftID=$root.proto.NftID.decode(e,e.uint32());break;case 2:i.accountID=$root.proto.AccountID.decode(e,e.uint32());break;case 3:i.creationTime=$root.proto.Timestamp.decode(e,e.uint32());break;case 4:i.metadata=e.bytes();break;case 5:i.ledgerId=e.bytes();break;default:e.skipType(7&d);}return i},e}(),TokenGetNftInfoResponse:function(){function e(e){if(e)for(var o=Object.keys(e),t=0;t<o.length;++t)null!=e[o[t]]&&(this[o[t]]=e[o[t]])}return e.prototype.header=null,e.prototype.nft=null,e.create=function(o){return new e(o)},e.encode=function(e,o){return o||(o=$Writer.create()),null!=e.header&&Object.hasOwnProperty.call(e,\"header\")&&$root.proto.ResponseHeader.encode(e.header,o.uint32(10).fork()).ldelim(),null!=e.nft&&Object.hasOwnProperty.call(e,\"nft\")&&$root.proto.TokenNftInfo.encode(e.nft,o.uint32(18).fork()).ldelim(),o},e.decode=function(e,o){e instanceof $Reader||(e=$Reader.create(e));for(var n=void 0===o?e.len:e.pos+o,i=new $root.proto.TokenGetNftInfoResponse,d;e.pos<n;)switch(d=e.uint32(),d>>>3){case 1:i.header=$root.proto.ResponseHeader.decode(e,e.uint32());break;case 2:i.nft=$root.proto.TokenNftInfo.decode(e,e.uint32());break;default:e.skipType(7&d);}return i},e}(),TokenGetNftInfosQuery:function(){function e(e){if(e)for(var o=Object.keys(e),t=0;t<o.length;++t)null!=e[o[t]]&&(this[o[t]]=e[o[t]])}return e.prototype.header=null,e.prototype.tokenID=null,e.prototype.start=$util.Long?$util.Long.fromBits(0,0,!1):0,e.prototype.end=$util.Long?$util.Long.fromBits(0,0,!1):0,e.create=function(o){return new e(o)},e.encode=function(e,o){return o||(o=$Writer.create()),null!=e.header&&Object.hasOwnProperty.call(e,\"header\")&&$root.proto.QueryHeader.encode(e.header,o.uint32(10).fork()).ldelim(),null!=e.tokenID&&Object.hasOwnProperty.call(e,\"tokenID\")&&$root.proto.TokenID.encode(e.tokenID,o.uint32(18).fork()).ldelim(),null!=e.start&&Object.hasOwnProperty.call(e,\"start\")&&o.uint32(24).int64(e.start),null!=e.end&&Object.hasOwnProperty.call(e,\"end\")&&o.uint32(32).int64(e.end),o},e.decode=function(e,o){e instanceof $Reader||(e=$Reader.create(e));for(var n=void 0===o?e.len:e.pos+o,i=new $root.proto.TokenGetNftInfosQuery,d;e.pos<n;)switch(d=e.uint32(),d>>>3){case 1:i.header=$root.proto.QueryHeader.decode(e,e.uint32());break;case 2:i.tokenID=$root.proto.TokenID.decode(e,e.uint32());break;case 3:i.start=e.int64();break;case 4:i.end=e.int64();break;default:e.skipType(7&d);}return i},e}(),TokenGetNftInfosResponse:function(){function e(e){if(this.nfts=[],e)for(var o=Object.keys(e),t=0;t<o.length;++t)null!=e[o[t]]&&(this[o[t]]=e[o[t]])}return e.prototype.header=null,e.prototype.tokenID=null,e.prototype.nfts=$util.emptyArray,e.create=function(o){return new e(o)},e.encode=function(e,o){if(o||(o=$Writer.create()),null!=e.header&&Object.hasOwnProperty.call(e,\"header\")&&$root.proto.ResponseHeader.encode(e.header,o.uint32(10).fork()).ldelim(),null!=e.tokenID&&Object.hasOwnProperty.call(e,\"tokenID\")&&$root.proto.TokenID.encode(e.tokenID,o.uint32(18).fork()).ldelim(),null!=e.nfts&&e.nfts.length)for(var t=0;t<e.nfts.length;++t)$root.proto.TokenNftInfo.encode(e.nfts[t],o.uint32(26).fork()).ldelim();return o},e.decode=function(e,o){e instanceof $Reader||(e=$Reader.create(e));for(var n=void 0===o?e.len:e.pos+o,i=new $root.proto.TokenGetNftInfosResponse,d;e.pos<n;)switch(d=e.uint32(),d>>>3){case 1:i.header=$root.proto.ResponseHeader.decode(e,e.uint32());break;case 2:i.tokenID=$root.proto.TokenID.decode(e,e.uint32());break;case 3:i.nfts&&i.nfts.length||(i.nfts=[]),i.nfts.push($root.proto.TokenNftInfo.decode(e,e.uint32()));break;default:e.skipType(7&d);}return i},e}(),Response:function(){function e(e){if(e)for(var o=Object.keys(e),t=0;t<o.length;++t)null!=e[o[t]]&&(this[o[t]]=e[o[t]])}e.prototype.getByKey=null,e.prototype.getBySolidityID=null,e.prototype.contractCallLocal=null,e.prototype.contractGetBytecodeResponse=null,e.prototype.contractGetInfo=null,e.prototype.contractGetRecordsResponse=null,e.prototype.cryptogetAccountBalance=null,e.prototype.cryptoGetAccountRecords=null,e.prototype.cryptoGetInfo=null,e.prototype.cryptoGetLiveHash=null,e.prototype.cryptoGetProxyStakers=null,e.prototype.fileGetContents=null,e.prototype.fileGetInfo=null,e.prototype.transactionGetReceipt=null,e.prototype.transactionGetRecord=null,e.prototype.transactionGetFastRecord=null,e.prototype.consensusGetTopicInfo=null,e.prototype.networkGetVersionInfo=null,e.prototype.tokenGetInfo=null,e.prototype.scheduleGetInfo=null,e.prototype.tokenGetAccountNftInfos=null,e.prototype.tokenGetNftInfo=null,e.prototype.tokenGetNftInfos=null,e.prototype.networkGetExecutionTime=null;let o;return Object.defineProperty(e.prototype,\"response\",{get:$util.oneOfGetter(o=[\"getByKey\",\"getBySolidityID\",\"contractCallLocal\",\"contractGetBytecodeResponse\",\"contractGetInfo\",\"contractGetRecordsResponse\",\"cryptogetAccountBalance\",\"cryptoGetAccountRecords\",\"cryptoGetInfo\",\"cryptoGetLiveHash\",\"cryptoGetProxyStakers\",\"fileGetContents\",\"fileGetInfo\",\"transactionGetReceipt\",\"transactionGetRecord\",\"transactionGetFastRecord\",\"consensusGetTopicInfo\",\"networkGetVersionInfo\",\"tokenGetInfo\",\"scheduleGetInfo\",\"tokenGetAccountNftInfos\",\"tokenGetNftInfo\",\"tokenGetNftInfos\",\"networkGetExecutionTime\"]),set:$util.oneOfSetter(o)}),e.create=function(o){return new e(o)},e.encode=function(e,o){return o||(o=$Writer.create()),null!=e.getByKey&&Object.hasOwnProperty.call(e,\"getByKey\")&&$root.proto.GetByKeyResponse.encode(e.getByKey,o.uint32(10).fork()).ldelim(),null!=e.getBySolidityID&&Object.hasOwnProperty.call(e,\"getBySolidityID\")&&$root.proto.GetBySolidityIDResponse.encode(e.getBySolidityID,o.uint32(18).fork()).ldelim(),null!=e.contractCallLocal&&Object.hasOwnProperty.call(e,\"contractCallLocal\")&&$root.proto.ContractCallLocalResponse.encode(e.contractCallLocal,o.uint32(26).fork()).ldelim(),null!=e.contractGetInfo&&Object.hasOwnProperty.call(e,\"contractGetInfo\")&&$root.proto.ContractGetInfoResponse.encode(e.contractGetInfo,o.uint32(34).fork()).ldelim(),null!=e.contractGetBytecodeResponse&&Object.hasOwnProperty.call(e,\"contractGetBytecodeResponse\")&&$root.proto.ContractGetBytecodeResponse.encode(e.contractGetBytecodeResponse,o.uint32(42).fork()).ldelim(),null!=e.contractGetRecordsResponse&&Object.hasOwnProperty.call(e,\"contractGetRecordsResponse\")&&$root.proto.ContractGetRecordsResponse.encode(e.contractGetRecordsResponse,o.uint32(50).fork()).ldelim(),null!=e.cryptogetAccountBalance&&Object.hasOwnProperty.call(e,\"cryptogetAccountBalance\")&&$root.proto.CryptoGetAccountBalanceResponse.encode(e.cryptogetAccountBalance,o.uint32(58).fork()).ldelim(),null!=e.cryptoGetAccountRecords&&Object.hasOwnProperty.call(e,\"cryptoGetAccountRecords\")&&$root.proto.CryptoGetAccountRecordsResponse.encode(e.cryptoGetAccountRecords,o.uint32(66).fork()).ldelim(),null!=e.cryptoGetInfo&&Object.hasOwnProperty.call(e,\"cryptoGetInfo\")&&$root.proto.CryptoGetInfoResponse.encode(e.cryptoGetInfo,o.uint32(74).fork()).ldelim(),null!=e.cryptoGetLiveHash&&Object.hasOwnProperty.call(e,\"cryptoGetLiveHash\")&&$root.proto.CryptoGetLiveHashResponse.encode(e.cryptoGetLiveHash,o.uint32(82).fork()).ldelim(),null!=e.cryptoGetProxyStakers&&Object.hasOwnProperty.call(e,\"cryptoGetProxyStakers\")&&$root.proto.CryptoGetStakersResponse.encode(e.cryptoGetProxyStakers,o.uint32(90).fork()).ldelim(),null!=e.fileGetContents&&Object.hasOwnProperty.call(e,\"fileGetContents\")&&$root.proto.FileGetContentsResponse.encode(e.fileGetContents,o.uint32(98).fork()).ldelim(),null!=e.fileGetInfo&&Object.hasOwnProperty.call(e,\"fileGetInfo\")&&$root.proto.FileGetInfoResponse.encode(e.fileGetInfo,o.uint32(106).fork()).ldelim(),null!=e.transactionGetReceipt&&Object.hasOwnProperty.call(e,\"transactionGetReceipt\")&&$root.proto.TransactionGetReceiptResponse.encode(e.transactionGetReceipt,o.uint32(114).fork()).ldelim(),null!=e.transactionGetRecord&&Object.hasOwnProperty.call(e,\"transactionGetRecord\")&&$root.proto.TransactionGetRecordResponse.encode(e.transactionGetRecord,o.uint32(122).fork()).ldelim(),null!=e.transactionGetFastRecord&&Object.hasOwnProperty.call(e,\"transactionGetFastRecord\")&&$root.proto.TransactionGetFastRecordResponse.encode(e.transactionGetFastRecord,o.uint32(130).fork()).ldelim(),null!=e.consensusGetTopicInfo&&Object.hasOwnProperty.call(e,\"consensusGetTopicInfo\")&&$root.proto.ConsensusGetTopicInfoResponse.encode(e.consensusGetTopicInfo,o.uint32(1202).fork()).ldelim(),null!=e.networkGetVersionInfo&&Object.hasOwnProperty.call(e,\"networkGetVersionInfo\")&&$root.proto.NetworkGetVersionInfoResponse.encode(e.networkGetVersionInfo,o.uint32(1210).fork()).ldelim(),null!=e.tokenGetInfo&&Object.hasOwnProperty.call(e,\"tokenGetInfo\")&&$root.proto.TokenGetInfoResponse.encode(e.tokenGetInfo,o.uint32(1218).fork()).ldelim(),null!=e.scheduleGetInfo&&Object.hasOwnProperty.call(e,\"scheduleGetInfo\")&&$root.proto.ScheduleGetInfoResponse.encode(e.scheduleGetInfo,o.uint32(1226).fork()).ldelim(),null!=e.tokenGetAccountNftInfos&&Object.hasOwnProperty.call(e,\"tokenGetAccountNftInfos\")&&$root.proto.TokenGetAccountNftInfosResponse.encode(e.tokenGetAccountNftInfos,o.uint32(1234).fork()).ldelim(),null!=e.tokenGetNftInfo&&Object.hasOwnProperty.call(e,\"tokenGetNftInfo\")&&$root.proto.TokenGetNftInfoResponse.encode(e.tokenGetNftInfo,o.uint32(1242).fork()).ldelim(),null!=e.tokenGetNftInfos&&Object.hasOwnProperty.call(e,\"tokenGetNftInfos\")&&$root.proto.TokenGetNftInfosResponse.encode(e.tokenGetNftInfos,o.uint32(1250).fork()).ldelim(),null!=e.networkGetExecutionTime&&Object.hasOwnProperty.call(e,\"networkGetExecutionTime\")&&$root.proto.NetworkGetExecutionTimeResponse.encode(e.networkGetExecutionTime,o.uint32(1258).fork()).ldelim(),o},e.decode=function(e,o){e instanceof $Reader||(e=$Reader.create(e));for(var n=void 0===o?e.len:e.pos+o,i=new $root.proto.Response,d;e.pos<n;)switch(d=e.uint32(),d>>>3){case 1:i.getByKey=$root.proto.GetByKeyResponse.decode(e,e.uint32());break;case 2:i.getBySolidityID=$root.proto.GetBySolidityIDResponse.decode(e,e.uint32());break;case 3:i.contractCallLocal=$root.proto.ContractCallLocalResponse.decode(e,e.uint32());break;case 5:i.contractGetBytecodeResponse=$root.proto.ContractGetBytecodeResponse.decode(e,e.uint32());break;case 4:i.contractGetInfo=$root.proto.ContractGetInfoResponse.decode(e,e.uint32());break;case 6:i.contractGetRecordsResponse=$root.proto.ContractGetRecordsResponse.decode(e,e.uint32());break;case 7:i.cryptogetAccountBalance=$root.proto.CryptoGetAccountBalanceResponse.decode(e,e.uint32());break;case 8:i.cryptoGetAccountRecords=$root.proto.CryptoGetAccountRecordsResponse.decode(e,e.uint32());break;case 9:i.cryptoGetInfo=$root.proto.CryptoGetInfoResponse.decode(e,e.uint32());break;case 10:i.cryptoGetLiveHash=$root.proto.CryptoGetLiveHashResponse.decode(e,e.uint32());break;case 11:i.cryptoGetProxyStakers=$root.proto.CryptoGetStakersResponse.decode(e,e.uint32());break;case 12:i.fileGetContents=$root.proto.FileGetContentsResponse.decode(e,e.uint32());break;case 13:i.fileGetInfo=$root.proto.FileGetInfoResponse.decode(e,e.uint32());break;case 14:i.transactionGetReceipt=$root.proto.TransactionGetReceiptResponse.decode(e,e.uint32());break;case 15:i.transactionGetRecord=$root.proto.TransactionGetRecordResponse.decode(e,e.uint32());break;case 16:i.transactionGetFastRecord=$root.proto.TransactionGetFastRecordResponse.decode(e,e.uint32());break;case 150:i.consensusGetTopicInfo=$root.proto.ConsensusGetTopicInfoResponse.decode(e,e.uint32());break;case 151:i.networkGetVersionInfo=$root.proto.NetworkGetVersionInfoResponse.decode(e,e.uint32());break;case 152:i.tokenGetInfo=$root.proto.TokenGetInfoResponse.decode(e,e.uint32());break;case 153:i.scheduleGetInfo=$root.proto.ScheduleGetInfoResponse.decode(e,e.uint32());break;case 154:i.tokenGetAccountNftInfos=$root.proto.TokenGetAccountNftInfosResponse.decode(e,e.uint32());break;case 155:i.tokenGetNftInfo=$root.proto.TokenGetNftInfoResponse.decode(e,e.uint32());break;case 156:i.tokenGetNftInfos=$root.proto.TokenGetNftInfosResponse.decode(e,e.uint32());break;case 157:i.networkGetExecutionTime=$root.proto.NetworkGetExecutionTimeResponse.decode(e,e.uint32());break;default:e.skipType(7&d);}return i},e}(),CryptoService:function(){function e(e,o,t){$protobuf.rpc.Service.call(this,e,o,t)}return(e.prototype=Object.create($protobuf.rpc.Service.prototype)).constructor=e,e.create=function(e,o,t){return new this(e,o,t)},Object.defineProperty(e.prototype.createAccount=function e(o,t){return this.rpcCall(e,$root.proto.Transaction,$root.proto.TransactionResponse,o,t)},\"name\",{value:\"createAccount\"}),Object.defineProperty(e.prototype.updateAccount=function e(o,t){return this.rpcCall(e,$root.proto.Transaction,$root.proto.TransactionResponse,o,t)},\"name\",{value:\"updateAccount\"}),Object.defineProperty(e.prototype.cryptoTransfer=function e(o,t){return this.rpcCall(e,$root.proto.Transaction,$root.proto.TransactionResponse,o,t)},\"name\",{value:\"cryptoTransfer\"}),Object.defineProperty(e.prototype.cryptoDelete=function e(o,t){return this.rpcCall(e,$root.proto.Transaction,$root.proto.TransactionResponse,o,t)},\"name\",{value:\"cryptoDelete\"}),Object.defineProperty(e.prototype.addLiveHash=function e(o,t){return this.rpcCall(e,$root.proto.Transaction,$root.proto.TransactionResponse,o,t)},\"name\",{value:\"addLiveHash\"}),Object.defineProperty(e.prototype.deleteLiveHash=function e(o,t){return this.rpcCall(e,$root.proto.Transaction,$root.proto.TransactionResponse,o,t)},\"name\",{value:\"deleteLiveHash\"}),Object.defineProperty(e.prototype.getLiveHash=function e(o,t){return this.rpcCall(e,$root.proto.Query,$root.proto.Response,o,t)},\"name\",{value:\"getLiveHash\"}),Object.defineProperty(e.prototype.getAccountRecords=function e(o,t){return this.rpcCall(e,$root.proto.Query,$root.proto.Response,o,t)},\"name\",{value:\"getAccountRecords\"}),Object.defineProperty(e.prototype.cryptoGetBalance=function e(o,t){return this.rpcCall(e,$root.proto.Query,$root.proto.Response,o,t)},\"name\",{value:\"cryptoGetBalance\"}),Object.defineProperty(e.prototype.getAccountInfo=function e(o,t){return this.rpcCall(e,$root.proto.Query,$root.proto.Response,o,t)},\"name\",{value:\"getAccountInfo\"}),Object.defineProperty(e.prototype.getTransactionReceipts=function e(o,t){return this.rpcCall(e,$root.proto.Query,$root.proto.Response,o,t)},\"name\",{value:\"getTransactionReceipts\"}),Object.defineProperty(e.prototype.getFastTransactionRecord=function e(o,t){return this.rpcCall(e,$root.proto.Query,$root.proto.Response,o,t)},\"name\",{value:\"getFastTransactionRecord\"}),Object.defineProperty(e.prototype.getTxRecordByTxID=function e(o,t){return this.rpcCall(e,$root.proto.Query,$root.proto.Response,o,t)},\"name\",{value:\"getTxRecordByTxID\"}),Object.defineProperty(e.prototype.getStakersByAccountID=function e(o,t){return this.rpcCall(e,$root.proto.Query,$root.proto.Response,o,t)},\"name\",{value:\"getStakersByAccountID\"}),e}(),FileService:function(){function e(e,o,t){$protobuf.rpc.Service.call(this,e,o,t)}return(e.prototype=Object.create($protobuf.rpc.Service.prototype)).constructor=e,e.create=function(e,o,t){return new this(e,o,t)},Object.defineProperty(e.prototype.createFile=function e(o,t){return this.rpcCall(e,$root.proto.Transaction,$root.proto.TransactionResponse,o,t)},\"name\",{value:\"createFile\"}),Object.defineProperty(e.prototype.updateFile=function e(o,t){return this.rpcCall(e,$root.proto.Transaction,$root.proto.TransactionResponse,o,t)},\"name\",{value:\"updateFile\"}),Object.defineProperty(e.prototype.deleteFile=function e(o,t){return this.rpcCall(e,$root.proto.Transaction,$root.proto.TransactionResponse,o,t)},\"name\",{value:\"deleteFile\"}),Object.defineProperty(e.prototype.appendContent=function e(o,t){return this.rpcCall(e,$root.proto.Transaction,$root.proto.TransactionResponse,o,t)},\"name\",{value:\"appendContent\"}),Object.defineProperty(e.prototype.getFileContent=function e(o,t){return this.rpcCall(e,$root.proto.Query,$root.proto.Response,o,t)},\"name\",{value:\"getFileContent\"}),Object.defineProperty(e.prototype.getFileInfo=function e(o,t){return this.rpcCall(e,$root.proto.Query,$root.proto.Response,o,t)},\"name\",{value:\"getFileInfo\"}),Object.defineProperty(e.prototype.systemDelete=function e(o,t){return this.rpcCall(e,$root.proto.Transaction,$root.proto.TransactionResponse,o,t)},\"name\",{value:\"systemDelete\"}),Object.defineProperty(e.prototype.systemUndelete=function e(o,t){return this.rpcCall(e,$root.proto.Transaction,$root.proto.TransactionResponse,o,t)},\"name\",{value:\"systemUndelete\"}),e}(),FreezeService:function(){function e(e,o,t){$protobuf.rpc.Service.call(this,e,o,t)}return(e.prototype=Object.create($protobuf.rpc.Service.prototype)).constructor=e,e.create=function(e,o,t){return new this(e,o,t)},Object.defineProperty(e.prototype.freeze=function e(o,t){return this.rpcCall(e,$root.proto.Transaction,$root.proto.TransactionResponse,o,t)},\"name\",{value:\"freeze\"}),e}(),ConsensusTopicQuery:function(){function e(e){if(e)for(var o=Object.keys(e),t=0;t<o.length;++t)null!=e[o[t]]&&(this[o[t]]=e[o[t]])}return e.prototype.topicID=null,e.prototype.consensusStartTime=null,e.prototype.consensusEndTime=null,e.prototype.limit=$util.Long?$util.Long.fromBits(0,0,!0):0,e.create=function(o){return new e(o)},e.encode=function(e,o){return o||(o=$Writer.create()),null!=e.topicID&&Object.hasOwnProperty.call(e,\"topicID\")&&$root.proto.TopicID.encode(e.topicID,o.uint32(10).fork()).ldelim(),null!=e.consensusStartTime&&Object.hasOwnProperty.call(e,\"consensusStartTime\")&&$root.proto.Timestamp.encode(e.consensusStartTime,o.uint32(18).fork()).ldelim(),null!=e.consensusEndTime&&Object.hasOwnProperty.call(e,\"consensusEndTime\")&&$root.proto.Timestamp.encode(e.consensusEndTime,o.uint32(26).fork()).ldelim(),null!=e.limit&&Object.hasOwnProperty.call(e,\"limit\")&&o.uint32(32).uint64(e.limit),o},e.decode=function(e,o){e instanceof $Reader||(e=$Reader.create(e));for(var n=void 0===o?e.len:e.pos+o,i=new $root.proto.ConsensusTopicQuery,d;e.pos<n;)switch(d=e.uint32(),d>>>3){case 1:i.topicID=$root.proto.TopicID.decode(e,e.uint32());break;case 2:i.consensusStartTime=$root.proto.Timestamp.decode(e,e.uint32());break;case 3:i.consensusEndTime=$root.proto.Timestamp.decode(e,e.uint32());break;case 4:i.limit=e.uint64();break;default:e.skipType(7&d);}return i},e}(),ConsensusTopicResponse:function(){function e(e){if(e)for(var o=Object.keys(e),t=0;t<o.length;++t)null!=e[o[t]]&&(this[o[t]]=e[o[t]])}return e.prototype.consensusTimestamp=null,e.prototype.message=$util.newBuffer([]),e.prototype.runningHash=$util.newBuffer([]),e.prototype.sequenceNumber=$util.Long?$util.Long.fromBits(0,0,!0):0,e.prototype.runningHashVersion=$util.Long?$util.Long.fromBits(0,0,!0):0,e.prototype.chunkInfo=null,e.create=function(o){return new e(o)},e.encode=function(e,o){return o||(o=$Writer.create()),null!=e.consensusTimestamp&&Object.hasOwnProperty.call(e,\"consensusTimestamp\")&&$root.proto.Timestamp.encode(e.consensusTimestamp,o.uint32(10).fork()).ldelim(),null!=e.message&&Object.hasOwnProperty.call(e,\"message\")&&o.uint32(18).bytes(e.message),null!=e.runningHash&&Object.hasOwnProperty.call(e,\"runningHash\")&&o.uint32(26).bytes(e.runningHash),null!=e.sequenceNumber&&Object.hasOwnProperty.call(e,\"sequenceNumber\")&&o.uint32(32).uint64(e.sequenceNumber),null!=e.runningHashVersion&&Object.hasOwnProperty.call(e,\"runningHashVersion\")&&o.uint32(40).uint64(e.runningHashVersion),null!=e.chunkInfo&&Object.hasOwnProperty.call(e,\"chunkInfo\")&&$root.proto.ConsensusMessageChunkInfo.encode(e.chunkInfo,o.uint32(50).fork()).ldelim(),o},e.decode=function(e,o){e instanceof $Reader||(e=$Reader.create(e));for(var n=void 0===o?e.len:e.pos+o,i=new $root.proto.ConsensusTopicResponse,d;e.pos<n;)switch(d=e.uint32(),d>>>3){case 1:i.consensusTimestamp=$root.proto.Timestamp.decode(e,e.uint32());break;case 2:i.message=e.bytes();break;case 3:i.runningHash=e.bytes();break;case 4:i.sequenceNumber=e.uint64();break;case 5:i.runningHashVersion=e.uint64();break;case 6:i.chunkInfo=$root.proto.ConsensusMessageChunkInfo.decode(e,e.uint32());break;default:e.skipType(7&d);}return i},e}(),MirrorConsensusService:function(){function e(e,o,t){$protobuf.rpc.Service.call(this,e,o,t)}return(e.prototype=Object.create($protobuf.rpc.Service.prototype)).constructor=e,e.create=function(e,o,t){return new this(e,o,t)},Object.defineProperty(e.prototype.subscribeTopic=function e(o,t){return this.rpcCall(e,$root.proto.ConsensusTopicQuery,$root.proto.ConsensusTopicResponse,o,t)},\"name\",{value:\"subscribeTopic\"}),e}(),NetworkService:function(){function e(e,o,t){$protobuf.rpc.Service.call(this,e,o,t)}return(e.prototype=Object.create($protobuf.rpc.Service.prototype)).constructor=e,e.create=function(e,o,t){return new this(e,o,t)},Object.defineProperty(e.prototype.getVersionInfo=function e(o,t){return this.rpcCall(e,$root.proto.Query,$root.proto.Response,o,t)},\"name\",{value:\"getVersionInfo\"}),Object.defineProperty(e.prototype.getExecutionTime=function e(o,t){return this.rpcCall(e,$root.proto.Query,$root.proto.Response,o,t)},\"name\",{value:\"getExecutionTime\"}),Object.defineProperty(e.prototype.uncheckedSubmit=function e(o,t){return this.rpcCall(e,$root.proto.Transaction,$root.proto.TransactionResponse,o,t)},\"name\",{value:\"uncheckedSubmit\"}),e}(),ScheduleService:function(){function e(e,o,t){$protobuf.rpc.Service.call(this,e,o,t)}return(e.prototype=Object.create($protobuf.rpc.Service.prototype)).constructor=e,e.create=function(e,o,t){return new this(e,o,t)},Object.defineProperty(e.prototype.createSchedule=function e(o,t){return this.rpcCall(e,$root.proto.Transaction,$root.proto.TransactionResponse,o,t)},\"name\",{value:\"createSchedule\"}),Object.defineProperty(e.prototype.signSchedule=function e(o,t){return this.rpcCall(e,$root.proto.Transaction,$root.proto.TransactionResponse,o,t)},\"name\",{value:\"signSchedule\"}),Object.defineProperty(e.prototype.deleteSchedule=function e(o,t){return this.rpcCall(e,$root.proto.Transaction,$root.proto.TransactionResponse,o,t)},\"name\",{value:\"deleteSchedule\"}),Object.defineProperty(e.prototype.getScheduleInfo=function e(o,t){return this.rpcCall(e,$root.proto.Query,$root.proto.Response,o,t)},\"name\",{value:\"getScheduleInfo\"}),e}(),SmartContractService:function(){function e(e,o,t){$protobuf.rpc.Service.call(this,e,o,t)}return(e.prototype=Object.create($protobuf.rpc.Service.prototype)).constructor=e,e.create=function(e,o,t){return new this(e,o,t)},Object.defineProperty(e.prototype.createContract=function e(o,t){return this.rpcCall(e,$root.proto.Transaction,$root.proto.TransactionResponse,o,t)},\"name\",{value:\"createContract\"}),Object.defineProperty(e.prototype.updateContract=function e(o,t){return this.rpcCall(e,$root.proto.Transaction,$root.proto.TransactionResponse,o,t)},\"name\",{value:\"updateContract\"}),Object.defineProperty(e.prototype.contractCallMethod=function e(o,t){return this.rpcCall(e,$root.proto.Transaction,$root.proto.TransactionResponse,o,t)},\"name\",{value:\"contractCallMethod\"}),Object.defineProperty(e.prototype.getContractInfo=function e(o,t){return this.rpcCall(e,$root.proto.Query,$root.proto.Response,o,t)},\"name\",{value:\"getContractInfo\"}),Object.defineProperty(e.prototype.contractCallLocalMethod=function e(o,t){return this.rpcCall(e,$root.proto.Query,$root.proto.Response,o,t)},\"name\",{value:\"contractCallLocalMethod\"}),Object.defineProperty(e.prototype.contractGetBytecode=function e(o,t){return this.rpcCall(e,$root.proto.Query,$root.proto.Response,o,t)},\"name\",{value:\"ContractGetBytecode\"}),Object.defineProperty(e.prototype.getBySolidityID=function e(o,t){return this.rpcCall(e,$root.proto.Query,$root.proto.Response,o,t)},\"name\",{value:\"getBySolidityID\"}),Object.defineProperty(e.prototype.getTxRecordByContractID=function e(o,t){return this.rpcCall(e,$root.proto.Query,$root.proto.Response,o,t)},\"name\",{value:\"getTxRecordByContractID\"}),Object.defineProperty(e.prototype.deleteContract=function e(o,t){return this.rpcCall(e,$root.proto.Transaction,$root.proto.TransactionResponse,o,t)},\"name\",{value:\"deleteContract\"}),Object.defineProperty(e.prototype.systemDelete=function e(o,t){return this.rpcCall(e,$root.proto.Transaction,$root.proto.TransactionResponse,o,t)},\"name\",{value:\"systemDelete\"}),Object.defineProperty(e.prototype.systemUndelete=function e(o,t){return this.rpcCall(e,$root.proto.Transaction,$root.proto.TransactionResponse,o,t)},\"name\",{value:\"systemUndelete\"}),e}(),ThrottleGroup:function(){function e(e){if(this.operations=[],e)for(var o=Object.keys(e),t=0;t<o.length;++t)null!=e[o[t]]&&(this[o[t]]=e[o[t]])}return e.prototype.operations=$util.emptyArray,e.prototype.milliOpsPerSec=$util.Long?$util.Long.fromBits(0,0,!0):0,e.create=function(o){return new e(o)},e.encode=function(e,o){if(o||(o=$Writer.create()),null!=e.operations&&e.operations.length){o.uint32(10).fork();for(var t=0;t<e.operations.length;++t)o.int32(e.operations[t]);o.ldelim()}return null!=e.milliOpsPerSec&&Object.hasOwnProperty.call(e,\"milliOpsPerSec\")&&o.uint32(16).uint64(e.milliOpsPerSec),o},e.decode=function(e,o){e instanceof $Reader||(e=$Reader.create(e));for(var n=void 0===o?e.len:e.pos+o,i=new $root.proto.ThrottleGroup,d;e.pos<n;)switch(d=e.uint32(),d>>>3){case 1:if(i.operations&&i.operations.length||(i.operations=[]),2==(7&d))for(var a=e.uint32()+e.pos;e.pos<a;)i.operations.push(e.int32());else i.operations.push(e.int32());break;case 2:i.milliOpsPerSec=e.uint64();break;default:e.skipType(7&d);}return i},e}(),ThrottleBucket:function(){function e(e){if(this.throttleGroups=[],e)for(var o=Object.keys(e),t=0;t<o.length;++t)null!=e[o[t]]&&(this[o[t]]=e[o[t]])}return e.prototype.name=\"\",e.prototype.burstPeriodMs=$util.Long?$util.Long.fromBits(0,0,!0):0,e.prototype.throttleGroups=$util.emptyArray,e.create=function(o){return new e(o)},e.encode=function(e,o){if(o||(o=$Writer.create()),null!=e.name&&Object.hasOwnProperty.call(e,\"name\")&&o.uint32(10).string(e.name),null!=e.burstPeriodMs&&Object.hasOwnProperty.call(e,\"burstPeriodMs\")&&o.uint32(16).uint64(e.burstPeriodMs),null!=e.throttleGroups&&e.throttleGroups.length)for(var t=0;t<e.throttleGroups.length;++t)$root.proto.ThrottleGroup.encode(e.throttleGroups[t],o.uint32(26).fork()).ldelim();return o},e.decode=function(e,o){e instanceof $Reader||(e=$Reader.create(e));for(var n=void 0===o?e.len:e.pos+o,i=new $root.proto.ThrottleBucket,d;e.pos<n;)switch(d=e.uint32(),d>>>3){case 1:i.name=e.string();break;case 2:i.burstPeriodMs=e.uint64();break;case 3:i.throttleGroups&&i.throttleGroups.length||(i.throttleGroups=[]),i.throttleGroups.push($root.proto.ThrottleGroup.decode(e,e.uint32()));break;default:e.skipType(7&d);}return i},e}(),ThrottleDefinitions:function(){function e(e){if(this.throttleBuckets=[],e)for(var o=Object.keys(e),t=0;t<o.length;++t)null!=e[o[t]]&&(this[o[t]]=e[o[t]])}return e.prototype.throttleBuckets=$util.emptyArray,e.create=function(o){return new e(o)},e.encode=function(e,o){if(o||(o=$Writer.create()),null!=e.throttleBuckets&&e.throttleBuckets.length)for(var t=0;t<e.throttleBuckets.length;++t)$root.proto.ThrottleBucket.encode(e.throttleBuckets[t],o.uint32(10).fork()).ldelim();return o},e.decode=function(e,o){e instanceof $Reader||(e=$Reader.create(e));for(var n=void 0===o?e.len:e.pos+o,i=new $root.proto.ThrottleDefinitions,d;e.pos<n;)switch(d=e.uint32(),d>>>3){case 1:i.throttleBuckets&&i.throttleBuckets.length||(i.throttleBuckets=[]),i.throttleBuckets.push($root.proto.ThrottleBucket.decode(e,e.uint32()));break;default:e.skipType(7&d);}return i},e}(),TokenService:function(){function e(e,o,t){$protobuf.rpc.Service.call(this,e,o,t)}return(e.prototype=Object.create($protobuf.rpc.Service.prototype)).constructor=e,e.create=function(e,o,t){return new this(e,o,t)},Object.defineProperty(e.prototype.createToken=function e(o,t){return this.rpcCall(e,$root.proto.Transaction,$root.proto.TransactionResponse,o,t)},\"name\",{value:\"createToken\"}),Object.defineProperty(e.prototype.updateToken=function e(o,t){return this.rpcCall(e,$root.proto.Transaction,$root.proto.TransactionResponse,o,t)},\"name\",{value:\"updateToken\"}),Object.defineProperty(e.prototype.mintToken=function e(o,t){return this.rpcCall(e,$root.proto.Transaction,$root.proto.TransactionResponse,o,t)},\"name\",{value:\"mintToken\"}),Object.defineProperty(e.prototype.burnToken=function e(o,t){return this.rpcCall(e,$root.proto.Transaction,$root.proto.TransactionResponse,o,t)},\"name\",{value:\"burnToken\"}),Object.defineProperty(e.prototype.deleteToken=function e(o,t){return this.rpcCall(e,$root.proto.Transaction,$root.proto.TransactionResponse,o,t)},\"name\",{value:\"deleteToken\"}),Object.defineProperty(e.prototype.wipeTokenAccount=function e(o,t){return this.rpcCall(e,$root.proto.Transaction,$root.proto.TransactionResponse,o,t)},\"name\",{value:\"wipeTokenAccount\"}),Object.defineProperty(e.prototype.freezeTokenAccount=function e(o,t){return this.rpcCall(e,$root.proto.Transaction,$root.proto.TransactionResponse,o,t)},\"name\",{value:\"freezeTokenAccount\"}),Object.defineProperty(e.prototype.unfreezeTokenAccount=function e(o,t){return this.rpcCall(e,$root.proto.Transaction,$root.proto.TransactionResponse,o,t)},\"name\",{value:\"unfreezeTokenAccount\"}),Object.defineProperty(e.prototype.grantKycToTokenAccount=function e(o,t){return this.rpcCall(e,$root.proto.Transaction,$root.proto.TransactionResponse,o,t)},\"name\",{value:\"grantKycToTokenAccount\"}),Object.defineProperty(e.prototype.revokeKycFromTokenAccount=function e(o,t){return this.rpcCall(e,$root.proto.Transaction,$root.proto.TransactionResponse,o,t)},\"name\",{value:\"revokeKycFromTokenAccount\"}),Object.defineProperty(e.prototype.associateTokens=function e(o,t){return this.rpcCall(e,$root.proto.Transaction,$root.proto.TransactionResponse,o,t)},\"name\",{value:\"associateTokens\"}),Object.defineProperty(e.prototype.dissociateTokens=function e(o,t){return this.rpcCall(e,$root.proto.Transaction,$root.proto.TransactionResponse,o,t)},\"name\",{value:\"dissociateTokens\"}),Object.defineProperty(e.prototype.updateTokenFeeSchedule=function e(o,t){return this.rpcCall(e,$root.proto.Transaction,$root.proto.TransactionResponse,o,t)},\"name\",{value:\"updateTokenFeeSchedule\"}),Object.defineProperty(e.prototype.getTokenInfo=function e(o,t){return this.rpcCall(e,$root.proto.Query,$root.proto.Response,o,t)},\"name\",{value:\"getTokenInfo\"}),Object.defineProperty(e.prototype.getAccountNftInfos=function e(o,t){return this.rpcCall(e,$root.proto.Query,$root.proto.Response,o,t)},\"name\",{value:\"getAccountNftInfos\"}),Object.defineProperty(e.prototype.getTokenNftInfo=function e(o,t){return this.rpcCall(e,$root.proto.Query,$root.proto.Response,o,t)},\"name\",{value:\"getTokenNftInfo\"}),Object.defineProperty(e.prototype.getTokenNftInfos=function e(o,t){return this.rpcCall(e,$root.proto.Query,$root.proto.Response,o,t)},\"name\",{value:\"getTokenNftInfos\"}),Object.defineProperty(e.prototype.pauseToken=function e(o,t){return this.rpcCall(e,$root.proto.Transaction,$root.proto.TransactionResponse,o,t)},\"name\",{value:\"pauseToken\"}),Object.defineProperty(e.prototype.unpauseToken=function e(o,t){return this.rpcCall(e,$root.proto.Transaction,$root.proto.TransactionResponse,o,t)},\"name\",{value:\"unpauseToken\"}),e}(),SignedTransaction:function(){function e(e){if(e)for(var o=Object.keys(e),t=0;t<o.length;++t)null!=e[o[t]]&&(this[o[t]]=e[o[t]])}return e.prototype.bodyBytes=$util.newBuffer([]),e.prototype.sigMap=null,e.create=function(o){return new e(o)},e.encode=function(e,o){return o||(o=$Writer.create()),null!=e.bodyBytes&&Object.hasOwnProperty.call(e,\"bodyBytes\")&&o.uint32(10).bytes(e.bodyBytes),null!=e.sigMap&&Object.hasOwnProperty.call(e,\"sigMap\")&&$root.proto.SignatureMap.encode(e.sigMap,o.uint32(18).fork()).ldelim(),o},e.decode=function(e,o){e instanceof $Reader||(e=$Reader.create(e));for(var n=void 0===o?e.len:e.pos+o,i=new $root.proto.SignedTransaction,d;e.pos<n;)switch(d=e.uint32(),d>>>3){case 1:i.bodyBytes=e.bytes();break;case 2:i.sigMap=$root.proto.SignatureMap.decode(e,e.uint32());break;default:e.skipType(7&d);}return i},e}(),TransactionList:function(){function e(e){if(this.transactionList=[],e)for(var o=Object.keys(e),t=0;t<o.length;++t)null!=e[o[t]]&&(this[o[t]]=e[o[t]])}return e.prototype.transactionList=$util.emptyArray,e.create=function(o){return new e(o)},e.encode=function(e,o){if(o||(o=$Writer.create()),null!=e.transactionList&&e.transactionList.length)for(var t=0;t<e.transactionList.length;++t)$root.proto.Transaction.encode(e.transactionList[t],o.uint32(10).fork()).ldelim();return o},e.decode=function(e,o){e instanceof $Reader||(e=$Reader.create(e));for(var n=void 0===o?e.len:e.pos+o,i=new $root.proto.TransactionList,d;e.pos<n;)switch(d=e.uint32(),d>>>3){case 1:i.transactionList&&i.transactionList.length||(i.transactionList=[]),i.transactionList.push($root.proto.Transaction.decode(e,e.uint32()));break;default:e.skipType(7&d);}return i},e}(),DoubleValue:function(){function e(e){if(e)for(var o=Object.keys(e),t=0;t<o.length;++t)null!=e[o[t]]&&(this[o[t]]=e[o[t]])}return e.prototype.value=0,e.create=function(o){return new e(o)},e.encode=function(e,o){return o||(o=$Writer.create()),null!=e.value&&Object.hasOwnProperty.call(e,\"value\")&&o.uint32(9).double(e.value),o},e.decode=function(e,o){e instanceof $Reader||(e=$Reader.create(e));for(var n=void 0===o?e.len:e.pos+o,i=new $root.proto.DoubleValue,d;e.pos<n;)switch(d=e.uint32(),d>>>3){case 1:i.value=e.double();break;default:e.skipType(7&d);}return i},e}(),FloatValue:function(){function e(e){if(e)for(var o=Object.keys(e),t=0;t<o.length;++t)null!=e[o[t]]&&(this[o[t]]=e[o[t]])}return e.prototype.value=0,e.create=function(o){return new e(o)},e.encode=function(e,o){return o||(o=$Writer.create()),null!=e.value&&Object.hasOwnProperty.call(e,\"value\")&&o.uint32(13).float(e.value),o},e.decode=function(e,o){e instanceof $Reader||(e=$Reader.create(e));for(var n=void 0===o?e.len:e.pos+o,i=new $root.proto.FloatValue,d;e.pos<n;)switch(d=e.uint32(),d>>>3){case 1:i.value=e.float();break;default:e.skipType(7&d);}return i},e}(),Int64Value:function(){function e(e){if(e)for(var o=Object.keys(e),t=0;t<o.length;++t)null!=e[o[t]]&&(this[o[t]]=e[o[t]])}return e.prototype.value=$util.Long?$util.Long.fromBits(0,0,!1):0,e.create=function(o){return new e(o)},e.encode=function(e,o){return o||(o=$Writer.create()),null!=e.value&&Object.hasOwnProperty.call(e,\"value\")&&o.uint32(8).int64(e.value),o},e.decode=function(e,o){e instanceof $Reader||(e=$Reader.create(e));for(var n=void 0===o?e.len:e.pos+o,i=new $root.proto.Int64Value,d;e.pos<n;)switch(d=e.uint32(),d>>>3){case 1:i.value=e.int64();break;default:e.skipType(7&d);}return i},e}(),UInt64Value:function(){function e(e){if(e)for(var o=Object.keys(e),t=0;t<o.length;++t)null!=e[o[t]]&&(this[o[t]]=e[o[t]])}return e.prototype.value=$util.Long?$util.Long.fromBits(0,0,!0):0,e.create=function(o){return new e(o)},e.encode=function(e,o){return o||(o=$Writer.create()),null!=e.value&&Object.hasOwnProperty.call(e,\"value\")&&o.uint32(8).uint64(e.value),o},e.decode=function(e,o){e instanceof $Reader||(e=$Reader.create(e));for(var n=void 0===o?e.len:e.pos+o,i=new $root.proto.UInt64Value,d;e.pos<n;)switch(d=e.uint32(),d>>>3){case 1:i.value=e.uint64();break;default:e.skipType(7&d);}return i},e}(),Int32Value:function(){function e(e){if(e)for(var o=Object.keys(e),t=0;t<o.length;++t)null!=e[o[t]]&&(this[o[t]]=e[o[t]])}return e.prototype.value=0,e.create=function(o){return new e(o)},e.encode=function(e,o){return o||(o=$Writer.create()),null!=e.value&&Object.hasOwnProperty.call(e,\"value\")&&o.uint32(8).int32(e.value),o},e.decode=function(e,o){e instanceof $Reader||(e=$Reader.create(e));for(var n=void 0===o?e.len:e.pos+o,i=new $root.proto.Int32Value,d;e.pos<n;)switch(d=e.uint32(),d>>>3){case 1:i.value=e.int32();break;default:e.skipType(7&d);}return i},e}(),UInt32Value:function(){function e(e){if(e)for(var o=Object.keys(e),t=0;t<o.length;++t)null!=e[o[t]]&&(this[o[t]]=e[o[t]])}return e.prototype.value=0,e.create=function(o){return new e(o)},e.encode=function(e,o){return o||(o=$Writer.create()),null!=e.value&&Object.hasOwnProperty.call(e,\"value\")&&o.uint32(8).uint32(e.value),o},e.decode=function(e,o){e instanceof $Reader||(e=$Reader.create(e));for(var n=void 0===o?e.len:e.pos+o,i=new $root.proto.UInt32Value,d;e.pos<n;)switch(d=e.uint32(),d>>>3){case 1:i.value=e.uint32();break;default:e.skipType(7&d);}return i},e}(),BoolValue:function(){function e(e){if(e)for(var o=Object.keys(e),t=0;t<o.length;++t)null!=e[o[t]]&&(this[o[t]]=e[o[t]])}return e.prototype.value=!1,e.create=function(o){return new e(o)},e.encode=function(e,o){return o||(o=$Writer.create()),null!=e.value&&Object.hasOwnProperty.call(e,\"value\")&&o.uint32(8).bool(e.value),o},e.decode=function(e,o){e instanceof $Reader||(e=$Reader.create(e));for(var n=void 0===o?e.len:e.pos+o,i=new $root.proto.BoolValue,d;e.pos<n;)switch(d=e.uint32(),d>>>3){case 1:i.value=e.bool();break;default:e.skipType(7&d);}return i},e}(),StringValue:function(){function e(e){if(e)for(var o=Object.keys(e),t=0;t<o.length;++t)null!=e[o[t]]&&(this[o[t]]=e[o[t]])}return e.prototype.value=\"\",e.create=function(o){return new e(o)},e.encode=function(e,o){return o||(o=$Writer.create()),null!=e.value&&Object.hasOwnProperty.call(e,\"value\")&&o.uint32(10).string(e.value),o},e.decode=function(e,o){e instanceof $Reader||(e=$Reader.create(e));for(var n=void 0===o?e.len:e.pos+o,i=new $root.proto.StringValue,d;e.pos<n;)switch(d=e.uint32(),d>>>3){case 1:i.value=e.string();break;default:e.skipType(7&d);}return i},e}(),BytesValue:function(){function e(e){if(e)for(var o=Object.keys(e),t=0;t<o.length;++t)null!=e[o[t]]&&(this[o[t]]=e[o[t]])}return e.prototype.value=$util.newBuffer([]),e.create=function(o){return new e(o)},e.encode=function(e,o){return o||(o=$Writer.create()),null!=e.value&&Object.hasOwnProperty.call(e,\"value\")&&o.uint32(10).bytes(e.value),o},e.decode=function(e,o){e instanceof $Reader||(e=$Reader.create(e));for(var n=void 0===o?e.len:e.pos+o,i=new $root.proto.BytesValue,d;e.pos<n;)switch(d=e.uint32(),d>>>3){case 1:i.value=e.bytes();break;default:e.skipType(7&d);}return i},e}()};return e})();exports.proto=proto;const google=$root.google=(()=>{const e={protobuf:function(){const e={DoubleValue:function(){function e(e){if(e)for(var o=Object.keys(e),t=0;t<o.length;++t)null!=e[o[t]]&&(this[o[t]]=e[o[t]])}return e.prototype.value=0,e.create=function(o){return new e(o)},e.encode=function(e,o){return o||(o=$Writer.create()),null!=e.value&&Object.hasOwnProperty.call(e,\"value\")&&o.uint32(9).double(e.value),o},e.decode=function(e,o){e instanceof $Reader||(e=$Reader.create(e));for(var n=void 0===o?e.len:e.pos+o,i=new $root.google.protobuf.DoubleValue,d;e.pos<n;)switch(d=e.uint32(),d>>>3){case 1:i.value=e.double();break;default:e.skipType(7&d);}return i},e}(),FloatValue:function(){function e(e){if(e)for(var o=Object.keys(e),t=0;t<o.length;++t)null!=e[o[t]]&&(this[o[t]]=e[o[t]])}return e.prototype.value=0,e.create=function(o){return new e(o)},e.encode=function(e,o){return o||(o=$Writer.create()),null!=e.value&&Object.hasOwnProperty.call(e,\"value\")&&o.uint32(13).float(e.value),o},e.decode=function(e,o){e instanceof $Reader||(e=$Reader.create(e));for(var n=void 0===o?e.len:e.pos+o,i=new $root.google.protobuf.FloatValue,d;e.pos<n;)switch(d=e.uint32(),d>>>3){case 1:i.value=e.float();break;default:e.skipType(7&d);}return i},e}(),Int64Value:function(){function e(e){if(e)for(var o=Object.keys(e),t=0;t<o.length;++t)null!=e[o[t]]&&(this[o[t]]=e[o[t]])}return e.prototype.value=$util.Long?$util.Long.fromBits(0,0,!1):0,e.create=function(o){return new e(o)},e.encode=function(e,o){return o||(o=$Writer.create()),null!=e.value&&Object.hasOwnProperty.call(e,\"value\")&&o.uint32(8).int64(e.value),o},e.decode=function(e,o){e instanceof $Reader||(e=$Reader.create(e));for(var n=void 0===o?e.len:e.pos+o,i=new $root.google.protobuf.Int64Value,d;e.pos<n;)switch(d=e.uint32(),d>>>3){case 1:i.value=e.int64();break;default:e.skipType(7&d);}return i},e}(),UInt64Value:function(){function e(e){if(e)for(var o=Object.keys(e),t=0;t<o.length;++t)null!=e[o[t]]&&(this[o[t]]=e[o[t]])}return e.prototype.value=$util.Long?$util.Long.fromBits(0,0,!0):0,e.create=function(o){return new e(o)},e.encode=function(e,o){return o||(o=$Writer.create()),null!=e.value&&Object.hasOwnProperty.call(e,\"value\")&&o.uint32(8).uint64(e.value),o},e.decode=function(e,o){e instanceof $Reader||(e=$Reader.create(e));for(var n=void 0===o?e.len:e.pos+o,i=new $root.google.protobuf.UInt64Value,d;e.pos<n;)switch(d=e.uint32(),d>>>3){case 1:i.value=e.uint64();break;default:e.skipType(7&d);}return i},e}(),Int32Value:function(){function e(e){if(e)for(var o=Object.keys(e),t=0;t<o.length;++t)null!=e[o[t]]&&(this[o[t]]=e[o[t]])}return e.prototype.value=0,e.create=function(o){return new e(o)},e.encode=function(e,o){return o||(o=$Writer.create()),null!=e.value&&Object.hasOwnProperty.call(e,\"value\")&&o.uint32(8).int32(e.value),o},e.decode=function(e,o){e instanceof $Reader||(e=$Reader.create(e));for(var n=void 0===o?e.len:e.pos+o,i=new $root.google.protobuf.Int32Value,d;e.pos<n;)switch(d=e.uint32(),d>>>3){case 1:i.value=e.int32();break;default:e.skipType(7&d);}return i},e}(),UInt32Value:function(){function e(e){if(e)for(var o=Object.keys(e),t=0;t<o.length;++t)null!=e[o[t]]&&(this[o[t]]=e[o[t]])}return e.prototype.value=0,e.create=function(o){return new e(o)},e.encode=function(e,o){return o||(o=$Writer.create()),null!=e.value&&Object.hasOwnProperty.call(e,\"value\")&&o.uint32(8).uint32(e.value),o},e.decode=function(e,o){e instanceof $Reader||(e=$Reader.create(e));for(var n=void 0===o?e.len:e.pos+o,i=new $root.google.protobuf.UInt32Value,d;e.pos<n;)switch(d=e.uint32(),d>>>3){case 1:i.value=e.uint32();break;default:e.skipType(7&d);}return i},e}(),BoolValue:function(){function e(e){if(e)for(var o=Object.keys(e),t=0;t<o.length;++t)null!=e[o[t]]&&(this[o[t]]=e[o[t]])}return e.prototype.value=!1,e.create=function(o){return new e(o)},e.encode=function(e,o){return o||(o=$Writer.create()),null!=e.value&&Object.hasOwnProperty.call(e,\"value\")&&o.uint32(8).bool(e.value),o},e.decode=function(e,o){e instanceof $Reader||(e=$Reader.create(e));for(var n=void 0===o?e.len:e.pos+o,i=new $root.google.protobuf.BoolValue,d;e.pos<n;)switch(d=e.uint32(),d>>>3){case 1:i.value=e.bool();break;default:e.skipType(7&d);}return i},e}(),StringValue:function(){function e(e){if(e)for(var o=Object.keys(e),t=0;t<o.length;++t)null!=e[o[t]]&&(this[o[t]]=e[o[t]])}return e.prototype.value=\"\",e.create=function(o){return new e(o)},e.encode=function(e,o){return o||(o=$Writer.create()),null!=e.value&&Object.hasOwnProperty.call(e,\"value\")&&o.uint32(10).string(e.value),o},e.decode=function(e,o){e instanceof $Reader||(e=$Reader.create(e));for(var n=void 0===o?e.len:e.pos+o,i=new $root.google.protobuf.StringValue,d;e.pos<n;)switch(d=e.uint32(),d>>>3){case 1:i.value=e.string();break;default:e.skipType(7&d);}return i},e}(),BytesValue:function(){function e(e){if(e)for(var o=Object.keys(e),t=0;t<o.length;++t)null!=e[o[t]]&&(this[o[t]]=e[o[t]])}return e.prototype.value=$util.newBuffer([]),e.create=function(o){return new e(o)},e.encode=function(e,o){return o||(o=$Writer.create()),null!=e.value&&Object.hasOwnProperty.call(e,\"value\")&&o.uint32(10).bytes(e.value),o},e.decode=function(e,o){e instanceof $Reader||(e=$Reader.create(e));for(var n=void 0===o?e.len:e.pos+o,i=new $root.google.protobuf.BytesValue,d;e.pos<n;)switch(d=e.uint32(),d>>>3){case 1:i.value=e.bytes();break;default:e.skipType(7&d);}return i},e}()};return e}()};return e})();exports.google=google;", "\"use strict\";Object.defineProperty(exports,\"__esModule\",{value:!0}),exports.SchedulableTransactionBody=exports.ScheduleCreateTransactionBody=exports.TokenFeeScheduleUpdateTransactionBody=exports.TokenDissociateTransactionBody=exports.TokenAssociateTransactionBody=exports.TokenWipeAccountTransactionBody=exports.TokenBurnTransactionBody=exports.TokenMintTransactionBody=exports.TokenUpdateTransactionBody=exports.TokenDeleteTransactionBody=exports.TokenRevokeKycTransactionBody=exports.TokenGrantKycTransactionBody=exports.TokenUnfreezeAccountTransactionBody=exports.TokenFreezeAccountTransactionBody=exports.RoyaltyFee=exports.AssessedCustomFee=exports.CustomFee=exports.FixedFee=exports.FractionalFee=exports.TokenCreateTransactionBody=exports.UncheckedSubmitBody=exports.ConsensusSubmitMessageTransactionBody=exports.ConsensusMessageChunkInfo=exports.ConsensusUpdateTopicTransactionBody=exports.ContractDeleteTransactionBody=exports.FileUpdateTransactionBody=exports.FileDeleteTransactionBody=exports.FileCreateTransactionBody=exports.FileAppendTransactionBody=exports.CryptoUpdateTransactionBody=exports.CryptoTransferTransactionBody=exports.CryptoDeleteLiveHashTransactionBody=exports.CryptoDeleteTransactionBody=exports.CryptoCreateTransactionBody=exports.CryptoAddLiveHashTransactionBody=exports.LiveHash=exports.ContractUpdateTransactionBody=exports.ContractCreateTransactionBody=exports.ContractCallTransactionBody=exports.FreezeTransactionBody=exports.SystemUndeleteTransactionBody=exports.SystemDeleteTransactionBody=exports.TransactionBody=exports.Transaction=exports.QueryHeader=exports.ResponseType=exports.ConsensusGetTopicInfoResponse=exports.ConsensusGetTopicInfoQuery=exports.ConsensusDeleteTopicTransactionBody=exports.Duration=exports.ConsensusCreateTopicTransactionBody=exports.TimestampSeconds=exports.Timestamp=exports.TokenBalances=exports.TokenBalance=exports.TokenRelationship=exports.ServicesConfigurationList=exports.Setting=exports.SemanticVersion=exports.NodeAddressBook=exports.NodeAddress=exports.ServiceEndpoint=exports.CurrentAndNextFeeSchedule=exports.FeeSchedule=exports.FeeData=exports.TransactionFeeSchedule=exports.FeeComponents=exports.HederaFunctionality=exports.SignatureMap=exports.SignaturePair=exports.SignatureList=exports.ThresholdSignature=exports.Signature=exports.KeyList=exports.ThresholdKey=exports.Key=exports.TokenKycStatus=exports.TokenFreezeStatus=exports.TokenSupplyType=exports.SubType=exports.TokenType=exports.ScheduleID=exports.TokenID=exports.TopicID=exports.Fraction=exports.TokenTransferList=exports.NftTransfer=exports.TransferList=exports.AccountAmount=exports.TransactionID=exports.ContractID=exports.FileID=exports.AccountID=exports.RealmID=exports.ShardID=exports.AllAccountBalances=exports.SingleAccountBalances=exports.TokenUnitBalance=exports.Writer=exports.Reader=void 0,exports.FreezeType=exports.TokenPauseStatus=exports.TokenUnpauseTransactionBody=exports.TokenPauseTransactionBody=exports.BytesValue=exports.StringValue=exports.BoolValue=exports.UInt32Value=exports.UInt64Value=exports.FloatValue=exports.DoubleValue=exports.TransactionList=exports.SignedTransaction=exports.TokenService=exports.ThrottleDefinitions=exports.ThrottleBucket=exports.ThrottleGroup=exports.SmartContractService=exports.ScheduleService=exports.NetworkService=exports.MirrorConsensusService=exports.ConsensusTopicResponse=exports.ConsensusTopicQuery=exports.FreezeService=exports.FileService=exports.CryptoService=exports.Response=exports.TokenGetNftInfosResponse=exports.TokenGetNftInfosQuery=exports.TokenGetNftInfoResponse=exports.TokenNftInfo=exports.TokenGetNftInfoQuery=exports.NftID=exports.TokenGetAccountNftInfosResponse=exports.TokenGetAccountNftInfosQuery=exports.ScheduleGetInfoResponse=exports.ScheduleInfo=exports.ScheduleGetInfoQuery=exports.TokenGetInfoResponse=exports.TokenInfo=exports.TokenGetInfoQuery=exports.NetworkGetVersionInfoResponse=exports.NetworkGetVersionInfoQuery=exports.TransactionGetFastRecordResponse=exports.TransactionGetFastRecordQuery=exports.TransactionGetRecordResponse=exports.TransactionGetRecordQuery=exports.TransactionGetReceiptResponse=exports.TransactionGetReceiptQuery=exports.FileInfo=exports.FileGetInfoResponse=exports.FileGetInfoQuery=exports.FileContents=exports.FileGetContentsResponse=exports.FileGetContentsQuery=exports.CryptoGetStakersResponse=exports.AllProxyStakers=exports.ProxyStaker=exports.CryptoGetStakersQuery=exports.CryptoGetLiveHashResponse=exports.CryptoGetLiveHashQuery=exports.AccountInfo=exports.CryptoGetInfoResponse=exports.CryptoGetInfoQuery=exports.CryptoGetAccountRecordsResponse=exports.CryptoGetAccountRecordsQuery=exports.CryptoGetAccountBalanceResponse=exports.CryptoGetAccountBalanceQuery=exports.ExchangeRateSet=exports.ExchangeRate=exports.TransactionReceipt=exports.TransactionRecord=exports.ContractGetRecordsResponse=exports.ContractGetRecordsQuery=exports.ContractGetBytecodeResponse=exports.ContractGetBytecodeQuery=exports.ContractInfo=exports.ContractGetInfoResponse=exports.ContractGetInfoQuery=exports.ContractCallLocalResponse=exports.ContractCallLocalQuery=exports.ContractFunctionResult=exports.ContractLoginfo=exports.GetBySolidityIDResponse=exports.GetBySolidityIDQuery=exports.GetByKeyResponse=exports.EntityID=exports.GetByKeyQuery=exports.Query=exports.ConsensusService=exports.ConsensusTopicInfo=exports.ResponseCodeEnum=exports.TransactionResponse=exports.ResponseHeader=exports.ScheduleSignTransactionBody=exports.ScheduleDeleteTransactionBody=void 0;var $protobuf=_interopRequireWildcard(require(\"protobufjs/minimal.js\")),_proto=require(\"./proto.js\");function _getRequireWildcardCache(a){if(\"function\"!=typeof WeakMap)return null;var b=new WeakMap,c=new WeakMap;return(_getRequireWildcardCache=function(a){return a?c:b})(a)}function _interopRequireWildcard(a,b){if(!b&&a&&a.__esModule)return a;if(null===a||\"object\"!=typeof a&&\"function\"!=typeof a)return{default:a};var c=_getRequireWildcardCache(b);if(c&&c.has(a))return c.get(a);var d={},e=Object.defineProperty&&Object.getOwnPropertyDescriptor;for(var f in a)if(\"default\"!=f&&Object.prototype.hasOwnProperty.call(a,f)){var g=e?Object.getOwnPropertyDescriptor(a,f):null;g&&(g.get||g.set)?Object.defineProperty(d,f,g):d[f]=a[f]}return d.default=a,c&&c.set(a,d),d}const Reader=$protobuf.Reader;exports.Reader=Reader;const Writer=$protobuf.Writer;exports.Writer=Writer;const TokenUnitBalance=_proto.proto.TokenUnitBalance;exports.TokenUnitBalance=TokenUnitBalance;const SingleAccountBalances=_proto.proto.SingleAccountBalances;exports.SingleAccountBalances=SingleAccountBalances;const AllAccountBalances=_proto.proto.AllAccountBalances;exports.AllAccountBalances=AllAccountBalances;const ShardID=_proto.proto.ShardID;exports.ShardID=ShardID;const RealmID=_proto.proto.RealmID;exports.RealmID=RealmID;const AccountID=_proto.proto.AccountID;exports.AccountID=AccountID;const FileID=_proto.proto.FileID;exports.FileID=FileID;const ContractID=_proto.proto.ContractID;exports.ContractID=ContractID;const TransactionID=_proto.proto.TransactionID;exports.TransactionID=TransactionID;const AccountAmount=_proto.proto.AccountAmount;exports.AccountAmount=AccountAmount;const TransferList=_proto.proto.TransferList;exports.TransferList=TransferList;const NftTransfer=_proto.proto.NftTransfer;exports.NftTransfer=NftTransfer;const TokenTransferList=_proto.proto.TokenTransferList;exports.TokenTransferList=TokenTransferList;const Fraction=_proto.proto.Fraction;exports.Fraction=Fraction;const TopicID=_proto.proto.TopicID;exports.TopicID=TopicID;const TokenID=_proto.proto.TokenID;exports.TokenID=TokenID;const ScheduleID=_proto.proto.ScheduleID;exports.ScheduleID=ScheduleID;const TokenType=_proto.proto.TokenType;exports.TokenType=TokenType;const SubType=_proto.proto.SubType;exports.SubType=SubType;const TokenSupplyType=_proto.proto.TokenSupplyType;exports.TokenSupplyType=TokenSupplyType;const TokenFreezeStatus=_proto.proto.TokenFreezeStatus;exports.TokenFreezeStatus=TokenFreezeStatus;const TokenKycStatus=_proto.proto.TokenKycStatus;exports.TokenKycStatus=TokenKycStatus;const Key=_proto.proto.Key;exports.Key=Key;const ThresholdKey=_proto.proto.ThresholdKey;exports.ThresholdKey=ThresholdKey;const KeyList=_proto.proto.KeyList;exports.KeyList=KeyList;const Signature=_proto.proto.Signature;exports.Signature=Signature;const ThresholdSignature=_proto.proto.ThresholdSignature;exports.ThresholdSignature=ThresholdSignature;const SignatureList=_proto.proto.SignatureList;exports.SignatureList=SignatureList;const SignaturePair=_proto.proto.SignaturePair;exports.SignaturePair=SignaturePair;const SignatureMap=_proto.proto.SignatureMap;exports.SignatureMap=SignatureMap;const HederaFunctionality=_proto.proto.HederaFunctionality;exports.HederaFunctionality=HederaFunctionality;const FeeComponents=_proto.proto.FeeComponents;exports.FeeComponents=FeeComponents;const TransactionFeeSchedule=_proto.proto.TransactionFeeSchedule;exports.TransactionFeeSchedule=TransactionFeeSchedule;const FeeData=_proto.proto.FeeData;exports.FeeData=FeeData;const FeeSchedule=_proto.proto.FeeSchedule;exports.FeeSchedule=FeeSchedule;const CurrentAndNextFeeSchedule=_proto.proto.CurrentAndNextFeeSchedule;exports.CurrentAndNextFeeSchedule=CurrentAndNextFeeSchedule;const ServiceEndpoint=_proto.proto.ServiceEndpoint;exports.ServiceEndpoint=ServiceEndpoint;const NodeAddress=_proto.proto.NodeAddress;exports.NodeAddress=NodeAddress;const NodeAddressBook=_proto.proto.NodeAddressBook;exports.NodeAddressBook=NodeAddressBook;const SemanticVersion=_proto.proto.SemanticVersion;exports.SemanticVersion=SemanticVersion;const Setting=_proto.proto.Setting;exports.Setting=Setting;const ServicesConfigurationList=_proto.proto.ServicesConfigurationList;exports.ServicesConfigurationList=ServicesConfigurationList;const TokenRelationship=_proto.proto.TokenRelationship;exports.TokenRelationship=TokenRelationship;const TokenBalance=_proto.proto.TokenBalance;exports.TokenBalance=TokenBalance;const TokenBalances=_proto.proto.TokenBalances;exports.TokenBalances=TokenBalances;const Timestamp=_proto.proto.Timestamp;exports.Timestamp=Timestamp;const TimestampSeconds=_proto.proto.TimestampSeconds;exports.TimestampSeconds=TimestampSeconds;const ConsensusCreateTopicTransactionBody=_proto.proto.ConsensusCreateTopicTransactionBody;exports.ConsensusCreateTopicTransactionBody=ConsensusCreateTopicTransactionBody;const Duration=_proto.proto.Duration;exports.Duration=Duration;const ConsensusDeleteTopicTransactionBody=_proto.proto.ConsensusDeleteTopicTransactionBody;exports.ConsensusDeleteTopicTransactionBody=ConsensusDeleteTopicTransactionBody;const ConsensusGetTopicInfoQuery=_proto.proto.ConsensusGetTopicInfoQuery;exports.ConsensusGetTopicInfoQuery=ConsensusGetTopicInfoQuery;const ConsensusGetTopicInfoResponse=_proto.proto.ConsensusGetTopicInfoResponse;exports.ConsensusGetTopicInfoResponse=ConsensusGetTopicInfoResponse;const ResponseType=_proto.proto.ResponseType;exports.ResponseType=ResponseType;const QueryHeader=_proto.proto.QueryHeader;exports.QueryHeader=QueryHeader;const Transaction=_proto.proto.Transaction;exports.Transaction=Transaction;const TransactionBody=_proto.proto.TransactionBody;exports.TransactionBody=TransactionBody;const SystemDeleteTransactionBody=_proto.proto.SystemDeleteTransactionBody;exports.SystemDeleteTransactionBody=SystemDeleteTransactionBody;const SystemUndeleteTransactionBody=_proto.proto.SystemUndeleteTransactionBody;exports.SystemUndeleteTransactionBody=SystemUndeleteTransactionBody;const FreezeTransactionBody=_proto.proto.FreezeTransactionBody;exports.FreezeTransactionBody=FreezeTransactionBody;const ContractCallTransactionBody=_proto.proto.ContractCallTransactionBody;exports.ContractCallTransactionBody=ContractCallTransactionBody;const ContractCreateTransactionBody=_proto.proto.ContractCreateTransactionBody;exports.ContractCreateTransactionBody=ContractCreateTransactionBody;const ContractUpdateTransactionBody=_proto.proto.ContractUpdateTransactionBody;exports.ContractUpdateTransactionBody=ContractUpdateTransactionBody;const LiveHash=_proto.proto.LiveHash;exports.LiveHash=LiveHash;const CryptoAddLiveHashTransactionBody=_proto.proto.CryptoAddLiveHashTransactionBody;exports.CryptoAddLiveHashTransactionBody=CryptoAddLiveHashTransactionBody;const CryptoCreateTransactionBody=_proto.proto.CryptoCreateTransactionBody;exports.CryptoCreateTransactionBody=CryptoCreateTransactionBody;const CryptoDeleteTransactionBody=_proto.proto.CryptoDeleteTransactionBody;exports.CryptoDeleteTransactionBody=CryptoDeleteTransactionBody;const CryptoDeleteLiveHashTransactionBody=_proto.proto.CryptoDeleteLiveHashTransactionBody;exports.CryptoDeleteLiveHashTransactionBody=CryptoDeleteLiveHashTransactionBody;const CryptoTransferTransactionBody=_proto.proto.CryptoTransferTransactionBody;exports.CryptoTransferTransactionBody=CryptoTransferTransactionBody;const CryptoUpdateTransactionBody=_proto.proto.CryptoUpdateTransactionBody;exports.CryptoUpdateTransactionBody=CryptoUpdateTransactionBody;const FileAppendTransactionBody=_proto.proto.FileAppendTransactionBody;exports.FileAppendTransactionBody=FileAppendTransactionBody;const FileCreateTransactionBody=_proto.proto.FileCreateTransactionBody;exports.FileCreateTransactionBody=FileCreateTransactionBody;const FileDeleteTransactionBody=_proto.proto.FileDeleteTransactionBody;exports.FileDeleteTransactionBody=FileDeleteTransactionBody;const FileUpdateTransactionBody=_proto.proto.FileUpdateTransactionBody;exports.FileUpdateTransactionBody=FileUpdateTransactionBody;const ContractDeleteTransactionBody=_proto.proto.ContractDeleteTransactionBody;exports.ContractDeleteTransactionBody=ContractDeleteTransactionBody;const ConsensusUpdateTopicTransactionBody=_proto.proto.ConsensusUpdateTopicTransactionBody;exports.ConsensusUpdateTopicTransactionBody=ConsensusUpdateTopicTransactionBody;const ConsensusMessageChunkInfo=_proto.proto.ConsensusMessageChunkInfo;exports.ConsensusMessageChunkInfo=ConsensusMessageChunkInfo;const ConsensusSubmitMessageTransactionBody=_proto.proto.ConsensusSubmitMessageTransactionBody;exports.ConsensusSubmitMessageTransactionBody=ConsensusSubmitMessageTransactionBody;const UncheckedSubmitBody=_proto.proto.UncheckedSubmitBody;exports.UncheckedSubmitBody=UncheckedSubmitBody;const TokenCreateTransactionBody=_proto.proto.TokenCreateTransactionBody;exports.TokenCreateTransactionBody=TokenCreateTransactionBody;const FractionalFee=_proto.proto.FractionalFee;exports.FractionalFee=FractionalFee;const FixedFee=_proto.proto.FixedFee;exports.FixedFee=FixedFee;const CustomFee=_proto.proto.CustomFee;exports.CustomFee=CustomFee;const AssessedCustomFee=_proto.proto.AssessedCustomFee;exports.AssessedCustomFee=AssessedCustomFee;const RoyaltyFee=_proto.proto.RoyaltyFee;exports.RoyaltyFee=RoyaltyFee;const TokenFreezeAccountTransactionBody=_proto.proto.TokenFreezeAccountTransactionBody;exports.TokenFreezeAccountTransactionBody=TokenFreezeAccountTransactionBody;const TokenUnfreezeAccountTransactionBody=_proto.proto.TokenUnfreezeAccountTransactionBody;exports.TokenUnfreezeAccountTransactionBody=TokenUnfreezeAccountTransactionBody;const TokenGrantKycTransactionBody=_proto.proto.TokenGrantKycTransactionBody;exports.TokenGrantKycTransactionBody=TokenGrantKycTransactionBody;const TokenRevokeKycTransactionBody=_proto.proto.TokenRevokeKycTransactionBody;exports.TokenRevokeKycTransactionBody=TokenRevokeKycTransactionBody;const TokenDeleteTransactionBody=_proto.proto.TokenDeleteTransactionBody;exports.TokenDeleteTransactionBody=TokenDeleteTransactionBody;const TokenUpdateTransactionBody=_proto.proto.TokenUpdateTransactionBody;exports.TokenUpdateTransactionBody=TokenUpdateTransactionBody;const TokenMintTransactionBody=_proto.proto.TokenMintTransactionBody;exports.TokenMintTransactionBody=TokenMintTransactionBody;const TokenBurnTransactionBody=_proto.proto.TokenBurnTransactionBody;exports.TokenBurnTransactionBody=TokenBurnTransactionBody;const TokenWipeAccountTransactionBody=_proto.proto.TokenWipeAccountTransactionBody;exports.TokenWipeAccountTransactionBody=TokenWipeAccountTransactionBody;const TokenAssociateTransactionBody=_proto.proto.TokenAssociateTransactionBody;exports.TokenAssociateTransactionBody=TokenAssociateTransactionBody;const TokenDissociateTransactionBody=_proto.proto.TokenDissociateTransactionBody;exports.TokenDissociateTransactionBody=TokenDissociateTransactionBody;const TokenFeeScheduleUpdateTransactionBody=_proto.proto.TokenFeeScheduleUpdateTransactionBody;exports.TokenFeeScheduleUpdateTransactionBody=TokenFeeScheduleUpdateTransactionBody;const ScheduleCreateTransactionBody=_proto.proto.ScheduleCreateTransactionBody;exports.ScheduleCreateTransactionBody=ScheduleCreateTransactionBody;const SchedulableTransactionBody=_proto.proto.SchedulableTransactionBody;exports.SchedulableTransactionBody=SchedulableTransactionBody;const ScheduleDeleteTransactionBody=_proto.proto.ScheduleDeleteTransactionBody;exports.ScheduleDeleteTransactionBody=ScheduleDeleteTransactionBody;const ScheduleSignTransactionBody=_proto.proto.ScheduleSignTransactionBody;exports.ScheduleSignTransactionBody=ScheduleSignTransactionBody;const ResponseHeader=_proto.proto.ResponseHeader;exports.ResponseHeader=ResponseHeader;const TransactionResponse=_proto.proto.TransactionResponse;exports.TransactionResponse=TransactionResponse;const ResponseCodeEnum=_proto.proto.ResponseCodeEnum;exports.ResponseCodeEnum=ResponseCodeEnum;const ConsensusTopicInfo=_proto.proto.ConsensusTopicInfo;exports.ConsensusTopicInfo=ConsensusTopicInfo;const ConsensusService=_proto.proto.ConsensusService;exports.ConsensusService=ConsensusService;const Query=_proto.proto.Query;exports.Query=Query;const GetByKeyQuery=_proto.proto.GetByKeyQuery;exports.GetByKeyQuery=GetByKeyQuery;const EntityID=_proto.proto.EntityID;exports.EntityID=EntityID;const GetByKeyResponse=_proto.proto.GetByKeyResponse;exports.GetByKeyResponse=GetByKeyResponse;const GetBySolidityIDQuery=_proto.proto.GetBySolidityIDQuery;exports.GetBySolidityIDQuery=GetBySolidityIDQuery;const GetBySolidityIDResponse=_proto.proto.GetBySolidityIDResponse;exports.GetBySolidityIDResponse=GetBySolidityIDResponse;const ContractLoginfo=_proto.proto.ContractLoginfo;exports.ContractLoginfo=ContractLoginfo;const ContractFunctionResult=_proto.proto.ContractFunctionResult;exports.ContractFunctionResult=ContractFunctionResult;const ContractCallLocalQuery=_proto.proto.ContractCallLocalQuery;exports.ContractCallLocalQuery=ContractCallLocalQuery;const ContractCallLocalResponse=_proto.proto.ContractCallLocalResponse;exports.ContractCallLocalResponse=ContractCallLocalResponse;const ContractGetInfoQuery=_proto.proto.ContractGetInfoQuery;exports.ContractGetInfoQuery=ContractGetInfoQuery;const ContractGetInfoResponse=_proto.proto.ContractGetInfoResponse;exports.ContractGetInfoResponse=ContractGetInfoResponse;const ContractInfo=_proto.proto.ContractGetInfoResponse.ContractInfo;exports.ContractInfo=ContractInfo;const ContractGetBytecodeQuery=_proto.proto.ContractGetBytecodeQuery;exports.ContractGetBytecodeQuery=ContractGetBytecodeQuery;const ContractGetBytecodeResponse=_proto.proto.ContractGetBytecodeResponse;exports.ContractGetBytecodeResponse=ContractGetBytecodeResponse;const ContractGetRecordsQuery=_proto.proto.ContractGetRecordsQuery;exports.ContractGetRecordsQuery=ContractGetRecordsQuery;const ContractGetRecordsResponse=_proto.proto.ContractGetRecordsResponse;exports.ContractGetRecordsResponse=ContractGetRecordsResponse;const TransactionRecord=_proto.proto.TransactionRecord;exports.TransactionRecord=TransactionRecord;const TransactionReceipt=_proto.proto.TransactionReceipt;exports.TransactionReceipt=TransactionReceipt;const ExchangeRate=_proto.proto.ExchangeRate;exports.ExchangeRate=ExchangeRate;const ExchangeRateSet=_proto.proto.ExchangeRateSet;exports.ExchangeRateSet=ExchangeRateSet;const CryptoGetAccountBalanceQuery=_proto.proto.CryptoGetAccountBalanceQuery;exports.CryptoGetAccountBalanceQuery=CryptoGetAccountBalanceQuery;const CryptoGetAccountBalanceResponse=_proto.proto.CryptoGetAccountBalanceResponse;exports.CryptoGetAccountBalanceResponse=CryptoGetAccountBalanceResponse;const CryptoGetAccountRecordsQuery=_proto.proto.CryptoGetAccountRecordsQuery;exports.CryptoGetAccountRecordsQuery=CryptoGetAccountRecordsQuery;const CryptoGetAccountRecordsResponse=_proto.proto.CryptoGetAccountRecordsResponse;exports.CryptoGetAccountRecordsResponse=CryptoGetAccountRecordsResponse;const CryptoGetInfoQuery=_proto.proto.CryptoGetInfoQuery;exports.CryptoGetInfoQuery=CryptoGetInfoQuery;const CryptoGetInfoResponse=_proto.proto.CryptoGetInfoResponse;exports.CryptoGetInfoResponse=CryptoGetInfoResponse;const AccountInfo=_proto.proto.CryptoGetInfoResponse.AccountInfo;exports.AccountInfo=AccountInfo;const CryptoGetLiveHashQuery=_proto.proto.CryptoGetLiveHashQuery;exports.CryptoGetLiveHashQuery=CryptoGetLiveHashQuery;const CryptoGetLiveHashResponse=_proto.proto.CryptoGetLiveHashResponse;exports.CryptoGetLiveHashResponse=CryptoGetLiveHashResponse;const CryptoGetStakersQuery=_proto.proto.CryptoGetStakersQuery;exports.CryptoGetStakersQuery=CryptoGetStakersQuery;const ProxyStaker=_proto.proto.ProxyStaker;exports.ProxyStaker=ProxyStaker;const AllProxyStakers=_proto.proto.AllProxyStakers;exports.AllProxyStakers=AllProxyStakers;const CryptoGetStakersResponse=_proto.proto.CryptoGetStakersResponse;exports.CryptoGetStakersResponse=CryptoGetStakersResponse;const FileGetContentsQuery=_proto.proto.FileGetContentsQuery;exports.FileGetContentsQuery=FileGetContentsQuery;const FileGetContentsResponse=_proto.proto.FileGetContentsResponse;exports.FileGetContentsResponse=FileGetContentsResponse;const FileContents=_proto.proto.FileGetContentsResponse.FileContents;exports.FileContents=FileContents;const FileGetInfoQuery=_proto.proto.FileGetInfoQuery;exports.FileGetInfoQuery=FileGetInfoQuery;const FileGetInfoResponse=_proto.proto.FileGetInfoResponse;exports.FileGetInfoResponse=FileGetInfoResponse;const FileInfo=_proto.proto.FileGetInfoResponse.FileInfo;exports.FileInfo=FileInfo;const TransactionGetReceiptQuery=_proto.proto.TransactionGetReceiptQuery;exports.TransactionGetReceiptQuery=TransactionGetReceiptQuery;const TransactionGetReceiptResponse=_proto.proto.TransactionGetReceiptResponse;exports.TransactionGetReceiptResponse=TransactionGetReceiptResponse;const TransactionGetRecordQuery=_proto.proto.TransactionGetRecordQuery;exports.TransactionGetRecordQuery=TransactionGetRecordQuery;const TransactionGetRecordResponse=_proto.proto.TransactionGetRecordResponse;exports.TransactionGetRecordResponse=TransactionGetRecordResponse;const TransactionGetFastRecordQuery=_proto.proto.TransactionGetFastRecordQuery;exports.TransactionGetFastRecordQuery=TransactionGetFastRecordQuery;const TransactionGetFastRecordResponse=_proto.proto.TransactionGetFastRecordResponse;exports.TransactionGetFastRecordResponse=TransactionGetFastRecordResponse;const NetworkGetVersionInfoQuery=_proto.proto.NetworkGetVersionInfoQuery;exports.NetworkGetVersionInfoQuery=NetworkGetVersionInfoQuery;const NetworkGetVersionInfoResponse=_proto.proto.NetworkGetVersionInfoResponse;exports.NetworkGetVersionInfoResponse=NetworkGetVersionInfoResponse;const TokenGetInfoQuery=_proto.proto.TokenGetInfoQuery;exports.TokenGetInfoQuery=TokenGetInfoQuery;const TokenInfo=_proto.proto.TokenInfo;exports.TokenInfo=TokenInfo;const TokenGetInfoResponse=_proto.proto.TokenGetInfoResponse;exports.TokenGetInfoResponse=TokenGetInfoResponse;const ScheduleGetInfoQuery=_proto.proto.ScheduleGetInfoQuery;exports.ScheduleGetInfoQuery=ScheduleGetInfoQuery;const ScheduleInfo=_proto.proto.ScheduleInfo;exports.ScheduleInfo=ScheduleInfo;const ScheduleGetInfoResponse=_proto.proto.ScheduleGetInfoResponse;exports.ScheduleGetInfoResponse=ScheduleGetInfoResponse;const TokenGetAccountNftInfosQuery=_proto.proto.TokenGetAccountNftInfosQuery;exports.TokenGetAccountNftInfosQuery=TokenGetAccountNftInfosQuery;const TokenGetAccountNftInfosResponse=_proto.proto.TokenGetAccountNftInfosResponse;exports.TokenGetAccountNftInfosResponse=TokenGetAccountNftInfosResponse;const NftID=_proto.proto.NftID;exports.NftID=NftID;const TokenGetNftInfoQuery=_proto.proto.TokenGetNftInfoQuery;exports.TokenGetNftInfoQuery=TokenGetNftInfoQuery;const TokenNftInfo=_proto.proto.TokenNftInfo;exports.TokenNftInfo=TokenNftInfo;const TokenGetNftInfoResponse=_proto.proto.TokenGetNftInfoResponse;exports.TokenGetNftInfoResponse=TokenGetNftInfoResponse;const TokenGetNftInfosQuery=_proto.proto.TokenGetNftInfosQuery;exports.TokenGetNftInfosQuery=TokenGetNftInfosQuery;const TokenGetNftInfosResponse=_proto.proto.TokenGetNftInfosResponse;exports.TokenGetNftInfosResponse=TokenGetNftInfosResponse;const Response=_proto.proto.Response;exports.Response=Response;const CryptoService=_proto.proto.CryptoService;exports.CryptoService=CryptoService;const FileService=_proto.proto.FileService;exports.FileService=FileService;const FreezeService=_proto.proto.FreezeService;exports.FreezeService=FreezeService;const ConsensusTopicQuery=_proto.proto.ConsensusTopicQuery;exports.ConsensusTopicQuery=ConsensusTopicQuery;const ConsensusTopicResponse=_proto.proto.ConsensusTopicResponse;exports.ConsensusTopicResponse=ConsensusTopicResponse;const MirrorConsensusService=_proto.proto.MirrorConsensusService;exports.MirrorConsensusService=MirrorConsensusService;const NetworkService=_proto.proto.NetworkService;exports.NetworkService=NetworkService;const ScheduleService=_proto.proto.ScheduleService;exports.ScheduleService=ScheduleService;const SmartContractService=_proto.proto.SmartContractService;exports.SmartContractService=SmartContractService;const ThrottleGroup=_proto.proto.ThrottleGroup;exports.ThrottleGroup=ThrottleGroup;const ThrottleBucket=_proto.proto.ThrottleBucket;exports.ThrottleBucket=ThrottleBucket;const ThrottleDefinitions=_proto.proto.ThrottleDefinitions;exports.ThrottleDefinitions=ThrottleDefinitions;const TokenService=_proto.proto.TokenService;exports.TokenService=TokenService;const SignedTransaction=_proto.proto.SignedTransaction;exports.SignedTransaction=SignedTransaction;const TransactionList=_proto.proto.TransactionList;exports.TransactionList=TransactionList;const DoubleValue=_proto.proto.DoubleValue;exports.DoubleValue=DoubleValue;const FloatValue=_proto.proto.FloatValue;exports.FloatValue=FloatValue;const UInt64Value=_proto.proto.UInt64Value;exports.UInt64Value=UInt64Value;const UInt32Value=_proto.proto.UInt32Value;exports.UInt32Value=UInt32Value;const BoolValue=_proto.proto.BoolValue;exports.BoolValue=BoolValue;const StringValue=_proto.proto.StringValue;exports.StringValue=StringValue;const BytesValue=_proto.proto.BytesValue;exports.BytesValue=BytesValue;const TokenPauseTransactionBody=_proto.proto.TokenPauseTransactionBody;exports.TokenPauseTransactionBody=TokenPauseTransactionBody;const TokenUnpauseTransactionBody=_proto.proto.TokenUnpauseTransactionBody;exports.TokenUnpauseTransactionBody=TokenUnpauseTransactionBody;const TokenPauseStatus=_proto.proto.TokenPauseStatus;exports.TokenPauseStatus=TokenPauseStatus;const FreezeType=_proto.proto.FreezeType;exports.FreezeType=FreezeType;", "export default class Key {}\n", "import Key from \"./Key.js\";\n\n/**\n * A list of Keys (`Key`) with an optional threshold.\n */\nexport default class KeyList extends Key {\n    /**\n     * @param {?Key[]} [keys]\n     * @param {?number} [threshold]\n     */\n    constructor(keys, threshold) {\n        super();\n\n        /**\n         * @private\n         * @type {Key[]}\n         */\n        this._keys = keys == null ? [] : keys;\n\n        /**\n         * @type {?number}\n         */\n        this._threshold = threshold == null ? null : threshold;\n    }\n\n    /**\n     * @param {Key[]} keys\n     * @returns {KeyList}\n     */\n    static of(...keys) {\n        return new KeyList(keys, null);\n    }\n\n    /**\n     * @template T\n     * @param {ArrayLike<Key>} arrayLike\n     * @param {((key: Key) => Key)} [mapFn]\n     * @param {T} [thisArg]\n     * @returns {KeyList}\n     */\n    static from(arrayLike, mapFn, thisArg) {\n        if (mapFn == null) {\n            return new KeyList(Array.from(arrayLike));\n        }\n\n        return new KeyList(Array.from(arrayLike, mapFn, thisArg));\n    }\n\n    /**\n     * @returns {?number}\n     */\n    get threshold() {\n        return this._threshold;\n    }\n\n    /**\n     * @param {number} threshold\n     * @returns {this}\n     */\n    setThreshold(threshold) {\n        this._threshold = threshold;\n        return this;\n    }\n\n    /**\n     * @param {Key[]} keys\n     * @returns {number}\n     */\n    push(...keys) {\n        return this._keys.push(...keys);\n    }\n\n    /**\n     * @param {number} start\n     * @param {number} deleteCount\n     * @param {Key[]} items\n     * @returns {KeyList}\n     */\n    splice(start, deleteCount, ...items) {\n        return new KeyList(\n            this._keys.splice(start, deleteCount, ...items),\n            this.threshold\n        );\n    }\n\n    /**\n     * @param {number=} start\n     * @param {number=} end\n     * @returns {KeyList}\n     */\n    slice(start, end) {\n        return new KeyList(this._keys.slice(start, end), this.threshold);\n    }\n\n    /**\n     * @returns {Iterator<Key>}\n     */\n    [Symbol.iterator]() {\n        return this._keys[Symbol.iterator]();\n    }\n\n    /**\n     * @returns {Key[]}\n     */\n    toArray() {\n        return this._keys.slice();\n    }\n\n    /**\n     * @returns {string}\n     */\n    toString() {\n        return JSON.stringify({\n            threshold: this._threshold,\n            keys: this._keys.toString(),\n        });\n    }\n}\n", "/**\n * Signals that a key could not be realized from the input.\n */\nexport default class BadKeyError extends Error {\n    /**\n     * @param {Error | string} messageOrCause\n     */\n    constructor(messageOrCause) {\n        super(\n            messageOrCause instanceof Error\n                ? messageOrCause.message\n                : messageOrCause\n        );\n\n        this.name = \"BadKeyError\";\n\n        if (messageOrCause instanceof Error) {\n            /** @type {?Error} */\n            this.cause = messageOrCause;\n            this.stack = messageOrCause.stack;\n        }\n    }\n}\n", "import Key from \"./Key.js\";\nimport BadKeyError from \"./BadKeyError.js\";\nimport nacl from \"tweetnacl\";\nimport { arrayEqual, arrayStartsWith } from \"./util/array.js\";\nimport * as hex from \"./encoding/hex.js\";\n\nconst derPrefix = \"302a300506032b6570032100\";\nconst derPrefixBytes = hex.decode(derPrefix);\n\n/**\n * An public key on the Hedera\u2122 network.\n */\nexport default class Ed25519PublicKey extends Key {\n    /**\n     * @internal\n     * @hideconstructor\n     * @param {Uint8Array} keyData\n     */\n    constructor(keyData) {\n        super();\n\n        /**\n         * @type {Uint8Array}\n         * @private\n         * @readonly\n         */\n        this._keyData = keyData;\n    }\n\n    /**\n     * @returns {string}\n     */\n    get _type() {\n        return \"ED25519\";\n    }\n\n    /**\n     * @param {Uint8Array} data\n     * @returns {Ed25519PublicKey}\n     */\n    static fromBytes(data) {\n        switch (data.length) {\n            case 32:\n                return Ed25519PublicKey.fromBytesRaw(data);\n            case 44:\n                return Ed25519PublicKey.fromBytesDer(data);\n            default:\n                throw new BadKeyError(\n                    `invalid public key length: ${data.length} bytes`\n                );\n        }\n    }\n\n    /**\n     * @param {Uint8Array} data\n     * @returns {Ed25519PublicKey}\n     */\n    static fromBytesDer(data) {\n        if (data.length != 44 || !arrayStartsWith(data, derPrefixBytes)) {\n            throw new BadKeyError(\n                `invalid public key length: ${data.length} bytes`\n            );\n        }\n\n        return new Ed25519PublicKey(data.subarray(12));\n    }\n\n    /**\n     * @param {Uint8Array} data\n     * @returns {Ed25519PublicKey}\n     */\n    static fromBytesRaw(data) {\n        if (data.length != 32) {\n            throw new BadKeyError(\n                `invalid public key length: ${data.length} bytes`\n            );\n        }\n\n        return new Ed25519PublicKey(data);\n    }\n\n    /**\n     * Parse a public key from a string of hexadecimal digits.\n     *\n     * The public key may optionally be prefixed with\n     * the DER header.\n     *\n     * @param {string} text\n     * @returns {Ed25519PublicKey}\n     */\n    static fromString(text) {\n        return Ed25519PublicKey.fromBytes(hex.decode(text));\n    }\n\n    /**\n     * Verify a signature on a message with this public key.\n     *\n     * @param {Uint8Array} message\n     * @param {Uint8Array} signature\n     * @returns {boolean}\n     */\n    verify(message, signature) {\n        return nacl.sign.detached.verify(message, signature, this._keyData);\n    }\n\n    /**\n     * @returns {Uint8Array}\n     */\n    toBytesDer() {\n        const bytes = new Uint8Array(derPrefixBytes.length + 32);\n\n        bytes.set(derPrefixBytes, 0);\n        bytes.set(this._keyData.subarray(0, 32), derPrefixBytes.length);\n\n        return bytes;\n    }\n\n    /**\n     * @returns {Uint8Array}\n     */\n    toBytesRaw() {\n        return this._keyData.slice();\n    }\n\n    /**\n     * @param {Ed25519PublicKey} other\n     * @returns {boolean}\n     */\n    equals(other) {\n        return arrayEqual(this._keyData, other._keyData);\n    }\n}\n", "/**\n * @param {Uint8Array} array1\n * @param {Uint8Array} array2\n * @returns {boolean}\n */\nexport function arrayEqual(array1, array2) {\n    if (array1 === array2) {\n        return true;\n    }\n\n    if (array1.byteLength !== array2.byteLength) {\n        return false;\n    }\n\n    const view1 = new DataView(\n        array1.buffer,\n        array1.byteOffset,\n        array1.byteLength\n    );\n    const view2 = new DataView(\n        array2.buffer,\n        array2.byteOffset,\n        array2.byteLength\n    );\n\n    let i = array1.byteLength;\n\n    while (i--) {\n        if (view1.getUint8(i) !== view2.getUint8(i)) {\n            return false;\n        }\n    }\n\n    return true;\n}\n\n/**\n * @param {Uint8Array} array\n * @param {Uint8Array} arrayPrefix\n * @returns {boolean}\n */\nexport function arrayStartsWith(array, arrayPrefix) {\n    if (array.byteLength < arrayPrefix.byteLength) {\n        return false;\n    }\n\n    let i = arrayPrefix.byteLength;\n\n    while (i--) {\n        if (array[i] !== arrayPrefix[i]) {\n            return false;\n        }\n    }\n\n    return true;\n}\n", "/**\n * @type {string[]}\n */\nconst byteToHex = [];\n\nfor (let n = 0; n <= 0xff; n += 1) {\n    byteToHex.push(n.toString(16).padStart(2, \"0\"));\n}\n\n/**\n * @param {Uint8Array} data\n * @returns {string}\n */\nexport function encode(data) {\n    let string = \"\";\n\n    for (const byte of data) {\n        string += byteToHex[byte];\n    }\n\n    return string;\n}\n\n/**\n * @param {string} text\n * @returns {Uint8Array}\n */\nexport function decode(text) {\n    const str = text.startsWith(\"0x\") ? text.substring(2) : text;\n    const result = str.match(/.{1,2}/gu);\n\n    return new Uint8Array(\n        (result == null ? [] : result).map((byte) => parseInt(byte, 16))\n    );\n}\n", "import BadKeyError from \"./BadKeyError.js\";\nimport Ed25519PublicKey from \"./Ed25519PublicKey.js\";\nimport nacl from \"tweetnacl\";\nimport { arrayStartsWith } from \"./util/array.js\";\nimport * as hex from \"./encoding/hex.js\";\nimport * as random from \"./primitive/random.js\";\n\nexport const derPrefix = \"302e020100300506032b657004220420\";\nexport const derPrefixBytes = hex.decode(derPrefix);\n\nexport default class Ed25519PrivateKey {\n    /**\n     * @hideconstructor\n     * @internal\n     * @param {nacl.SignKeyPair | Uint8Array} keyPair\n     * @param {Uint8Array=} chainCode\n     */\n    constructor(keyPair, chainCode) {\n        /**\n         * @type {nacl.SignKeyPair}\n         * @readonly\n         * @private\n         */\n        this._keyPair =\n            keyPair instanceof Uint8Array\n                ? nacl.sign.keyPair.fromSeed(keyPair)\n                : keyPair;\n\n        /**\n         * @type {?Uint8Array}\n         * @readonly\n         */\n        this._chainCode = chainCode != null ? chainCode : null;\n    }\n\n    /**\n     * @returns {string}\n     */\n    get _type() {\n        return \"ED25519\";\n    }\n\n    /**\n     * Generate a random Ed25519 private key.\n     *\n     * @returns {Ed25519PrivateKey}\n     */\n    static generate() {\n        // 32 bytes for the secret key\n        // 32 bytes for the chain code (to support derivation)\n        const entropy = random.bytes(64);\n\n        return new Ed25519PrivateKey(\n            nacl.sign.keyPair.fromSeed(entropy.subarray(0, 32)),\n            entropy.subarray(32)\n        );\n    }\n\n    /**\n     * Generate a random Ed25519 private key.\n     *\n     * @returns {Promise<Ed25519PrivateKey>}\n     */\n    static async generateAsync() {\n        // 32 bytes for the secret key\n        // 32 bytes for the chain code (to support derivation)\n        const entropy = await random.bytesAsync(64);\n\n        return new Ed25519PrivateKey(\n            nacl.sign.keyPair.fromSeed(entropy.subarray(0, 32)),\n            entropy.subarray(32)\n        );\n    }\n\n    /**\n     * Construct a private key from bytes.\n     *\n     * @param {Uint8Array} data\n     * @returns {Ed25519PrivateKey}\n     */\n    static fromBytes(data) {\n        switch (data.length) {\n            case 48:\n                return Ed25519PrivateKey.fromBytesDer(data);\n            case 32:\n            case 64:\n                return Ed25519PrivateKey.fromBytesRaw(data);\n            default:\n                throw new BadKeyError(\n                    `invalid private key length: ${data.length} bytes`\n                );\n        }\n    }\n\n    /**\n     * Construct a private key from bytes with DER header.\n     *\n     * @param {Uint8Array} data\n     * @returns {Ed25519PrivateKey}\n     */\n    static fromBytesDer(data) {\n        if (data.length != 48 || !arrayStartsWith(data, derPrefixBytes)) {\n            throw new BadKeyError(\n                `invalid private key length: ${data.length} bytes`\n            );\n        }\n\n        const keyPair = nacl.sign.keyPair.fromSeed(data.subarray(16));\n\n        return new Ed25519PrivateKey(keyPair);\n    }\n\n    /**\n     * Construct a private key from bytes without DER header.\n     *\n     * @param {Uint8Array} data\n     * @returns {Ed25519PrivateKey}\n     */\n    static fromBytesRaw(data) {\n        switch (data.length) {\n            case 32:\n                return new Ed25519PrivateKey(nacl.sign.keyPair.fromSeed(data));\n\n            case 64:\n                // priv + pub key\n                return new Ed25519PrivateKey(\n                    nacl.sign.keyPair.fromSecretKey(data)\n                );\n\n            default:\n        }\n\n        throw new BadKeyError(\n            `invalid private key length: ${data.length} bytes`\n        );\n    }\n\n    /**\n     * Construct a private key from a hex-encoded string.\n     *\n     * @param {string} text\n     * @returns {Ed25519PrivateKey}\n     */\n    static fromString(text) {\n        return Ed25519PrivateKey.fromBytes(hex.decode(text));\n    }\n\n    /**\n     * Construct a private key from a hex-encoded string.\n     *\n     * @param {string} text\n     * @returns {Ed25519PrivateKey}\n     */\n    static fromStringDer(text) {\n        return Ed25519PrivateKey.fromBytesDer(hex.decode(text));\n    }\n\n    /**\n     * Construct a private key from a hex-encoded string.\n     *\n     * @param {string} text\n     * @returns {Ed25519PrivateKey}\n     */\n    static fromStringRaw(text) {\n        return Ed25519PrivateKey.fromBytesRaw(hex.decode(text));\n    }\n\n    /**\n     * Get the public key associated with this private key.\n     *\n     * The public key can be freely given and used by other parties to verify\n     * the signatures generated by this private key.\n     *\n     * @returns {Ed25519PublicKey}\n     */\n    get publicKey() {\n        return new Ed25519PublicKey(this._keyPair.publicKey);\n    }\n\n    /**\n     * Sign a message with this private key.\n     *\n     * @param {Uint8Array} bytes\n     * @returns {Uint8Array} - The signature bytes without the message\n     */\n    sign(bytes) {\n        return nacl.sign.detached(bytes, this._keyPair.secretKey);\n    }\n\n    /**\n     * @returns {Uint8Array}\n     */\n    toBytesDer() {\n        const bytes = new Uint8Array(derPrefixBytes.length + 32);\n\n        bytes.set(derPrefixBytes, 0);\n        bytes.set(\n            this._keyPair.secretKey.subarray(0, 32),\n            derPrefixBytes.length\n        );\n\n        return bytes;\n    }\n\n    /**\n     * @returns {Uint8Array}\n     */\n    toBytesRaw() {\n        // copy the bytes so they can't be modified accidentally\n        return this._keyPair.secretKey.slice(0, 32);\n    }\n}\n", "import nacl from \"tweetnacl\";\n\n/**\n * @param {number} count\n * @returns {Uint8Array}\n */\nexport function bytes(count) {\n    return nacl.randomBytes(count);\n}\n\n/**\n * @param {number} count\n * @returns {Promise<Uint8Array>}\n */\nexport function bytesAsync(count) {\n    return Promise.resolve(nacl.randomBytes(count));\n}\n", "/**\n * Possible statuses for {@link Mnemonic#validate()}.\n *\n * @readonly\n * @enum {string}\n */\nconst BadMnemonicReason = Object.freeze({\n    /**\n     * The mnemonic did not have a supported number of words (12 or 24 for regular and 22 for legacy).\n     */\n    BadLength: \"BadLength\",\n\n    /**\n     * The mnemonic contained words which were not found in the word list.\n     */\n    UnknownWords: \"UnknownWords\",\n\n    /**\n     * The checksum encoded in the mnemonic did not match the checksum we just calculated for\n     * that mnemonic.\n     *\n     * 24-word mnemonics have an 8-bit checksum that is appended to the 32 bytes of source entropy\n     * after being calculated from it, before being encoded into words.\n     *\n     * This could happen if two or more of the words were entered out of the original order or\n     * replaced with another from the standard word list (as this is only returned if all the words\n     * exist in the word list).\n     */\n    ChecksumMismatch: \"ChecksumMismatch\",\n});\n\nexport default BadMnemonicReason;\n", "/** @typedef {import(\"./Mnemonic.js\").default} Mnemonic */\nimport BadMnemonicReason from \"./BadMnemonicReason.js\";\n\nexport default class BadMnemonicError extends Error {\n    /**\n     * @param {Mnemonic} mnemonic\n     * @param {string} reason\n     * @param {number[]} unknownWordIndices\n     * @hideconstructor\n     */\n    constructor(mnemonic, reason, unknownWordIndices) {\n        let reasonMessage;\n\n        switch (reason) {\n            case BadMnemonicReason.BadLength:\n                reasonMessage = \"mnemonic is of an unexpected number of words\";\n                break;\n\n            case BadMnemonicReason.ChecksumMismatch:\n                reasonMessage =\n                    \"checksum byte in mnemonic did not match the rest of the mnemonic\";\n                break;\n\n            case BadMnemonicReason.UnknownWords:\n                reasonMessage =\n                    \"mnemonic contained words that are not in the standard word list\";\n                break;\n\n            default:\n                throw new Error(\n                    `unexpected value ${reason.toString()} for 'reason'`\n                );\n        }\n\n        super(`invalid mnemonic: ${reasonMessage}`);\n\n        if (typeof Error.captureStackTrace !== \"undefined\") {\n            Error.captureStackTrace(this, BadMnemonicError);\n        }\n\n        this.name = \"BadMnemonicError\";\n\n        /** The reason for which the mnemonic failed validation. */\n        this.reason = reason;\n\n        /** The mnemonic that failed validation. */\n        this.mnemonic = mnemonic;\n\n        /**\n         * The indices in the mnemonic that were not found in the BIP-39\n         * standard English word list.\n         */\n        this.unknownWordIndices = unknownWordIndices;\n    }\n}\n", "export default [\n    \"aback\",\n    \"abbey\",\n    \"abbot\",\n    \"abide\",\n    \"ablaze\",\n    \"able\",\n    \"aboard\",\n    \"abode\",\n    \"abort\",\n    \"abound\",\n    \"about\",\n    \"above\",\n    \"abroad\",\n    \"abrupt\",\n    \"absent\",\n    \"absorb\",\n    \"absurd\",\n    \"abuse\",\n    \"accent\",\n    \"accept\",\n    \"access\",\n    \"accord\",\n    \"accuse\",\n    \"ace\",\n    \"ache\",\n    \"aching\",\n    \"acid\",\n    \"acidic\",\n    \"acorn\",\n    \"acre\",\n    \"across\",\n    \"act\",\n    \"action\",\n    \"active\",\n    \"actor\",\n    \"actual\",\n    \"acute\",\n    \"adam\",\n    \"adapt\",\n    \"add\",\n    \"added\",\n    \"addict\",\n    \"adept\",\n    \"adhere\",\n    \"adjust\",\n    \"admire\",\n    \"admit\",\n    \"adobe\",\n    \"adopt\",\n    \"adrift\",\n    \"adult\",\n    \"adverb\",\n    \"advice\",\n    \"aerial\",\n    \"afar\",\n    \"affair\",\n    \"affect\",\n    \"afford\",\n    \"afghan\",\n    \"afield\",\n    \"afloat\",\n    \"afraid\",\n    \"afresh\",\n    \"after\",\n    \"again\",\n    \"age\",\n    \"agency\",\n    \"agenda\",\n    \"agent\",\n    \"aghast\",\n    \"agile\",\n    \"ago\",\n    \"agony\",\n    \"agree\",\n    \"agreed\",\n    \"ahead\",\n    \"aid\",\n    \"aide\",\n    \"aim\",\n    \"air\",\n    \"airman\",\n    \"airy\",\n    \"akin\",\n    \"alarm\",\n    \"alaska\",\n    \"albeit\",\n    \"album\",\n    \"ale\",\n    \"alert\",\n    \"alibi\",\n    \"alice\",\n    \"alien\",\n    \"alight\",\n    \"align\",\n    \"alike\",\n    \"alive\",\n    \"alkali\",\n    \"all\",\n    \"alley\",\n    \"allied\",\n    \"allow\",\n    \"alloy\",\n    \"ally\",\n    \"almond\",\n    \"almost\",\n    \"aloft\",\n    \"alone\",\n    \"along\",\n    \"aloof\",\n    \"aloud\",\n    \"alpha\",\n    \"alpine\",\n    \"also\",\n    \"altar\",\n    \"alter\",\n    \"always\",\n    \"amaze\",\n    \"amazon\",\n    \"amber\",\n    \"ambush\",\n    \"amen\",\n    \"amend\",\n    \"amid\",\n    \"amidst\",\n    \"amiss\",\n    \"among\",\n    \"amount\",\n    \"ample\",\n    \"amuse\",\n    \"anchor\",\n    \"and\",\n    \"andrew\",\n    \"anew\",\n    \"angel\",\n    \"anger\",\n    \"angle\",\n    \"angry\",\n    \"animal\",\n    \"ankle\",\n    \"annoy\",\n    \"annual\",\n    \"answer\",\n    \"anthem\",\n    \"any\",\n    \"anyhow\",\n    \"anyway\",\n    \"apart\",\n    \"apathy\",\n    \"apex\",\n    \"apiece\",\n    \"appeal\",\n    \"appear\",\n    \"apple\",\n    \"apply\",\n    \"april\",\n    \"apron\",\n    \"arab\",\n    \"arcade\",\n    \"arcane\",\n    \"arch\",\n    \"arctic\",\n    \"ardent\",\n    \"are\",\n    \"area\",\n    \"argue\",\n    \"arid\",\n    \"arise\",\n    \"ark\",\n    \"arm\",\n    \"armful\",\n    \"army\",\n    \"aroma\",\n    \"around\",\n    \"arouse\",\n    \"array\",\n    \"arrest\",\n    \"arrive\",\n    \"arrow\",\n    \"arson\",\n    \"art\",\n    \"artery\",\n    \"artful\",\n    \"artist\",\n    \"ascent\",\n    \"ash\",\n    \"ashen\",\n    \"ashore\",\n    \"aside\",\n    \"ask\",\n    \"asleep\",\n    \"aspect\",\n    \"assay\",\n    \"assent\",\n    \"assert\",\n    \"assess\",\n    \"asset\",\n    \"assign\",\n    \"assist\",\n    \"assume\",\n    \"assure\",\n    \"asthma\",\n    \"astute\",\n    \"asylum\",\n    \"ate\",\n    \"athens\",\n    \"atlas\",\n    \"atom\",\n    \"atomic\",\n    \"attach\",\n    \"attack\",\n    \"attain\",\n    \"attend\",\n    \"attic\",\n    \"auburn\",\n    \"audio\",\n    \"audit\",\n    \"august\",\n    \"aunt\",\n    \"auntie\",\n    \"aura\",\n    \"austin\",\n    \"author\",\n    \"auto\",\n    \"autumn\",\n    \"avail\",\n    \"avenge\",\n    \"avenue\",\n    \"avert\",\n    \"avid\",\n    \"avoid\",\n    \"await\",\n    \"awake\",\n    \"awaken\",\n    \"award\",\n    \"aware\",\n    \"awash\",\n    \"away\",\n    \"awful\",\n    \"awhile\",\n    \"axe\",\n    \"axes\",\n    \"axiom\",\n    \"axis\",\n    \"axle\",\n    \"aye\",\n    \"babe\",\n    \"baby\",\n    \"bach\",\n    \"back\",\n    \"backup\",\n    \"bacon\",\n    \"bad\",\n    \"badge\",\n    \"badly\",\n    \"bag\",\n    \"baggy\",\n    \"bail\",\n    \"bait\",\n    \"bake\",\n    \"baker\",\n    \"bakery\",\n    \"bald\",\n    \"ball\",\n    \"ballad\",\n    \"ballet\",\n    \"ballot\",\n    \"baltic\",\n    \"bamboo\",\n    \"ban\",\n    \"banal\",\n    \"banana\",\n    \"band\",\n    \"bang\",\n    \"bank\",\n    \"bar\",\n    \"barber\",\n    \"bare\",\n    \"barely\",\n    \"barge\",\n    \"bark\",\n    \"barley\",\n    \"barn\",\n    \"baron\",\n    \"barrel\",\n    \"barren\",\n    \"basalt\",\n    \"base\",\n    \"basic\",\n    \"basil\",\n    \"basin\",\n    \"basis\",\n    \"basket\",\n    \"bass\",\n    \"bat\",\n    \"batch\",\n    \"bath\",\n    \"baton\",\n    \"battle\",\n    \"bay\",\n    \"beach\",\n    \"beacon\",\n    \"beak\",\n    \"beam\",\n    \"bean\",\n    \"bear\",\n    \"beard\",\n    \"beast\",\n    \"beat\",\n    \"beauty\",\n    \"become\",\n    \"bed\",\n    \"beech\",\n    \"beef\",\n    \"beefy\",\n    \"beep\",\n    \"beer\",\n    \"beet\",\n    \"beetle\",\n    \"before\",\n    \"beg\",\n    \"beggar\",\n    \"begin\",\n    \"behalf\",\n    \"behave\",\n    \"behind\",\n    \"beige\",\n    \"being\",\n    \"belief\",\n    \"bell\",\n    \"belly\",\n    \"belong\",\n    \"below\",\n    \"belt\",\n    \"bench\",\n    \"bend\",\n    \"benign\",\n    \"bent\",\n    \"berlin\",\n    \"berry\",\n    \"berth\",\n    \"beset\",\n    \"beside\",\n    \"best\",\n    \"bestow\",\n    \"bet\",\n    \"beta\",\n    \"betray\",\n    \"better\",\n    \"beware\",\n    \"beyond\",\n    \"bias\",\n    \"biceps\",\n    \"bicker\",\n    \"bid\",\n    \"big\",\n    \"bigger\",\n    \"bike\",\n    \"bile\",\n    \"bill\",\n    \"bin\",\n    \"binary\",\n    \"bind\",\n    \"biopsy\",\n    \"birch\",\n    \"bird\",\n    \"birdie\",\n    \"birth\",\n    \"bishop\",\n    \"bit\",\n    \"bitch\",\n    \"bite\",\n    \"bitter\",\n    \"black\",\n    \"blade\",\n    \"blame\",\n    \"bland\",\n    \"blast\",\n    \"blaze\",\n    \"bleak\",\n    \"blend\",\n    \"bless\",\n    \"blew\",\n    \"blind\",\n    \"blink\",\n    \"blip\",\n    \"bliss\",\n    \"blitz\",\n    \"block\",\n    \"blond\",\n    \"blood\",\n    \"bloody\",\n    \"bloom\",\n    \"blot\",\n    \"blouse\",\n    \"blow\",\n    \"blue\",\n    \"bluff\",\n    \"blunt\",\n    \"blur\",\n    \"blush\",\n    \"boar\",\n    \"board\",\n    \"boast\",\n    \"boat\",\n    \"bob\",\n    \"bodily\",\n    \"body\",\n    \"bogus\",\n    \"boil\",\n    \"bold\",\n    \"bolt\",\n    \"bomb\",\n    \"bombay\",\n    \"bond\",\n    \"bone\",\n    \"bonn\",\n    \"bonnet\",\n    \"bonus\",\n    \"bony\",\n    \"book\",\n    \"boom\",\n    \"boost\",\n    \"boot\",\n    \"booth\",\n    \"booze\",\n    \"border\",\n    \"bore\",\n    \"borrow\",\n    \"bosom\",\n    \"boss\",\n    \"boston\",\n    \"both\",\n    \"bother\",\n    \"bottle\",\n    \"bottom\",\n    \"bought\",\n    \"bounce\",\n    \"bound\",\n    \"bounty\",\n    \"bout\",\n    \"bovine\",\n    \"bow\",\n    \"bowel\",\n    \"bowl\",\n    \"box\",\n    \"boy\",\n    \"boyish\",\n    \"brace\",\n    \"brain\",\n    \"brainy\",\n    \"brake\",\n    \"bran\",\n    \"branch\",\n    \"brand\",\n    \"brandy\",\n    \"brass\",\n    \"brave\",\n    \"bravo\",\n    \"brazil\",\n    \"breach\",\n    \"bread\",\n    \"break\",\n    \"breast\",\n    \"breath\",\n    \"bred\",\n    \"breed\",\n    \"breeze\",\n    \"brew\",\n    \"bribe\",\n    \"brick\",\n    \"bride\",\n    \"bridge\",\n    \"brief\",\n    \"bright\",\n    \"brim\",\n    \"brine\",\n    \"bring\",\n    \"brink\",\n    \"brisk\",\n    \"broad\",\n    \"broke\",\n    \"broken\",\n    \"bronze\",\n    \"brook\",\n    \"broom\",\n    \"brown\",\n    \"bruise\",\n    \"brush\",\n    \"brutal\",\n    \"brute\",\n    \"bubble\",\n    \"buck\",\n    \"bucket\",\n    \"buckle\",\n    \"budget\",\n    \"buffet\",\n    \"buggy\",\n    \"build\",\n    \"bulb\",\n    \"bulge\",\n    \"bulk\",\n    \"bulky\",\n    \"bull\",\n    \"bullet\",\n    \"bully\",\n    \"bump\",\n    \"bumpy\",\n    \"bunch\",\n    \"bundle\",\n    \"bunk\",\n    \"bunny\",\n    \"burden\",\n    \"bureau\",\n    \"burial\",\n    \"buried\",\n    \"burly\",\n    \"burn\",\n    \"burnt\",\n    \"burrow\",\n    \"burst\",\n    \"bury\",\n    \"bus\",\n    \"bush\",\n    \"bust\",\n    \"bustle\",\n    \"busy\",\n    \"but\",\n    \"butler\",\n    \"butt\",\n    \"butter\",\n    \"button\",\n    \"buy\",\n    \"buyer\",\n    \"buzz\",\n    \"bye\",\n    \"byte\",\n    \"cab\",\n    \"cabin\",\n    \"cable\",\n    \"cache\",\n    \"cactus\",\n    \"caesar\",\n    \"cage\",\n    \"cairo\",\n    \"cajun\",\n    \"cajole\",\n    \"cake\",\n    \"calf\",\n    \"call\",\n    \"caller\",\n    \"calm\",\n    \"calmly\",\n    \"came\",\n    \"camel\",\n    \"camera\",\n    \"camp\",\n    \"campus\",\n    \"can\",\n    \"canada\",\n    \"canal\",\n    \"canary\",\n    \"cancel\",\n    \"cancer\",\n    \"candid\",\n    \"candle\",\n    \"candy\",\n    \"cane\",\n    \"canine\",\n    \"canoe\",\n    \"canopy\",\n    \"canvas\",\n    \"canyon\",\n    \"cap\",\n    \"cape\",\n    \"car\",\n    \"carbon\",\n    \"card\",\n    \"care\",\n    \"career\",\n    \"caress\",\n    \"cargo\",\n    \"carl\",\n    \"carnal\",\n    \"carol\",\n    \"carp\",\n    \"carpet\",\n    \"carrot\",\n    \"carry\",\n    \"cart\",\n    \"cartel\",\n    \"case\",\n    \"cash\",\n    \"cask\",\n    \"cast\",\n    \"castle\",\n    \"casual\",\n    \"cat\",\n    \"catch\",\n    \"cater\",\n    \"cattle\",\n    \"caught\",\n    \"causal\",\n    \"cause\",\n    \"cave\",\n    \"cease\",\n    \"celery\",\n    \"cell\",\n    \"cellar\",\n    \"celtic\",\n    \"cement\",\n    \"censor\",\n    \"census\",\n    \"cent\",\n    \"cereal\",\n    \"chain\",\n    \"chair\",\n    \"chalk\",\n    \"chalky\",\n    \"champ\",\n    \"chance\",\n    \"change\",\n    \"chant\",\n    \"chaos\",\n    \"chap\",\n    \"chapel\",\n    \"charge\",\n    \"charm\",\n    \"chart\",\n    \"chase\",\n    \"chat\",\n    \"cheap\",\n    \"cheat\",\n    \"check\",\n    \"cheek\",\n    \"cheeky\",\n    \"cheer\",\n    \"cheery\",\n    \"cheese\",\n    \"chef\",\n    \"cheque\",\n    \"cherry\",\n    \"chess\",\n    \"chest\",\n    \"chew\",\n    \"chic\",\n    \"chick\",\n    \"chief\",\n    \"child\",\n    \"chile\",\n    \"chill\",\n    \"chilly\",\n    \"chin\",\n    \"china\",\n    \"chip\",\n    \"choice\",\n    \"choir\",\n    \"choose\",\n    \"chop\",\n    \"choppy\",\n    \"chord\",\n    \"chorus\",\n    \"chose\",\n    \"chosen\",\n    \"chris\",\n    \"chrome\",\n    \"chunk\",\n    \"chunky\",\n    \"church\",\n    \"cider\",\n    \"cigar\",\n    \"cinema\",\n    \"circa\",\n    \"circle\",\n    \"circus\",\n    \"cite\",\n    \"city\",\n    \"civic\",\n    \"civil\",\n    \"clad\",\n    \"claim\",\n    \"clammy\",\n    \"clan\",\n    \"clap\",\n    \"clash\",\n    \"clasp\",\n    \"class\",\n    \"clause\",\n    \"claw\",\n    \"clay\",\n    \"clean\",\n    \"clear\",\n    \"clergy\",\n    \"clerk\",\n    \"clever\",\n    \"click\",\n    \"client\",\n    \"cliff\",\n    \"climax\",\n    \"climb\",\n    \"clinch\",\n    \"cling\",\n    \"clinic\",\n    \"clip\",\n    \"cloak\",\n    \"clock\",\n    \"clone\",\n    \"close\",\n    \"closer\",\n    \"closet\",\n    \"cloth\",\n    \"cloud\",\n    \"cloudy\",\n    \"clout\",\n    \"clown\",\n    \"club\",\n    \"clue\",\n    \"clumsy\",\n    \"clung\",\n    \"clutch\",\n    \"coach\",\n    \"coal\",\n    \"coarse\",\n    \"coast\",\n    \"coat\",\n    \"coax\",\n    \"cobalt\",\n    \"cobra\",\n    \"coca\",\n    \"cock\",\n    \"cocoa\",\n    \"code\",\n    \"coffee\",\n    \"coffin\",\n    \"cohort\",\n    \"coil\",\n    \"coin\",\n    \"coke\",\n    \"cold\",\n    \"collar\",\n    \"colon\",\n    \"colony\",\n    \"colt\",\n    \"column\",\n    \"comb\",\n    \"combat\",\n    \"come\",\n    \"comedy\",\n    \"comic\",\n    \"commit\",\n    \"common\",\n    \"compel\",\n    \"comply\",\n    \"concur\",\n    \"cone\",\n    \"confer\",\n    \"congo\",\n    \"consul\",\n    \"convex\",\n    \"convey\",\n    \"convoy\",\n    \"cook\",\n    \"cool\",\n    \"cope\",\n    \"copper\",\n    \"copy\",\n    \"coral\",\n    \"cord\",\n    \"core\",\n    \"cork\",\n    \"corn\",\n    \"corner\",\n    \"corps\",\n    \"corpse\",\n    \"corpus\",\n    \"cortex\",\n    \"cosmic\",\n    \"cosmos\",\n    \"cost\",\n    \"costly\",\n    \"cotton\",\n    \"couch\",\n    \"cough\",\n    \"could\",\n    \"count\",\n    \"county\",\n    \"coup\",\n    \"couple\",\n    \"coupon\",\n    \"course\",\n    \"court\",\n    \"cousin\",\n    \"cove\",\n    \"cover\",\n    \"covert\",\n    \"cow\",\n    \"coward\",\n    \"cowboy\",\n    \"cozy\",\n    \"crab\",\n    \"crack\",\n    \"cradle\",\n    \"craft\",\n    \"crafty\",\n    \"crag\",\n    \"crane\",\n    \"crash\",\n    \"crate\",\n    \"crater\",\n    \"crawl\",\n    \"crazy\",\n    \"creak\",\n    \"cream\",\n    \"creamy\",\n    \"create\",\n    \"credit\",\n    \"creed\",\n    \"creek\",\n    \"creep\",\n    \"creepy\",\n    \"crept\",\n    \"crest\",\n    \"crew\",\n    \"cried\",\n    \"crime\",\n    \"crisis\",\n    \"crisp\",\n    \"critic\",\n    \"crook\",\n    \"crop\",\n    \"cross\",\n    \"crow\",\n    \"crowd\",\n    \"crown\",\n    \"crude\",\n    \"cruel\",\n    \"cruise\",\n    \"crunch\",\n    \"crush\",\n    \"crust\",\n    \"crux\",\n    \"cry\",\n    \"crypt\",\n    \"cuba\",\n    \"cube\",\n    \"cubic\",\n    \"cuckoo\",\n    \"cuff\",\n    \"cult\",\n    \"cup\",\n    \"curb\",\n    \"cure\",\n    \"curfew\",\n    \"curl\",\n    \"curry\",\n    \"curse\",\n    \"cursor\",\n    \"curve\",\n    \"cuss\",\n    \"custom\",\n    \"cut\",\n    \"cute\",\n    \"cycle\",\n    \"cyclic\",\n    \"cynic\",\n    \"czech\",\n    \"dad\",\n    \"daddy\",\n    \"dagger\",\n    \"daily\",\n    \"dairy\",\n    \"daisy\",\n    \"dale\",\n    \"dam\",\n    \"damage\",\n    \"damp\",\n    \"dampen\",\n    \"dance\",\n    \"danger\",\n    \"danish\",\n    \"dare\",\n    \"dark\",\n    \"darken\",\n    \"darn\",\n    \"dart\",\n    \"dash\",\n    \"data\",\n    \"date\",\n    \"david\",\n    \"dawn\",\n    \"day\",\n    \"dead\",\n    \"deadly\",\n    \"deaf\",\n    \"deal\",\n    \"dealer\",\n    \"dean\",\n    \"dear\",\n    \"death\",\n    \"debate\",\n    \"debit\",\n    \"debris\",\n    \"debt\",\n    \"debtor\",\n    \"decade\",\n    \"decay\",\n    \"decent\",\n    \"decide\",\n    \"deck\",\n    \"decor\",\n    \"decree\",\n    \"deduce\",\n    \"deed\",\n    \"deep\",\n    \"deeply\",\n    \"deer\",\n    \"defeat\",\n    \"defect\",\n    \"defend\",\n    \"defer\",\n    \"define\",\n    \"defy\",\n    \"degree\",\n    \"deity\",\n    \"delay\",\n    \"delete\",\n    \"delhi\",\n    \"delta\",\n    \"demand\",\n    \"demise\",\n    \"demo\",\n    \"demure\",\n    \"denial\",\n    \"denote\",\n    \"dense\",\n    \"dental\",\n    \"deny\",\n    \"depart\",\n    \"depend\",\n    \"depict\",\n    \"deploy\",\n    \"depot\",\n    \"depth\",\n    \"deputy\",\n    \"derive\",\n    \"desert\",\n    \"design\",\n    \"desire\",\n    \"desist\",\n    \"desk\",\n    \"detail\",\n    \"detect\",\n    \"deter\",\n    \"detest\",\n    \"detour\",\n    \"device\",\n    \"devise\",\n    \"devoid\",\n    \"devote\",\n    \"devour\",\n    \"dial\",\n    \"diana\",\n    \"diary\",\n    \"dice\",\n    \"dictum\",\n    \"did\",\n    \"die\",\n    \"diesel\",\n    \"diet\",\n    \"differ\",\n    \"dig\",\n    \"digest\",\n    \"digit\",\n    \"dine\",\n    \"dinghy\",\n    \"dinner\",\n    \"diode\",\n    \"dip\",\n    \"dire\",\n    \"direct\",\n    \"dirt\",\n    \"dirty\",\n    \"disc\",\n    \"disco\",\n    \"dish\",\n    \"disk\",\n    \"dismal\",\n    \"dispel\",\n    \"ditch\",\n    \"dive\",\n    \"divert\",\n    \"divide\",\n    \"divine\",\n    \"dizzy\",\n    \"docile\",\n    \"dock\",\n    \"doctor\",\n    \"dog\",\n    \"dogma\",\n    \"dole\",\n    \"doll\",\n    \"dollar\",\n    \"dolly\",\n    \"domain\",\n    \"dome\",\n    \"domino\",\n    \"donate\",\n    \"done\",\n    \"donkey\",\n    \"donor\",\n    \"doom\",\n    \"door\",\n    \"dorsal\",\n    \"dose\",\n    \"dot\",\n    \"double\",\n    \"doubt\",\n    \"dough\",\n    \"dour\",\n    \"dove\",\n    \"down\",\n    \"dozen\",\n    \"draft\",\n    \"drag\",\n    \"dragon\",\n    \"drain\",\n    \"drama\",\n    \"drank\",\n    \"draw\",\n    \"drawer\",\n    \"dread\",\n    \"dream\",\n    \"dreary\",\n    \"dress\",\n    \"drew\",\n    \"dried\",\n    \"drift\",\n    \"drill\",\n    \"drink\",\n    \"drip\",\n    \"drive\",\n    \"driver\",\n    \"drop\",\n    \"drove\",\n    \"drown\",\n    \"drug\",\n    \"drum\",\n    \"drunk\",\n    \"dry\",\n    \"dual\",\n    \"duck\",\n    \"duct\",\n    \"due\",\n    \"duel\",\n    \"duet\",\n    \"duke\",\n    \"dull\",\n    \"duly\",\n    \"dumb\",\n    \"dummy\",\n    \"dump\",\n    \"dune\",\n    \"dung\",\n    \"duress\",\n    \"during\",\n    \"dusk\",\n    \"dust\",\n    \"dusty\",\n    \"dutch\",\n    \"duty\",\n    \"dwarf\",\n    \"dwell\",\n    \"dyer\",\n    \"dying\",\n    \"dynamo\",\n    \"each\",\n    \"eager\",\n    \"eagle\",\n    \"ear\",\n    \"earl\",\n    \"early\",\n    \"earn\",\n    \"earth\",\n    \"ease\",\n    \"easel\",\n    \"easily\",\n    \"east\",\n    \"easter\",\n    \"easy\",\n    \"eat\",\n    \"eaten\",\n    \"eater\",\n    \"echo\",\n    \"eddy\",\n    \"eden\",\n    \"edge\",\n    \"edible\",\n    \"edict\",\n    \"edit\",\n    \"editor\",\n    \"eel\",\n    \"eerie\",\n    \"eerily\",\n    \"effect\",\n    \"effort\",\n    \"egg\",\n    \"ego\",\n    \"eight\",\n    \"eighth\",\n    \"eighty\",\n    \"either\",\n    \"elbow\",\n    \"elder\",\n    \"eldest\",\n    \"elect\",\n    \"eleven\",\n    \"elicit\",\n    \"elite\",\n    \"else\",\n    \"elude\",\n    \"elves\",\n    \"embark\",\n    \"emblem\",\n    \"embryo\",\n    \"emerge\",\n    \"emit\",\n    \"empire\",\n    \"employ\",\n    \"empty\",\n    \"enable\",\n    \"enamel\",\n    \"end\",\n    \"endure\",\n    \"enemy\",\n    \"energy\",\n    \"engage\",\n    \"engine\",\n    \"enjoy\",\n    \"enlist\",\n    \"enough\",\n    \"ensure\",\n    \"entail\",\n    \"enter\",\n    \"entire\",\n    \"entry\",\n    \"envoy\",\n    \"envy\",\n    \"enzyme\",\n    \"epic\",\n    \"epoch\",\n    \"equal\",\n    \"equate\",\n    \"equip\",\n    \"equity\",\n    \"era\",\n    \"erect\",\n    \"eric\",\n    \"erode\",\n    \"erotic\",\n    \"errant\",\n    \"error\",\n    \"escape\",\n    \"escort\",\n    \"essay\",\n    \"essex\",\n    \"estate\",\n    \"esteem\",\n    \"ethic\",\n    \"ethnic\",\n    \"europe\",\n    \"evade\",\n    \"eve\",\n    \"even\",\n    \"event\",\n    \"ever\",\n    \"every\",\n    \"evict\",\n    \"evil\",\n    \"evoke\",\n    \"evolve\",\n    \"exact\",\n    \"exam\",\n    \"exceed\",\n    \"excel\",\n    \"except\",\n    \"excess\",\n    \"excise\",\n    \"excite\",\n    \"excuse\",\n    \"exempt\",\n    \"exert\",\n    \"exile\",\n    \"exist\",\n    \"exit\",\n    \"exodus\",\n    \"exotic\",\n    \"expand\",\n    \"expect\",\n    \"expert\",\n    \"expire\",\n    \"export\",\n    \"expose\",\n    \"extend\",\n    \"extra\",\n    \"eye\",\n    \"eyed\",\n    \"fabric\",\n    \"face\",\n    \"facial\",\n    \"fact\",\n    \"factor\",\n    \"fade\",\n    \"fail\",\n    \"faint\",\n    \"fair\",\n    \"fairly\",\n    \"fairy\",\n    \"faith\",\n    \"fake\",\n    \"falcon\",\n    \"fall\",\n    \"false\",\n    \"falter\",\n    \"fame\",\n    \"family\",\n    \"famine\",\n    \"famous\",\n    \"fan\",\n    \"fancy\",\n    \"far\",\n    \"farce\",\n    \"fare\",\n    \"farm\",\n    \"farmer\",\n    \"fast\",\n    \"fasten\",\n    \"faster\",\n    \"fat\",\n    \"fatal\",\n    \"fate\",\n    \"father\",\n    \"fatty\",\n    \"fault\",\n    \"faulty\",\n    \"fauna\",\n    \"fear\",\n    \"feast\",\n    \"feat\",\n    \"fed\",\n    \"fee\",\n    \"feeble\",\n    \"feed\",\n    \"feel\",\n    \"feet\",\n    \"fell\",\n    \"fellow\",\n    \"felt\",\n    \"female\",\n    \"fence\",\n    \"fend\",\n    \"ferry\",\n    \"fetal\",\n    \"fetch\",\n    \"feudal\",\n    \"fever\",\n    \"few\",\n    \"fewer\",\n    \"fiasco\",\n    \"fiddle\",\n    \"field\",\n    \"fiend\",\n    \"fierce\",\n    \"fiery\",\n    \"fifth\",\n    \"fifty\",\n    \"fig\",\n    \"fight\",\n    \"figure\",\n    \"file\",\n    \"fill\",\n    \"filled\",\n    \"filler\",\n    \"film\",\n    \"filter\",\n    \"filth\",\n    \"filthy\",\n    \"final\",\n    \"finale\",\n    \"find\",\n    \"fine\",\n    \"finery\",\n    \"finger\",\n    \"finish\",\n    \"finite\",\n    \"fire\",\n    \"firm\",\n    \"firmly\",\n    \"first\",\n    \"fiscal\",\n    \"fish\",\n    \"fisher\",\n    \"fist\",\n    \"fit\",\n    \"fitful\",\n    \"five\",\n    \"fix\",\n    \"flag\",\n    \"flair\",\n    \"flak\",\n    \"flame\",\n    \"flank\",\n    \"flap\",\n    \"flare\",\n    \"flash\",\n    \"flask\",\n    \"flat\",\n    \"flavor\",\n    \"flaw\",\n    \"fled\",\n    \"flee\",\n    \"fleece\",\n    \"fleet\",\n    \"flesh\",\n    \"fleshy\",\n    \"flew\",\n    \"flick\",\n    \"flight\",\n    \"flimsy\",\n    \"flint\",\n    \"flirt\",\n    \"float\",\n    \"flock\",\n    \"flood\",\n    \"floor\",\n    \"floppy\",\n    \"flora\",\n    \"floral\",\n    \"flour\",\n    \"flow\",\n    \"flower\",\n    \"fluent\",\n    \"fluffy\",\n    \"fluid\",\n    \"flung\",\n    \"flurry\",\n    \"flush\",\n    \"flute\",\n    \"flux\",\n    \"fly\",\n    \"flyer\",\n    \"foal\",\n    \"foam\",\n    \"focal\",\n    \"focus\",\n    \"fog\",\n    \"foil\",\n    \"fold\",\n    \"folk\",\n    \"follow\",\n    \"folly\",\n    \"fond\",\n    \"fondly\",\n    \"font\",\n    \"food\",\n    \"fool\",\n    \"foot\",\n    \"for\",\n    \"forbid\",\n    \"force\",\n    \"ford\",\n    \"forest\",\n    \"forge\",\n    \"forget\",\n    \"fork\",\n    \"form\",\n    \"formal\",\n    \"format\",\n    \"former\",\n    \"fort\",\n    \"forth\",\n    \"forty\",\n    \"forum\",\n    \"fossil\",\n    \"foster\",\n    \"foul\",\n    \"found\",\n    \"four\",\n    \"fourth\",\n    \"fox\",\n    \"foyer\",\n    \"frail\",\n    \"frame\",\n    \"franc\",\n    \"france\",\n    \"frank\",\n    \"fraud\",\n    \"fred\",\n    \"free\",\n    \"freed\",\n    \"freely\",\n    \"freeze\",\n    \"french\",\n    \"frenzy\",\n    \"fresh\",\n    \"friar\",\n    \"friday\",\n    \"fridge\",\n    \"fried\",\n    \"friend\",\n    \"fright\",\n    \"fringe\",\n    \"frock\",\n    \"frog\",\n    \"from\",\n    \"front\",\n    \"frost\",\n    \"frosty\",\n    \"frown\",\n    \"frozen\",\n    \"frugal\",\n    \"fruit\",\n    \"fry\",\n    \"fudge\",\n    \"fuel\",\n    \"full\",\n    \"fully\",\n    \"fumes\",\n    \"fun\",\n    \"fund\",\n    \"funny\",\n    \"fur\",\n    \"furry\",\n    \"fury\",\n    \"fuse\",\n    \"fusion\",\n    \"fuss\",\n    \"fussy\",\n    \"futile\",\n    \"future\",\n    \"fuzzy\",\n    \"gadget\",\n    \"gain\",\n    \"gala\",\n    \"galaxy\",\n    \"gale\",\n    \"gall\",\n    \"galley\",\n    \"gallon\",\n    \"gallop\",\n    \"gamble\",\n    \"game\",\n    \"gamma\",\n    \"gandhi\",\n    \"gang\",\n    \"gap\",\n    \"garage\",\n    \"garden\",\n    \"garlic\",\n    \"gas\",\n    \"gasp\",\n    \"gate\",\n    \"gather\",\n    \"gauge\",\n    \"gaunt\",\n    \"gave\",\n    \"gaze\",\n    \"gear\",\n    \"geese\",\n    \"gem\",\n    \"gemini\",\n    \"gender\",\n    \"gene\",\n    \"geneva\",\n    \"genial\",\n    \"genius\",\n    \"genre\",\n    \"gentle\",\n    \"gently\",\n    \"gentry\",\n    \"genus\",\n    \"george\",\n    \"germ\",\n    \"get\",\n    \"ghetto\",\n    \"ghost\",\n    \"giant\",\n    \"gift\",\n    \"giggle\",\n    \"gill\",\n    \"gilt\",\n    \"ginger\",\n    \"girl\",\n    \"give\",\n    \"given\",\n    \"glad\",\n    \"glade\",\n    \"glance\",\n    \"gland\",\n    \"glare\",\n    \"glass\",\n    \"glassy\",\n    \"gleam\",\n    \"glee\",\n    \"glide\",\n    \"global\",\n    \"globe\",\n    \"gloom\",\n    \"gloomy\",\n    \"gloria\",\n    \"glory\",\n    \"gloss\",\n    \"glossy\",\n    \"glove\",\n    \"glow\",\n    \"glue\",\n    \"gnat\",\n    \"gnu\",\n    \"goal\",\n    \"goat\",\n    \"gold\",\n    \"golden\",\n    \"golf\",\n    \"gone\",\n    \"gong\",\n    \"goo\",\n    \"good\",\n    \"goose\",\n    \"gore\",\n    \"gorge\",\n    \"gory\",\n    \"gosh\",\n    \"gospel\",\n    \"gossip\",\n    \"got\",\n    \"gothic\",\n    \"govern\",\n    \"gown\",\n    \"grab\",\n    \"grace\",\n    \"grade\",\n    \"grail\",\n    \"grain\",\n    \"grand\",\n    \"grant\",\n    \"grape\",\n    \"graph\",\n    \"grasp\",\n    \"grass\",\n    \"grassy\",\n    \"grate\",\n    \"grave\",\n    \"gravel\",\n    \"gravy\",\n    \"grease\",\n    \"greasy\",\n    \"great\",\n    \"greece\",\n    \"greed\",\n    \"greedy\",\n    \"greek\",\n    \"green\",\n    \"greet\",\n    \"grew\",\n    \"grey\",\n    \"grid\",\n    \"grief\",\n    \"grill\",\n    \"grim\",\n    \"grin\",\n    \"grind\",\n    \"grip\",\n    \"grit\",\n    \"gritty\",\n    \"groan\",\n    \"groin\",\n    \"groom\",\n    \"groove\",\n    \"gross\",\n    \"ground\",\n    \"group\",\n    \"grove\",\n    \"grow\",\n    \"grown\",\n    \"growth\",\n    \"grudge\",\n    \"grunt\",\n    \"guard\",\n    \"guess\",\n    \"guest\",\n    \"guide\",\n    \"guild\",\n    \"guilt\",\n    \"guilty\",\n    \"guise\",\n    \"guitar\",\n    \"gulf\",\n    \"gully\",\n    \"gun\",\n    \"gunman\",\n    \"guru\",\n    \"gut\",\n    \"guy\",\n    \"gypsy\",\n    \"habit\",\n    \"hack\",\n    \"had\",\n    \"hail\",\n    \"hair\",\n    \"hairy\",\n    \"haiti\",\n    \"hale\",\n    \"half\",\n    \"hall\",\n    \"halt\",\n    \"hamlet\",\n    \"hammer\",\n    \"hand\",\n    \"handle\",\n    \"handy\",\n    \"hang\",\n    \"hangar\",\n    \"hanoi\",\n    \"happen\",\n    \"happy\",\n    \"harass\",\n    \"harbor\",\n    \"hard\",\n    \"harder\",\n    \"hardly\",\n    \"hare\",\n    \"harem\",\n    \"harm\",\n    \"harp\",\n    \"harry\",\n    \"harsh\",\n    \"has\",\n    \"hash\",\n    \"hassle\",\n    \"haste\",\n    \"hasten\",\n    \"hasty\",\n    \"hat\",\n    \"hatch\",\n    \"hate\",\n    \"haul\",\n    \"haunt\",\n    \"havana\",\n    \"have\",\n    \"haven\",\n    \"havoc\",\n    \"hawaii\",\n    \"hawk\",\n    \"hay\",\n    \"hazard\",\n    \"haze\",\n    \"hazel\",\n    \"hazy\",\n    \"head\",\n    \"heal\",\n    \"health\",\n    \"heap\",\n    \"hear\",\n    \"heard\",\n    \"heart\",\n    \"hearth\",\n    \"hearty\",\n    \"heat\",\n    \"heater\",\n    \"heaven\",\n    \"heavy\",\n    \"hebrew\",\n    \"heck\",\n    \"hectic\",\n    \"hedge\",\n    \"heel\",\n    \"hefty\",\n    \"height\",\n    \"heir\",\n    \"held\",\n    \"helium\",\n    \"helix\",\n    \"hell\",\n    \"hello\",\n    \"helm\",\n    \"helmet\",\n    \"help\",\n    \"hemp\",\n    \"hence\",\n    \"henry\",\n    \"her\",\n    \"herald\",\n    \"herb\",\n    \"herd\",\n    \"here\",\n    \"hereby\",\n    \"hermes\",\n    \"hernia\",\n    \"hero\",\n    \"heroic\",\n    \"heroin\",\n    \"hey\",\n    \"heyday\",\n    \"hick\",\n    \"hidden\",\n    \"hide\",\n    \"high\",\n    \"higher\",\n    \"highly\",\n    \"hill\",\n    \"him\",\n    \"hind\",\n    \"hinder\",\n    \"hint\",\n    \"hippie\",\n    \"hire\",\n    \"his\",\n    \"hiss\",\n    \"hit\",\n    \"hive\",\n    \"hoard\",\n    \"hoarse\",\n    \"hobby\",\n    \"hockey\",\n    \"hold\",\n    \"holder\",\n    \"hole\",\n    \"hollow\",\n    \"holly\",\n    \"holy\",\n    \"home\",\n    \"honest\",\n    \"honey\",\n    \"hood\",\n    \"hook\",\n    \"hope\",\n    \"horn\",\n    \"horrid\",\n    \"horror\",\n    \"horse\",\n    \"hose\",\n    \"host\",\n    \"hot\",\n    \"hotel\",\n    \"hound\",\n    \"hour\",\n    \"house\",\n    \"hover\",\n    \"how\",\n    \"huge\",\n    \"hull\",\n    \"human\",\n    \"humane\",\n    \"humble\",\n    \"humid\",\n    \"hung\",\n    \"hunger\",\n    \"hungry\",\n    \"hunt\",\n    \"hurdle\",\n    \"hurl\",\n    \"hurry\",\n    \"hurt\",\n    \"hush\",\n    \"hut\",\n    \"hybrid\",\n    \"hymn\",\n    \"hyphen\",\n    \"ice\",\n    \"icing\",\n    \"icon\",\n    \"idaho\",\n    \"idea\",\n    \"ideal\",\n    \"idiom\",\n    \"idiot\",\n    \"idle\",\n    \"idly\",\n    \"idol\",\n    \"ignite\",\n    \"ignore\",\n    \"ill\",\n    \"image\",\n    \"immune\",\n    \"impact\",\n    \"imply\",\n    \"import\",\n    \"impose\",\n    \"inca\",\n    \"incest\",\n    \"inch\",\n    \"income\",\n    \"incur\",\n    \"indeed\",\n    \"index\",\n    \"india\",\n    \"indian\",\n    \"indoor\",\n    \"induce\",\n    \"inept\",\n    \"inert\",\n    \"infant\",\n    \"infect\",\n    \"infer\",\n    \"influx\",\n    \"inform\",\n    \"inject\",\n    \"injure\",\n    \"injury\",\n    \"ink\",\n    \"inlaid\",\n    \"inland\",\n    \"inlet\",\n    \"inmate\",\n    \"inn\",\n    \"innate\",\n    \"inner\",\n    \"input\",\n    \"insane\",\n    \"insect\",\n    \"insert\",\n    \"inset\",\n    \"inside\",\n    \"insist\",\n    \"insult\",\n    \"insure\",\n    \"intact\",\n    \"intake\",\n    \"intend\",\n    \"inter\",\n    \"into\",\n    \"invade\",\n    \"invent\",\n    \"invest\",\n    \"invite\",\n    \"invoke\",\n    \"inward\",\n    \"iowa\",\n    \"iran\",\n    \"iraq\",\n    \"irish\",\n    \"iron\",\n    \"ironic\",\n    \"irony\",\n    \"isaac\",\n    \"isabel\",\n    \"island\",\n    \"isle\",\n    \"israel\",\n    \"issue\",\n    \"italy\",\n    \"itch\",\n    \"item\",\n    \"itself\",\n    \"ivan\",\n    \"ivory\",\n    \"jack\",\n    \"jacket\",\n    \"jacob\",\n    \"jade\",\n    \"jaguar\",\n    \"jail\",\n    \"james\",\n    \"jane\",\n    \"japan\",\n    \"jargon\",\n    \"java\",\n    \"jaw\",\n    \"jazz\",\n    \"jeep\",\n    \"jelly\",\n    \"jerky\",\n    \"jest\",\n    \"jet\",\n    \"jewel\",\n    \"jewish\",\n    \"jim\",\n    \"job\",\n    \"jock\",\n    \"jockey\",\n    \"joe\",\n    \"john\",\n    \"join\",\n    \"joint\",\n    \"joke\",\n    \"jolly\",\n    \"jolt\",\n    \"jordan\",\n    \"joseph\",\n    \"joy\",\n    \"joyful\",\n    \"joyous\",\n    \"judge\",\n    \"judy\",\n    \"juice\",\n    \"juicy\",\n    \"july\",\n    \"jumble\",\n    \"jumbo\",\n    \"jump\",\n    \"june\",\n    \"jungle\",\n    \"junior\",\n    \"junk\",\n    \"junta\",\n    \"jury\",\n    \"just\",\n    \"kansas\",\n    \"karate\",\n    \"karl\",\n    \"keel\",\n    \"keen\",\n    \"keep\",\n    \"keeper\",\n    \"kenya\",\n    \"kept\",\n    \"kernel\",\n    \"kettle\",\n    \"key\",\n    \"khaki\",\n    \"kick\",\n    \"kid\",\n    \"kidnap\",\n    \"kidney\",\n    \"kill\",\n    \"killer\",\n    \"kin\",\n    \"kind\",\n    \"kindly\",\n    \"king\",\n    \"kiss\",\n    \"kite\",\n    \"kitten\",\n    \"knack\",\n    \"knee\",\n    \"kneel\",\n    \"knew\",\n    \"knife\",\n    \"knight\",\n    \"knit\",\n    \"knob\",\n    \"knock\",\n    \"knot\",\n    \"know\",\n    \"known\",\n    \"koran\",\n    \"korea\",\n    \"kuwait\",\n    \"label\",\n    \"lace\",\n    \"lack\",\n    \"lad\",\n    \"ladder\",\n    \"laden\",\n    \"lady\",\n    \"lagoon\",\n    \"laity\",\n    \"lake\",\n    \"lamb\",\n    \"lame\",\n    \"lamp\",\n    \"lance\",\n    \"land\",\n    \"lane\",\n    \"lap\",\n    \"lapse\",\n    \"large\",\n    \"larval\",\n    \"laser\",\n    \"last\",\n    \"latch\",\n    \"late\",\n    \"lately\",\n    \"latent\",\n    \"later\",\n    \"latest\",\n    \"latin\",\n    \"latter\",\n    \"laugh\",\n    \"launch\",\n    \"lava\",\n    \"lavish\",\n    \"law\",\n    \"lawful\",\n    \"lawn\",\n    \"lawyer\",\n    \"lay\",\n    \"layer\",\n    \"layman\",\n    \"lazy\",\n    \"lead\",\n    \"leader\",\n    \"leaf\",\n    \"leafy\",\n    \"league\",\n    \"leak\",\n    \"leaky\",\n    \"lean\",\n    \"leap\",\n    \"learn\",\n    \"lease\",\n    \"leash\",\n    \"least\",\n    \"leave\",\n    \"led\",\n    \"ledge\",\n    \"left\",\n    \"leg\",\n    \"legacy\",\n    \"legal\",\n    \"legend\",\n    \"legion\",\n    \"lemon\",\n    \"lend\",\n    \"length\",\n    \"lens\",\n    \"lent\",\n    \"leo\",\n    \"leper\",\n    \"lesion\",\n    \"less\",\n    \"lessen\",\n    \"lesser\",\n    \"lesson\",\n    \"lest\",\n    \"let\",\n    \"lethal\",\n    \"letter\",\n    \"level\",\n    \"lever\",\n    \"levy\",\n    \"lewis\",\n    \"liable\",\n    \"liar\",\n    \"libel\",\n    \"libya\",\n    \"lice\",\n    \"lick\",\n    \"lid\",\n    \"lie\",\n    \"lied\",\n    \"lier\",\n    \"life\",\n    \"lift\",\n    \"light\",\n    \"like\",\n    \"likely\",\n    \"limb\",\n    \"lime\",\n    \"limit\",\n    \"limp\",\n    \"line\",\n    \"linear\",\n    \"linen\",\n    \"linger\",\n    \"link\",\n    \"lint\",\n    \"lion\",\n    \"lip\",\n    \"liquid\",\n    \"liquor\",\n    \"list\",\n    \"listen\",\n    \"lit\",\n    \"live\",\n    \"lively\",\n    \"liver\",\n    \"liz\",\n    \"lizard\",\n    \"load\",\n    \"loaf\",\n    \"loan\",\n    \"lobby\",\n    \"lobe\",\n    \"local\",\n    \"locate\",\n    \"lock\",\n    \"locus\",\n    \"lodge\",\n    \"loft\",\n    \"lofty\",\n    \"log\",\n    \"logic\",\n    \"logo\",\n    \"london\",\n    \"lone\",\n    \"lonely\",\n    \"long\",\n    \"longer\",\n    \"look\",\n    \"loop\",\n    \"loose\",\n    \"loosen\",\n    \"loot\",\n    \"lord\",\n    \"lorry\",\n    \"lose\",\n    \"loss\",\n    \"lost\",\n    \"lot\",\n    \"lotion\",\n    \"lotus\",\n    \"loud\",\n    \"loudly\",\n    \"lounge\",\n    \"lousy\",\n    \"love\",\n    \"lovely\",\n    \"lover\",\n    \"low\",\n    \"lower\",\n    \"lowest\",\n    \"loyal\",\n    \"lucid\",\n    \"luck\",\n    \"lucky\",\n    \"lucy\",\n    \"lull\",\n    \"lump\",\n    \"lumpy\",\n    \"lunacy\",\n    \"lunar\",\n    \"lunch\",\n    \"lung\",\n    \"lure\",\n    \"lurid\",\n    \"lush\",\n    \"lust\",\n    \"lute\",\n    \"luther\",\n    \"luxury\",\n    \"lying\",\n    \"lymph\",\n    \"lynch\",\n    \"lyric\",\n    \"macho\",\n    \"macro\",\n    \"mad\",\n    \"madam\",\n    \"made\",\n    \"mafia\",\n    \"magic\",\n    \"magma\",\n    \"magnet\",\n    \"magnum\",\n    \"magpie\",\n    \"maid\",\n    \"maiden\",\n    \"mail\",\n    \"main\",\n    \"mainly\",\n    \"major\",\n    \"make\",\n    \"maker\",\n    \"male\",\n    \"malice\",\n    \"mall\",\n    \"malt\",\n    \"mammal\",\n    \"manage\",\n    \"mane\",\n    \"mania\",\n    \"manic\",\n    \"manner\",\n    \"manor\",\n    \"mantle\",\n    \"manual\",\n    \"manure\",\n    \"many\",\n    \"map\",\n    \"maple\",\n    \"marble\",\n    \"march\",\n    \"mare\",\n    \"margin\",\n    \"maria\",\n    \"marina\",\n    \"mark\",\n    \"market\",\n    \"marry\",\n    \"mars\",\n    \"marsh\",\n    \"martin\",\n    \"martyr\",\n    \"mary\",\n    \"mask\",\n    \"mason\",\n    \"mass\",\n    \"mast\",\n    \"master\",\n    \"mat\",\n    \"match\",\n    \"mate\",\n    \"matrix\",\n    \"matter\",\n    \"mature\",\n    \"maxim\",\n    \"may\",\n    \"maybe\",\n    \"mayor\",\n    \"maze\",\n    \"mead\",\n    \"meadow\",\n    \"meal\",\n    \"mean\",\n    \"meant\",\n    \"meat\",\n    \"medal\",\n    \"media\",\n    \"median\",\n    \"medic\",\n    \"medium\",\n    \"meet\",\n    \"mellow\",\n    \"melody\",\n    \"melon\",\n    \"melt\",\n    \"member\",\n    \"memo\",\n    \"memory\",\n    \"menace\",\n    \"mend\",\n    \"mental\",\n    \"mentor\",\n    \"menu\",\n    \"mercy\",\n    \"mere\",\n    \"merely\",\n    \"merge\",\n    \"merger\",\n    \"merit\",\n    \"merry\",\n    \"mesh\",\n    \"mess\",\n    \"messy\",\n    \"met\",\n    \"metal\",\n    \"meter\",\n    \"method\",\n    \"methyl\",\n    \"metric\",\n    \"metro\",\n    \"mexico\",\n    \"miami\",\n    \"mickey\",\n    \"mid\",\n    \"midday\",\n    \"middle\",\n    \"midst\",\n    \"midway\",\n    \"might\",\n    \"mighty\",\n    \"mild\",\n    \"mildew\",\n    \"mile\",\n    \"milk\",\n    \"milky\",\n    \"mill\",\n    \"mimic\",\n    \"mince\",\n    \"mind\",\n    \"mine\",\n    \"mini\",\n    \"mink\",\n    \"minor\",\n    \"mint\",\n    \"minus\",\n    \"minute\",\n    \"mire\",\n    \"mirror\",\n    \"mirth\",\n    \"misery\",\n    \"miss\",\n    \"mist\",\n    \"misty\",\n    \"mite\",\n    \"mix\",\n    \"moan\",\n    \"moat\",\n    \"mob\",\n    \"mobile\",\n    \"mock\",\n    \"mode\",\n    \"model\",\n    \"modem\",\n    \"modern\",\n    \"modest\",\n    \"modify\",\n    \"module\",\n    \"moist\",\n    \"molar\",\n    \"mold\",\n    \"mole\",\n    \"molten\",\n    \"moment\",\n    \"monday\",\n    \"money\",\n    \"monk\",\n    \"monkey\",\n    \"month\",\n    \"mood\",\n    \"moody\",\n    \"moon\",\n    \"moor\",\n    \"moral\",\n    \"morale\",\n    \"morbid\",\n    \"more\",\n    \"morgue\",\n    \"mortal\",\n    \"mortar\",\n    \"mosaic\",\n    \"moscow\",\n    \"moses\",\n    \"mosque\",\n    \"moss\",\n    \"most\",\n    \"mostly\",\n    \"moth\",\n    \"mother\",\n    \"motion\",\n    \"motive\",\n    \"motor\",\n    \"mount\",\n    \"mourn\",\n    \"mouse\",\n    \"mouth\",\n    \"move\",\n    \"movie\",\n    \"mrs\",\n    \"much\",\n    \"muck\",\n    \"mucus\",\n    \"mud\",\n    \"muddle\",\n    \"muddy\",\n    \"mule\",\n    \"mummy\",\n    \"munich\",\n    \"murder\",\n    \"murky\",\n    \"murmur\",\n    \"muscle\",\n    \"museum\",\n    \"music\",\n    \"mussel\",\n    \"must\",\n    \"mutant\",\n    \"mute\",\n    \"mutiny\",\n    \"mutter\",\n    \"mutton\",\n    \"mutual\",\n    \"muzzle\",\n    \"myopic\",\n    \"myriad\",\n    \"myself\",\n    \"mystic\",\n    \"myth\",\n    \"nadir\",\n    \"nail\",\n    \"naked\",\n    \"name\",\n    \"namely\",\n    \"nape\",\n    \"napkin\",\n    \"naples\",\n    \"narrow\",\n    \"nasal\",\n    \"nasty\",\n    \"nathan\",\n    \"nation\",\n    \"native\",\n    \"nature\",\n    \"nausea\",\n    \"naval\",\n    \"nave\",\n    \"navy\",\n    \"near\",\n    \"nearer\",\n    \"nearly\",\n    \"neat\",\n    \"neatly\",\n    \"neck\",\n    \"need\",\n    \"needle\",\n    \"needy\",\n    \"negate\",\n    \"neon\",\n    \"nepal\",\n    \"nephew\",\n    \"nerve\",\n    \"nest\",\n    \"net\",\n    \"neural\",\n    \"never\",\n    \"newly\",\n    \"next\",\n    \"nice\",\n    \"nicely\",\n    \"niche\",\n    \"nickel\",\n    \"niece\",\n    \"night\",\n    \"nile\",\n    \"nimble\",\n    \"nine\",\n    \"ninety\",\n    \"ninth\",\n    \"nobel\",\n    \"noble\",\n    \"nobody\",\n    \"node\",\n    \"noise\",\n    \"noisy\",\n    \"none\",\n    \"noon\",\n    \"nor\",\n    \"norm\",\n    \"normal\",\n    \"north\",\n    \"norway\",\n    \"nose\",\n    \"nosy\",\n    \"not\",\n    \"note\",\n    \"notice\",\n    \"notify\",\n    \"notion\",\n    \"noun\",\n    \"novel\",\n    \"novice\",\n    \"now\",\n    \"nozzle\",\n    \"null\",\n    \"numb\",\n    \"number\",\n    \"nurse\",\n    \"nut\",\n    \"nylon\",\n    \"nymph\",\n    \"oak\",\n    \"oar\",\n    \"oasis\",\n    \"oath\",\n    \"obese\",\n    \"obey\",\n    \"object\",\n    \"oblige\",\n    \"oboe\",\n    \"obtain\",\n    \"obtuse\",\n    \"occult\",\n    \"occupy\",\n    \"occur\",\n    \"ocean\",\n    \"octave\",\n    \"odd\",\n    \"off\",\n    \"offend\",\n    \"offer\",\n    \"office\",\n    \"offset\",\n    \"often\",\n    \"ohio\",\n    \"oil\",\n    \"oily\",\n    \"okay\",\n    \"old\",\n    \"older\",\n    \"oldest\",\n    \"olive\",\n    \"omega\",\n    \"omen\",\n    \"omit\",\n    \"once\",\n    \"one\",\n    \"onion\",\n    \"only\",\n    \"onset\",\n    \"onto\",\n    \"onus\",\n    \"onward\",\n    \"opaque\",\n    \"open\",\n    \"openly\",\n    \"opera\",\n    \"opium\",\n    \"oppose\",\n    \"optic\",\n    \"option\",\n    \"oracle\",\n    \"oral\",\n    \"orange\",\n    \"orbit\",\n    \"orchid\",\n    \"ordeal\",\n    \"order\",\n    \"organ\",\n    \"orgasm\",\n    \"orient\",\n    \"origin\",\n    \"ornate\",\n    \"orphan\",\n    \"oscar\",\n    \"other\",\n    \"otter\",\n    \"ought\",\n    \"ounce\",\n    \"our\",\n    \"out\",\n    \"outer\",\n    \"output\",\n    \"outset\",\n    \"oval\",\n    \"oven\",\n    \"over\",\n    \"overt\",\n    \"owe\",\n    \"owing\",\n    \"owl\",\n    \"own\",\n    \"owner\",\n    \"oxford\",\n    \"oxide\",\n    \"oxygen\",\n    \"oyster\",\n    \"ozone\",\n    \"pace\",\n    \"pack\",\n    \"packet\",\n    \"pact\",\n    \"pad\",\n    \"paddle\",\n    \"paddy\",\n    \"pagan\",\n    \"page\",\n    \"paid\",\n    \"pain\",\n    \"paint\",\n    \"pair\",\n    \"palace\",\n    \"pale\",\n    \"palm\",\n    \"pan\",\n    \"panama\",\n    \"panel\",\n    \"panic\",\n    \"papa\",\n    \"papal\",\n    \"paper\",\n    \"parade\",\n    \"parcel\",\n    \"pardon\",\n    \"parent\",\n    \"paris\",\n    \"parish\",\n    \"park\",\n    \"parody\",\n    \"parrot\",\n    \"part\",\n    \"partly\",\n    \"party\",\n    \"pascal\",\n    \"pass\",\n    \"past\",\n    \"paste\",\n    \"pastel\",\n    \"pastor\",\n    \"pastry\",\n    \"pat\",\n    \"patch\",\n    \"patent\",\n    \"path\",\n    \"patio\",\n    \"patrol\",\n    \"patron\",\n    \"paul\",\n    \"pause\",\n    \"pave\",\n    \"paw\",\n    \"pawn\",\n    \"pay\",\n    \"peace\",\n    \"peach\",\n    \"peak\",\n    \"pear\",\n    \"pearl\",\n    \"pedal\",\n    \"peel\",\n    \"peer\",\n    \"peking\",\n    \"pelvic\",\n    \"pelvis\",\n    \"pen\",\n    \"penal\",\n    \"pence\",\n    \"pencil\",\n    \"penny\",\n    \"people\",\n    \"pepper\",\n    \"per\",\n    \"perch\",\n    \"peril\",\n    \"period\",\n    \"perish\",\n    \"permit\",\n    \"person\",\n    \"peru\",\n    \"pest\",\n    \"pet\",\n    \"peter\",\n    \"petite\",\n    \"petrol\",\n    \"petty\",\n    \"phase\",\n    \"philip\",\n    \"phone\",\n    \"photo\",\n    \"phrase\",\n    \"piano\",\n    \"pick\",\n    \"picket\",\n    \"picnic\",\n    \"pie\",\n    \"piece\",\n    \"pier\",\n    \"pierce\",\n    \"piety\",\n    \"pig\",\n    \"pigeon\",\n    \"piggy\",\n    \"pike\",\n    \"pile\",\n    \"pill\",\n    \"pillar\",\n    \"pillow\",\n    \"pilot\",\n    \"pin\",\n    \"pinch\",\n    \"pine\",\n    \"pink\",\n    \"pint\",\n    \"pious\",\n    \"pipe\",\n    \"pirate\",\n    \"piss\",\n    \"pistol\",\n    \"piston\",\n    \"pit\",\n    \"pitch\",\n    \"pity\",\n    \"pivot\",\n    \"pixel\",\n    \"pizza\",\n    \"place\",\n    \"placid\",\n    \"plague\",\n    \"plain\",\n    \"plan\",\n    \"plane\",\n    \"planet\",\n    \"plank\",\n    \"plant\",\n    \"plasma\",\n    \"plate\",\n    \"play\",\n    \"player\",\n    \"plea\",\n    \"plead\",\n    \"please\",\n    \"pledge\",\n    \"plenty\",\n    \"plight\",\n    \"plot\",\n    \"plough\",\n    \"ploy\",\n    \"plug\",\n    \"plum\",\n    \"plump\",\n    \"plunge\",\n    \"plural\",\n    \"plus\",\n    \"plush\",\n    \"pocket\",\n    \"poem\",\n    \"poet\",\n    \"poetic\",\n    \"poetry\",\n    \"point\",\n    \"poison\",\n    \"poland\",\n    \"polar\",\n    \"pole\",\n    \"police\",\n    \"policy\",\n    \"polish\",\n    \"polite\",\n    \"poll\",\n    \"pollen\",\n    \"polo\",\n    \"pond\",\n    \"ponder\",\n    \"pony\",\n    \"pool\",\n    \"poor\",\n    \"poorly\",\n    \"pop\",\n    \"poppy\",\n    \"pore\",\n    \"pork\",\n    \"port\",\n    \"portal\",\n    \"pose\",\n    \"posh\",\n    \"post\",\n    \"postal\",\n    \"pot\",\n    \"potato\",\n    \"potent\",\n    \"pouch\",\n    \"pound\",\n    \"pour\",\n    \"powder\",\n    \"power\",\n    \"praise\",\n    \"pray\",\n    \"prayer\",\n    \"preach\",\n    \"prefer\",\n    \"prefix\",\n    \"press\",\n    \"pretty\",\n    \"price\",\n    \"pride\",\n    \"priest\",\n    \"primal\",\n    \"prime\",\n    \"prince\",\n    \"print\",\n    \"prior\",\n    \"prism\",\n    \"prison\",\n    \"privy\",\n    \"prize\",\n    \"probe\",\n    \"profit\",\n    \"prompt\",\n    \"prone\",\n    \"proof\",\n    \"propel\",\n    \"proper\",\n    \"prose\",\n    \"proton\",\n    \"proud\",\n    \"prove\",\n    \"proven\",\n    \"proxy\",\n    \"prune\",\n    \"pry\",\n    \"psalm\",\n    \"pseudo\",\n    \"psyche\",\n    \"pub\",\n    \"public\",\n    \"puff\",\n    \"pull\",\n    \"pulp\",\n    \"pulpit\",\n    \"pulsar\",\n    \"pulse\",\n    \"pump\",\n    \"punch\",\n    \"punish\",\n    \"punk\",\n    \"pupil\",\n    \"puppet\",\n    \"puppy\",\n    \"pure\",\n    \"purely\",\n    \"purge\",\n    \"purify\",\n    \"purple\",\n    \"purse\",\n    \"pursue\",\n    \"push\",\n    \"pushy\",\n    \"put\",\n    \"putt\",\n    \"puzzle\",\n    \"quaint\",\n    \"quake\",\n    \"quarry\",\n    \"quart\",\n    \"quartz\",\n    \"quebec\",\n    \"queen\",\n    \"queer\",\n    \"query\",\n    \"quest\",\n    \"queue\",\n    \"quick\",\n    \"quid\",\n    \"quiet\",\n    \"quilt\",\n    \"quirk\",\n    \"quit\",\n    \"quite\",\n    \"quiver\",\n    \"quiz\",\n    \"quota\",\n    \"quote\",\n    \"rabbit\",\n    \"race\",\n    \"racial\",\n    \"racism\",\n    \"rack\",\n    \"racket\",\n    \"radar\",\n    \"radio\",\n    \"radish\",\n    \"radius\",\n    \"raffle\",\n    \"raft\",\n    \"rage\",\n    \"raid\",\n    \"rail\",\n    \"rain\",\n    \"rainy\",\n    \"raise\",\n    \"rake\",\n    \"rally\",\n    \"ramp\",\n    \"random\",\n    \"range\",\n    \"rank\",\n    \"ransom\",\n    \"rape\",\n    \"rapid\",\n    \"rare\",\n    \"rarely\",\n    \"rarity\",\n    \"rash\",\n    \"rat\",\n    \"rate\",\n    \"rather\",\n    \"ratify\",\n    \"ratio\",\n    \"rattle\",\n    \"rave\",\n    \"raven\",\n    \"raw\",\n    \"ray\",\n    \"razor\",\n    \"reach\",\n    \"react\",\n    \"read\",\n    \"reader\",\n    \"ready\",\n    \"real\",\n    \"really\",\n    \"realm\",\n    \"reap\",\n    \"rear\",\n    \"reason\",\n    \"rebel\",\n    \"recall\",\n    \"recent\",\n    \"recess\",\n    \"recipe\",\n    \"reckon\",\n    \"record\",\n    \"recoup\",\n    \"rector\",\n    \"red\",\n    \"redeem\",\n    \"redo\",\n    \"reduce\",\n    \"reed\",\n    \"reef\",\n    \"reek\",\n    \"refer\",\n    \"reform\",\n    \"refuge\",\n    \"refuse\",\n    \"regal\",\n    \"regard\",\n    \"regent\",\n    \"regime\",\n    \"region\",\n    \"regret\",\n    \"reign\",\n    \"reject\",\n    \"relate\",\n    \"relax\",\n    \"relay\",\n    \"relic\",\n    \"relief\",\n    \"relish\",\n    \"rely\",\n    \"remain\",\n    \"remark\",\n    \"remedy\",\n    \"remind\",\n    \"remit\",\n    \"remote\",\n    \"remove\",\n    \"renal\",\n    \"render\",\n    \"rent\",\n    \"rental\",\n    \"repair\",\n    \"repeal\",\n    \"repeat\",\n    \"repent\",\n    \"reply\",\n    \"report\",\n    \"rescue\",\n    \"resent\",\n    \"reside\",\n    \"resign\",\n    \"resin\",\n    \"resist\",\n    \"resort\",\n    \"rest\",\n    \"result\",\n    \"resume\",\n    \"retail\",\n    \"retain\",\n    \"retina\",\n    \"retire\",\n    \"return\",\n    \"reveal\",\n    \"review\",\n    \"revise\",\n    \"revive\",\n    \"revolt\",\n    \"reward\",\n    \"rex\",\n    \"rhine\",\n    \"rhino\",\n    \"rhyme\",\n    \"rhythm\",\n    \"ribbon\",\n    \"rice\",\n    \"rich\",\n    \"rick\",\n    \"rid\",\n    \"ride\",\n    \"rider\",\n    \"ridge\",\n    \"rife\",\n    \"rifle\",\n    \"rift\",\n    \"right\",\n    \"rigid\",\n    \"rile\",\n    \"rim\",\n    \"ring\",\n    \"rinse\",\n    \"riot\",\n    \"ripe\",\n    \"ripen\",\n    \"ripple\",\n    \"rise\",\n    \"risk\",\n    \"risky\",\n    \"rite\",\n    \"ritual\",\n    \"ritz\",\n    \"rival\",\n    \"river\",\n    \"road\",\n    \"roar\",\n    \"roast\",\n    \"rob\",\n    \"robe\",\n    \"robert\",\n    \"robin\",\n    \"robot\",\n    \"robust\",\n    \"rock\",\n    \"rocket\",\n    \"rocky\",\n    \"rod\",\n    \"rode\",\n    \"rodent\",\n    \"rogue\",\n    \"role\",\n    \"roll\",\n    \"roman\",\n    \"rome\",\n    \"roof\",\n    \"room\",\n    \"root\",\n    \"rope\",\n    \"rose\",\n    \"rosy\",\n    \"rot\",\n    \"rotate\",\n    \"rotor\",\n    \"rotten\",\n    \"rouge\",\n    \"rough\",\n    \"round\",\n    \"route\",\n    \"rover\",\n    \"row\",\n    \"royal\",\n    \"rub\",\n    \"rubber\",\n    \"rubble\",\n    \"ruby\",\n    \"rudder\",\n    \"rude\",\n    \"rug\",\n    \"rugby\",\n    \"ruin\",\n    \"rule\",\n    \"ruler\",\n    \"rumble\",\n    \"rump\",\n    \"run\",\n    \"rune\",\n    \"rung\",\n    \"runway\",\n    \"rural\",\n    \"rush\",\n    \"russia\",\n    \"rust\",\n    \"rustic\",\n    \"rusty\",\n    \"sack\",\n    \"sacred\",\n    \"sad\",\n    \"saddle\",\n    \"sadism\",\n    \"sadly\",\n    \"safari\",\n    \"safe\",\n    \"safely\",\n    \"safer\",\n    \"safety\",\n    \"saga\",\n    \"sage\",\n    \"sahara\",\n    \"said\",\n    \"sail\",\n    \"sailor\",\n    \"saint\",\n    \"sake\",\n    \"salad\",\n    \"salary\",\n    \"sale\",\n    \"saline\",\n    \"saliva\",\n    \"salmon\",\n    \"saloon\",\n    \"salt\",\n    \"salty\",\n    \"salute\",\n    \"sam\",\n    \"same\",\n    \"sample\",\n    \"sand\",\n    \"sandy\",\n    \"sane\",\n    \"sash\",\n    \"satin\",\n    \"satire\",\n    \"saturn\",\n    \"sauce\",\n    \"saucer\",\n    \"saudi\",\n    \"sauna\",\n    \"savage\",\n    \"save\",\n    \"saw\",\n    \"say\",\n    \"scale\",\n    \"scalp\",\n    \"scan\",\n    \"scant\",\n    \"scar\",\n    \"scarce\",\n    \"scare\",\n    \"scarf\",\n    \"scary\",\n    \"scene\",\n    \"scenic\",\n    \"scent\",\n    \"school\",\n    \"scold\",\n    \"scope\",\n    \"score\",\n    \"scorn\",\n    \"scotch\",\n    \"scott\",\n    \"scout\",\n    \"scrap\",\n    \"scrape\",\n    \"scream\",\n    \"screen\",\n    \"screw\",\n    \"script\",\n    \"scroll\",\n    \"scrub\",\n    \"scum\",\n    \"sea\",\n    \"seal\",\n    \"seam\",\n    \"seaman\",\n    \"search\",\n    \"season\",\n    \"seat\",\n    \"second\",\n    \"secret\",\n    \"sect\",\n    \"sector\",\n    \"secure\",\n    \"see\",\n    \"seed\",\n    \"seeing\",\n    \"seek\",\n    \"seem\",\n    \"seize\",\n    \"seldom\",\n    \"select\",\n    \"self\",\n    \"sell\",\n    \"seller\",\n    \"semi\",\n    \"senate\",\n    \"send\",\n    \"senile\",\n    \"senior\",\n    \"sense\",\n    \"sensor\",\n    \"sent\",\n    \"sentry\",\n    \"seoul\",\n    \"sequel\",\n    \"serene\",\n    \"serial\",\n    \"series\",\n    \"sermon\",\n    \"serum\",\n    \"serve\",\n    \"server\",\n    \"set\",\n    \"settle\",\n    \"seven\",\n    \"severe\",\n    \"sew\",\n    \"sewage\",\n    \"shabby\",\n    \"shade\",\n    \"shadow\",\n    \"shady\",\n    \"shaft\",\n    \"shaggy\",\n    \"shah\",\n    \"shake\",\n    \"shaky\",\n    \"shall\",\n    \"sham\",\n    \"shame\",\n    \"shape\",\n    \"share\",\n    \"shark\",\n    \"sharp\",\n    \"shawl\",\n    \"she\",\n    \"shear\",\n    \"sheen\",\n    \"sheep\",\n    \"sheer\",\n    \"sheet\",\n    \"shelf\",\n    \"shell\",\n    \"sherry\",\n    \"shield\",\n    \"shift\",\n    \"shine\",\n    \"shiny\",\n    \"ship\",\n    \"shire\",\n    \"shirk\",\n    \"shirt\",\n    \"shiver\",\n    \"shock\",\n    \"shoe\",\n    \"shook\",\n    \"shoot\",\n    \"shop\",\n    \"shore\",\n    \"short\",\n    \"shot\",\n    \"should\",\n    \"shout\",\n    \"show\",\n    \"shower\",\n    \"shrank\",\n    \"shrewd\",\n    \"shrill\",\n    \"shrimp\",\n    \"shrine\",\n    \"shrink\",\n    \"shrub\",\n    \"shrug\",\n    \"shut\",\n    \"shy\",\n    \"shyly\",\n    \"sick\",\n    \"side\",\n    \"siege\",\n    \"sigh\",\n    \"sight\",\n    \"sigma\",\n    \"sign\",\n    \"signal\",\n    \"silent\",\n    \"silk\",\n    \"silken\",\n    \"silky\",\n    \"sill\",\n    \"silly\",\n    \"silo\",\n    \"silver\",\n    \"simple\",\n    \"simply\",\n    \"since\",\n    \"sinful\",\n    \"sing\",\n    \"singer\",\n    \"single\",\n    \"sink\",\n    \"sir\",\n    \"sire\",\n    \"siren\",\n    \"sister\",\n    \"sit\",\n    \"site\",\n    \"sitter\",\n    \"six\",\n    \"sixth\",\n    \"sixty\",\n    \"size\",\n    \"sketch\",\n    \"skill\",\n    \"skin\",\n    \"skinny\",\n    \"skip\",\n    \"skirt\",\n    \"skull\",\n    \"sky\",\n    \"slab\",\n    \"slack\",\n    \"slain\",\n    \"slam\",\n    \"slang\",\n    \"slap\",\n    \"slat\",\n    \"slate\",\n    \"slave\",\n    \"sleek\",\n    \"sleep\",\n    \"sleepy\",\n    \"sleeve\",\n    \"slice\",\n    \"slick\",\n    \"slid\",\n    \"slide\",\n    \"slight\",\n    \"slim\",\n    \"slimy\",\n    \"sling\",\n    \"slip\",\n    \"slit\",\n    \"slogan\",\n    \"slope\",\n    \"sloppy\",\n    \"slot\",\n    \"slow\",\n    \"slowly\",\n    \"slug\",\n    \"slum\",\n    \"slump\",\n    \"smack\",\n    \"small\",\n    \"smart\",\n    \"smash\",\n    \"smear\",\n    \"smell\",\n    \"smelly\",\n    \"smelt\",\n    \"smile\",\n    \"smite\",\n    \"smoke\",\n    \"smoky\",\n    \"smooth\",\n    \"smug\",\n    \"snack\",\n    \"snail\",\n    \"snake\",\n    \"snap\",\n    \"snatch\",\n    \"sneak\",\n    \"snow\",\n    \"snowy\",\n    \"snug\",\n    \"soak\",\n    \"soap\",\n    \"sober\",\n    \"soccer\",\n    \"social\",\n    \"sock\",\n    \"socket\",\n    \"socks\",\n    \"soda\",\n    \"sodden\",\n    \"sodium\",\n    \"sofa\",\n    \"soft\",\n    \"soften\",\n    \"softly\",\n    \"soggy\",\n    \"soil\",\n    \"solar\",\n    \"sold\",\n    \"sole\",\n    \"solely\",\n    \"solemn\",\n    \"solid\",\n    \"solo\",\n    \"solve\",\n    \"some\",\n    \"son\",\n    \"sonar\",\n    \"sonata\",\n    \"song\",\n    \"sonic\",\n    \"sony\",\n    \"soon\",\n    \"sooner\",\n    \"soot\",\n    \"soothe\",\n    \"sordid\",\n    \"sore\",\n    \"sorrow\",\n    \"sorry\",\n    \"sort\",\n    \"soul\",\n    \"sound\",\n    \"soup\",\n    \"sour\",\n    \"source\",\n    \"soviet\",\n    \"sow\",\n    \"space\",\n    \"spade\",\n    \"spain\",\n    \"span\",\n    \"spare\",\n    \"spark\",\n    \"sparse\",\n    \"spasm\",\n    \"spat\",\n    \"spate\",\n    \"speak\",\n    \"spear\",\n    \"speech\",\n    \"speed\",\n    \"speedy\",\n    \"spell\",\n    \"spend\",\n    \"sphere\",\n    \"spice\",\n    \"spicy\",\n    \"spider\",\n    \"spiky\",\n    \"spill\",\n    \"spin\",\n    \"spinal\",\n    \"spine\",\n    \"spiral\",\n    \"spirit\",\n    \"spit\",\n    \"spite\",\n    \"splash\",\n    \"split\",\n    \"spoil\",\n    \"spoke\",\n    \"sponge\",\n    \"spoon\",\n    \"sport\",\n    \"spot\",\n    \"spouse\",\n    \"spray\",\n    \"spread\",\n    \"spree\",\n    \"spring\",\n    \"sprint\",\n    \"spur\",\n    \"squad\",\n    \"square\",\n    \"squash\",\n    \"squat\",\n    \"squid\",\n    \"stab\",\n    \"stable\",\n    \"stack\",\n    \"staff\",\n    \"stage\",\n    \"stain\",\n    \"stair\",\n    \"stairs\",\n    \"stake\",\n    \"stale\",\n    \"stall\",\n    \"stamp\",\n    \"stance\",\n    \"stand\",\n    \"staple\",\n    \"star\",\n    \"starch\",\n    \"stare\",\n    \"stark\",\n    \"start\",\n    \"starve\",\n    \"state\",\n    \"static\",\n    \"statue\",\n    \"status\",\n    \"stay\",\n    \"stead\",\n    \"steady\",\n    \"steak\",\n    \"steal\",\n    \"steam\",\n    \"steel\",\n    \"steep\",\n    \"steer\",\n    \"stem\",\n    \"stench\",\n    \"step\",\n    \"stereo\",\n    \"stern\",\n    \"stew\",\n    \"stick\",\n    \"sticky\",\n    \"stiff\",\n    \"stifle\",\n    \"stigma\",\n    \"still\",\n    \"sting\",\n    \"stint\",\n    \"stir\",\n    \"stitch\",\n    \"stock\",\n    \"stocky\",\n    \"stone\",\n    \"stony\",\n    \"stool\",\n    \"stop\",\n    \"store\",\n    \"storm\",\n    \"stormy\",\n    \"story\",\n    \"stout\",\n    \"stove\",\n    \"stow\",\n    \"strain\",\n    \"strait\",\n    \"strand\",\n    \"strap\",\n    \"strata\",\n    \"straw\",\n    \"stray\",\n    \"streak\",\n    \"stream\",\n    \"street\",\n    \"stress\",\n    \"strict\",\n    \"stride\",\n    \"strife\",\n    \"strike\",\n    \"string\",\n    \"strip\",\n    \"stripe\",\n    \"strive\",\n    \"stroke\",\n    \"stroll\",\n    \"strong\",\n    \"stud\",\n    \"studio\",\n    \"study\",\n    \"stuff\",\n    \"stuffy\",\n    \"stunt\",\n    \"stupid\",\n    \"sturdy\",\n    \"style\",\n    \"submit\",\n    \"subtle\",\n    \"subtly\",\n    \"suburb\",\n    \"such\",\n    \"sudden\",\n    \"sue\",\n    \"suez\",\n    \"suffer\",\n    \"sugar\",\n    \"suit\",\n    \"suite\",\n    \"suitor\",\n    \"sullen\",\n    \"sultan\",\n    \"sum\",\n    \"summer\",\n    \"summit\",\n    \"summon\",\n    \"sun\",\n    \"sunday\",\n    \"sunny\",\n    \"sunset\",\n    \"super\",\n    \"superb\",\n    \"supper\",\n    \"supple\",\n    \"supply\",\n    \"sure\",\n    \"surely\",\n    \"surf\",\n    \"surge\",\n    \"survey\",\n    \"suture\",\n    \"swamp\",\n    \"swan\",\n    \"swap\",\n    \"swarm\",\n    \"sway\",\n    \"swear\",\n    \"sweat\",\n    \"sweaty\",\n    \"sweden\",\n    \"sweep\",\n    \"sweet\",\n    \"swell\",\n    \"swift\",\n    \"swim\",\n    \"swine\",\n    \"swing\",\n    \"swirl\",\n    \"swiss\",\n    \"switch\",\n    \"sword\",\n    \"swore\",\n    \"sydney\",\n    \"symbol\",\n    \"synod\",\n    \"syntax\",\n    \"syria\",\n    \"syrup\",\n    \"system\",\n    \"table\",\n    \"tablet\",\n    \"taboo\",\n    \"tacit\",\n    \"tackle\",\n    \"tact\",\n    \"tactic\",\n    \"tail\",\n    \"tailor\",\n    \"taiwan\",\n    \"take\",\n    \"tale\",\n    \"talent\",\n    \"talk\",\n    \"tall\",\n    \"tally\",\n    \"tame\",\n    \"tampa\",\n    \"tan\",\n    \"tandem\",\n    \"tangle\",\n    \"tank\",\n    \"tap\",\n    \"tape\",\n    \"target\",\n    \"tariff\",\n    \"tarp\",\n    \"tart\",\n    \"tarzan\",\n    \"task\",\n    \"taste\",\n    \"tasty\",\n    \"tattoo\",\n    \"taurus\",\n    \"taut\",\n    \"tavern\",\n    \"tax\",\n    \"taxi\",\n    \"tea\",\n    \"teach\",\n    \"teak\",\n    \"team\",\n    \"tear\",\n    \"tease\",\n    \"tech\",\n    \"teeth\",\n    \"tell\",\n    \"temper\",\n    \"temple\",\n    \"tempo\",\n    \"tempt\",\n    \"ten\",\n    \"tenant\",\n    \"tend\",\n    \"tender\",\n    \"tendon\",\n    \"tennis\",\n    \"tenor\",\n    \"tense\",\n    \"tent\",\n    \"tenth\",\n    \"tenure\",\n    \"teresa\",\n    \"term\",\n    \"terror\",\n    \"terse\",\n    \"test\",\n    \"texas\",\n    \"text\",\n    \"thank\",\n    \"thaw\",\n    \"them\",\n    \"theme\",\n    \"thence\",\n    \"theory\",\n    \"there\",\n    \"these\",\n    \"thesis\",\n    \"they\",\n    \"thick\",\n    \"thief\",\n    \"thigh\",\n    \"thin\",\n    \"thing\",\n    \"think\",\n    \"third\",\n    \"thirst\",\n    \"thirty\",\n    \"this\",\n    \"thomas\",\n    \"thorn\",\n    \"those\",\n    \"though\",\n    \"thread\",\n    \"threat\",\n    \"three\",\n    \"thrill\",\n    \"thrive\",\n    \"throat\",\n    \"throne\",\n    \"throng\",\n    \"throw\",\n    \"thrust\",\n    \"thud\",\n    \"thug\",\n    \"thumb\",\n    \"thus\",\n    \"thyme\",\n    \"tibet\",\n    \"tick\",\n    \"ticket\",\n    \"tidal\",\n    \"tide\",\n    \"tidy\",\n    \"tie\",\n    \"tier\",\n    \"tiger\",\n    \"tight\",\n    \"tile\",\n    \"till\",\n    \"tilt\",\n    \"timber\",\n    \"time\",\n    \"timid\",\n    \"tin\",\n    \"tiny\",\n    \"tip\",\n    \"tire\",\n    \"tissue\",\n    \"title\",\n    \"toad\",\n    \"toast\",\n    \"today\",\n    \"toe\",\n    \"toilet\",\n    \"token\",\n    \"tokyo\",\n    \"told\",\n    \"toll\",\n    \"tom\",\n    \"tomato\",\n    \"tomb\",\n    \"tonal\",\n    \"tone\",\n    \"tongue\",\n    \"tonic\",\n    \"too\",\n    \"took\",\n    \"tool\",\n    \"tooth\",\n    \"top\",\n    \"topaz\",\n    \"topic\",\n    \"torch\",\n    \"torque\",\n    \"torso\",\n    \"tort\",\n    \"toss\",\n    \"total\",\n    \"touch\",\n    \"tough\",\n    \"tour\",\n    \"toward\",\n    \"towel\",\n    \"tower\",\n    \"town\",\n    \"toxic\",\n    \"toxin\",\n    \"toy\",\n    \"trace\",\n    \"track\",\n    \"tract\",\n    \"trade\",\n    \"tragic\",\n    \"trail\",\n    \"train\",\n    \"trait\",\n    \"tram\",\n    \"trance\",\n    \"trap\",\n    \"trauma\",\n    \"travel\",\n    \"tray\",\n    \"tread\",\n    \"treat\",\n    \"treaty\",\n    \"treble\",\n    \"tree\",\n    \"trek\",\n    \"tremor\",\n    \"trench\",\n    \"trend\",\n    \"trendy\",\n    \"trial\",\n    \"tribal\",\n    \"tribe\",\n    \"trick\",\n    \"tricky\",\n    \"tried\",\n    \"trifle\",\n    \"trim\",\n    \"trio\",\n    \"trip\",\n    \"triple\",\n    \"troop\",\n    \"trophy\",\n    \"trot\",\n    \"trough\",\n    \"trout\",\n    \"truce\",\n    \"truck\",\n    \"true\",\n    \"truly\",\n    \"trunk\",\n    \"trust\",\n    \"truth\",\n    \"try\",\n    \"tube\",\n    \"tumble\",\n    \"tuna\",\n    \"tundra\",\n    \"tune\",\n    \"tunic\",\n    \"tunnel\",\n    \"turban\",\n    \"turf\",\n    \"turk\",\n    \"turkey\",\n    \"turn\",\n    \"turtle\",\n    \"tutor\",\n    \"tweed\",\n    \"twelve\",\n    \"twenty\",\n    \"twice\",\n    \"twin\",\n    \"twist\",\n    \"two\",\n    \"tycoon\",\n    \"tying\",\n    \"type\",\n    \"tyrant\",\n    \"ugly\",\n    \"ulcer\",\n    \"ultra\",\n    \"umpire\",\n    \"unable\",\n    \"uncle\",\n    \"under\",\n    \"uneasy\",\n    \"unfair\",\n    \"unify\",\n    \"union\",\n    \"unique\",\n    \"unit\",\n    \"unite\",\n    \"unity\",\n    \"unlike\",\n    \"unrest\",\n    \"unruly\",\n    \"until\",\n    \"update\",\n    \"upheld\",\n    \"uphill\",\n    \"uphold\",\n    \"upon\",\n    \"upper\",\n    \"uproar\",\n    \"upset\",\n    \"upshot\",\n    \"uptake\",\n    \"upturn\",\n    \"upward\",\n    \"urban\",\n    \"urge\",\n    \"urgent\",\n    \"urging\",\n    \"urine\",\n    \"usable\",\n    \"usage\",\n    \"use\",\n    \"useful\",\n    \"user\",\n    \"usual\",\n    \"utmost\",\n    \"utter\",\n    \"vacant\",\n    \"vacuum\",\n    \"vague\",\n    \"vain\",\n    \"valet\",\n    \"valid\",\n    \"valley\",\n    \"value\",\n    \"valve\",\n    \"van\",\n    \"vanish\",\n    \"vanity\",\n    \"vary\",\n    \"vase\",\n    \"vast\",\n    \"vat\",\n    \"vault\",\n    \"vector\",\n    \"veil\",\n    \"vein\",\n    \"velvet\",\n    \"vendor\",\n    \"veneer\",\n    \"venice\",\n    \"venom\",\n    \"vent\",\n    \"venue\",\n    \"venus\",\n    \"verb\",\n    \"verbal\",\n    \"verge\",\n    \"verify\",\n    \"verity\",\n    \"verse\",\n    \"versus\",\n    \"very\",\n    \"vessel\",\n    \"vest\",\n    \"vet\",\n    \"veto\",\n    \"via\",\n    \"viable\",\n    \"vicar\",\n    \"vice\",\n    \"victim\",\n    \"victor\",\n    \"video\",\n    \"vienna\",\n    \"view\",\n    \"vigil\",\n    \"viking\",\n    \"vile\",\n    \"villa\",\n    \"vine\",\n    \"vinyl\",\n    \"viola\",\n    \"violet\",\n    \"violin\",\n    \"viral\",\n    \"virgo\",\n    \"virtue\",\n    \"virus\",\n    \"visa\",\n    \"vision\",\n    \"visit\",\n    \"visual\",\n    \"vital\",\n    \"vivid\",\n    \"vocal\",\n    \"vodka\",\n    \"vogue\",\n    \"voice\",\n    \"void\",\n    \"volley\",\n    \"volume\",\n    \"vote\",\n    \"vowel\",\n    \"voyage\",\n    \"vulgar\",\n    \"wade\",\n    \"wage\",\n    \"waist\",\n    \"wait\",\n    \"waiter\",\n    \"wake\",\n    \"walk\",\n    \"walker\",\n    \"wall\",\n    \"wallet\",\n    \"walnut\",\n    \"wander\",\n    \"want\",\n    \"war\",\n    \"warden\",\n    \"warm\",\n    \"warmth\",\n    \"warn\",\n    \"warp\",\n    \"warsaw\",\n    \"wary\",\n    \"was\",\n    \"wash\",\n    \"wasp\",\n    \"waste\",\n    \"watch\",\n    \"water\",\n    \"watery\",\n    \"wave\",\n    \"wax\",\n    \"way\",\n    \"weak\",\n    \"weaken\",\n    \"wealth\",\n    \"weapon\",\n    \"wear\",\n    \"weary\",\n    \"weave\",\n    \"wedge\",\n    \"wee\",\n    \"weed\",\n    \"week\",\n    \"weekly\",\n    \"weep\",\n    \"weigh\",\n    \"weight\",\n    \"weird\",\n    \"well\",\n    \"were\",\n    \"west\",\n    \"wet\",\n    \"whale\",\n    \"wharf\",\n    \"what\",\n    \"wheat\",\n    \"wheel\",\n    \"when\",\n    \"whence\",\n    \"where\",\n    \"which\",\n    \"whiff\",\n    \"while\",\n    \"whim\",\n    \"whip\",\n    \"whisky\",\n    \"white\",\n    \"who\",\n    \"whole\",\n    \"wholly\",\n    \"whom\",\n    \"whose\",\n    \"why\",\n    \"wicked\",\n    \"wide\",\n    \"widely\",\n    \"widen\",\n    \"wider\",\n    \"widow\",\n    \"width\",\n    \"wife\",\n    \"wig\",\n    \"wild\",\n    \"wildly\",\n    \"will\",\n    \"willow\",\n    \"wily\",\n    \"win\",\n    \"wind\",\n    \"window\",\n    \"windy\",\n    \"wine\",\n    \"wing\",\n    \"wink\",\n    \"winner\",\n    \"winter\",\n    \"wipe\",\n    \"wire\",\n    \"wisdom\",\n    \"wise\",\n    \"wish\",\n    \"wit\",\n    \"witch\",\n    \"with\",\n    \"within\",\n    \"witty\",\n    \"wizard\",\n    \"woke\",\n    \"wolf\",\n    \"wolves\",\n    \"woman\",\n    \"womb\",\n    \"won\",\n    \"wonder\",\n    \"wood\",\n    \"wooden\",\n    \"woods\",\n    \"woody\",\n    \"wool\",\n    \"word\",\n    \"work\",\n    \"worker\",\n    \"world\",\n    \"worm\",\n    \"worry\",\n    \"worse\",\n    \"worst\",\n    \"worth\",\n    \"worthy\",\n    \"would\",\n    \"wound\",\n    \"wrap\",\n    \"wrath\",\n    \"wreath\",\n    \"wreck\",\n    \"wring\",\n    \"wrist\",\n    \"writ\",\n    \"write\",\n    \"writer\",\n    \"wrong\",\n    \"xerox\",\n    \"yacht\",\n    \"yale\",\n    \"yard\",\n    \"yarn\",\n    \"yeah\",\n    \"year\",\n    \"yeard\",\n    \"yeast\",\n    \"yellow\",\n    \"yet\",\n    \"yield\",\n    \"yogurt\",\n    \"yolk\",\n    \"you\",\n    \"young\",\n    \"your\",\n    \"youth\",\n    \"zaire\",\n    \"zeal\",\n    \"zebra\",\n    \"zenith\",\n    \"zero\",\n    \"zeus\",\n    \"zigzag\",\n    \"zinc\",\n    \"zombie\",\n    \"zone\",\n];\n", "export default [\n    \"abandon\",\n    \"ability\",\n    \"able\",\n    \"about\",\n    \"above\",\n    \"absent\",\n    \"absorb\",\n    \"abstract\",\n    \"absurd\",\n    \"abuse\",\n    \"access\",\n    \"accident\",\n    \"account\",\n    \"accuse\",\n    \"achieve\",\n    \"acid\",\n    \"acoustic\",\n    \"acquire\",\n    \"across\",\n    \"act\",\n    \"action\",\n    \"actor\",\n    \"actress\",\n    \"actual\",\n    \"adapt\",\n    \"add\",\n    \"addict\",\n    \"address\",\n    \"adjust\",\n    \"admit\",\n    \"adult\",\n    \"advance\",\n    \"advice\",\n    \"aerobic\",\n    \"affair\",\n    \"afford\",\n    \"afraid\",\n    \"again\",\n    \"age\",\n    \"agent\",\n    \"agree\",\n    \"ahead\",\n    \"aim\",\n    \"air\",\n    \"airport\",\n    \"aisle\",\n    \"alarm\",\n    \"album\",\n    \"alcohol\",\n    \"alert\",\n    \"alien\",\n    \"all\",\n    \"alley\",\n    \"allow\",\n    \"almost\",\n    \"alone\",\n    \"alpha\",\n    \"already\",\n    \"also\",\n    \"alter\",\n    \"always\",\n    \"amateur\",\n    \"amazing\",\n    \"among\",\n    \"amount\",\n    \"amused\",\n    \"analyst\",\n    \"anchor\",\n    \"ancient\",\n    \"anger\",\n    \"angle\",\n    \"angry\",\n    \"animal\",\n    \"ankle\",\n    \"announce\",\n    \"annual\",\n    \"another\",\n    \"answer\",\n    \"antenna\",\n    \"antique\",\n    \"anxiety\",\n    \"any\",\n    \"apart\",\n    \"apology\",\n    \"appear\",\n    \"apple\",\n    \"approve\",\n    \"april\",\n    \"arch\",\n    \"arctic\",\n    \"area\",\n    \"arena\",\n    \"argue\",\n    \"arm\",\n    \"armed\",\n    \"armor\",\n    \"army\",\n    \"around\",\n    \"arrange\",\n    \"arrest\",\n    \"arrive\",\n    \"arrow\",\n    \"art\",\n    \"artefact\",\n    \"artist\",\n    \"artwork\",\n    \"ask\",\n    \"aspect\",\n    \"assault\",\n    \"asset\",\n    \"assist\",\n    \"assume\",\n    \"asthma\",\n    \"athlete\",\n    \"atom\",\n    \"attack\",\n    \"attend\",\n    \"attitude\",\n    \"attract\",\n    \"auction\",\n    \"audit\",\n    \"august\",\n    \"aunt\",\n    \"author\",\n    \"auto\",\n    \"autumn\",\n    \"average\",\n    \"avocado\",\n    \"avoid\",\n    \"awake\",\n    \"aware\",\n    \"away\",\n    \"awesome\",\n    \"awful\",\n    \"awkward\",\n    \"axis\",\n    \"baby\",\n    \"bachelor\",\n    \"bacon\",\n    \"badge\",\n    \"bag\",\n    \"balance\",\n    \"balcony\",\n    \"ball\",\n    \"bamboo\",\n    \"banana\",\n    \"banner\",\n    \"bar\",\n    \"barely\",\n    \"bargain\",\n    \"barrel\",\n    \"base\",\n    \"basic\",\n    \"basket\",\n    \"battle\",\n    \"beach\",\n    \"bean\",\n    \"beauty\",\n    \"because\",\n    \"become\",\n    \"beef\",\n    \"before\",\n    \"begin\",\n    \"behave\",\n    \"behind\",\n    \"believe\",\n    \"below\",\n    \"belt\",\n    \"bench\",\n    \"benefit\",\n    \"best\",\n    \"betray\",\n    \"better\",\n    \"between\",\n    \"beyond\",\n    \"bicycle\",\n    \"bid\",\n    \"bike\",\n    \"bind\",\n    \"biology\",\n    \"bird\",\n    \"birth\",\n    \"bitter\",\n    \"black\",\n    \"blade\",\n    \"blame\",\n    \"blanket\",\n    \"blast\",\n    \"bleak\",\n    \"bless\",\n    \"blind\",\n    \"blood\",\n    \"blossom\",\n    \"blouse\",\n    \"blue\",\n    \"blur\",\n    \"blush\",\n    \"board\",\n    \"boat\",\n    \"body\",\n    \"boil\",\n    \"bomb\",\n    \"bone\",\n    \"bonus\",\n    \"book\",\n    \"boost\",\n    \"border\",\n    \"boring\",\n    \"borrow\",\n    \"boss\",\n    \"bottom\",\n    \"bounce\",\n    \"box\",\n    \"boy\",\n    \"bracket\",\n    \"brain\",\n    \"brand\",\n    \"brass\",\n    \"brave\",\n    \"bread\",\n    \"breeze\",\n    \"brick\",\n    \"bridge\",\n    \"brief\",\n    \"bright\",\n    \"bring\",\n    \"brisk\",\n    \"broccoli\",\n    \"broken\",\n    \"bronze\",\n    \"broom\",\n    \"brother\",\n    \"brown\",\n    \"brush\",\n    \"bubble\",\n    \"buddy\",\n    \"budget\",\n    \"buffalo\",\n    \"build\",\n    \"bulb\",\n    \"bulk\",\n    \"bullet\",\n    \"bundle\",\n    \"bunker\",\n    \"burden\",\n    \"burger\",\n    \"burst\",\n    \"bus\",\n    \"business\",\n    \"busy\",\n    \"butter\",\n    \"buyer\",\n    \"buzz\",\n    \"cabbage\",\n    \"cabin\",\n    \"cable\",\n    \"cactus\",\n    \"cage\",\n    \"cake\",\n    \"call\",\n    \"calm\",\n    \"camera\",\n    \"camp\",\n    \"can\",\n    \"canal\",\n    \"cancel\",\n    \"candy\",\n    \"cannon\",\n    \"canoe\",\n    \"canvas\",\n    \"canyon\",\n    \"capable\",\n    \"capital\",\n    \"captain\",\n    \"car\",\n    \"carbon\",\n    \"card\",\n    \"cargo\",\n    \"carpet\",\n    \"carry\",\n    \"cart\",\n    \"case\",\n    \"cash\",\n    \"casino\",\n    \"castle\",\n    \"casual\",\n    \"cat\",\n    \"catalog\",\n    \"catch\",\n    \"category\",\n    \"cattle\",\n    \"caught\",\n    \"cause\",\n    \"caution\",\n    \"cave\",\n    \"ceiling\",\n    \"celery\",\n    \"cement\",\n    \"census\",\n    \"century\",\n    \"cereal\",\n    \"certain\",\n    \"chair\",\n    \"chalk\",\n    \"champion\",\n    \"change\",\n    \"chaos\",\n    \"chapter\",\n    \"charge\",\n    \"chase\",\n    \"chat\",\n    \"cheap\",\n    \"check\",\n    \"cheese\",\n    \"chef\",\n    \"cherry\",\n    \"chest\",\n    \"chicken\",\n    \"chief\",\n    \"child\",\n    \"chimney\",\n    \"choice\",\n    \"choose\",\n    \"chronic\",\n    \"chuckle\",\n    \"chunk\",\n    \"churn\",\n    \"cigar\",\n    \"cinnamon\",\n    \"circle\",\n    \"citizen\",\n    \"city\",\n    \"civil\",\n    \"claim\",\n    \"clap\",\n    \"clarify\",\n    \"claw\",\n    \"clay\",\n    \"clean\",\n    \"clerk\",\n    \"clever\",\n    \"click\",\n    \"client\",\n    \"cliff\",\n    \"climb\",\n    \"clinic\",\n    \"clip\",\n    \"clock\",\n    \"clog\",\n    \"close\",\n    \"cloth\",\n    \"cloud\",\n    \"clown\",\n    \"club\",\n    \"clump\",\n    \"cluster\",\n    \"clutch\",\n    \"coach\",\n    \"coast\",\n    \"coconut\",\n    \"code\",\n    \"coffee\",\n    \"coil\",\n    \"coin\",\n    \"collect\",\n    \"color\",\n    \"column\",\n    \"combine\",\n    \"come\",\n    \"comfort\",\n    \"comic\",\n    \"common\",\n    \"company\",\n    \"concert\",\n    \"conduct\",\n    \"confirm\",\n    \"congress\",\n    \"connect\",\n    \"consider\",\n    \"control\",\n    \"convince\",\n    \"cook\",\n    \"cool\",\n    \"copper\",\n    \"copy\",\n    \"coral\",\n    \"core\",\n    \"corn\",\n    \"correct\",\n    \"cost\",\n    \"cotton\",\n    \"couch\",\n    \"country\",\n    \"couple\",\n    \"course\",\n    \"cousin\",\n    \"cover\",\n    \"coyote\",\n    \"crack\",\n    \"cradle\",\n    \"craft\",\n    \"cram\",\n    \"crane\",\n    \"crash\",\n    \"crater\",\n    \"crawl\",\n    \"crazy\",\n    \"cream\",\n    \"credit\",\n    \"creek\",\n    \"crew\",\n    \"cricket\",\n    \"crime\",\n    \"crisp\",\n    \"critic\",\n    \"crop\",\n    \"cross\",\n    \"crouch\",\n    \"crowd\",\n    \"crucial\",\n    \"cruel\",\n    \"cruise\",\n    \"crumble\",\n    \"crunch\",\n    \"crush\",\n    \"cry\",\n    \"crystal\",\n    \"cube\",\n    \"culture\",\n    \"cup\",\n    \"cupboard\",\n    \"curious\",\n    \"current\",\n    \"curtain\",\n    \"curve\",\n    \"cushion\",\n    \"custom\",\n    \"cute\",\n    \"cycle\",\n    \"dad\",\n    \"damage\",\n    \"damp\",\n    \"dance\",\n    \"danger\",\n    \"daring\",\n    \"dash\",\n    \"daughter\",\n    \"dawn\",\n    \"day\",\n    \"deal\",\n    \"debate\",\n    \"debris\",\n    \"decade\",\n    \"december\",\n    \"decide\",\n    \"decline\",\n    \"decorate\",\n    \"decrease\",\n    \"deer\",\n    \"defense\",\n    \"define\",\n    \"defy\",\n    \"degree\",\n    \"delay\",\n    \"deliver\",\n    \"demand\",\n    \"demise\",\n    \"denial\",\n    \"dentist\",\n    \"deny\",\n    \"depart\",\n    \"depend\",\n    \"deposit\",\n    \"depth\",\n    \"deputy\",\n    \"derive\",\n    \"describe\",\n    \"desert\",\n    \"design\",\n    \"desk\",\n    \"despair\",\n    \"destroy\",\n    \"detail\",\n    \"detect\",\n    \"develop\",\n    \"device\",\n    \"devote\",\n    \"diagram\",\n    \"dial\",\n    \"diamond\",\n    \"diary\",\n    \"dice\",\n    \"diesel\",\n    \"diet\",\n    \"differ\",\n    \"digital\",\n    \"dignity\",\n    \"dilemma\",\n    \"dinner\",\n    \"dinosaur\",\n    \"direct\",\n    \"dirt\",\n    \"disagree\",\n    \"discover\",\n    \"disease\",\n    \"dish\",\n    \"dismiss\",\n    \"disorder\",\n    \"display\",\n    \"distance\",\n    \"divert\",\n    \"divide\",\n    \"divorce\",\n    \"dizzy\",\n    \"doctor\",\n    \"document\",\n    \"dog\",\n    \"doll\",\n    \"dolphin\",\n    \"domain\",\n    \"donate\",\n    \"donkey\",\n    \"donor\",\n    \"door\",\n    \"dose\",\n    \"double\",\n    \"dove\",\n    \"draft\",\n    \"dragon\",\n    \"drama\",\n    \"drastic\",\n    \"draw\",\n    \"dream\",\n    \"dress\",\n    \"drift\",\n    \"drill\",\n    \"drink\",\n    \"drip\",\n    \"drive\",\n    \"drop\",\n    \"drum\",\n    \"dry\",\n    \"duck\",\n    \"dumb\",\n    \"dune\",\n    \"during\",\n    \"dust\",\n    \"dutch\",\n    \"duty\",\n    \"dwarf\",\n    \"dynamic\",\n    \"eager\",\n    \"eagle\",\n    \"early\",\n    \"earn\",\n    \"earth\",\n    \"easily\",\n    \"east\",\n    \"easy\",\n    \"echo\",\n    \"ecology\",\n    \"economy\",\n    \"edge\",\n    \"edit\",\n    \"educate\",\n    \"effort\",\n    \"egg\",\n    \"eight\",\n    \"either\",\n    \"elbow\",\n    \"elder\",\n    \"electric\",\n    \"elegant\",\n    \"element\",\n    \"elephant\",\n    \"elevator\",\n    \"elite\",\n    \"else\",\n    \"embark\",\n    \"embody\",\n    \"embrace\",\n    \"emerge\",\n    \"emotion\",\n    \"employ\",\n    \"empower\",\n    \"empty\",\n    \"enable\",\n    \"enact\",\n    \"end\",\n    \"endless\",\n    \"endorse\",\n    \"enemy\",\n    \"energy\",\n    \"enforce\",\n    \"engage\",\n    \"engine\",\n    \"enhance\",\n    \"enjoy\",\n    \"enlist\",\n    \"enough\",\n    \"enrich\",\n    \"enroll\",\n    \"ensure\",\n    \"enter\",\n    \"entire\",\n    \"entry\",\n    \"envelope\",\n    \"episode\",\n    \"equal\",\n    \"equip\",\n    \"era\",\n    \"erase\",\n    \"erode\",\n    \"erosion\",\n    \"error\",\n    \"erupt\",\n    \"escape\",\n    \"essay\",\n    \"essence\",\n    \"estate\",\n    \"eternal\",\n    \"ethics\",\n    \"evidence\",\n    \"evil\",\n    \"evoke\",\n    \"evolve\",\n    \"exact\",\n    \"example\",\n    \"excess\",\n    \"exchange\",\n    \"excite\",\n    \"exclude\",\n    \"excuse\",\n    \"execute\",\n    \"exercise\",\n    \"exhaust\",\n    \"exhibit\",\n    \"exile\",\n    \"exist\",\n    \"exit\",\n    \"exotic\",\n    \"expand\",\n    \"expect\",\n    \"expire\",\n    \"explain\",\n    \"expose\",\n    \"express\",\n    \"extend\",\n    \"extra\",\n    \"eye\",\n    \"eyebrow\",\n    \"fabric\",\n    \"face\",\n    \"faculty\",\n    \"fade\",\n    \"faint\",\n    \"faith\",\n    \"fall\",\n    \"false\",\n    \"fame\",\n    \"family\",\n    \"famous\",\n    \"fan\",\n    \"fancy\",\n    \"fantasy\",\n    \"farm\",\n    \"fashion\",\n    \"fat\",\n    \"fatal\",\n    \"father\",\n    \"fatigue\",\n    \"fault\",\n    \"favorite\",\n    \"feature\",\n    \"february\",\n    \"federal\",\n    \"fee\",\n    \"feed\",\n    \"feel\",\n    \"female\",\n    \"fence\",\n    \"festival\",\n    \"fetch\",\n    \"fever\",\n    \"few\",\n    \"fiber\",\n    \"fiction\",\n    \"field\",\n    \"figure\",\n    \"file\",\n    \"film\",\n    \"filter\",\n    \"final\",\n    \"find\",\n    \"fine\",\n    \"finger\",\n    \"finish\",\n    \"fire\",\n    \"firm\",\n    \"first\",\n    \"fiscal\",\n    \"fish\",\n    \"fit\",\n    \"fitness\",\n    \"fix\",\n    \"flag\",\n    \"flame\",\n    \"flash\",\n    \"flat\",\n    \"flavor\",\n    \"flee\",\n    \"flight\",\n    \"flip\",\n    \"float\",\n    \"flock\",\n    \"floor\",\n    \"flower\",\n    \"fluid\",\n    \"flush\",\n    \"fly\",\n    \"foam\",\n    \"focus\",\n    \"fog\",\n    \"foil\",\n    \"fold\",\n    \"follow\",\n    \"food\",\n    \"foot\",\n    \"force\",\n    \"forest\",\n    \"forget\",\n    \"fork\",\n    \"fortune\",\n    \"forum\",\n    \"forward\",\n    \"fossil\",\n    \"foster\",\n    \"found\",\n    \"fox\",\n    \"fragile\",\n    \"frame\",\n    \"frequent\",\n    \"fresh\",\n    \"friend\",\n    \"fringe\",\n    \"frog\",\n    \"front\",\n    \"frost\",\n    \"frown\",\n    \"frozen\",\n    \"fruit\",\n    \"fuel\",\n    \"fun\",\n    \"funny\",\n    \"furnace\",\n    \"fury\",\n    \"future\",\n    \"gadget\",\n    \"gain\",\n    \"galaxy\",\n    \"gallery\",\n    \"game\",\n    \"gap\",\n    \"garage\",\n    \"garbage\",\n    \"garden\",\n    \"garlic\",\n    \"garment\",\n    \"gas\",\n    \"gasp\",\n    \"gate\",\n    \"gather\",\n    \"gauge\",\n    \"gaze\",\n    \"general\",\n    \"genius\",\n    \"genre\",\n    \"gentle\",\n    \"genuine\",\n    \"gesture\",\n    \"ghost\",\n    \"giant\",\n    \"gift\",\n    \"giggle\",\n    \"ginger\",\n    \"giraffe\",\n    \"girl\",\n    \"give\",\n    \"glad\",\n    \"glance\",\n    \"glare\",\n    \"glass\",\n    \"glide\",\n    \"glimpse\",\n    \"globe\",\n    \"gloom\",\n    \"glory\",\n    \"glove\",\n    \"glow\",\n    \"glue\",\n    \"goat\",\n    \"goddess\",\n    \"gold\",\n    \"good\",\n    \"goose\",\n    \"gorilla\",\n    \"gospel\",\n    \"gossip\",\n    \"govern\",\n    \"gown\",\n    \"grab\",\n    \"grace\",\n    \"grain\",\n    \"grant\",\n    \"grape\",\n    \"grass\",\n    \"gravity\",\n    \"great\",\n    \"green\",\n    \"grid\",\n    \"grief\",\n    \"grit\",\n    \"grocery\",\n    \"group\",\n    \"grow\",\n    \"grunt\",\n    \"guard\",\n    \"guess\",\n    \"guide\",\n    \"guilt\",\n    \"guitar\",\n    \"gun\",\n    \"gym\",\n    \"habit\",\n    \"hair\",\n    \"half\",\n    \"hammer\",\n    \"hamster\",\n    \"hand\",\n    \"happy\",\n    \"harbor\",\n    \"hard\",\n    \"harsh\",\n    \"harvest\",\n    \"hat\",\n    \"have\",\n    \"hawk\",\n    \"hazard\",\n    \"head\",\n    \"health\",\n    \"heart\",\n    \"heavy\",\n    \"hedgehog\",\n    \"height\",\n    \"hello\",\n    \"helmet\",\n    \"help\",\n    \"hen\",\n    \"hero\",\n    \"hidden\",\n    \"high\",\n    \"hill\",\n    \"hint\",\n    \"hip\",\n    \"hire\",\n    \"history\",\n    \"hobby\",\n    \"hockey\",\n    \"hold\",\n    \"hole\",\n    \"holiday\",\n    \"hollow\",\n    \"home\",\n    \"honey\",\n    \"hood\",\n    \"hope\",\n    \"horn\",\n    \"horror\",\n    \"horse\",\n    \"hospital\",\n    \"host\",\n    \"hotel\",\n    \"hour\",\n    \"hover\",\n    \"hub\",\n    \"huge\",\n    \"human\",\n    \"humble\",\n    \"humor\",\n    \"hundred\",\n    \"hungry\",\n    \"hunt\",\n    \"hurdle\",\n    \"hurry\",\n    \"hurt\",\n    \"husband\",\n    \"hybrid\",\n    \"ice\",\n    \"icon\",\n    \"idea\",\n    \"identify\",\n    \"idle\",\n    \"ignore\",\n    \"ill\",\n    \"illegal\",\n    \"illness\",\n    \"image\",\n    \"imitate\",\n    \"immense\",\n    \"immune\",\n    \"impact\",\n    \"impose\",\n    \"improve\",\n    \"impulse\",\n    \"inch\",\n    \"include\",\n    \"income\",\n    \"increase\",\n    \"index\",\n    \"indicate\",\n    \"indoor\",\n    \"industry\",\n    \"infant\",\n    \"inflict\",\n    \"inform\",\n    \"inhale\",\n    \"inherit\",\n    \"initial\",\n    \"inject\",\n    \"injury\",\n    \"inmate\",\n    \"inner\",\n    \"innocent\",\n    \"input\",\n    \"inquiry\",\n    \"insane\",\n    \"insect\",\n    \"inside\",\n    \"inspire\",\n    \"install\",\n    \"intact\",\n    \"interest\",\n    \"into\",\n    \"invest\",\n    \"invite\",\n    \"involve\",\n    \"iron\",\n    \"island\",\n    \"isolate\",\n    \"issue\",\n    \"item\",\n    \"ivory\",\n    \"jacket\",\n    \"jaguar\",\n    \"jar\",\n    \"jazz\",\n    \"jealous\",\n    \"jeans\",\n    \"jelly\",\n    \"jewel\",\n    \"job\",\n    \"join\",\n    \"joke\",\n    \"journey\",\n    \"joy\",\n    \"judge\",\n    \"juice\",\n    \"jump\",\n    \"jungle\",\n    \"junior\",\n    \"junk\",\n    \"just\",\n    \"kangaroo\",\n    \"keen\",\n    \"keep\",\n    \"ketchup\",\n    \"key\",\n    \"kick\",\n    \"kid\",\n    \"kidney\",\n    \"kind\",\n    \"kingdom\",\n    \"kiss\",\n    \"kit\",\n    \"kitchen\",\n    \"kite\",\n    \"kitten\",\n    \"kiwi\",\n    \"knee\",\n    \"knife\",\n    \"knock\",\n    \"know\",\n    \"lab\",\n    \"label\",\n    \"labor\",\n    \"ladder\",\n    \"lady\",\n    \"lake\",\n    \"lamp\",\n    \"language\",\n    \"laptop\",\n    \"large\",\n    \"later\",\n    \"latin\",\n    \"laugh\",\n    \"laundry\",\n    \"lava\",\n    \"law\",\n    \"lawn\",\n    \"lawsuit\",\n    \"layer\",\n    \"lazy\",\n    \"leader\",\n    \"leaf\",\n    \"learn\",\n    \"leave\",\n    \"lecture\",\n    \"left\",\n    \"leg\",\n    \"legal\",\n    \"legend\",\n    \"leisure\",\n    \"lemon\",\n    \"lend\",\n    \"length\",\n    \"lens\",\n    \"leopard\",\n    \"lesson\",\n    \"letter\",\n    \"level\",\n    \"liar\",\n    \"liberty\",\n    \"library\",\n    \"license\",\n    \"life\",\n    \"lift\",\n    \"light\",\n    \"like\",\n    \"limb\",\n    \"limit\",\n    \"link\",\n    \"lion\",\n    \"liquid\",\n    \"list\",\n    \"little\",\n    \"live\",\n    \"lizard\",\n    \"load\",\n    \"loan\",\n    \"lobster\",\n    \"local\",\n    \"lock\",\n    \"logic\",\n    \"lonely\",\n    \"long\",\n    \"loop\",\n    \"lottery\",\n    \"loud\",\n    \"lounge\",\n    \"love\",\n    \"loyal\",\n    \"lucky\",\n    \"luggage\",\n    \"lumber\",\n    \"lunar\",\n    \"lunch\",\n    \"luxury\",\n    \"lyrics\",\n    \"machine\",\n    \"mad\",\n    \"magic\",\n    \"magnet\",\n    \"maid\",\n    \"mail\",\n    \"main\",\n    \"major\",\n    \"make\",\n    \"mammal\",\n    \"man\",\n    \"manage\",\n    \"mandate\",\n    \"mango\",\n    \"mansion\",\n    \"manual\",\n    \"maple\",\n    \"marble\",\n    \"march\",\n    \"margin\",\n    \"marine\",\n    \"market\",\n    \"marriage\",\n    \"mask\",\n    \"mass\",\n    \"master\",\n    \"match\",\n    \"material\",\n    \"math\",\n    \"matrix\",\n    \"matter\",\n    \"maximum\",\n    \"maze\",\n    \"meadow\",\n    \"mean\",\n    \"measure\",\n    \"meat\",\n    \"mechanic\",\n    \"medal\",\n    \"media\",\n    \"melody\",\n    \"melt\",\n    \"member\",\n    \"memory\",\n    \"mention\",\n    \"menu\",\n    \"mercy\",\n    \"merge\",\n    \"merit\",\n    \"merry\",\n    \"mesh\",\n    \"message\",\n    \"metal\",\n    \"method\",\n    \"middle\",\n    \"midnight\",\n    \"milk\",\n    \"million\",\n    \"mimic\",\n    \"mind\",\n    \"minimum\",\n    \"minor\",\n    \"minute\",\n    \"miracle\",\n    \"mirror\",\n    \"misery\",\n    \"miss\",\n    \"mistake\",\n    \"mix\",\n    \"mixed\",\n    \"mixture\",\n    \"mobile\",\n    \"model\",\n    \"modify\",\n    \"mom\",\n    \"moment\",\n    \"monitor\",\n    \"monkey\",\n    \"monster\",\n    \"month\",\n    \"moon\",\n    \"moral\",\n    \"more\",\n    \"morning\",\n    \"mosquito\",\n    \"mother\",\n    \"motion\",\n    \"motor\",\n    \"mountain\",\n    \"mouse\",\n    \"move\",\n    \"movie\",\n    \"much\",\n    \"muffin\",\n    \"mule\",\n    \"multiply\",\n    \"muscle\",\n    \"museum\",\n    \"mushroom\",\n    \"music\",\n    \"must\",\n    \"mutual\",\n    \"myself\",\n    \"mystery\",\n    \"myth\",\n    \"naive\",\n    \"name\",\n    \"napkin\",\n    \"narrow\",\n    \"nasty\",\n    \"nation\",\n    \"nature\",\n    \"near\",\n    \"neck\",\n    \"need\",\n    \"negative\",\n    \"neglect\",\n    \"neither\",\n    \"nephew\",\n    \"nerve\",\n    \"nest\",\n    \"net\",\n    \"network\",\n    \"neutral\",\n    \"never\",\n    \"news\",\n    \"next\",\n    \"nice\",\n    \"night\",\n    \"noble\",\n    \"noise\",\n    \"nominee\",\n    \"noodle\",\n    \"normal\",\n    \"north\",\n    \"nose\",\n    \"notable\",\n    \"note\",\n    \"nothing\",\n    \"notice\",\n    \"novel\",\n    \"now\",\n    \"nuclear\",\n    \"number\",\n    \"nurse\",\n    \"nut\",\n    \"oak\",\n    \"obey\",\n    \"object\",\n    \"oblige\",\n    \"obscure\",\n    \"observe\",\n    \"obtain\",\n    \"obvious\",\n    \"occur\",\n    \"ocean\",\n    \"october\",\n    \"odor\",\n    \"off\",\n    \"offer\",\n    \"office\",\n    \"often\",\n    \"oil\",\n    \"okay\",\n    \"old\",\n    \"olive\",\n    \"olympic\",\n    \"omit\",\n    \"once\",\n    \"one\",\n    \"onion\",\n    \"online\",\n    \"only\",\n    \"open\",\n    \"opera\",\n    \"opinion\",\n    \"oppose\",\n    \"option\",\n    \"orange\",\n    \"orbit\",\n    \"orchard\",\n    \"order\",\n    \"ordinary\",\n    \"organ\",\n    \"orient\",\n    \"original\",\n    \"orphan\",\n    \"ostrich\",\n    \"other\",\n    \"outdoor\",\n    \"outer\",\n    \"output\",\n    \"outside\",\n    \"oval\",\n    \"oven\",\n    \"over\",\n    \"own\",\n    \"owner\",\n    \"oxygen\",\n    \"oyster\",\n    \"ozone\",\n    \"pact\",\n    \"paddle\",\n    \"page\",\n    \"pair\",\n    \"palace\",\n    \"palm\",\n    \"panda\",\n    \"panel\",\n    \"panic\",\n    \"panther\",\n    \"paper\",\n    \"parade\",\n    \"parent\",\n    \"park\",\n    \"parrot\",\n    \"party\",\n    \"pass\",\n    \"patch\",\n    \"path\",\n    \"patient\",\n    \"patrol\",\n    \"pattern\",\n    \"pause\",\n    \"pave\",\n    \"payment\",\n    \"peace\",\n    \"peanut\",\n    \"pear\",\n    \"peasant\",\n    \"pelican\",\n    \"pen\",\n    \"penalty\",\n    \"pencil\",\n    \"people\",\n    \"pepper\",\n    \"perfect\",\n    \"permit\",\n    \"person\",\n    \"pet\",\n    \"phone\",\n    \"photo\",\n    \"phrase\",\n    \"physical\",\n    \"piano\",\n    \"picnic\",\n    \"picture\",\n    \"piece\",\n    \"pig\",\n    \"pigeon\",\n    \"pill\",\n    \"pilot\",\n    \"pink\",\n    \"pioneer\",\n    \"pipe\",\n    \"pistol\",\n    \"pitch\",\n    \"pizza\",\n    \"place\",\n    \"planet\",\n    \"plastic\",\n    \"plate\",\n    \"play\",\n    \"please\",\n    \"pledge\",\n    \"pluck\",\n    \"plug\",\n    \"plunge\",\n    \"poem\",\n    \"poet\",\n    \"point\",\n    \"polar\",\n    \"pole\",\n    \"police\",\n    \"pond\",\n    \"pony\",\n    \"pool\",\n    \"popular\",\n    \"portion\",\n    \"position\",\n    \"possible\",\n    \"post\",\n    \"potato\",\n    \"pottery\",\n    \"poverty\",\n    \"powder\",\n    \"power\",\n    \"practice\",\n    \"praise\",\n    \"predict\",\n    \"prefer\",\n    \"prepare\",\n    \"present\",\n    \"pretty\",\n    \"prevent\",\n    \"price\",\n    \"pride\",\n    \"primary\",\n    \"print\",\n    \"priority\",\n    \"prison\",\n    \"private\",\n    \"prize\",\n    \"problem\",\n    \"process\",\n    \"produce\",\n    \"profit\",\n    \"program\",\n    \"project\",\n    \"promote\",\n    \"proof\",\n    \"property\",\n    \"prosper\",\n    \"protect\",\n    \"proud\",\n    \"provide\",\n    \"public\",\n    \"pudding\",\n    \"pull\",\n    \"pulp\",\n    \"pulse\",\n    \"pumpkin\",\n    \"punch\",\n    \"pupil\",\n    \"puppy\",\n    \"purchase\",\n    \"purity\",\n    \"purpose\",\n    \"purse\",\n    \"push\",\n    \"put\",\n    \"puzzle\",\n    \"pyramid\",\n    \"quality\",\n    \"quantum\",\n    \"quarter\",\n    \"question\",\n    \"quick\",\n    \"quit\",\n    \"quiz\",\n    \"quote\",\n    \"rabbit\",\n    \"raccoon\",\n    \"race\",\n    \"rack\",\n    \"radar\",\n    \"radio\",\n    \"rail\",\n    \"rain\",\n    \"raise\",\n    \"rally\",\n    \"ramp\",\n    \"ranch\",\n    \"random\",\n    \"range\",\n    \"rapid\",\n    \"rare\",\n    \"rate\",\n    \"rather\",\n    \"raven\",\n    \"raw\",\n    \"razor\",\n    \"ready\",\n    \"real\",\n    \"reason\",\n    \"rebel\",\n    \"rebuild\",\n    \"recall\",\n    \"receive\",\n    \"recipe\",\n    \"record\",\n    \"recycle\",\n    \"reduce\",\n    \"reflect\",\n    \"reform\",\n    \"refuse\",\n    \"region\",\n    \"regret\",\n    \"regular\",\n    \"reject\",\n    \"relax\",\n    \"release\",\n    \"relief\",\n    \"rely\",\n    \"remain\",\n    \"remember\",\n    \"remind\",\n    \"remove\",\n    \"render\",\n    \"renew\",\n    \"rent\",\n    \"reopen\",\n    \"repair\",\n    \"repeat\",\n    \"replace\",\n    \"report\",\n    \"require\",\n    \"rescue\",\n    \"resemble\",\n    \"resist\",\n    \"resource\",\n    \"response\",\n    \"result\",\n    \"retire\",\n    \"retreat\",\n    \"return\",\n    \"reunion\",\n    \"reveal\",\n    \"review\",\n    \"reward\",\n    \"rhythm\",\n    \"rib\",\n    \"ribbon\",\n    \"rice\",\n    \"rich\",\n    \"ride\",\n    \"ridge\",\n    \"rifle\",\n    \"right\",\n    \"rigid\",\n    \"ring\",\n    \"riot\",\n    \"ripple\",\n    \"risk\",\n    \"ritual\",\n    \"rival\",\n    \"river\",\n    \"road\",\n    \"roast\",\n    \"robot\",\n    \"robust\",\n    \"rocket\",\n    \"romance\",\n    \"roof\",\n    \"rookie\",\n    \"room\",\n    \"rose\",\n    \"rotate\",\n    \"rough\",\n    \"round\",\n    \"route\",\n    \"royal\",\n    \"rubber\",\n    \"rude\",\n    \"rug\",\n    \"rule\",\n    \"run\",\n    \"runway\",\n    \"rural\",\n    \"sad\",\n    \"saddle\",\n    \"sadness\",\n    \"safe\",\n    \"sail\",\n    \"salad\",\n    \"salmon\",\n    \"salon\",\n    \"salt\",\n    \"salute\",\n    \"same\",\n    \"sample\",\n    \"sand\",\n    \"satisfy\",\n    \"satoshi\",\n    \"sauce\",\n    \"sausage\",\n    \"save\",\n    \"say\",\n    \"scale\",\n    \"scan\",\n    \"scare\",\n    \"scatter\",\n    \"scene\",\n    \"scheme\",\n    \"school\",\n    \"science\",\n    \"scissors\",\n    \"scorpion\",\n    \"scout\",\n    \"scrap\",\n    \"screen\",\n    \"script\",\n    \"scrub\",\n    \"sea\",\n    \"search\",\n    \"season\",\n    \"seat\",\n    \"second\",\n    \"secret\",\n    \"section\",\n    \"security\",\n    \"seed\",\n    \"seek\",\n    \"segment\",\n    \"select\",\n    \"sell\",\n    \"seminar\",\n    \"senior\",\n    \"sense\",\n    \"sentence\",\n    \"series\",\n    \"service\",\n    \"session\",\n    \"settle\",\n    \"setup\",\n    \"seven\",\n    \"shadow\",\n    \"shaft\",\n    \"shallow\",\n    \"share\",\n    \"shed\",\n    \"shell\",\n    \"sheriff\",\n    \"shield\",\n    \"shift\",\n    \"shine\",\n    \"ship\",\n    \"shiver\",\n    \"shock\",\n    \"shoe\",\n    \"shoot\",\n    \"shop\",\n    \"short\",\n    \"shoulder\",\n    \"shove\",\n    \"shrimp\",\n    \"shrug\",\n    \"shuffle\",\n    \"shy\",\n    \"sibling\",\n    \"sick\",\n    \"side\",\n    \"siege\",\n    \"sight\",\n    \"sign\",\n    \"silent\",\n    \"silk\",\n    \"silly\",\n    \"silver\",\n    \"similar\",\n    \"simple\",\n    \"since\",\n    \"sing\",\n    \"siren\",\n    \"sister\",\n    \"situate\",\n    \"six\",\n    \"size\",\n    \"skate\",\n    \"sketch\",\n    \"ski\",\n    \"skill\",\n    \"skin\",\n    \"skirt\",\n    \"skull\",\n    \"slab\",\n    \"slam\",\n    \"sleep\",\n    \"slender\",\n    \"slice\",\n    \"slide\",\n    \"slight\",\n    \"slim\",\n    \"slogan\",\n    \"slot\",\n    \"slow\",\n    \"slush\",\n    \"small\",\n    \"smart\",\n    \"smile\",\n    \"smoke\",\n    \"smooth\",\n    \"snack\",\n    \"snake\",\n    \"snap\",\n    \"sniff\",\n    \"snow\",\n    \"soap\",\n    \"soccer\",\n    \"social\",\n    \"sock\",\n    \"soda\",\n    \"soft\",\n    \"solar\",\n    \"soldier\",\n    \"solid\",\n    \"solution\",\n    \"solve\",\n    \"someone\",\n    \"song\",\n    \"soon\",\n    \"sorry\",\n    \"sort\",\n    \"soul\",\n    \"sound\",\n    \"soup\",\n    \"source\",\n    \"south\",\n    \"space\",\n    \"spare\",\n    \"spatial\",\n    \"spawn\",\n    \"speak\",\n    \"special\",\n    \"speed\",\n    \"spell\",\n    \"spend\",\n    \"sphere\",\n    \"spice\",\n    \"spider\",\n    \"spike\",\n    \"spin\",\n    \"spirit\",\n    \"split\",\n    \"spoil\",\n    \"sponsor\",\n    \"spoon\",\n    \"sport\",\n    \"spot\",\n    \"spray\",\n    \"spread\",\n    \"spring\",\n    \"spy\",\n    \"square\",\n    \"squeeze\",\n    \"squirrel\",\n    \"stable\",\n    \"stadium\",\n    \"staff\",\n    \"stage\",\n    \"stairs\",\n    \"stamp\",\n    \"stand\",\n    \"start\",\n    \"state\",\n    \"stay\",\n    \"steak\",\n    \"steel\",\n    \"stem\",\n    \"step\",\n    \"stereo\",\n    \"stick\",\n    \"still\",\n    \"sting\",\n    \"stock\",\n    \"stomach\",\n    \"stone\",\n    \"stool\",\n    \"story\",\n    \"stove\",\n    \"strategy\",\n    \"street\",\n    \"strike\",\n    \"strong\",\n    \"struggle\",\n    \"student\",\n    \"stuff\",\n    \"stumble\",\n    \"style\",\n    \"subject\",\n    \"submit\",\n    \"subway\",\n    \"success\",\n    \"such\",\n    \"sudden\",\n    \"suffer\",\n    \"sugar\",\n    \"suggest\",\n    \"suit\",\n    \"summer\",\n    \"sun\",\n    \"sunny\",\n    \"sunset\",\n    \"super\",\n    \"supply\",\n    \"supreme\",\n    \"sure\",\n    \"surface\",\n    \"surge\",\n    \"surprise\",\n    \"surround\",\n    \"survey\",\n    \"suspect\",\n    \"sustain\",\n    \"swallow\",\n    \"swamp\",\n    \"swap\",\n    \"swarm\",\n    \"swear\",\n    \"sweet\",\n    \"swift\",\n    \"swim\",\n    \"swing\",\n    \"switch\",\n    \"sword\",\n    \"symbol\",\n    \"symptom\",\n    \"syrup\",\n    \"system\",\n    \"table\",\n    \"tackle\",\n    \"tag\",\n    \"tail\",\n    \"talent\",\n    \"talk\",\n    \"tank\",\n    \"tape\",\n    \"target\",\n    \"task\",\n    \"taste\",\n    \"tattoo\",\n    \"taxi\",\n    \"teach\",\n    \"team\",\n    \"tell\",\n    \"ten\",\n    \"tenant\",\n    \"tennis\",\n    \"tent\",\n    \"term\",\n    \"test\",\n    \"text\",\n    \"thank\",\n    \"that\",\n    \"theme\",\n    \"then\",\n    \"theory\",\n    \"there\",\n    \"they\",\n    \"thing\",\n    \"this\",\n    \"thought\",\n    \"three\",\n    \"thrive\",\n    \"throw\",\n    \"thumb\",\n    \"thunder\",\n    \"ticket\",\n    \"tide\",\n    \"tiger\",\n    \"tilt\",\n    \"timber\",\n    \"time\",\n    \"tiny\",\n    \"tip\",\n    \"tired\",\n    \"tissue\",\n    \"title\",\n    \"toast\",\n    \"tobacco\",\n    \"today\",\n    \"toddler\",\n    \"toe\",\n    \"together\",\n    \"toilet\",\n    \"token\",\n    \"tomato\",\n    \"tomorrow\",\n    \"tone\",\n    \"tongue\",\n    \"tonight\",\n    \"tool\",\n    \"tooth\",\n    \"top\",\n    \"topic\",\n    \"topple\",\n    \"torch\",\n    \"tornado\",\n    \"tortoise\",\n    \"toss\",\n    \"total\",\n    \"tourist\",\n    \"toward\",\n    \"tower\",\n    \"town\",\n    \"toy\",\n    \"track\",\n    \"trade\",\n    \"traffic\",\n    \"tragic\",\n    \"train\",\n    \"transfer\",\n    \"trap\",\n    \"trash\",\n    \"travel\",\n    \"tray\",\n    \"treat\",\n    \"tree\",\n    \"trend\",\n    \"trial\",\n    \"tribe\",\n    \"trick\",\n    \"trigger\",\n    \"trim\",\n    \"trip\",\n    \"trophy\",\n    \"trouble\",\n    \"truck\",\n    \"true\",\n    \"truly\",\n    \"trumpet\",\n    \"trust\",\n    \"truth\",\n    \"try\",\n    \"tube\",\n    \"tuition\",\n    \"tumble\",\n    \"tuna\",\n    \"tunnel\",\n    \"turkey\",\n    \"turn\",\n    \"turtle\",\n    \"twelve\",\n    \"twenty\",\n    \"twice\",\n    \"twin\",\n    \"twist\",\n    \"two\",\n    \"type\",\n    \"typical\",\n    \"ugly\",\n    \"umbrella\",\n    \"unable\",\n    \"unaware\",\n    \"uncle\",\n    \"uncover\",\n    \"under\",\n    \"undo\",\n    \"unfair\",\n    \"unfold\",\n    \"unhappy\",\n    \"uniform\",\n    \"unique\",\n    \"unit\",\n    \"universe\",\n    \"unknown\",\n    \"unlock\",\n    \"until\",\n    \"unusual\",\n    \"unveil\",\n    \"update\",\n    \"upgrade\",\n    \"uphold\",\n    \"upon\",\n    \"upper\",\n    \"upset\",\n    \"urban\",\n    \"urge\",\n    \"usage\",\n    \"use\",\n    \"used\",\n    \"useful\",\n    \"useless\",\n    \"usual\",\n    \"utility\",\n    \"vacant\",\n    \"vacuum\",\n    \"vague\",\n    \"valid\",\n    \"valley\",\n    \"valve\",\n    \"van\",\n    \"vanish\",\n    \"vapor\",\n    \"various\",\n    \"vast\",\n    \"vault\",\n    \"vehicle\",\n    \"velvet\",\n    \"vendor\",\n    \"venture\",\n    \"venue\",\n    \"verb\",\n    \"verify\",\n    \"version\",\n    \"very\",\n    \"vessel\",\n    \"veteran\",\n    \"viable\",\n    \"vibrant\",\n    \"vicious\",\n    \"victory\",\n    \"video\",\n    \"view\",\n    \"village\",\n    \"vintage\",\n    \"violin\",\n    \"virtual\",\n    \"virus\",\n    \"visa\",\n    \"visit\",\n    \"visual\",\n    \"vital\",\n    \"vivid\",\n    \"vocal\",\n    \"voice\",\n    \"void\",\n    \"volcano\",\n    \"volume\",\n    \"vote\",\n    \"voyage\",\n    \"wage\",\n    \"wagon\",\n    \"wait\",\n    \"walk\",\n    \"wall\",\n    \"walnut\",\n    \"want\",\n    \"warfare\",\n    \"warm\",\n    \"warrior\",\n    \"wash\",\n    \"wasp\",\n    \"waste\",\n    \"water\",\n    \"wave\",\n    \"way\",\n    \"wealth\",\n    \"weapon\",\n    \"wear\",\n    \"weasel\",\n    \"weather\",\n    \"web\",\n    \"wedding\",\n    \"weekend\",\n    \"weird\",\n    \"welcome\",\n    \"west\",\n    \"wet\",\n    \"whale\",\n    \"what\",\n    \"wheat\",\n    \"wheel\",\n    \"when\",\n    \"where\",\n    \"whip\",\n    \"whisper\",\n    \"wide\",\n    \"width\",\n    \"wife\",\n    \"wild\",\n    \"will\",\n    \"win\",\n    \"window\",\n    \"wine\",\n    \"wing\",\n    \"wink\",\n    \"winner\",\n    \"winter\",\n    \"wire\",\n    \"wisdom\",\n    \"wise\",\n    \"wish\",\n    \"witness\",\n    \"wolf\",\n    \"woman\",\n    \"wonder\",\n    \"wood\",\n    \"wool\",\n    \"word\",\n    \"work\",\n    \"world\",\n    \"worry\",\n    \"worth\",\n    \"wrap\",\n    \"wreck\",\n    \"wrestle\",\n    \"wrist\",\n    \"write\",\n    \"wrong\",\n    \"yard\",\n    \"year\",\n    \"yellow\",\n    \"you\",\n    \"young\",\n    \"youth\",\n    \"zebra\",\n    \"zero\",\n    \"zone\",\n    \"zoo\",\n];\n", "import PrivateKey from \"./PrivateKey.js\";\nimport Ed25519PrivateKey from \"./Ed25519PrivateKey.js\";\nimport BadMnemonicError from \"./BadMnemonicError.js\";\nimport BadMnemonicReason from \"./BadMnemonicReason.js\";\nimport legacyWords from \"./words/legacy.js\";\nimport bip39Words from \"./words/bip39.js\";\nimport nacl from \"tweetnacl\";\nimport * as sha256 from \"./primitive/sha256.js\";\nimport * as pbkdf2 from \"./primitive/pbkdf2.js\";\nimport * as hmac from \"./primitive/hmac.js\";\nimport * as slip10 from \"./primitive/slip10.js\";\nimport * as entropy from \"./util/entropy.js\";\nimport * as random from \"./primitive/random.js\";\n// import EcdsaPrivateKey from \"./EcdsaPrivateKey.js\";\n\n/**\n * Multi-word mnemonic phrase (BIP-39).\n *\n * Compatible with the official Hedera mobile\n * wallets (24-words or 22-words) and BRD (12-words).\n */\nexport default class Mnemonic {\n    /**\n     * @param {Object} props\n     * @param {string[]} props.words\n     * @param {boolean} props.legacy\n     * @throws {BadMnemonicError}\n     * @hideconstructor\n     * @private\n     */\n    constructor({ words, legacy }) {\n        this.words = words;\n        this._isLegacy = legacy;\n    }\n\n    /**\n     * Returns a new random 24-word mnemonic from the BIP-39\n     * standard English word list.\n     *\n     * @returns {Promise<Mnemonic>}\n     */\n    static generate() {\n        return Mnemonic._generate(24);\n    }\n\n    /**\n     * Returns a new random 12-word mnemonic from the BIP-39\n     * standard English word list.\n     *\n     * @returns {Promise<Mnemonic>}\n     */\n    static generate12() {\n        return Mnemonic._generate(12);\n    }\n\n    /**\n     * @param {number} length\n     * @returns {Promise<Mnemonic>}\n     */\n    static async _generate(length) {\n        // only 12-word or 24-word lengths are supported\n        let neededEntropy;\n\n        if (length === 12) neededEntropy = 16;\n        else if (length === 24) neededEntropy = 32;\n        else {\n            throw new Error(\n                `unsupported phrase length ${length}, only 12 or 24 are supported`\n            );\n        }\n\n        // inlined from (ISC) with heavy alternations for modern crypto\n        // https://github.com/bitcoinjs/bip39/blob/8461e83677a1d2c685d0d5a9ba2a76bd228f74c6/ts_src/index.ts#L125\n        const seed = await random.bytesAsync(neededEntropy);\n        const entropyBits = bytesToBinary(Array.from(seed));\n        const checksumBits = await deriveChecksumBits(seed);\n        const bits = entropyBits + checksumBits;\n        const chunks = bits.match(/(.{1,11})/g);\n\n        const words = (chunks != null ? chunks : []).map(\n            (binary) => bip39Words[binaryToByte(binary)]\n        );\n\n        return new Mnemonic({ words, legacy: false });\n    }\n\n    /**\n     * Construct a mnemonic from a list of words. Handles 12, 22 (legacy), and 24 words.\n     *\n     * An exception of BadMnemonicError will be thrown if the mnemonic\n     * contains unknown words or fails the checksum. An invalid mnemonic\n     * can still be used to create private keys, the exception will\n     * contain the failing mnemonic in case you wish to ignore the\n     * validation error and continue.\n     *\n     * @param {string[]} words\n     * @throws {BadMnemonicError}\n     * @returns {Promise<Mnemonic>}\n     */\n    static async fromWords(words) {\n        return await new Mnemonic({\n            words,\n            legacy: words.length === 22,\n        })._validate();\n    }\n\n    /**\n     * Recover a private key from this mnemonic phrase, with an\n     * optional passphrase.\n     *\n     * @param {string} [passphrase]\n     * @returns {Promise<PrivateKey>}\n     */\n    async toPrivateKey(passphrase = \"\") {\n        if (this._isLegacy) {\n            if (passphrase.length > 0) {\n                throw new Error(\n                    \"legacy 22-word mnemonics do not support passphrases\"\n                );\n            }\n\n            return this.toLegacyPrivateKey();\n        }\n\n        return await this._toPrivateKey(passphrase);\n    }\n\n    // /**\n    //  * Recover an ecdsa private key from this mnemonic phrase, with an\n    //  * optional passphrase.\n    //  *\n    //  * @param {string} [passphrase]\n    //  * @returns {Promise<EcdsaPrivateKey>}\n    //  */\n    //      async toEcdsaPrivateKey(passphrase = \"\") {\n    //         if (this._isLegacy) {\n    //             if (passphrase.length > 0) {\n    //                 throw new Error(\n    //                     \"legacy 22-word mnemonics do not support passphrases\"\n    //                 );\n    //             }\n\n    //             return this.toLegacyPrivateKey();\n    //         }\n\n    //         return await this._toEcdsaPrivateKey(passphrase);\n    //     }\n\n    /**\n     * Recover a mnemonic phrase from a string, splitting on spaces. Handles 12, 22 (legacy), and 24 words.\n     *\n     * @param {string} mnemonic\n     * @returns {Promise<Mnemonic>}\n     */\n    static async fromString(mnemonic) {\n        return Mnemonic.fromWords(mnemonic.split(/\\s|,/));\n    }\n\n    /**\n     * @returns {Promise<Mnemonic>}\n     * @private\n     */\n    async _validate() {\n        // Validate that this is a valid BIP-39 mnemonic\n        // as generated by BIP-39's rules.\n\n        // Technically, invalid mnemonics can still be used to generate valid private keys,\n        // but if they became invalid due to user error then it will be difficult for the user\n        // to tell the difference unless they compare the generated keys.\n\n        // During validation, the following conditions are checked in order\n\n        //  1)) 24 or 12 words\n\n        //  2) All strings in {@link this.words} exist in the BIP-39\n        //     standard English word list (no normalization is done)\n\n        //  3) The calculated checksum for the mnemonic equals the\n        //     checksum encoded in the mnemonic\n\n        if (this._isLegacy) {\n            if (this.words.length !== 22) {\n                throw new BadMnemonicError(\n                    this,\n                    BadMnemonicReason.BadLength,\n                    []\n                );\n            }\n\n            const unknownWordIndices = this.words.reduce(\n                (/** @type {number[]} */ unknowns, word, index) =>\n                    legacyWords.includes(word.toLowerCase())\n                        ? unknowns\n                        : [...unknowns, index],\n                []\n            );\n\n            if (unknownWordIndices.length > 0) {\n                throw new BadMnemonicError(\n                    this,\n                    BadMnemonicReason.UnknownWords,\n                    unknownWordIndices\n                );\n            }\n\n            const [seed, checksum] = entropy.legacy1(this.words, legacyWords);\n            const newChecksum = entropy.crc8(seed);\n\n            if (checksum !== newChecksum) {\n                throw new BadMnemonicError(\n                    this,\n                    BadMnemonicReason.ChecksumMismatch,\n                    []\n                );\n            }\n        } else {\n            if (!(this.words.length === 12 || this.words.length === 24)) {\n                throw new BadMnemonicError(\n                    this,\n                    BadMnemonicReason.BadLength,\n                    []\n                );\n            }\n\n            const unknownWordIndices = this.words.reduce(\n                (/** @type {number[]} */ unknowns, word, index) =>\n                    bip39Words.includes(word) ? unknowns : [...unknowns, index],\n                []\n            );\n\n            if (unknownWordIndices.length > 0) {\n                throw new BadMnemonicError(\n                    this,\n                    BadMnemonicReason.UnknownWords,\n                    unknownWordIndices\n                );\n            }\n\n            // FIXME: calculate checksum and compare\n            // https://github.com/bitcoinjs/bip39/blob/master/ts_src/index.ts#L112\n\n            const bits = this.words\n                .map((word) => {\n                    return bip39Words\n                        .indexOf(word)\n                        .toString(2)\n                        .padStart(11, \"0\");\n                })\n                .join(\"\");\n\n            const dividerIndex = Math.floor(bits.length / 33) * 32;\n            const entropyBits = bits.slice(0, dividerIndex);\n            const checksumBits = bits.slice(dividerIndex);\n            const entropyBitsRegex = entropyBits.match(/(.{1,8})/g);\n            const entropyBytes = /** @type {RegExpMatchArray} */ (\n                entropyBitsRegex\n            ).map(binaryToByte);\n\n            const newChecksum = await deriveChecksumBits(\n                Uint8Array.from(entropyBytes)\n            );\n\n            if (newChecksum !== checksumBits) {\n                throw new BadMnemonicError(\n                    this,\n                    BadMnemonicReason.ChecksumMismatch,\n                    []\n                );\n            }\n        }\n\n        return this;\n    }\n\n    /**\n     * @private\n     * @param {string} passphrase\n     * @returns {Promise<PrivateKey>}\n     */\n    async _toPrivateKey(passphrase = \"\") {\n        const input = this.words.join(\" \");\n        const salt = `mnemonic${passphrase}`;\n\n        const seed = await pbkdf2.deriveKey(\n            hmac.HashAlgorithm.Sha512,\n            input,\n            salt,\n            2048,\n            64\n        );\n\n        const digest = await hmac.hash(\n            hmac.HashAlgorithm.Sha512,\n            \"ed25519 seed\",\n            seed\n        );\n\n        let keyData = digest.subarray(0, 32);\n        let chainCode = digest.subarray(32);\n\n        for (const index of [44, 3030, 0, 0]) {\n            ({ keyData, chainCode } = await slip10.derive(\n                keyData,\n                chainCode,\n                index\n            ));\n        }\n\n        const keyPair = nacl.sign.keyPair.fromSeed(keyData);\n\n        return new PrivateKey(new Ed25519PrivateKey(keyPair, chainCode));\n    }\n\n    /**\n     * @returns {Promise<PrivateKey>}\n     */\n    async toLegacyPrivateKey() {\n        let seed;\n        if (this._isLegacy) {\n            [seed] = entropy.legacy1(this.words, legacyWords);\n        } else {\n            seed = await entropy.legacy2(this.words, bip39Words);\n        }\n\n        return PrivateKey.fromBytes(seed);\n    }\n\n    /**\n     * @returns {string}\n     */\n    toString() {\n        return this.words.join(\" \");\n    }\n}\n\n/**\n * @param {string} bin\n * @returns {number}\n */\nfunction binaryToByte(bin) {\n    return parseInt(bin, 2);\n}\n\n/**\n * @param {number[]} bytes\n * @returns {string}\n */\nfunction bytesToBinary(bytes) {\n    return bytes.map((x) => x.toString(2).padStart(8, \"0\")).join(\"\");\n}\n\n/**\n * @param {Uint8Array} entropyBuffer\n * @returns {Promise<string>}\n */\nasync function deriveChecksumBits(entropyBuffer) {\n    const ENT = entropyBuffer.length * 8;\n    const CS = ENT / 32;\n    const hash = await sha256.digest(entropyBuffer);\n\n    return bytesToBinary(Array.from(hash)).slice(0, CS);\n}\n", "/**\n * @param {Uint8Array} data\n * @returns {Promise<Uint8Array>}\n */\nexport async function digest(data) {\n    // https://developer.mozilla.org/en-US/docs/Web/API/SubtleCrypto/digest\n    return new Uint8Array(await crypto.subtle.digest(\"SHA-256\", data));\n}\n", "/**\n * @param {Uint8Array} data\n * @returns {string}\n */\nexport function decode(data) {\n    // eslint-disable-next-line node/no-unsupported-features/node-builtins\n    return new TextDecoder().decode(data);\n}\n\n/**\n * @param {string} text\n * @returns {Uint8Array}\n */\nexport function encode(text) {\n    // eslint-disable-next-line node/no-unsupported-features/node-builtins\n    return new TextEncoder().encode(text);\n}\n", "import * as utf8 from \"../encoding/utf8.js\";\n\n/**\n * @typedef {import(\"./hmac.js\").HashAlgorithm} HashAlgorithm\n */\n\n/**\n * @param {HashAlgorithm} algorithm\n * @param {Uint8Array | string} password\n * @param {Uint8Array | string} salt\n * @param {number} iterations\n * @param {number} length\n * @returns {Promise<Uint8Array>}\n */\nexport async function deriveKey(algorithm, password, salt, iterations, length) {\n    const pass =\n        typeof password === \"string\"\n            ? // Valid ASCII is also valid UTF-8 so encoding the password as UTF-8\n              // should be fine if only valid ASCII characters are used in the password\n              utf8.encode(password)\n            : password;\n\n    const nacl = typeof salt === \"string\" ? utf8.encode(salt) : salt;\n\n    try {\n        const key = await window.crypto.subtle.importKey(\n            \"raw\",\n            pass,\n            {\n                name: \"PBKDF2\",\n                hash: algorithm,\n            },\n            false,\n            [\"deriveBits\"]\n        );\n\n        return new Uint8Array(\n            await window.crypto.subtle.deriveBits(\n                {\n                    name: \"PBKDF2\",\n                    hash: algorithm,\n                    salt: nacl,\n                    iterations,\n                },\n                key,\n                length << 3\n            )\n        );\n    } catch {\n        throw new Error(\"(BUG) Non-Exhaustive switch statement for algorithms\");\n    }\n}\n", "import * as utf8 from \"../encoding/utf8.js\";\n\n/**\n * @enum {string}\n */\nexport const HashAlgorithm = {\n    Sha256: \"SHA-256\",\n    Sha384: \"SHA-384\",\n    Sha512: \"SHA-512\",\n};\n\n/**\n * @param {HashAlgorithm} algorithm\n * @param {Uint8Array | string} secretKey\n * @param {Uint8Array | string} data\n * @returns {Promise<Uint8Array>}\n */\nexport async function hash(algorithm, secretKey, data) {\n    const key =\n        typeof secretKey === \"string\" ? utf8.encode(secretKey) : secretKey;\n    const value = typeof data === \"string\" ? utf8.encode(data) : data;\n\n    try {\n        const key_ = await window.crypto.subtle.importKey(\n            \"raw\",\n            key,\n            {\n                name: \"HMAC\",\n                hash: algorithm,\n            },\n            false,\n            [\"sign\"]\n        );\n\n        return new Uint8Array(\n            await window.crypto.subtle.sign(\"HMAC\", key_, value)\n        );\n    } catch {\n        throw new Error(\"Fallback if SubtleCrypto fails is not implemented\");\n    }\n}\n", "import * as hmac from \"../primitive/hmac.js\";\n\n/**\n * @param {Uint8Array} parentKey\n * @param {Uint8Array} chainCode\n * @param {number} index\n * @returns {Promise<{ keyData: Uint8Array; chainCode: Uint8Array }>}\n */\nexport async function derive(parentKey, chainCode, index) {\n    const input = new Uint8Array(37);\n\n    // 0x00 + parentKey + index(BE)\n    input[0] = 0;\n    input.set(parentKey, 1);\n    new DataView(input.buffer, input.byteOffset, input.byteLength).setUint32(\n        33,\n        index,\n        false\n    );\n\n    // set the index to hardened\n    input[33] |= 128;\n\n    const digest = await hmac.hash(hmac.HashAlgorithm.Sha512, chainCode, input);\n\n    return { keyData: digest.subarray(0, 32), chainCode: digest.subarray(32) };\n}\n", "/*\r\n *      bignumber.js v9.0.2\r\n *      A JavaScript library for arbitrary-precision arithmetic.\r\n *      https://github.com/MikeMcl/bignumber.js\r\n *      Copyright (c) 2021 Michael Mclaughlin <M8ch88l@gmail.com>\r\n *      MIT Licensed.\r\n *\r\n *      BigNumber.prototype methods     |  BigNumber methods\r\n *                                      |\r\n *      absoluteValue            abs    |  clone\r\n *      comparedTo                      |  config               set\r\n *      decimalPlaces            dp     |      DECIMAL_PLACES\r\n *      dividedBy                div    |      ROUNDING_MODE\r\n *      dividedToIntegerBy       idiv   |      EXPONENTIAL_AT\r\n *      exponentiatedBy          pow    |      RANGE\r\n *      integerValue                    |      CRYPTO\r\n *      isEqualTo                eq     |      MODULO_MODE\r\n *      isFinite                        |      POW_PRECISION\r\n *      isGreaterThan            gt     |      FORMAT\r\n *      isGreaterThanOrEqualTo   gte    |      ALPHABET\r\n *      isInteger                       |  isBigNumber\r\n *      isLessThan               lt     |  maximum              max\r\n *      isLessThanOrEqualTo      lte    |  minimum              min\r\n *      isNaN                           |  random\r\n *      isNegative                      |  sum\r\n *      isPositive                      |\r\n *      isZero                          |\r\n *      minus                           |\r\n *      modulo                   mod    |\r\n *      multipliedBy             times  |\r\n *      negated                         |\r\n *      plus                            |\r\n *      precision                sd     |\r\n *      shiftedBy                       |\r\n *      squareRoot               sqrt   |\r\n *      toExponential                   |\r\n *      toFixed                         |\r\n *      toFormat                        |\r\n *      toFraction                      |\r\n *      toJSON                          |\r\n *      toNumber                        |\r\n *      toPrecision                     |\r\n *      toString                        |\r\n *      valueOf                         |\r\n *\r\n */\r\n\r\n\r\nvar\r\n  isNumeric = /^-?(?:\\d+(?:\\.\\d*)?|\\.\\d+)(?:e[+-]?\\d+)?$/i,\r\n  mathceil = Math.ceil,\r\n  mathfloor = Math.floor,\r\n\r\n  bignumberError = '[BigNumber Error] ',\r\n  tooManyDigits = bignumberError + 'Number primitive has more than 15 significant digits: ',\r\n\r\n  BASE = 1e14,\r\n  LOG_BASE = 14,\r\n  MAX_SAFE_INTEGER = 0x1fffffffffffff,         // 2^53 - 1\r\n  // MAX_INT32 = 0x7fffffff,                   // 2^31 - 1\r\n  POWS_TEN = [1, 10, 100, 1e3, 1e4, 1e5, 1e6, 1e7, 1e8, 1e9, 1e10, 1e11, 1e12, 1e13],\r\n  SQRT_BASE = 1e7,\r\n\r\n  // EDITABLE\r\n  // The limit on the value of DECIMAL_PLACES, TO_EXP_NEG, TO_EXP_POS, MIN_EXP, MAX_EXP, and\r\n  // the arguments to toExponential, toFixed, toFormat, and toPrecision.\r\n  MAX = 1E9;                                   // 0 to MAX_INT32\r\n\r\n\r\n/*\r\n * Create and return a BigNumber constructor.\r\n */\r\nfunction clone(configObject) {\r\n  var div, convertBase, parseNumeric,\r\n    P = BigNumber.prototype = { constructor: BigNumber, toString: null, valueOf: null },\r\n    ONE = new BigNumber(1),\r\n\r\n\r\n    //----------------------------- EDITABLE CONFIG DEFAULTS -------------------------------\r\n\r\n\r\n    // The default values below must be integers within the inclusive ranges stated.\r\n    // The values can also be changed at run-time using BigNumber.set.\r\n\r\n    // The maximum number of decimal places for operations involving division.\r\n    DECIMAL_PLACES = 20,                     // 0 to MAX\r\n\r\n    // The rounding mode used when rounding to the above decimal places, and when using\r\n    // toExponential, toFixed, toFormat and toPrecision, and round (default value).\r\n    // UP         0 Away from zero.\r\n    // DOWN       1 Towards zero.\r\n    // CEIL       2 Towards +Infinity.\r\n    // FLOOR      3 Towards -Infinity.\r\n    // HALF_UP    4 Towards nearest neighbour. If equidistant, up.\r\n    // HALF_DOWN  5 Towards nearest neighbour. If equidistant, down.\r\n    // HALF_EVEN  6 Towards nearest neighbour. If equidistant, towards even neighbour.\r\n    // HALF_CEIL  7 Towards nearest neighbour. If equidistant, towards +Infinity.\r\n    // HALF_FLOOR 8 Towards nearest neighbour. If equidistant, towards -Infinity.\r\n    ROUNDING_MODE = 4,                       // 0 to 8\r\n\r\n    // EXPONENTIAL_AT : [TO_EXP_NEG , TO_EXP_POS]\r\n\r\n    // The exponent value at and beneath which toString returns exponential notation.\r\n    // Number type: -7\r\n    TO_EXP_NEG = -7,                         // 0 to -MAX\r\n\r\n    // The exponent value at and above which toString returns exponential notation.\r\n    // Number type: 21\r\n    TO_EXP_POS = 21,                         // 0 to MAX\r\n\r\n    // RANGE : [MIN_EXP, MAX_EXP]\r\n\r\n    // The minimum exponent value, beneath which underflow to zero occurs.\r\n    // Number type: -324  (5e-324)\r\n    MIN_EXP = -1e7,                          // -1 to -MAX\r\n\r\n    // The maximum exponent value, above which overflow to Infinity occurs.\r\n    // Number type:  308  (1.7976931348623157e+308)\r\n    // For MAX_EXP > 1e7, e.g. new BigNumber('1e100000000').plus(1) may be slow.\r\n    MAX_EXP = 1e7,                           // 1 to MAX\r\n\r\n    // Whether to use cryptographically-secure random number generation, if available.\r\n    CRYPTO = false,                          // true or false\r\n\r\n    // The modulo mode used when calculating the modulus: a mod n.\r\n    // The quotient (q = a / n) is calculated according to the corresponding rounding mode.\r\n    // The remainder (r) is calculated as: r = a - n * q.\r\n    //\r\n    // UP        0 The remainder is positive if the dividend is negative, else is negative.\r\n    // DOWN      1 The remainder has the same sign as the dividend.\r\n    //             This modulo mode is commonly known as 'truncated division' and is\r\n    //             equivalent to (a % n) in JavaScript.\r\n    // FLOOR     3 The remainder has the same sign as the divisor (Python %).\r\n    // HALF_EVEN 6 This modulo mode implements the IEEE 754 remainder function.\r\n    // EUCLID    9 Euclidian division. q = sign(n) * floor(a / abs(n)).\r\n    //             The remainder is always positive.\r\n    //\r\n    // The truncated division, floored division, Euclidian division and IEEE 754 remainder\r\n    // modes are commonly used for the modulus operation.\r\n    // Although the other rounding modes can also be used, they may not give useful results.\r\n    MODULO_MODE = 1,                         // 0 to 9\r\n\r\n    // The maximum number of significant digits of the result of the exponentiatedBy operation.\r\n    // If POW_PRECISION is 0, there will be unlimited significant digits.\r\n    POW_PRECISION = 0,                       // 0 to MAX\r\n\r\n    // The format specification used by the BigNumber.prototype.toFormat method.\r\n    FORMAT = {\r\n      prefix: '',\r\n      groupSize: 3,\r\n      secondaryGroupSize: 0,\r\n      groupSeparator: ',',\r\n      decimalSeparator: '.',\r\n      fractionGroupSize: 0,\r\n      fractionGroupSeparator: '\\xA0',        // non-breaking space\r\n      suffix: ''\r\n    },\r\n\r\n    // The alphabet used for base conversion. It must be at least 2 characters long, with no '+',\r\n    // '-', '.', whitespace, or repeated character.\r\n    // '0123456789abcdefghijklmnopqrstuvwxyzABCDEFGHIJKLMNOPQRSTUVWXYZ$_'\r\n    ALPHABET = '0123456789abcdefghijklmnopqrstuvwxyz',\r\n    alphabetHasNormalDecimalDigits = true;\r\n\r\n\r\n  //------------------------------------------------------------------------------------------\r\n\r\n\r\n  // CONSTRUCTOR\r\n\r\n\r\n  /*\r\n   * The BigNumber constructor and exported function.\r\n   * Create and return a new instance of a BigNumber object.\r\n   *\r\n   * v {number|string|BigNumber} A numeric value.\r\n   * [b] {number} The base of v. Integer, 2 to ALPHABET.length inclusive.\r\n   */\r\n  function BigNumber(v, b) {\r\n    var alphabet, c, caseChanged, e, i, isNum, len, str,\r\n      x = this;\r\n\r\n    // Enable constructor call without `new`.\r\n    if (!(x instanceof BigNumber)) return new BigNumber(v, b);\r\n\r\n    if (b == null) {\r\n\r\n      if (v && v._isBigNumber === true) {\r\n        x.s = v.s;\r\n\r\n        if (!v.c || v.e > MAX_EXP) {\r\n          x.c = x.e = null;\r\n        } else if (v.e < MIN_EXP) {\r\n          x.c = [x.e = 0];\r\n        } else {\r\n          x.e = v.e;\r\n          x.c = v.c.slice();\r\n        }\r\n\r\n        return;\r\n      }\r\n\r\n      if ((isNum = typeof v == 'number') && v * 0 == 0) {\r\n\r\n        // Use `1 / n` to handle minus zero also.\r\n        x.s = 1 / v < 0 ? (v = -v, -1) : 1;\r\n\r\n        // Fast path for integers, where n < 2147483648 (2**31).\r\n        if (v === ~~v) {\r\n          for (e = 0, i = v; i >= 10; i /= 10, e++);\r\n\r\n          if (e > MAX_EXP) {\r\n            x.c = x.e = null;\r\n          } else {\r\n            x.e = e;\r\n            x.c = [v];\r\n          }\r\n\r\n          return;\r\n        }\r\n\r\n        str = String(v);\r\n      } else {\r\n\r\n        if (!isNumeric.test(str = String(v))) return parseNumeric(x, str, isNum);\r\n\r\n        x.s = str.charCodeAt(0) == 45 ? (str = str.slice(1), -1) : 1;\r\n      }\r\n\r\n      // Decimal point?\r\n      if ((e = str.indexOf('.')) > -1) str = str.replace('.', '');\r\n\r\n      // Exponential form?\r\n      if ((i = str.search(/e/i)) > 0) {\r\n\r\n        // Determine exponent.\r\n        if (e < 0) e = i;\r\n        e += +str.slice(i + 1);\r\n        str = str.substring(0, i);\r\n      } else if (e < 0) {\r\n\r\n        // Integer.\r\n        e = str.length;\r\n      }\r\n\r\n    } else {\r\n\r\n      // '[BigNumber Error] Base {not a primitive number|not an integer|out of range}: {b}'\r\n      intCheck(b, 2, ALPHABET.length, 'Base');\r\n\r\n      // Allow exponential notation to be used with base 10 argument, while\r\n      // also rounding to DECIMAL_PLACES as with other bases.\r\n      if (b == 10 && alphabetHasNormalDecimalDigits) {\r\n        x = new BigNumber(v);\r\n        return round(x, DECIMAL_PLACES + x.e + 1, ROUNDING_MODE);\r\n      }\r\n\r\n      str = String(v);\r\n\r\n      if (isNum = typeof v == 'number') {\r\n\r\n        // Avoid potential interpretation of Infinity and NaN as base 44+ values.\r\n        if (v * 0 != 0) return parseNumeric(x, str, isNum, b);\r\n\r\n        x.s = 1 / v < 0 ? (str = str.slice(1), -1) : 1;\r\n\r\n        // '[BigNumber Error] Number primitive has more than 15 significant digits: {n}'\r\n        if (BigNumber.DEBUG && str.replace(/^0\\.0*|\\./, '').length > 15) {\r\n          throw Error\r\n           (tooManyDigits + v);\r\n        }\r\n      } else {\r\n        x.s = str.charCodeAt(0) === 45 ? (str = str.slice(1), -1) : 1;\r\n      }\r\n\r\n      alphabet = ALPHABET.slice(0, b);\r\n      e = i = 0;\r\n\r\n      // Check that str is a valid base b number.\r\n      // Don't use RegExp, so alphabet can contain special characters.\r\n      for (len = str.length; i < len; i++) {\r\n        if (alphabet.indexOf(c = str.charAt(i)) < 0) {\r\n          if (c == '.') {\r\n\r\n            // If '.' is not the first character and it has not be found before.\r\n            if (i > e) {\r\n              e = len;\r\n              continue;\r\n            }\r\n          } else if (!caseChanged) {\r\n\r\n            // Allow e.g. hexadecimal 'FF' as well as 'ff'.\r\n            if (str == str.toUpperCase() && (str = str.toLowerCase()) ||\r\n                str == str.toLowerCase() && (str = str.toUpperCase())) {\r\n              caseChanged = true;\r\n              i = -1;\r\n              e = 0;\r\n              continue;\r\n            }\r\n          }\r\n\r\n          return parseNumeric(x, String(v), isNum, b);\r\n        }\r\n      }\r\n\r\n      // Prevent later check for length on converted number.\r\n      isNum = false;\r\n      str = convertBase(str, b, 10, x.s);\r\n\r\n      // Decimal point?\r\n      if ((e = str.indexOf('.')) > -1) str = str.replace('.', '');\r\n      else e = str.length;\r\n    }\r\n\r\n    // Determine leading zeros.\r\n    for (i = 0; str.charCodeAt(i) === 48; i++);\r\n\r\n    // Determine trailing zeros.\r\n    for (len = str.length; str.charCodeAt(--len) === 48;);\r\n\r\n    if (str = str.slice(i, ++len)) {\r\n      len -= i;\r\n\r\n      // '[BigNumber Error] Number primitive has more than 15 significant digits: {n}'\r\n      if (isNum && BigNumber.DEBUG &&\r\n        len > 15 && (v > MAX_SAFE_INTEGER || v !== mathfloor(v))) {\r\n          throw Error\r\n           (tooManyDigits + (x.s * v));\r\n      }\r\n\r\n       // Overflow?\r\n      if ((e = e - i - 1) > MAX_EXP) {\r\n\r\n        // Infinity.\r\n        x.c = x.e = null;\r\n\r\n      // Underflow?\r\n      } else if (e < MIN_EXP) {\r\n\r\n        // Zero.\r\n        x.c = [x.e = 0];\r\n      } else {\r\n        x.e = e;\r\n        x.c = [];\r\n\r\n        // Transform base\r\n\r\n        // e is the base 10 exponent.\r\n        // i is where to slice str to get the first element of the coefficient array.\r\n        i = (e + 1) % LOG_BASE;\r\n        if (e < 0) i += LOG_BASE;  // i < 1\r\n\r\n        if (i < len) {\r\n          if (i) x.c.push(+str.slice(0, i));\r\n\r\n          for (len -= LOG_BASE; i < len;) {\r\n            x.c.push(+str.slice(i, i += LOG_BASE));\r\n          }\r\n\r\n          i = LOG_BASE - (str = str.slice(i)).length;\r\n        } else {\r\n          i -= len;\r\n        }\r\n\r\n        for (; i--; str += '0');\r\n        x.c.push(+str);\r\n      }\r\n    } else {\r\n\r\n      // Zero.\r\n      x.c = [x.e = 0];\r\n    }\r\n  }\r\n\r\n\r\n  // CONSTRUCTOR PROPERTIES\r\n\r\n\r\n  BigNumber.clone = clone;\r\n\r\n  BigNumber.ROUND_UP = 0;\r\n  BigNumber.ROUND_DOWN = 1;\r\n  BigNumber.ROUND_CEIL = 2;\r\n  BigNumber.ROUND_FLOOR = 3;\r\n  BigNumber.ROUND_HALF_UP = 4;\r\n  BigNumber.ROUND_HALF_DOWN = 5;\r\n  BigNumber.ROUND_HALF_EVEN = 6;\r\n  BigNumber.ROUND_HALF_CEIL = 7;\r\n  BigNumber.ROUND_HALF_FLOOR = 8;\r\n  BigNumber.EUCLID = 9;\r\n\r\n\r\n  /*\r\n   * Configure infrequently-changing library-wide settings.\r\n   *\r\n   * Accept an object with the following optional properties (if the value of a property is\r\n   * a number, it must be an integer within the inclusive range stated):\r\n   *\r\n   *   DECIMAL_PLACES   {number}           0 to MAX\r\n   *   ROUNDING_MODE    {number}           0 to 8\r\n   *   EXPONENTIAL_AT   {number|number[]}  -MAX to MAX  or  [-MAX to 0, 0 to MAX]\r\n   *   RANGE            {number|number[]}  -MAX to MAX (not zero)  or  [-MAX to -1, 1 to MAX]\r\n   *   CRYPTO           {boolean}          true or false\r\n   *   MODULO_MODE      {number}           0 to 9\r\n   *   POW_PRECISION       {number}           0 to MAX\r\n   *   ALPHABET         {string}           A string of two or more unique characters which does\r\n   *                                       not contain '.'.\r\n   *   FORMAT           {object}           An object with some of the following properties:\r\n   *     prefix                 {string}\r\n   *     groupSize              {number}\r\n   *     secondaryGroupSize     {number}\r\n   *     groupSeparator         {string}\r\n   *     decimalSeparator       {string}\r\n   *     fractionGroupSize      {number}\r\n   *     fractionGroupSeparator {string}\r\n   *     suffix                 {string}\r\n   *\r\n   * (The values assigned to the above FORMAT object properties are not checked for validity.)\r\n   *\r\n   * E.g.\r\n   * BigNumber.config({ DECIMAL_PLACES : 20, ROUNDING_MODE : 4 })\r\n   *\r\n   * Ignore properties/parameters set to null or undefined, except for ALPHABET.\r\n   *\r\n   * Return an object with the properties current values.\r\n   */\r\n  BigNumber.config = BigNumber.set = function (obj) {\r\n    var p, v;\r\n\r\n    if (obj != null) {\r\n\r\n      if (typeof obj == 'object') {\r\n\r\n        // DECIMAL_PLACES {number} Integer, 0 to MAX inclusive.\r\n        // '[BigNumber Error] DECIMAL_PLACES {not a primitive number|not an integer|out of range}: {v}'\r\n        if (obj.hasOwnProperty(p = 'DECIMAL_PLACES')) {\r\n          v = obj[p];\r\n          intCheck(v, 0, MAX, p);\r\n          DECIMAL_PLACES = v;\r\n        }\r\n\r\n        // ROUNDING_MODE {number} Integer, 0 to 8 inclusive.\r\n        // '[BigNumber Error] ROUNDING_MODE {not a primitive number|not an integer|out of range}: {v}'\r\n        if (obj.hasOwnProperty(p = 'ROUNDING_MODE')) {\r\n          v = obj[p];\r\n          intCheck(v, 0, 8, p);\r\n          ROUNDING_MODE = v;\r\n        }\r\n\r\n        // EXPONENTIAL_AT {number|number[]}\r\n        // Integer, -MAX to MAX inclusive or\r\n        // [integer -MAX to 0 inclusive, 0 to MAX inclusive].\r\n        // '[BigNumber Error] EXPONENTIAL_AT {not a primitive number|not an integer|out of range}: {v}'\r\n        if (obj.hasOwnProperty(p = 'EXPONENTIAL_AT')) {\r\n          v = obj[p];\r\n          if (v && v.pop) {\r\n            intCheck(v[0], -MAX, 0, p);\r\n            intCheck(v[1], 0, MAX, p);\r\n            TO_EXP_NEG = v[0];\r\n            TO_EXP_POS = v[1];\r\n          } else {\r\n            intCheck(v, -MAX, MAX, p);\r\n            TO_EXP_NEG = -(TO_EXP_POS = v < 0 ? -v : v);\r\n          }\r\n        }\r\n\r\n        // RANGE {number|number[]} Non-zero integer, -MAX to MAX inclusive or\r\n        // [integer -MAX to -1 inclusive, integer 1 to MAX inclusive].\r\n        // '[BigNumber Error] RANGE {not a primitive number|not an integer|out of range|cannot be zero}: {v}'\r\n        if (obj.hasOwnProperty(p = 'RANGE')) {\r\n          v = obj[p];\r\n          if (v && v.pop) {\r\n            intCheck(v[0], -MAX, -1, p);\r\n            intCheck(v[1], 1, MAX, p);\r\n            MIN_EXP = v[0];\r\n            MAX_EXP = v[1];\r\n          } else {\r\n            intCheck(v, -MAX, MAX, p);\r\n            if (v) {\r\n              MIN_EXP = -(MAX_EXP = v < 0 ? -v : v);\r\n            } else {\r\n              throw Error\r\n               (bignumberError + p + ' cannot be zero: ' + v);\r\n            }\r\n          }\r\n        }\r\n\r\n        // CRYPTO {boolean} true or false.\r\n        // '[BigNumber Error] CRYPTO not true or false: {v}'\r\n        // '[BigNumber Error] crypto unavailable'\r\n        if (obj.hasOwnProperty(p = 'CRYPTO')) {\r\n          v = obj[p];\r\n          if (v === !!v) {\r\n            if (v) {\r\n              if (typeof crypto != 'undefined' && crypto &&\r\n               (crypto.getRandomValues || crypto.randomBytes)) {\r\n                CRYPTO = v;\r\n              } else {\r\n                CRYPTO = !v;\r\n                throw Error\r\n                 (bignumberError + 'crypto unavailable');\r\n              }\r\n            } else {\r\n              CRYPTO = v;\r\n            }\r\n          } else {\r\n            throw Error\r\n             (bignumberError + p + ' not true or false: ' + v);\r\n          }\r\n        }\r\n\r\n        // MODULO_MODE {number} Integer, 0 to 9 inclusive.\r\n        // '[BigNumber Error] MODULO_MODE {not a primitive number|not an integer|out of range}: {v}'\r\n        if (obj.hasOwnProperty(p = 'MODULO_MODE')) {\r\n          v = obj[p];\r\n          intCheck(v, 0, 9, p);\r\n          MODULO_MODE = v;\r\n        }\r\n\r\n        // POW_PRECISION {number} Integer, 0 to MAX inclusive.\r\n        // '[BigNumber Error] POW_PRECISION {not a primitive number|not an integer|out of range}: {v}'\r\n        if (obj.hasOwnProperty(p = 'POW_PRECISION')) {\r\n          v = obj[p];\r\n          intCheck(v, 0, MAX, p);\r\n          POW_PRECISION = v;\r\n        }\r\n\r\n        // FORMAT {object}\r\n        // '[BigNumber Error] FORMAT not an object: {v}'\r\n        if (obj.hasOwnProperty(p = 'FORMAT')) {\r\n          v = obj[p];\r\n          if (typeof v == 'object') FORMAT = v;\r\n          else throw Error\r\n           (bignumberError + p + ' not an object: ' + v);\r\n        }\r\n\r\n        // ALPHABET {string}\r\n        // '[BigNumber Error] ALPHABET invalid: {v}'\r\n        if (obj.hasOwnProperty(p = 'ALPHABET')) {\r\n          v = obj[p];\r\n\r\n          // Disallow if less than two characters,\r\n          // or if it contains '+', '-', '.', whitespace, or a repeated character.\r\n          if (typeof v == 'string' && !/^.?$|[+\\-.\\s]|(.).*\\1/.test(v)) {\r\n            alphabetHasNormalDecimalDigits = v.slice(0, 10) == '0123456789';\r\n            ALPHABET = v;\r\n          } else {\r\n            throw Error\r\n             (bignumberError + p + ' invalid: ' + v);\r\n          }\r\n        }\r\n\r\n      } else {\r\n\r\n        // '[BigNumber Error] Object expected: {v}'\r\n        throw Error\r\n         (bignumberError + 'Object expected: ' + obj);\r\n      }\r\n    }\r\n\r\n    return {\r\n      DECIMAL_PLACES: DECIMAL_PLACES,\r\n      ROUNDING_MODE: ROUNDING_MODE,\r\n      EXPONENTIAL_AT: [TO_EXP_NEG, TO_EXP_POS],\r\n      RANGE: [MIN_EXP, MAX_EXP],\r\n      CRYPTO: CRYPTO,\r\n      MODULO_MODE: MODULO_MODE,\r\n      POW_PRECISION: POW_PRECISION,\r\n      FORMAT: FORMAT,\r\n      ALPHABET: ALPHABET\r\n    };\r\n  };\r\n\r\n\r\n  /*\r\n   * Return true if v is a BigNumber instance, otherwise return false.\r\n   *\r\n   * If BigNumber.DEBUG is true, throw if a BigNumber instance is not well-formed.\r\n   *\r\n   * v {any}\r\n   *\r\n   * '[BigNumber Error] Invalid BigNumber: {v}'\r\n   */\r\n  BigNumber.isBigNumber = function (v) {\r\n    if (!v || v._isBigNumber !== true) return false;\r\n    if (!BigNumber.DEBUG) return true;\r\n\r\n    var i, n,\r\n      c = v.c,\r\n      e = v.e,\r\n      s = v.s;\r\n\r\n    out: if ({}.toString.call(c) == '[object Array]') {\r\n\r\n      if ((s === 1 || s === -1) && e >= -MAX && e <= MAX && e === mathfloor(e)) {\r\n\r\n        // If the first element is zero, the BigNumber value must be zero.\r\n        if (c[0] === 0) {\r\n          if (e === 0 && c.length === 1) return true;\r\n          break out;\r\n        }\r\n\r\n        // Calculate number of digits that c[0] should have, based on the exponent.\r\n        i = (e + 1) % LOG_BASE;\r\n        if (i < 1) i += LOG_BASE;\r\n\r\n        // Calculate number of digits of c[0].\r\n        //if (Math.ceil(Math.log(c[0] + 1) / Math.LN10) == i) {\r\n        if (String(c[0]).length == i) {\r\n\r\n          for (i = 0; i < c.length; i++) {\r\n            n = c[i];\r\n            if (n < 0 || n >= BASE || n !== mathfloor(n)) break out;\r\n          }\r\n\r\n          // Last element cannot be zero, unless it is the only element.\r\n          if (n !== 0) return true;\r\n        }\r\n      }\r\n\r\n    // Infinity/NaN\r\n    } else if (c === null && e === null && (s === null || s === 1 || s === -1)) {\r\n      return true;\r\n    }\r\n\r\n    throw Error\r\n      (bignumberError + 'Invalid BigNumber: ' + v);\r\n  };\r\n\r\n\r\n  /*\r\n   * Return a new BigNumber whose value is the maximum of the arguments.\r\n   *\r\n   * arguments {number|string|BigNumber}\r\n   */\r\n  BigNumber.maximum = BigNumber.max = function () {\r\n    return maxOrMin(arguments, P.lt);\r\n  };\r\n\r\n\r\n  /*\r\n   * Return a new BigNumber whose value is the minimum of the arguments.\r\n   *\r\n   * arguments {number|string|BigNumber}\r\n   */\r\n  BigNumber.minimum = BigNumber.min = function () {\r\n    return maxOrMin(arguments, P.gt);\r\n  };\r\n\r\n\r\n  /*\r\n   * Return a new BigNumber with a random value equal to or greater than 0 and less than 1,\r\n   * and with dp, or DECIMAL_PLACES if dp is omitted, decimal places (or less if trailing\r\n   * zeros are produced).\r\n   *\r\n   * [dp] {number} Decimal places. Integer, 0 to MAX inclusive.\r\n   *\r\n   * '[BigNumber Error] Argument {not a primitive number|not an integer|out of range}: {dp}'\r\n   * '[BigNumber Error] crypto unavailable'\r\n   */\r\n  BigNumber.random = (function () {\r\n    var pow2_53 = 0x20000000000000;\r\n\r\n    // Return a 53 bit integer n, where 0 <= n < 9007199254740992.\r\n    // Check if Math.random() produces more than 32 bits of randomness.\r\n    // If it does, assume at least 53 bits are produced, otherwise assume at least 30 bits.\r\n    // 0x40000000 is 2^30, 0x800000 is 2^23, 0x1fffff is 2^21 - 1.\r\n    var random53bitInt = (Math.random() * pow2_53) & 0x1fffff\r\n     ? function () { return mathfloor(Math.random() * pow2_53); }\r\n     : function () { return ((Math.random() * 0x40000000 | 0) * 0x800000) +\r\n       (Math.random() * 0x800000 | 0); };\r\n\r\n    return function (dp) {\r\n      var a, b, e, k, v,\r\n        i = 0,\r\n        c = [],\r\n        rand = new BigNumber(ONE);\r\n\r\n      if (dp == null) dp = DECIMAL_PLACES;\r\n      else intCheck(dp, 0, MAX);\r\n\r\n      k = mathceil(dp / LOG_BASE);\r\n\r\n      if (CRYPTO) {\r\n\r\n        // Browsers supporting crypto.getRandomValues.\r\n        if (crypto.getRandomValues) {\r\n\r\n          a = crypto.getRandomValues(new Uint32Array(k *= 2));\r\n\r\n          for (; i < k;) {\r\n\r\n            // 53 bits:\r\n            // ((Math.pow(2, 32) - 1) * Math.pow(2, 21)).toString(2)\r\n            // 11111 11111111 11111111 11111111 11100000 00000000 00000000\r\n            // ((Math.pow(2, 32) - 1) >>> 11).toString(2)\r\n            //                                     11111 11111111 11111111\r\n            // 0x20000 is 2^21.\r\n            v = a[i] * 0x20000 + (a[i + 1] >>> 11);\r\n\r\n            // Rejection sampling:\r\n            // 0 <= v < 9007199254740992\r\n            // Probability that v >= 9e15, is\r\n            // 7199254740992 / 9007199254740992 ~= 0.0008, i.e. 1 in 1251\r\n            if (v >= 9e15) {\r\n              b = crypto.getRandomValues(new Uint32Array(2));\r\n              a[i] = b[0];\r\n              a[i + 1] = b[1];\r\n            } else {\r\n\r\n              // 0 <= v <= 8999999999999999\r\n              // 0 <= (v % 1e14) <= 99999999999999\r\n              c.push(v % 1e14);\r\n              i += 2;\r\n            }\r\n          }\r\n          i = k / 2;\r\n\r\n        // Node.js supporting crypto.randomBytes.\r\n        } else if (crypto.randomBytes) {\r\n\r\n          // buffer\r\n          a = crypto.randomBytes(k *= 7);\r\n\r\n          for (; i < k;) {\r\n\r\n            // 0x1000000000000 is 2^48, 0x10000000000 is 2^40\r\n            // 0x100000000 is 2^32, 0x1000000 is 2^24\r\n            // 11111 11111111 11111111 11111111 11111111 11111111 11111111\r\n            // 0 <= v < 9007199254740992\r\n            v = ((a[i] & 31) * 0x1000000000000) + (a[i + 1] * 0x10000000000) +\r\n               (a[i + 2] * 0x100000000) + (a[i + 3] * 0x1000000) +\r\n               (a[i + 4] << 16) + (a[i + 5] << 8) + a[i + 6];\r\n\r\n            if (v >= 9e15) {\r\n              crypto.randomBytes(7).copy(a, i);\r\n            } else {\r\n\r\n              // 0 <= (v % 1e14) <= 99999999999999\r\n              c.push(v % 1e14);\r\n              i += 7;\r\n            }\r\n          }\r\n          i = k / 7;\r\n        } else {\r\n          CRYPTO = false;\r\n          throw Error\r\n           (bignumberError + 'crypto unavailable');\r\n        }\r\n      }\r\n\r\n      // Use Math.random.\r\n      if (!CRYPTO) {\r\n\r\n        for (; i < k;) {\r\n          v = random53bitInt();\r\n          if (v < 9e15) c[i++] = v % 1e14;\r\n        }\r\n      }\r\n\r\n      k = c[--i];\r\n      dp %= LOG_BASE;\r\n\r\n      // Convert trailing digits to zeros according to dp.\r\n      if (k && dp) {\r\n        v = POWS_TEN[LOG_BASE - dp];\r\n        c[i] = mathfloor(k / v) * v;\r\n      }\r\n\r\n      // Remove trailing elements which are zero.\r\n      for (; c[i] === 0; c.pop(), i--);\r\n\r\n      // Zero?\r\n      if (i < 0) {\r\n        c = [e = 0];\r\n      } else {\r\n\r\n        // Remove leading elements which are zero and adjust exponent accordingly.\r\n        for (e = -1 ; c[0] === 0; c.splice(0, 1), e -= LOG_BASE);\r\n\r\n        // Count the digits of the first element of c to determine leading zeros, and...\r\n        for (i = 1, v = c[0]; v >= 10; v /= 10, i++);\r\n\r\n        // adjust the exponent accordingly.\r\n        if (i < LOG_BASE) e -= LOG_BASE - i;\r\n      }\r\n\r\n      rand.e = e;\r\n      rand.c = c;\r\n      return rand;\r\n    };\r\n  })();\r\n\r\n\r\n   /*\r\n   * Return a BigNumber whose value is the sum of the arguments.\r\n   *\r\n   * arguments {number|string|BigNumber}\r\n   */\r\n  BigNumber.sum = function () {\r\n    var i = 1,\r\n      args = arguments,\r\n      sum = new BigNumber(args[0]);\r\n    for (; i < args.length;) sum = sum.plus(args[i++]);\r\n    return sum;\r\n  };\r\n\r\n\r\n  // PRIVATE FUNCTIONS\r\n\r\n\r\n  // Called by BigNumber and BigNumber.prototype.toString.\r\n  convertBase = (function () {\r\n    var decimal = '0123456789';\r\n\r\n    /*\r\n     * Convert string of baseIn to an array of numbers of baseOut.\r\n     * Eg. toBaseOut('255', 10, 16) returns [15, 15].\r\n     * Eg. toBaseOut('ff', 16, 10) returns [2, 5, 5].\r\n     */\r\n    function toBaseOut(str, baseIn, baseOut, alphabet) {\r\n      var j,\r\n        arr = [0],\r\n        arrL,\r\n        i = 0,\r\n        len = str.length;\r\n\r\n      for (; i < len;) {\r\n        for (arrL = arr.length; arrL--; arr[arrL] *= baseIn);\r\n\r\n        arr[0] += alphabet.indexOf(str.charAt(i++));\r\n\r\n        for (j = 0; j < arr.length; j++) {\r\n\r\n          if (arr[j] > baseOut - 1) {\r\n            if (arr[j + 1] == null) arr[j + 1] = 0;\r\n            arr[j + 1] += arr[j] / baseOut | 0;\r\n            arr[j] %= baseOut;\r\n          }\r\n        }\r\n      }\r\n\r\n      return arr.reverse();\r\n    }\r\n\r\n    // Convert a numeric string of baseIn to a numeric string of baseOut.\r\n    // If the caller is toString, we are converting from base 10 to baseOut.\r\n    // If the caller is BigNumber, we are converting from baseIn to base 10.\r\n    return function (str, baseIn, baseOut, sign, callerIsToString) {\r\n      var alphabet, d, e, k, r, x, xc, y,\r\n        i = str.indexOf('.'),\r\n        dp = DECIMAL_PLACES,\r\n        rm = ROUNDING_MODE;\r\n\r\n      // Non-integer.\r\n      if (i >= 0) {\r\n        k = POW_PRECISION;\r\n\r\n        // Unlimited precision.\r\n        POW_PRECISION = 0;\r\n        str = str.replace('.', '');\r\n        y = new BigNumber(baseIn);\r\n        x = y.pow(str.length - i);\r\n        POW_PRECISION = k;\r\n\r\n        // Convert str as if an integer, then restore the fraction part by dividing the\r\n        // result by its base raised to a power.\r\n\r\n        y.c = toBaseOut(toFixedPoint(coeffToString(x.c), x.e, '0'),\r\n         10, baseOut, decimal);\r\n        y.e = y.c.length;\r\n      }\r\n\r\n      // Convert the number as integer.\r\n\r\n      xc = toBaseOut(str, baseIn, baseOut, callerIsToString\r\n       ? (alphabet = ALPHABET, decimal)\r\n       : (alphabet = decimal, ALPHABET));\r\n\r\n      // xc now represents str as an integer and converted to baseOut. e is the exponent.\r\n      e = k = xc.length;\r\n\r\n      // Remove trailing zeros.\r\n      for (; xc[--k] == 0; xc.pop());\r\n\r\n      // Zero?\r\n      if (!xc[0]) return alphabet.charAt(0);\r\n\r\n      // Does str represent an integer? If so, no need for the division.\r\n      if (i < 0) {\r\n        --e;\r\n      } else {\r\n        x.c = xc;\r\n        x.e = e;\r\n\r\n        // The sign is needed for correct rounding.\r\n        x.s = sign;\r\n        x = div(x, y, dp, rm, baseOut);\r\n        xc = x.c;\r\n        r = x.r;\r\n        e = x.e;\r\n      }\r\n\r\n      // xc now represents str converted to baseOut.\r\n\r\n      // THe index of the rounding digit.\r\n      d = e + dp + 1;\r\n\r\n      // The rounding digit: the digit to the right of the digit that may be rounded up.\r\n      i = xc[d];\r\n\r\n      // Look at the rounding digits and mode to determine whether to round up.\r\n\r\n      k = baseOut / 2;\r\n      r = r || d < 0 || xc[d + 1] != null;\r\n\r\n      r = rm < 4 ? (i != null || r) && (rm == 0 || rm == (x.s < 0 ? 3 : 2))\r\n            : i > k || i == k &&(rm == 4 || r || rm == 6 && xc[d - 1] & 1 ||\r\n             rm == (x.s < 0 ? 8 : 7));\r\n\r\n      // If the index of the rounding digit is not greater than zero, or xc represents\r\n      // zero, then the result of the base conversion is zero or, if rounding up, a value\r\n      // such as 0.00001.\r\n      if (d < 1 || !xc[0]) {\r\n\r\n        // 1^-dp or 0\r\n        str = r ? toFixedPoint(alphabet.charAt(1), -dp, alphabet.charAt(0)) : alphabet.charAt(0);\r\n      } else {\r\n\r\n        // Truncate xc to the required number of decimal places.\r\n        xc.length = d;\r\n\r\n        // Round up?\r\n        if (r) {\r\n\r\n          // Rounding up may mean the previous digit has to be rounded up and so on.\r\n          for (--baseOut; ++xc[--d] > baseOut;) {\r\n            xc[d] = 0;\r\n\r\n            if (!d) {\r\n              ++e;\r\n              xc = [1].concat(xc);\r\n            }\r\n          }\r\n        }\r\n\r\n        // Determine trailing zeros.\r\n        for (k = xc.length; !xc[--k];);\r\n\r\n        // E.g. [4, 11, 15] becomes 4bf.\r\n        for (i = 0, str = ''; i <= k; str += alphabet.charAt(xc[i++]));\r\n\r\n        // Add leading zeros, decimal point and trailing zeros as required.\r\n        str = toFixedPoint(str, e, alphabet.charAt(0));\r\n      }\r\n\r\n      // The caller will add the sign.\r\n      return str;\r\n    };\r\n  })();\r\n\r\n\r\n  // Perform division in the specified base. Called by div and convertBase.\r\n  div = (function () {\r\n\r\n    // Assume non-zero x and k.\r\n    function multiply(x, k, base) {\r\n      var m, temp, xlo, xhi,\r\n        carry = 0,\r\n        i = x.length,\r\n        klo = k % SQRT_BASE,\r\n        khi = k / SQRT_BASE | 0;\r\n\r\n      for (x = x.slice(); i--;) {\r\n        xlo = x[i] % SQRT_BASE;\r\n        xhi = x[i] / SQRT_BASE | 0;\r\n        m = khi * xlo + xhi * klo;\r\n        temp = klo * xlo + ((m % SQRT_BASE) * SQRT_BASE) + carry;\r\n        carry = (temp / base | 0) + (m / SQRT_BASE | 0) + khi * xhi;\r\n        x[i] = temp % base;\r\n      }\r\n\r\n      if (carry) x = [carry].concat(x);\r\n\r\n      return x;\r\n    }\r\n\r\n    function compare(a, b, aL, bL) {\r\n      var i, cmp;\r\n\r\n      if (aL != bL) {\r\n        cmp = aL > bL ? 1 : -1;\r\n      } else {\r\n\r\n        for (i = cmp = 0; i < aL; i++) {\r\n\r\n          if (a[i] != b[i]) {\r\n            cmp = a[i] > b[i] ? 1 : -1;\r\n            break;\r\n          }\r\n        }\r\n      }\r\n\r\n      return cmp;\r\n    }\r\n\r\n    function subtract(a, b, aL, base) {\r\n      var i = 0;\r\n\r\n      // Subtract b from a.\r\n      for (; aL--;) {\r\n        a[aL] -= i;\r\n        i = a[aL] < b[aL] ? 1 : 0;\r\n        a[aL] = i * base + a[aL] - b[aL];\r\n      }\r\n\r\n      // Remove leading zeros.\r\n      for (; !a[0] && a.length > 1; a.splice(0, 1));\r\n    }\r\n\r\n    // x: dividend, y: divisor.\r\n    return function (x, y, dp, rm, base) {\r\n      var cmp, e, i, more, n, prod, prodL, q, qc, rem, remL, rem0, xi, xL, yc0,\r\n        yL, yz,\r\n        s = x.s == y.s ? 1 : -1,\r\n        xc = x.c,\r\n        yc = y.c;\r\n\r\n      // Either NaN, Infinity or 0?\r\n      if (!xc || !xc[0] || !yc || !yc[0]) {\r\n\r\n        return new BigNumber(\r\n\r\n         // Return NaN if either NaN, or both Infinity or 0.\r\n         !x.s || !y.s || (xc ? yc && xc[0] == yc[0] : !yc) ? NaN :\r\n\r\n          // Return \u00B10 if x is \u00B10 or y is \u00B1Infinity, or return \u00B1Infinity as y is \u00B10.\r\n          xc && xc[0] == 0 || !yc ? s * 0 : s / 0\r\n       );\r\n      }\r\n\r\n      q = new BigNumber(s);\r\n      qc = q.c = [];\r\n      e = x.e - y.e;\r\n      s = dp + e + 1;\r\n\r\n      if (!base) {\r\n        base = BASE;\r\n        e = bitFloor(x.e / LOG_BASE) - bitFloor(y.e / LOG_BASE);\r\n        s = s / LOG_BASE | 0;\r\n      }\r\n\r\n      // Result exponent may be one less then the current value of e.\r\n      // The coefficients of the BigNumbers from convertBase may have trailing zeros.\r\n      for (i = 0; yc[i] == (xc[i] || 0); i++);\r\n\r\n      if (yc[i] > (xc[i] || 0)) e--;\r\n\r\n      if (s < 0) {\r\n        qc.push(1);\r\n        more = true;\r\n      } else {\r\n        xL = xc.length;\r\n        yL = yc.length;\r\n        i = 0;\r\n        s += 2;\r\n\r\n        // Normalise xc and yc so highest order digit of yc is >= base / 2.\r\n\r\n        n = mathfloor(base / (yc[0] + 1));\r\n\r\n        // Not necessary, but to handle odd bases where yc[0] == (base / 2) - 1.\r\n        // if (n > 1 || n++ == 1 && yc[0] < base / 2) {\r\n        if (n > 1) {\r\n          yc = multiply(yc, n, base);\r\n          xc = multiply(xc, n, base);\r\n          yL = yc.length;\r\n          xL = xc.length;\r\n        }\r\n\r\n        xi = yL;\r\n        rem = xc.slice(0, yL);\r\n        remL = rem.length;\r\n\r\n        // Add zeros to make remainder as long as divisor.\r\n        for (; remL < yL; rem[remL++] = 0);\r\n        yz = yc.slice();\r\n        yz = [0].concat(yz);\r\n        yc0 = yc[0];\r\n        if (yc[1] >= base / 2) yc0++;\r\n        // Not necessary, but to prevent trial digit n > base, when using base 3.\r\n        // else if (base == 3 && yc0 == 1) yc0 = 1 + 1e-15;\r\n\r\n        do {\r\n          n = 0;\r\n\r\n          // Compare divisor and remainder.\r\n          cmp = compare(yc, rem, yL, remL);\r\n\r\n          // If divisor < remainder.\r\n          if (cmp < 0) {\r\n\r\n            // Calculate trial digit, n.\r\n\r\n            rem0 = rem[0];\r\n            if (yL != remL) rem0 = rem0 * base + (rem[1] || 0);\r\n\r\n            // n is how many times the divisor goes into the current remainder.\r\n            n = mathfloor(rem0 / yc0);\r\n\r\n            //  Algorithm:\r\n            //  product = divisor multiplied by trial digit (n).\r\n            //  Compare product and remainder.\r\n            //  If product is greater than remainder:\r\n            //    Subtract divisor from product, decrement trial digit.\r\n            //  Subtract product from remainder.\r\n            //  If product was less than remainder at the last compare:\r\n            //    Compare new remainder and divisor.\r\n            //    If remainder is greater than divisor:\r\n            //      Subtract divisor from remainder, increment trial digit.\r\n\r\n            if (n > 1) {\r\n\r\n              // n may be > base only when base is 3.\r\n              if (n >= base) n = base - 1;\r\n\r\n              // product = divisor * trial digit.\r\n              prod = multiply(yc, n, base);\r\n              prodL = prod.length;\r\n              remL = rem.length;\r\n\r\n              // Compare product and remainder.\r\n              // If product > remainder then trial digit n too high.\r\n              // n is 1 too high about 5% of the time, and is not known to have\r\n              // ever been more than 1 too high.\r\n              while (compare(prod, rem, prodL, remL) == 1) {\r\n                n--;\r\n\r\n                // Subtract divisor from product.\r\n                subtract(prod, yL < prodL ? yz : yc, prodL, base);\r\n                prodL = prod.length;\r\n                cmp = 1;\r\n              }\r\n            } else {\r\n\r\n              // n is 0 or 1, cmp is -1.\r\n              // If n is 0, there is no need to compare yc and rem again below,\r\n              // so change cmp to 1 to avoid it.\r\n              // If n is 1, leave cmp as -1, so yc and rem are compared again.\r\n              if (n == 0) {\r\n\r\n                // divisor < remainder, so n must be at least 1.\r\n                cmp = n = 1;\r\n              }\r\n\r\n              // product = divisor\r\n              prod = yc.slice();\r\n              prodL = prod.length;\r\n            }\r\n\r\n            if (prodL < remL) prod = [0].concat(prod);\r\n\r\n            // Subtract product from remainder.\r\n            subtract(rem, prod, remL, base);\r\n            remL = rem.length;\r\n\r\n             // If product was < remainder.\r\n            if (cmp == -1) {\r\n\r\n              // Compare divisor and new remainder.\r\n              // If divisor < new remainder, subtract divisor from remainder.\r\n              // Trial digit n too low.\r\n              // n is 1 too low about 5% of the time, and very rarely 2 too low.\r\n              while (compare(yc, rem, yL, remL) < 1) {\r\n                n++;\r\n\r\n                // Subtract divisor from remainder.\r\n                subtract(rem, yL < remL ? yz : yc, remL, base);\r\n                remL = rem.length;\r\n              }\r\n            }\r\n          } else if (cmp === 0) {\r\n            n++;\r\n            rem = [0];\r\n          } // else cmp === 1 and n will be 0\r\n\r\n          // Add the next digit, n, to the result array.\r\n          qc[i++] = n;\r\n\r\n          // Update the remainder.\r\n          if (rem[0]) {\r\n            rem[remL++] = xc[xi] || 0;\r\n          } else {\r\n            rem = [xc[xi]];\r\n            remL = 1;\r\n          }\r\n        } while ((xi++ < xL || rem[0] != null) && s--);\r\n\r\n        more = rem[0] != null;\r\n\r\n        // Leading zero?\r\n        if (!qc[0]) qc.splice(0, 1);\r\n      }\r\n\r\n      if (base == BASE) {\r\n\r\n        // To calculate q.e, first get the number of digits of qc[0].\r\n        for (i = 1, s = qc[0]; s >= 10; s /= 10, i++);\r\n\r\n        round(q, dp + (q.e = i + e * LOG_BASE - 1) + 1, rm, more);\r\n\r\n      // Caller is convertBase.\r\n      } else {\r\n        q.e = e;\r\n        q.r = +more;\r\n      }\r\n\r\n      return q;\r\n    };\r\n  })();\r\n\r\n\r\n  /*\r\n   * Return a string representing the value of BigNumber n in fixed-point or exponential\r\n   * notation rounded to the specified decimal places or significant digits.\r\n   *\r\n   * n: a BigNumber.\r\n   * i: the index of the last digit required (i.e. the digit that may be rounded up).\r\n   * rm: the rounding mode.\r\n   * id: 1 (toExponential) or 2 (toPrecision).\r\n   */\r\n  function format(n, i, rm, id) {\r\n    var c0, e, ne, len, str;\r\n\r\n    if (rm == null) rm = ROUNDING_MODE;\r\n    else intCheck(rm, 0, 8);\r\n\r\n    if (!n.c) return n.toString();\r\n\r\n    c0 = n.c[0];\r\n    ne = n.e;\r\n\r\n    if (i == null) {\r\n      str = coeffToString(n.c);\r\n      str = id == 1 || id == 2 && (ne <= TO_EXP_NEG || ne >= TO_EXP_POS)\r\n       ? toExponential(str, ne)\r\n       : toFixedPoint(str, ne, '0');\r\n    } else {\r\n      n = round(new BigNumber(n), i, rm);\r\n\r\n      // n.e may have changed if the value was rounded up.\r\n      e = n.e;\r\n\r\n      str = coeffToString(n.c);\r\n      len = str.length;\r\n\r\n      // toPrecision returns exponential notation if the number of significant digits\r\n      // specified is less than the number of digits necessary to represent the integer\r\n      // part of the value in fixed-point notation.\r\n\r\n      // Exponential notation.\r\n      if (id == 1 || id == 2 && (i <= e || e <= TO_EXP_NEG)) {\r\n\r\n        // Append zeros?\r\n        for (; len < i; str += '0', len++);\r\n        str = toExponential(str, e);\r\n\r\n      // Fixed-point notation.\r\n      } else {\r\n        i -= ne;\r\n        str = toFixedPoint(str, e, '0');\r\n\r\n        // Append zeros?\r\n        if (e + 1 > len) {\r\n          if (--i > 0) for (str += '.'; i--; str += '0');\r\n        } else {\r\n          i += e - len;\r\n          if (i > 0) {\r\n            if (e + 1 == len) str += '.';\r\n            for (; i--; str += '0');\r\n          }\r\n        }\r\n      }\r\n    }\r\n\r\n    return n.s < 0 && c0 ? '-' + str : str;\r\n  }\r\n\r\n\r\n  // Handle BigNumber.max and BigNumber.min.\r\n  function maxOrMin(args, method) {\r\n    var n,\r\n      i = 1,\r\n      m = new BigNumber(args[0]);\r\n\r\n    for (; i < args.length; i++) {\r\n      n = new BigNumber(args[i]);\r\n\r\n      // If any number is NaN, return NaN.\r\n      if (!n.s) {\r\n        m = n;\r\n        break;\r\n      } else if (method.call(m, n)) {\r\n        m = n;\r\n      }\r\n    }\r\n\r\n    return m;\r\n  }\r\n\r\n\r\n  /*\r\n   * Strip trailing zeros, calculate base 10 exponent and check against MIN_EXP and MAX_EXP.\r\n   * Called by minus, plus and times.\r\n   */\r\n  function normalise(n, c, e) {\r\n    var i = 1,\r\n      j = c.length;\r\n\r\n     // Remove trailing zeros.\r\n    for (; !c[--j]; c.pop());\r\n\r\n    // Calculate the base 10 exponent. First get the number of digits of c[0].\r\n    for (j = c[0]; j >= 10; j /= 10, i++);\r\n\r\n    // Overflow?\r\n    if ((e = i + e * LOG_BASE - 1) > MAX_EXP) {\r\n\r\n      // Infinity.\r\n      n.c = n.e = null;\r\n\r\n    // Underflow?\r\n    } else if (e < MIN_EXP) {\r\n\r\n      // Zero.\r\n      n.c = [n.e = 0];\r\n    } else {\r\n      n.e = e;\r\n      n.c = c;\r\n    }\r\n\r\n    return n;\r\n  }\r\n\r\n\r\n  // Handle values that fail the validity test in BigNumber.\r\n  parseNumeric = (function () {\r\n    var basePrefix = /^(-?)0([xbo])(?=\\w[\\w.]*$)/i,\r\n      dotAfter = /^([^.]+)\\.$/,\r\n      dotBefore = /^\\.([^.]+)$/,\r\n      isInfinityOrNaN = /^-?(Infinity|NaN)$/,\r\n      whitespaceOrPlus = /^\\s*\\+(?=[\\w.])|^\\s+|\\s+$/g;\r\n\r\n    return function (x, str, isNum, b) {\r\n      var base,\r\n        s = isNum ? str : str.replace(whitespaceOrPlus, '');\r\n\r\n      // No exception on \u00B1Infinity or NaN.\r\n      if (isInfinityOrNaN.test(s)) {\r\n        x.s = isNaN(s) ? null : s < 0 ? -1 : 1;\r\n      } else {\r\n        if (!isNum) {\r\n\r\n          // basePrefix = /^(-?)0([xbo])(?=\\w[\\w.]*$)/i\r\n          s = s.replace(basePrefix, function (m, p1, p2) {\r\n            base = (p2 = p2.toLowerCase()) == 'x' ? 16 : p2 == 'b' ? 2 : 8;\r\n            return !b || b == base ? p1 : m;\r\n          });\r\n\r\n          if (b) {\r\n            base = b;\r\n\r\n            // E.g. '1.' to '1', '.1' to '0.1'\r\n            s = s.replace(dotAfter, '$1').replace(dotBefore, '0.$1');\r\n          }\r\n\r\n          if (str != s) return new BigNumber(s, base);\r\n        }\r\n\r\n        // '[BigNumber Error] Not a number: {n}'\r\n        // '[BigNumber Error] Not a base {b} number: {n}'\r\n        if (BigNumber.DEBUG) {\r\n          throw Error\r\n            (bignumberError + 'Not a' + (b ? ' base ' + b : '') + ' number: ' + str);\r\n        }\r\n\r\n        // NaN\r\n        x.s = null;\r\n      }\r\n\r\n      x.c = x.e = null;\r\n    }\r\n  })();\r\n\r\n\r\n  /*\r\n   * Round x to sd significant digits using rounding mode rm. Check for over/under-flow.\r\n   * If r is truthy, it is known that there are more digits after the rounding digit.\r\n   */\r\n  function round(x, sd, rm, r) {\r\n    var d, i, j, k, n, ni, rd,\r\n      xc = x.c,\r\n      pows10 = POWS_TEN;\r\n\r\n    // if x is not Infinity or NaN...\r\n    if (xc) {\r\n\r\n      // rd is the rounding digit, i.e. the digit after the digit that may be rounded up.\r\n      // n is a base 1e14 number, the value of the element of array x.c containing rd.\r\n      // ni is the index of n within x.c.\r\n      // d is the number of digits of n.\r\n      // i is the index of rd within n including leading zeros.\r\n      // j is the actual index of rd within n (if < 0, rd is a leading zero).\r\n      out: {\r\n\r\n        // Get the number of digits of the first element of xc.\r\n        for (d = 1, k = xc[0]; k >= 10; k /= 10, d++);\r\n        i = sd - d;\r\n\r\n        // If the rounding digit is in the first element of xc...\r\n        if (i < 0) {\r\n          i += LOG_BASE;\r\n          j = sd;\r\n          n = xc[ni = 0];\r\n\r\n          // Get the rounding digit at index j of n.\r\n          rd = n / pows10[d - j - 1] % 10 | 0;\r\n        } else {\r\n          ni = mathceil((i + 1) / LOG_BASE);\r\n\r\n          if (ni >= xc.length) {\r\n\r\n            if (r) {\r\n\r\n              // Needed by sqrt.\r\n              for (; xc.length <= ni; xc.push(0));\r\n              n = rd = 0;\r\n              d = 1;\r\n              i %= LOG_BASE;\r\n              j = i - LOG_BASE + 1;\r\n            } else {\r\n              break out;\r\n            }\r\n          } else {\r\n            n = k = xc[ni];\r\n\r\n            // Get the number of digits of n.\r\n            for (d = 1; k >= 10; k /= 10, d++);\r\n\r\n            // Get the index of rd within n.\r\n            i %= LOG_BASE;\r\n\r\n            // Get the index of rd within n, adjusted for leading zeros.\r\n            // The number of leading zeros of n is given by LOG_BASE - d.\r\n            j = i - LOG_BASE + d;\r\n\r\n            // Get the rounding digit at index j of n.\r\n            rd = j < 0 ? 0 : n / pows10[d - j - 1] % 10 | 0;\r\n          }\r\n        }\r\n\r\n        r = r || sd < 0 ||\r\n\r\n        // Are there any non-zero digits after the rounding digit?\r\n        // The expression  n % pows10[d - j - 1]  returns all digits of n to the right\r\n        // of the digit at j, e.g. if n is 908714 and j is 2, the expression gives 714.\r\n         xc[ni + 1] != null || (j < 0 ? n : n % pows10[d - j - 1]);\r\n\r\n        r = rm < 4\r\n         ? (rd || r) && (rm == 0 || rm == (x.s < 0 ? 3 : 2))\r\n         : rd > 5 || rd == 5 && (rm == 4 || r || rm == 6 &&\r\n\r\n          // Check whether the digit to the left of the rounding digit is odd.\r\n          ((i > 0 ? j > 0 ? n / pows10[d - j] : 0 : xc[ni - 1]) % 10) & 1 ||\r\n           rm == (x.s < 0 ? 8 : 7));\r\n\r\n        if (sd < 1 || !xc[0]) {\r\n          xc.length = 0;\r\n\r\n          if (r) {\r\n\r\n            // Convert sd to decimal places.\r\n            sd -= x.e + 1;\r\n\r\n            // 1, 0.1, 0.01, 0.001, 0.0001 etc.\r\n            xc[0] = pows10[(LOG_BASE - sd % LOG_BASE) % LOG_BASE];\r\n            x.e = -sd || 0;\r\n          } else {\r\n\r\n            // Zero.\r\n            xc[0] = x.e = 0;\r\n          }\r\n\r\n          return x;\r\n        }\r\n\r\n        // Remove excess digits.\r\n        if (i == 0) {\r\n          xc.length = ni;\r\n          k = 1;\r\n          ni--;\r\n        } else {\r\n          xc.length = ni + 1;\r\n          k = pows10[LOG_BASE - i];\r\n\r\n          // E.g. 56700 becomes 56000 if 7 is the rounding digit.\r\n          // j > 0 means i > number of leading zeros of n.\r\n          xc[ni] = j > 0 ? mathfloor(n / pows10[d - j] % pows10[j]) * k : 0;\r\n        }\r\n\r\n        // Round up?\r\n        if (r) {\r\n\r\n          for (; ;) {\r\n\r\n            // If the digit to be rounded up is in the first element of xc...\r\n            if (ni == 0) {\r\n\r\n              // i will be the length of xc[0] before k is added.\r\n              for (i = 1, j = xc[0]; j >= 10; j /= 10, i++);\r\n              j = xc[0] += k;\r\n              for (k = 1; j >= 10; j /= 10, k++);\r\n\r\n              // if i != k the length has increased.\r\n              if (i != k) {\r\n                x.e++;\r\n                if (xc[0] == BASE) xc[0] = 1;\r\n              }\r\n\r\n              break;\r\n            } else {\r\n              xc[ni] += k;\r\n              if (xc[ni] != BASE) break;\r\n              xc[ni--] = 0;\r\n              k = 1;\r\n            }\r\n          }\r\n        }\r\n\r\n        // Remove trailing zeros.\r\n        for (i = xc.length; xc[--i] === 0; xc.pop());\r\n      }\r\n\r\n      // Overflow? Infinity.\r\n      if (x.e > MAX_EXP) {\r\n        x.c = x.e = null;\r\n\r\n      // Underflow? Zero.\r\n      } else if (x.e < MIN_EXP) {\r\n        x.c = [x.e = 0];\r\n      }\r\n    }\r\n\r\n    return x;\r\n  }\r\n\r\n\r\n  function valueOf(n) {\r\n    var str,\r\n      e = n.e;\r\n\r\n    if (e === null) return n.toString();\r\n\r\n    str = coeffToString(n.c);\r\n\r\n    str = e <= TO_EXP_NEG || e >= TO_EXP_POS\r\n      ? toExponential(str, e)\r\n      : toFixedPoint(str, e, '0');\r\n\r\n    return n.s < 0 ? '-' + str : str;\r\n  }\r\n\r\n\r\n  // PROTOTYPE/INSTANCE METHODS\r\n\r\n\r\n  /*\r\n   * Return a new BigNumber whose value is the absolute value of this BigNumber.\r\n   */\r\n  P.absoluteValue = P.abs = function () {\r\n    var x = new BigNumber(this);\r\n    if (x.s < 0) x.s = 1;\r\n    return x;\r\n  };\r\n\r\n\r\n  /*\r\n   * Return\r\n   *   1 if the value of this BigNumber is greater than the value of BigNumber(y, b),\r\n   *   -1 if the value of this BigNumber is less than the value of BigNumber(y, b),\r\n   *   0 if they have the same value,\r\n   *   or null if the value of either is NaN.\r\n   */\r\n  P.comparedTo = function (y, b) {\r\n    return compare(this, new BigNumber(y, b));\r\n  };\r\n\r\n\r\n  /*\r\n   * If dp is undefined or null or true or false, return the number of decimal places of the\r\n   * value of this BigNumber, or null if the value of this BigNumber is \u00B1Infinity or NaN.\r\n   *\r\n   * Otherwise, if dp is a number, return a new BigNumber whose value is the value of this\r\n   * BigNumber rounded to a maximum of dp decimal places using rounding mode rm, or\r\n   * ROUNDING_MODE if rm is omitted.\r\n   *\r\n   * [dp] {number} Decimal places: integer, 0 to MAX inclusive.\r\n   * [rm] {number} Rounding mode. Integer, 0 to 8 inclusive.\r\n   *\r\n   * '[BigNumber Error] Argument {not a primitive number|not an integer|out of range}: {dp|rm}'\r\n   */\r\n  P.decimalPlaces = P.dp = function (dp, rm) {\r\n    var c, n, v,\r\n      x = this;\r\n\r\n    if (dp != null) {\r\n      intCheck(dp, 0, MAX);\r\n      if (rm == null) rm = ROUNDING_MODE;\r\n      else intCheck(rm, 0, 8);\r\n\r\n      return round(new BigNumber(x), dp + x.e + 1, rm);\r\n    }\r\n\r\n    if (!(c = x.c)) return null;\r\n    n = ((v = c.length - 1) - bitFloor(this.e / LOG_BASE)) * LOG_BASE;\r\n\r\n    // Subtract the number of trailing zeros of the last number.\r\n    if (v = c[v]) for (; v % 10 == 0; v /= 10, n--);\r\n    if (n < 0) n = 0;\r\n\r\n    return n;\r\n  };\r\n\r\n\r\n  /*\r\n   *  n / 0 = I\r\n   *  n / N = N\r\n   *  n / I = 0\r\n   *  0 / n = 0\r\n   *  0 / 0 = N\r\n   *  0 / N = N\r\n   *  0 / I = 0\r\n   *  N / n = N\r\n   *  N / 0 = N\r\n   *  N / N = N\r\n   *  N / I = N\r\n   *  I / n = I\r\n   *  I / 0 = I\r\n   *  I / N = N\r\n   *  I / I = N\r\n   *\r\n   * Return a new BigNumber whose value is the value of this BigNumber divided by the value of\r\n   * BigNumber(y, b), rounded according to DECIMAL_PLACES and ROUNDING_MODE.\r\n   */\r\n  P.dividedBy = P.div = function (y, b) {\r\n    return div(this, new BigNumber(y, b), DECIMAL_PLACES, ROUNDING_MODE);\r\n  };\r\n\r\n\r\n  /*\r\n   * Return a new BigNumber whose value is the integer part of dividing the value of this\r\n   * BigNumber by the value of BigNumber(y, b).\r\n   */\r\n  P.dividedToIntegerBy = P.idiv = function (y, b) {\r\n    return div(this, new BigNumber(y, b), 0, 1);\r\n  };\r\n\r\n\r\n  /*\r\n   * Return a BigNumber whose value is the value of this BigNumber exponentiated by n.\r\n   *\r\n   * If m is present, return the result modulo m.\r\n   * If n is negative round according to DECIMAL_PLACES and ROUNDING_MODE.\r\n   * If POW_PRECISION is non-zero and m is not present, round to POW_PRECISION using ROUNDING_MODE.\r\n   *\r\n   * The modular power operation works efficiently when x, n, and m are integers, otherwise it\r\n   * is equivalent to calculating x.exponentiatedBy(n).modulo(m) with a POW_PRECISION of 0.\r\n   *\r\n   * n {number|string|BigNumber} The exponent. An integer.\r\n   * [m] {number|string|BigNumber} The modulus.\r\n   *\r\n   * '[BigNumber Error] Exponent not an integer: {n}'\r\n   */\r\n  P.exponentiatedBy = P.pow = function (n, m) {\r\n    var half, isModExp, i, k, more, nIsBig, nIsNeg, nIsOdd, y,\r\n      x = this;\r\n\r\n    n = new BigNumber(n);\r\n\r\n    // Allow NaN and \u00B1Infinity, but not other non-integers.\r\n    if (n.c && !n.isInteger()) {\r\n      throw Error\r\n        (bignumberError + 'Exponent not an integer: ' + valueOf(n));\r\n    }\r\n\r\n    if (m != null) m = new BigNumber(m);\r\n\r\n    // Exponent of MAX_SAFE_INTEGER is 15.\r\n    nIsBig = n.e > 14;\r\n\r\n    // If x is NaN, \u00B1Infinity, \u00B10 or \u00B11, or n is \u00B1Infinity, NaN or \u00B10.\r\n    if (!x.c || !x.c[0] || x.c[0] == 1 && !x.e && x.c.length == 1 || !n.c || !n.c[0]) {\r\n\r\n      // The sign of the result of pow when x is negative depends on the evenness of n.\r\n      // If +n overflows to \u00B1Infinity, the evenness of n would be not be known.\r\n      y = new BigNumber(Math.pow(+valueOf(x), nIsBig ? 2 - isOdd(n) : +valueOf(n)));\r\n      return m ? y.mod(m) : y;\r\n    }\r\n\r\n    nIsNeg = n.s < 0;\r\n\r\n    if (m) {\r\n\r\n      // x % m returns NaN if abs(m) is zero, or m is NaN.\r\n      if (m.c ? !m.c[0] : !m.s) return new BigNumber(NaN);\r\n\r\n      isModExp = !nIsNeg && x.isInteger() && m.isInteger();\r\n\r\n      if (isModExp) x = x.mod(m);\r\n\r\n    // Overflow to \u00B1Infinity: >=2**1e10 or >=1.0000024**1e15.\r\n    // Underflow to \u00B10: <=0.79**1e10 or <=0.9999975**1e15.\r\n    } else if (n.e > 9 && (x.e > 0 || x.e < -1 || (x.e == 0\r\n      // [1, 240000000]\r\n      ? x.c[0] > 1 || nIsBig && x.c[1] >= 24e7\r\n      // [80000000000000]  [99999750000000]\r\n      : x.c[0] < 8e13 || nIsBig && x.c[0] <= 9999975e7))) {\r\n\r\n      // If x is negative and n is odd, k = -0, else k = 0.\r\n      k = x.s < 0 && isOdd(n) ? -0 : 0;\r\n\r\n      // If x >= 1, k = \u00B1Infinity.\r\n      if (x.e > -1) k = 1 / k;\r\n\r\n      // If n is negative return \u00B10, else return \u00B1Infinity.\r\n      return new BigNumber(nIsNeg ? 1 / k : k);\r\n\r\n    } else if (POW_PRECISION) {\r\n\r\n      // Truncating each coefficient array to a length of k after each multiplication\r\n      // equates to truncating significant digits to POW_PRECISION + [28, 41],\r\n      // i.e. there will be a minimum of 28 guard digits retained.\r\n      k = mathceil(POW_PRECISION / LOG_BASE + 2);\r\n    }\r\n\r\n    if (nIsBig) {\r\n      half = new BigNumber(0.5);\r\n      if (nIsNeg) n.s = 1;\r\n      nIsOdd = isOdd(n);\r\n    } else {\r\n      i = Math.abs(+valueOf(n));\r\n      nIsOdd = i % 2;\r\n    }\r\n\r\n    y = new BigNumber(ONE);\r\n\r\n    // Performs 54 loop iterations for n of 9007199254740991.\r\n    for (; ;) {\r\n\r\n      if (nIsOdd) {\r\n        y = y.times(x);\r\n        if (!y.c) break;\r\n\r\n        if (k) {\r\n          if (y.c.length > k) y.c.length = k;\r\n        } else if (isModExp) {\r\n          y = y.mod(m);    //y = y.minus(div(y, m, 0, MODULO_MODE).times(m));\r\n        }\r\n      }\r\n\r\n      if (i) {\r\n        i = mathfloor(i / 2);\r\n        if (i === 0) break;\r\n        nIsOdd = i % 2;\r\n      } else {\r\n        n = n.times(half);\r\n        round(n, n.e + 1, 1);\r\n\r\n        if (n.e > 14) {\r\n          nIsOdd = isOdd(n);\r\n        } else {\r\n          i = +valueOf(n);\r\n          if (i === 0) break;\r\n          nIsOdd = i % 2;\r\n        }\r\n      }\r\n\r\n      x = x.times(x);\r\n\r\n      if (k) {\r\n        if (x.c && x.c.length > k) x.c.length = k;\r\n      } else if (isModExp) {\r\n        x = x.mod(m);    //x = x.minus(div(x, m, 0, MODULO_MODE).times(m));\r\n      }\r\n    }\r\n\r\n    if (isModExp) return y;\r\n    if (nIsNeg) y = ONE.div(y);\r\n\r\n    return m ? y.mod(m) : k ? round(y, POW_PRECISION, ROUNDING_MODE, more) : y;\r\n  };\r\n\r\n\r\n  /*\r\n   * Return a new BigNumber whose value is the value of this BigNumber rounded to an integer\r\n   * using rounding mode rm, or ROUNDING_MODE if rm is omitted.\r\n   *\r\n   * [rm] {number} Rounding mode. Integer, 0 to 8 inclusive.\r\n   *\r\n   * '[BigNumber Error] Argument {not a primitive number|not an integer|out of range}: {rm}'\r\n   */\r\n  P.integerValue = function (rm) {\r\n    var n = new BigNumber(this);\r\n    if (rm == null) rm = ROUNDING_MODE;\r\n    else intCheck(rm, 0, 8);\r\n    return round(n, n.e + 1, rm);\r\n  };\r\n\r\n\r\n  /*\r\n   * Return true if the value of this BigNumber is equal to the value of BigNumber(y, b),\r\n   * otherwise return false.\r\n   */\r\n  P.isEqualTo = P.eq = function (y, b) {\r\n    return compare(this, new BigNumber(y, b)) === 0;\r\n  };\r\n\r\n\r\n  /*\r\n   * Return true if the value of this BigNumber is a finite number, otherwise return false.\r\n   */\r\n  P.isFinite = function () {\r\n    return !!this.c;\r\n  };\r\n\r\n\r\n  /*\r\n   * Return true if the value of this BigNumber is greater than the value of BigNumber(y, b),\r\n   * otherwise return false.\r\n   */\r\n  P.isGreaterThan = P.gt = function (y, b) {\r\n    return compare(this, new BigNumber(y, b)) > 0;\r\n  };\r\n\r\n\r\n  /*\r\n   * Return true if the value of this BigNumber is greater than or equal to the value of\r\n   * BigNumber(y, b), otherwise return false.\r\n   */\r\n  P.isGreaterThanOrEqualTo = P.gte = function (y, b) {\r\n    return (b = compare(this, new BigNumber(y, b))) === 1 || b === 0;\r\n\r\n  };\r\n\r\n\r\n  /*\r\n   * Return true if the value of this BigNumber is an integer, otherwise return false.\r\n   */\r\n  P.isInteger = function () {\r\n    return !!this.c && bitFloor(this.e / LOG_BASE) > this.c.length - 2;\r\n  };\r\n\r\n\r\n  /*\r\n   * Return true if the value of this BigNumber is less than the value of BigNumber(y, b),\r\n   * otherwise return false.\r\n   */\r\n  P.isLessThan = P.lt = function (y, b) {\r\n    return compare(this, new BigNumber(y, b)) < 0;\r\n  };\r\n\r\n\r\n  /*\r\n   * Return true if the value of this BigNumber is less than or equal to the value of\r\n   * BigNumber(y, b), otherwise return false.\r\n   */\r\n  P.isLessThanOrEqualTo = P.lte = function (y, b) {\r\n    return (b = compare(this, new BigNumber(y, b))) === -1 || b === 0;\r\n  };\r\n\r\n\r\n  /*\r\n   * Return true if the value of this BigNumber is NaN, otherwise return false.\r\n   */\r\n  P.isNaN = function () {\r\n    return !this.s;\r\n  };\r\n\r\n\r\n  /*\r\n   * Return true if the value of this BigNumber is negative, otherwise return false.\r\n   */\r\n  P.isNegative = function () {\r\n    return this.s < 0;\r\n  };\r\n\r\n\r\n  /*\r\n   * Return true if the value of this BigNumber is positive, otherwise return false.\r\n   */\r\n  P.isPositive = function () {\r\n    return this.s > 0;\r\n  };\r\n\r\n\r\n  /*\r\n   * Return true if the value of this BigNumber is 0 or -0, otherwise return false.\r\n   */\r\n  P.isZero = function () {\r\n    return !!this.c && this.c[0] == 0;\r\n  };\r\n\r\n\r\n  /*\r\n   *  n - 0 = n\r\n   *  n - N = N\r\n   *  n - I = -I\r\n   *  0 - n = -n\r\n   *  0 - 0 = 0\r\n   *  0 - N = N\r\n   *  0 - I = -I\r\n   *  N - n = N\r\n   *  N - 0 = N\r\n   *  N - N = N\r\n   *  N - I = N\r\n   *  I - n = I\r\n   *  I - 0 = I\r\n   *  I - N = N\r\n   *  I - I = N\r\n   *\r\n   * Return a new BigNumber whose value is the value of this BigNumber minus the value of\r\n   * BigNumber(y, b).\r\n   */\r\n  P.minus = function (y, b) {\r\n    var i, j, t, xLTy,\r\n      x = this,\r\n      a = x.s;\r\n\r\n    y = new BigNumber(y, b);\r\n    b = y.s;\r\n\r\n    // Either NaN?\r\n    if (!a || !b) return new BigNumber(NaN);\r\n\r\n    // Signs differ?\r\n    if (a != b) {\r\n      y.s = -b;\r\n      return x.plus(y);\r\n    }\r\n\r\n    var xe = x.e / LOG_BASE,\r\n      ye = y.e / LOG_BASE,\r\n      xc = x.c,\r\n      yc = y.c;\r\n\r\n    if (!xe || !ye) {\r\n\r\n      // Either Infinity?\r\n      if (!xc || !yc) return xc ? (y.s = -b, y) : new BigNumber(yc ? x : NaN);\r\n\r\n      // Either zero?\r\n      if (!xc[0] || !yc[0]) {\r\n\r\n        // Return y if y is non-zero, x if x is non-zero, or zero if both are zero.\r\n        return yc[0] ? (y.s = -b, y) : new BigNumber(xc[0] ? x :\r\n\r\n         // IEEE 754 (2008) 6.3: n - n = -0 when rounding to -Infinity\r\n         ROUNDING_MODE == 3 ? -0 : 0);\r\n      }\r\n    }\r\n\r\n    xe = bitFloor(xe);\r\n    ye = bitFloor(ye);\r\n    xc = xc.slice();\r\n\r\n    // Determine which is the bigger number.\r\n    if (a = xe - ye) {\r\n\r\n      if (xLTy = a < 0) {\r\n        a = -a;\r\n        t = xc;\r\n      } else {\r\n        ye = xe;\r\n        t = yc;\r\n      }\r\n\r\n      t.reverse();\r\n\r\n      // Prepend zeros to equalise exponents.\r\n      for (b = a; b--; t.push(0));\r\n      t.reverse();\r\n    } else {\r\n\r\n      // Exponents equal. Check digit by digit.\r\n      j = (xLTy = (a = xc.length) < (b = yc.length)) ? a : b;\r\n\r\n      for (a = b = 0; b < j; b++) {\r\n\r\n        if (xc[b] != yc[b]) {\r\n          xLTy = xc[b] < yc[b];\r\n          break;\r\n        }\r\n      }\r\n    }\r\n\r\n    // x < y? Point xc to the array of the bigger number.\r\n    if (xLTy) t = xc, xc = yc, yc = t, y.s = -y.s;\r\n\r\n    b = (j = yc.length) - (i = xc.length);\r\n\r\n    // Append zeros to xc if shorter.\r\n    // No need to add zeros to yc if shorter as subtract only needs to start at yc.length.\r\n    if (b > 0) for (; b--; xc[i++] = 0);\r\n    b = BASE - 1;\r\n\r\n    // Subtract yc from xc.\r\n    for (; j > a;) {\r\n\r\n      if (xc[--j] < yc[j]) {\r\n        for (i = j; i && !xc[--i]; xc[i] = b);\r\n        --xc[i];\r\n        xc[j] += BASE;\r\n      }\r\n\r\n      xc[j] -= yc[j];\r\n    }\r\n\r\n    // Remove leading zeros and adjust exponent accordingly.\r\n    for (; xc[0] == 0; xc.splice(0, 1), --ye);\r\n\r\n    // Zero?\r\n    if (!xc[0]) {\r\n\r\n      // Following IEEE 754 (2008) 6.3,\r\n      // n - n = +0  but  n - n = -0  when rounding towards -Infinity.\r\n      y.s = ROUNDING_MODE == 3 ? -1 : 1;\r\n      y.c = [y.e = 0];\r\n      return y;\r\n    }\r\n\r\n    // No need to check for Infinity as +x - +y != Infinity && -x - -y != Infinity\r\n    // for finite x and y.\r\n    return normalise(y, xc, ye);\r\n  };\r\n\r\n\r\n  /*\r\n   *   n % 0 =  N\r\n   *   n % N =  N\r\n   *   n % I =  n\r\n   *   0 % n =  0\r\n   *  -0 % n = -0\r\n   *   0 % 0 =  N\r\n   *   0 % N =  N\r\n   *   0 % I =  0\r\n   *   N % n =  N\r\n   *   N % 0 =  N\r\n   *   N % N =  N\r\n   *   N % I =  N\r\n   *   I % n =  N\r\n   *   I % 0 =  N\r\n   *   I % N =  N\r\n   *   I % I =  N\r\n   *\r\n   * Return a new BigNumber whose value is the value of this BigNumber modulo the value of\r\n   * BigNumber(y, b). The result depends on the value of MODULO_MODE.\r\n   */\r\n  P.modulo = P.mod = function (y, b) {\r\n    var q, s,\r\n      x = this;\r\n\r\n    y = new BigNumber(y, b);\r\n\r\n    // Return NaN if x is Infinity or NaN, or y is NaN or zero.\r\n    if (!x.c || !y.s || y.c && !y.c[0]) {\r\n      return new BigNumber(NaN);\r\n\r\n    // Return x if y is Infinity or x is zero.\r\n    } else if (!y.c || x.c && !x.c[0]) {\r\n      return new BigNumber(x);\r\n    }\r\n\r\n    if (MODULO_MODE == 9) {\r\n\r\n      // Euclidian division: q = sign(y) * floor(x / abs(y))\r\n      // r = x - qy    where  0 <= r < abs(y)\r\n      s = y.s;\r\n      y.s = 1;\r\n      q = div(x, y, 0, 3);\r\n      y.s = s;\r\n      q.s *= s;\r\n    } else {\r\n      q = div(x, y, 0, MODULO_MODE);\r\n    }\r\n\r\n    y = x.minus(q.times(y));\r\n\r\n    // To match JavaScript %, ensure sign of zero is sign of dividend.\r\n    if (!y.c[0] && MODULO_MODE == 1) y.s = x.s;\r\n\r\n    return y;\r\n  };\r\n\r\n\r\n  /*\r\n   *  n * 0 = 0\r\n   *  n * N = N\r\n   *  n * I = I\r\n   *  0 * n = 0\r\n   *  0 * 0 = 0\r\n   *  0 * N = N\r\n   *  0 * I = N\r\n   *  N * n = N\r\n   *  N * 0 = N\r\n   *  N * N = N\r\n   *  N * I = N\r\n   *  I * n = I\r\n   *  I * 0 = N\r\n   *  I * N = N\r\n   *  I * I = I\r\n   *\r\n   * Return a new BigNumber whose value is the value of this BigNumber multiplied by the value\r\n   * of BigNumber(y, b).\r\n   */\r\n  P.multipliedBy = P.times = function (y, b) {\r\n    var c, e, i, j, k, m, xcL, xlo, xhi, ycL, ylo, yhi, zc,\r\n      base, sqrtBase,\r\n      x = this,\r\n      xc = x.c,\r\n      yc = (y = new BigNumber(y, b)).c;\r\n\r\n    // Either NaN, \u00B1Infinity or \u00B10?\r\n    if (!xc || !yc || !xc[0] || !yc[0]) {\r\n\r\n      // Return NaN if either is NaN, or one is 0 and the other is Infinity.\r\n      if (!x.s || !y.s || xc && !xc[0] && !yc || yc && !yc[0] && !xc) {\r\n        y.c = y.e = y.s = null;\r\n      } else {\r\n        y.s *= x.s;\r\n\r\n        // Return \u00B1Infinity if either is \u00B1Infinity.\r\n        if (!xc || !yc) {\r\n          y.c = y.e = null;\r\n\r\n        // Return \u00B10 if either is \u00B10.\r\n        } else {\r\n          y.c = [0];\r\n          y.e = 0;\r\n        }\r\n      }\r\n\r\n      return y;\r\n    }\r\n\r\n    e = bitFloor(x.e / LOG_BASE) + bitFloor(y.e / LOG_BASE);\r\n    y.s *= x.s;\r\n    xcL = xc.length;\r\n    ycL = yc.length;\r\n\r\n    // Ensure xc points to longer array and xcL to its length.\r\n    if (xcL < ycL) zc = xc, xc = yc, yc = zc, i = xcL, xcL = ycL, ycL = i;\r\n\r\n    // Initialise the result array with zeros.\r\n    for (i = xcL + ycL, zc = []; i--; zc.push(0));\r\n\r\n    base = BASE;\r\n    sqrtBase = SQRT_BASE;\r\n\r\n    for (i = ycL; --i >= 0;) {\r\n      c = 0;\r\n      ylo = yc[i] % sqrtBase;\r\n      yhi = yc[i] / sqrtBase | 0;\r\n\r\n      for (k = xcL, j = i + k; j > i;) {\r\n        xlo = xc[--k] % sqrtBase;\r\n        xhi = xc[k] / sqrtBase | 0;\r\n        m = yhi * xlo + xhi * ylo;\r\n        xlo = ylo * xlo + ((m % sqrtBase) * sqrtBase) + zc[j] + c;\r\n        c = (xlo / base | 0) + (m / sqrtBase | 0) + yhi * xhi;\r\n        zc[j--] = xlo % base;\r\n      }\r\n\r\n      zc[j] = c;\r\n    }\r\n\r\n    if (c) {\r\n      ++e;\r\n    } else {\r\n      zc.splice(0, 1);\r\n    }\r\n\r\n    return normalise(y, zc, e);\r\n  };\r\n\r\n\r\n  /*\r\n   * Return a new BigNumber whose value is the value of this BigNumber negated,\r\n   * i.e. multiplied by -1.\r\n   */\r\n  P.negated = function () {\r\n    var x = new BigNumber(this);\r\n    x.s = -x.s || null;\r\n    return x;\r\n  };\r\n\r\n\r\n  /*\r\n   *  n + 0 = n\r\n   *  n + N = N\r\n   *  n + I = I\r\n   *  0 + n = n\r\n   *  0 + 0 = 0\r\n   *  0 + N = N\r\n   *  0 + I = I\r\n   *  N + n = N\r\n   *  N + 0 = N\r\n   *  N + N = N\r\n   *  N + I = N\r\n   *  I + n = I\r\n   *  I + 0 = I\r\n   *  I + N = N\r\n   *  I + I = I\r\n   *\r\n   * Return a new BigNumber whose value is the value of this BigNumber plus the value of\r\n   * BigNumber(y, b).\r\n   */\r\n  P.plus = function (y, b) {\r\n    var t,\r\n      x = this,\r\n      a = x.s;\r\n\r\n    y = new BigNumber(y, b);\r\n    b = y.s;\r\n\r\n    // Either NaN?\r\n    if (!a || !b) return new BigNumber(NaN);\r\n\r\n    // Signs differ?\r\n     if (a != b) {\r\n      y.s = -b;\r\n      return x.minus(y);\r\n    }\r\n\r\n    var xe = x.e / LOG_BASE,\r\n      ye = y.e / LOG_BASE,\r\n      xc = x.c,\r\n      yc = y.c;\r\n\r\n    if (!xe || !ye) {\r\n\r\n      // Return \u00B1Infinity if either \u00B1Infinity.\r\n      if (!xc || !yc) return new BigNumber(a / 0);\r\n\r\n      // Either zero?\r\n      // Return y if y is non-zero, x if x is non-zero, or zero if both are zero.\r\n      if (!xc[0] || !yc[0]) return yc[0] ? y : new BigNumber(xc[0] ? x : a * 0);\r\n    }\r\n\r\n    xe = bitFloor(xe);\r\n    ye = bitFloor(ye);\r\n    xc = xc.slice();\r\n\r\n    // Prepend zeros to equalise exponents. Faster to use reverse then do unshifts.\r\n    if (a = xe - ye) {\r\n      if (a > 0) {\r\n        ye = xe;\r\n        t = yc;\r\n      } else {\r\n        a = -a;\r\n        t = xc;\r\n      }\r\n\r\n      t.reverse();\r\n      for (; a--; t.push(0));\r\n      t.reverse();\r\n    }\r\n\r\n    a = xc.length;\r\n    b = yc.length;\r\n\r\n    // Point xc to the longer array, and b to the shorter length.\r\n    if (a - b < 0) t = yc, yc = xc, xc = t, b = a;\r\n\r\n    // Only start adding at yc.length - 1 as the further digits of xc can be ignored.\r\n    for (a = 0; b;) {\r\n      a = (xc[--b] = xc[b] + yc[b] + a) / BASE | 0;\r\n      xc[b] = BASE === xc[b] ? 0 : xc[b] % BASE;\r\n    }\r\n\r\n    if (a) {\r\n      xc = [a].concat(xc);\r\n      ++ye;\r\n    }\r\n\r\n    // No need to check for zero, as +x + +y != 0 && -x + -y != 0\r\n    // ye = MAX_EXP + 1 possible\r\n    return normalise(y, xc, ye);\r\n  };\r\n\r\n\r\n  /*\r\n   * If sd is undefined or null or true or false, return the number of significant digits of\r\n   * the value of this BigNumber, or null if the value of this BigNumber is \u00B1Infinity or NaN.\r\n   * If sd is true include integer-part trailing zeros in the count.\r\n   *\r\n   * Otherwise, if sd is a number, return a new BigNumber whose value is the value of this\r\n   * BigNumber rounded to a maximum of sd significant digits using rounding mode rm, or\r\n   * ROUNDING_MODE if rm is omitted.\r\n   *\r\n   * sd {number|boolean} number: significant digits: integer, 1 to MAX inclusive.\r\n   *                     boolean: whether to count integer-part trailing zeros: true or false.\r\n   * [rm] {number} Rounding mode. Integer, 0 to 8 inclusive.\r\n   *\r\n   * '[BigNumber Error] Argument {not a primitive number|not an integer|out of range}: {sd|rm}'\r\n   */\r\n  P.precision = P.sd = function (sd, rm) {\r\n    var c, n, v,\r\n      x = this;\r\n\r\n    if (sd != null && sd !== !!sd) {\r\n      intCheck(sd, 1, MAX);\r\n      if (rm == null) rm = ROUNDING_MODE;\r\n      else intCheck(rm, 0, 8);\r\n\r\n      return round(new BigNumber(x), sd, rm);\r\n    }\r\n\r\n    if (!(c = x.c)) return null;\r\n    v = c.length - 1;\r\n    n = v * LOG_BASE + 1;\r\n\r\n    if (v = c[v]) {\r\n\r\n      // Subtract the number of trailing zeros of the last element.\r\n      for (; v % 10 == 0; v /= 10, n--);\r\n\r\n      // Add the number of digits of the first element.\r\n      for (v = c[0]; v >= 10; v /= 10, n++);\r\n    }\r\n\r\n    if (sd && x.e + 1 > n) n = x.e + 1;\r\n\r\n    return n;\r\n  };\r\n\r\n\r\n  /*\r\n   * Return a new BigNumber whose value is the value of this BigNumber shifted by k places\r\n   * (powers of 10). Shift to the right if n > 0, and to the left if n < 0.\r\n   *\r\n   * k {number} Integer, -MAX_SAFE_INTEGER to MAX_SAFE_INTEGER inclusive.\r\n   *\r\n   * '[BigNumber Error] Argument {not a primitive number|not an integer|out of range}: {k}'\r\n   */\r\n  P.shiftedBy = function (k) {\r\n    intCheck(k, -MAX_SAFE_INTEGER, MAX_SAFE_INTEGER);\r\n    return this.times('1e' + k);\r\n  };\r\n\r\n\r\n  /*\r\n   *  sqrt(-n) =  N\r\n   *  sqrt(N) =  N\r\n   *  sqrt(-I) =  N\r\n   *  sqrt(I) =  I\r\n   *  sqrt(0) =  0\r\n   *  sqrt(-0) = -0\r\n   *\r\n   * Return a new BigNumber whose value is the square root of the value of this BigNumber,\r\n   * rounded according to DECIMAL_PLACES and ROUNDING_MODE.\r\n   */\r\n  P.squareRoot = P.sqrt = function () {\r\n    var m, n, r, rep, t,\r\n      x = this,\r\n      c = x.c,\r\n      s = x.s,\r\n      e = x.e,\r\n      dp = DECIMAL_PLACES + 4,\r\n      half = new BigNumber('0.5');\r\n\r\n    // Negative/NaN/Infinity/zero?\r\n    if (s !== 1 || !c || !c[0]) {\r\n      return new BigNumber(!s || s < 0 && (!c || c[0]) ? NaN : c ? x : 1 / 0);\r\n    }\r\n\r\n    // Initial estimate.\r\n    s = Math.sqrt(+valueOf(x));\r\n\r\n    // Math.sqrt underflow/overflow?\r\n    // Pass x to Math.sqrt as integer, then adjust the exponent of the result.\r\n    if (s == 0 || s == 1 / 0) {\r\n      n = coeffToString(c);\r\n      if ((n.length + e) % 2 == 0) n += '0';\r\n      s = Math.sqrt(+n);\r\n      e = bitFloor((e + 1) / 2) - (e < 0 || e % 2);\r\n\r\n      if (s == 1 / 0) {\r\n        n = '5e' + e;\r\n      } else {\r\n        n = s.toExponential();\r\n        n = n.slice(0, n.indexOf('e') + 1) + e;\r\n      }\r\n\r\n      r = new BigNumber(n);\r\n    } else {\r\n      r = new BigNumber(s + '');\r\n    }\r\n\r\n    // Check for zero.\r\n    // r could be zero if MIN_EXP is changed after the this value was created.\r\n    // This would cause a division by zero (x/t) and hence Infinity below, which would cause\r\n    // coeffToString to throw.\r\n    if (r.c[0]) {\r\n      e = r.e;\r\n      s = e + dp;\r\n      if (s < 3) s = 0;\r\n\r\n      // Newton-Raphson iteration.\r\n      for (; ;) {\r\n        t = r;\r\n        r = half.times(t.plus(div(x, t, dp, 1)));\r\n\r\n        if (coeffToString(t.c).slice(0, s) === (n = coeffToString(r.c)).slice(0, s)) {\r\n\r\n          // The exponent of r may here be one less than the final result exponent,\r\n          // e.g 0.0009999 (e-4) --> 0.001 (e-3), so adjust s so the rounding digits\r\n          // are indexed correctly.\r\n          if (r.e < e) --s;\r\n          n = n.slice(s - 3, s + 1);\r\n\r\n          // The 4th rounding digit may be in error by -1 so if the 4 rounding digits\r\n          // are 9999 or 4999 (i.e. approaching a rounding boundary) continue the\r\n          // iteration.\r\n          if (n == '9999' || !rep && n == '4999') {\r\n\r\n            // On the first iteration only, check to see if rounding up gives the\r\n            // exact result as the nines may infinitely repeat.\r\n            if (!rep) {\r\n              round(t, t.e + DECIMAL_PLACES + 2, 0);\r\n\r\n              if (t.times(t).eq(x)) {\r\n                r = t;\r\n                break;\r\n              }\r\n            }\r\n\r\n            dp += 4;\r\n            s += 4;\r\n            rep = 1;\r\n          } else {\r\n\r\n            // If rounding digits are null, 0{0,4} or 50{0,3}, check for exact\r\n            // result. If not, then there are further digits and m will be truthy.\r\n            if (!+n || !+n.slice(1) && n.charAt(0) == '5') {\r\n\r\n              // Truncate to the first rounding digit.\r\n              round(r, r.e + DECIMAL_PLACES + 2, 1);\r\n              m = !r.times(r).eq(x);\r\n            }\r\n\r\n            break;\r\n          }\r\n        }\r\n      }\r\n    }\r\n\r\n    return round(r, r.e + DECIMAL_PLACES + 1, ROUNDING_MODE, m);\r\n  };\r\n\r\n\r\n  /*\r\n   * Return a string representing the value of this BigNumber in exponential notation and\r\n   * rounded using ROUNDING_MODE to dp fixed decimal places.\r\n   *\r\n   * [dp] {number} Decimal places. Integer, 0 to MAX inclusive.\r\n   * [rm] {number} Rounding mode. Integer, 0 to 8 inclusive.\r\n   *\r\n   * '[BigNumber Error] Argument {not a primitive number|not an integer|out of range}: {dp|rm}'\r\n   */\r\n  P.toExponential = function (dp, rm) {\r\n    if (dp != null) {\r\n      intCheck(dp, 0, MAX);\r\n      dp++;\r\n    }\r\n    return format(this, dp, rm, 1);\r\n  };\r\n\r\n\r\n  /*\r\n   * Return a string representing the value of this BigNumber in fixed-point notation rounding\r\n   * to dp fixed decimal places using rounding mode rm, or ROUNDING_MODE if rm is omitted.\r\n   *\r\n   * Note: as with JavaScript's number type, (-0).toFixed(0) is '0',\r\n   * but e.g. (-0.00001).toFixed(0) is '-0'.\r\n   *\r\n   * [dp] {number} Decimal places. Integer, 0 to MAX inclusive.\r\n   * [rm] {number} Rounding mode. Integer, 0 to 8 inclusive.\r\n   *\r\n   * '[BigNumber Error] Argument {not a primitive number|not an integer|out of range}: {dp|rm}'\r\n   */\r\n  P.toFixed = function (dp, rm) {\r\n    if (dp != null) {\r\n      intCheck(dp, 0, MAX);\r\n      dp = dp + this.e + 1;\r\n    }\r\n    return format(this, dp, rm);\r\n  };\r\n\r\n\r\n  /*\r\n   * Return a string representing the value of this BigNumber in fixed-point notation rounded\r\n   * using rm or ROUNDING_MODE to dp decimal places, and formatted according to the properties\r\n   * of the format or FORMAT object (see BigNumber.set).\r\n   *\r\n   * The formatting object may contain some or all of the properties shown below.\r\n   *\r\n   * FORMAT = {\r\n   *   prefix: '',\r\n   *   groupSize: 3,\r\n   *   secondaryGroupSize: 0,\r\n   *   groupSeparator: ',',\r\n   *   decimalSeparator: '.',\r\n   *   fractionGroupSize: 0,\r\n   *   fractionGroupSeparator: '\\xA0',      // non-breaking space\r\n   *   suffix: ''\r\n   * };\r\n   *\r\n   * [dp] {number} Decimal places. Integer, 0 to MAX inclusive.\r\n   * [rm] {number} Rounding mode. Integer, 0 to 8 inclusive.\r\n   * [format] {object} Formatting options. See FORMAT pbject above.\r\n   *\r\n   * '[BigNumber Error] Argument {not a primitive number|not an integer|out of range}: {dp|rm}'\r\n   * '[BigNumber Error] Argument not an object: {format}'\r\n   */\r\n  P.toFormat = function (dp, rm, format) {\r\n    var str,\r\n      x = this;\r\n\r\n    if (format == null) {\r\n      if (dp != null && rm && typeof rm == 'object') {\r\n        format = rm;\r\n        rm = null;\r\n      } else if (dp && typeof dp == 'object') {\r\n        format = dp;\r\n        dp = rm = null;\r\n      } else {\r\n        format = FORMAT;\r\n      }\r\n    } else if (typeof format != 'object') {\r\n      throw Error\r\n        (bignumberError + 'Argument not an object: ' + format);\r\n    }\r\n\r\n    str = x.toFixed(dp, rm);\r\n\r\n    if (x.c) {\r\n      var i,\r\n        arr = str.split('.'),\r\n        g1 = +format.groupSize,\r\n        g2 = +format.secondaryGroupSize,\r\n        groupSeparator = format.groupSeparator || '',\r\n        intPart = arr[0],\r\n        fractionPart = arr[1],\r\n        isNeg = x.s < 0,\r\n        intDigits = isNeg ? intPart.slice(1) : intPart,\r\n        len = intDigits.length;\r\n\r\n      if (g2) i = g1, g1 = g2, g2 = i, len -= i;\r\n\r\n      if (g1 > 0 && len > 0) {\r\n        i = len % g1 || g1;\r\n        intPart = intDigits.substr(0, i);\r\n        for (; i < len; i += g1) intPart += groupSeparator + intDigits.substr(i, g1);\r\n        if (g2 > 0) intPart += groupSeparator + intDigits.slice(i);\r\n        if (isNeg) intPart = '-' + intPart;\r\n      }\r\n\r\n      str = fractionPart\r\n       ? intPart + (format.decimalSeparator || '') + ((g2 = +format.fractionGroupSize)\r\n        ? fractionPart.replace(new RegExp('\\\\d{' + g2 + '}\\\\B', 'g'),\r\n         '$&' + (format.fractionGroupSeparator || ''))\r\n        : fractionPart)\r\n       : intPart;\r\n    }\r\n\r\n    return (format.prefix || '') + str + (format.suffix || '');\r\n  };\r\n\r\n\r\n  /*\r\n   * Return an array of two BigNumbers representing the value of this BigNumber as a simple\r\n   * fraction with an integer numerator and an integer denominator.\r\n   * The denominator will be a positive non-zero value less than or equal to the specified\r\n   * maximum denominator. If a maximum denominator is not specified, the denominator will be\r\n   * the lowest value necessary to represent the number exactly.\r\n   *\r\n   * [md] {number|string|BigNumber} Integer >= 1, or Infinity. The maximum denominator.\r\n   *\r\n   * '[BigNumber Error] Argument {not an integer|out of range} : {md}'\r\n   */\r\n  P.toFraction = function (md) {\r\n    var d, d0, d1, d2, e, exp, n, n0, n1, q, r, s,\r\n      x = this,\r\n      xc = x.c;\r\n\r\n    if (md != null) {\r\n      n = new BigNumber(md);\r\n\r\n      // Throw if md is less than one or is not an integer, unless it is Infinity.\r\n      if (!n.isInteger() && (n.c || n.s !== 1) || n.lt(ONE)) {\r\n        throw Error\r\n          (bignumberError + 'Argument ' +\r\n            (n.isInteger() ? 'out of range: ' : 'not an integer: ') + valueOf(n));\r\n      }\r\n    }\r\n\r\n    if (!xc) return new BigNumber(x);\r\n\r\n    d = new BigNumber(ONE);\r\n    n1 = d0 = new BigNumber(ONE);\r\n    d1 = n0 = new BigNumber(ONE);\r\n    s = coeffToString(xc);\r\n\r\n    // Determine initial denominator.\r\n    // d is a power of 10 and the minimum max denominator that specifies the value exactly.\r\n    e = d.e = s.length - x.e - 1;\r\n    d.c[0] = POWS_TEN[(exp = e % LOG_BASE) < 0 ? LOG_BASE + exp : exp];\r\n    md = !md || n.comparedTo(d) > 0 ? (e > 0 ? d : n1) : n;\r\n\r\n    exp = MAX_EXP;\r\n    MAX_EXP = 1 / 0;\r\n    n = new BigNumber(s);\r\n\r\n    // n0 = d1 = 0\r\n    n0.c[0] = 0;\r\n\r\n    for (; ;)  {\r\n      q = div(n, d, 0, 1);\r\n      d2 = d0.plus(q.times(d1));\r\n      if (d2.comparedTo(md) == 1) break;\r\n      d0 = d1;\r\n      d1 = d2;\r\n      n1 = n0.plus(q.times(d2 = n1));\r\n      n0 = d2;\r\n      d = n.minus(q.times(d2 = d));\r\n      n = d2;\r\n    }\r\n\r\n    d2 = div(md.minus(d0), d1, 0, 1);\r\n    n0 = n0.plus(d2.times(n1));\r\n    d0 = d0.plus(d2.times(d1));\r\n    n0.s = n1.s = x.s;\r\n    e = e * 2;\r\n\r\n    // Determine which fraction is closer to x, n0/d0 or n1/d1\r\n    r = div(n1, d1, e, ROUNDING_MODE).minus(x).abs().comparedTo(\r\n        div(n0, d0, e, ROUNDING_MODE).minus(x).abs()) < 1 ? [n1, d1] : [n0, d0];\r\n\r\n    MAX_EXP = exp;\r\n\r\n    return r;\r\n  };\r\n\r\n\r\n  /*\r\n   * Return the value of this BigNumber converted to a number primitive.\r\n   */\r\n  P.toNumber = function () {\r\n    return +valueOf(this);\r\n  };\r\n\r\n\r\n  /*\r\n   * Return a string representing the value of this BigNumber rounded to sd significant digits\r\n   * using rounding mode rm or ROUNDING_MODE. If sd is less than the number of digits\r\n   * necessary to represent the integer part of the value in fixed-point notation, then use\r\n   * exponential notation.\r\n   *\r\n   * [sd] {number} Significant digits. Integer, 1 to MAX inclusive.\r\n   * [rm] {number} Rounding mode. Integer, 0 to 8 inclusive.\r\n   *\r\n   * '[BigNumber Error] Argument {not a primitive number|not an integer|out of range}: {sd|rm}'\r\n   */\r\n  P.toPrecision = function (sd, rm) {\r\n    if (sd != null) intCheck(sd, 1, MAX);\r\n    return format(this, sd, rm, 2);\r\n  };\r\n\r\n\r\n  /*\r\n   * Return a string representing the value of this BigNumber in base b, or base 10 if b is\r\n   * omitted. If a base is specified, including base 10, round according to DECIMAL_PLACES and\r\n   * ROUNDING_MODE. If a base is not specified, and this BigNumber has a positive exponent\r\n   * that is equal to or greater than TO_EXP_POS, or a negative exponent equal to or less than\r\n   * TO_EXP_NEG, return exponential notation.\r\n   *\r\n   * [b] {number} Integer, 2 to ALPHABET.length inclusive.\r\n   *\r\n   * '[BigNumber Error] Base {not a primitive number|not an integer|out of range}: {b}'\r\n   */\r\n  P.toString = function (b) {\r\n    var str,\r\n      n = this,\r\n      s = n.s,\r\n      e = n.e;\r\n\r\n    // Infinity or NaN?\r\n    if (e === null) {\r\n      if (s) {\r\n        str = 'Infinity';\r\n        if (s < 0) str = '-' + str;\r\n      } else {\r\n        str = 'NaN';\r\n      }\r\n    } else {\r\n      if (b == null) {\r\n        str = e <= TO_EXP_NEG || e >= TO_EXP_POS\r\n         ? toExponential(coeffToString(n.c), e)\r\n         : toFixedPoint(coeffToString(n.c), e, '0');\r\n      } else if (b === 10 && alphabetHasNormalDecimalDigits) {\r\n        n = round(new BigNumber(n), DECIMAL_PLACES + e + 1, ROUNDING_MODE);\r\n        str = toFixedPoint(coeffToString(n.c), n.e, '0');\r\n      } else {\r\n        intCheck(b, 2, ALPHABET.length, 'Base');\r\n        str = convertBase(toFixedPoint(coeffToString(n.c), e, '0'), 10, b, s, true);\r\n      }\r\n\r\n      if (s < 0 && n.c[0]) str = '-' + str;\r\n    }\r\n\r\n    return str;\r\n  };\r\n\r\n\r\n  /*\r\n   * Return as toString, but do not accept a base argument, and include the minus sign for\r\n   * negative zero.\r\n   */\r\n  P.valueOf = P.toJSON = function () {\r\n    return valueOf(this);\r\n  };\r\n\r\n\r\n  P._isBigNumber = true;\r\n\r\n  P[Symbol.toStringTag] = 'BigNumber';\r\n\r\n  // Node.js v10.12.0+\r\n  P[Symbol.for('nodejs.util.inspect.custom')] = P.valueOf;\r\n\r\n  if (configObject != null) BigNumber.set(configObject);\r\n\r\n  return BigNumber;\r\n}\r\n\r\n\r\n// PRIVATE HELPER FUNCTIONS\r\n\r\n// These functions don't need access to variables,\r\n// e.g. DECIMAL_PLACES, in the scope of the `clone` function above.\r\n\r\n\r\nfunction bitFloor(n) {\r\n  var i = n | 0;\r\n  return n > 0 || n === i ? i : i - 1;\r\n}\r\n\r\n\r\n// Return a coefficient array as a string of base 10 digits.\r\nfunction coeffToString(a) {\r\n  var s, z,\r\n    i = 1,\r\n    j = a.length,\r\n    r = a[0] + '';\r\n\r\n  for (; i < j;) {\r\n    s = a[i++] + '';\r\n    z = LOG_BASE - s.length;\r\n    for (; z--; s = '0' + s);\r\n    r += s;\r\n  }\r\n\r\n  // Determine trailing zeros.\r\n  for (j = r.length; r.charCodeAt(--j) === 48;);\r\n\r\n  return r.slice(0, j + 1 || 1);\r\n}\r\n\r\n\r\n// Compare the value of BigNumbers x and y.\r\nfunction compare(x, y) {\r\n  var a, b,\r\n    xc = x.c,\r\n    yc = y.c,\r\n    i = x.s,\r\n    j = y.s,\r\n    k = x.e,\r\n    l = y.e;\r\n\r\n  // Either NaN?\r\n  if (!i || !j) return null;\r\n\r\n  a = xc && !xc[0];\r\n  b = yc && !yc[0];\r\n\r\n  // Either zero?\r\n  if (a || b) return a ? b ? 0 : -j : i;\r\n\r\n  // Signs differ?\r\n  if (i != j) return i;\r\n\r\n  a = i < 0;\r\n  b = k == l;\r\n\r\n  // Either Infinity?\r\n  if (!xc || !yc) return b ? 0 : !xc ^ a ? 1 : -1;\r\n\r\n  // Compare exponents.\r\n  if (!b) return k > l ^ a ? 1 : -1;\r\n\r\n  j = (k = xc.length) < (l = yc.length) ? k : l;\r\n\r\n  // Compare digit by digit.\r\n  for (i = 0; i < j; i++) if (xc[i] != yc[i]) return xc[i] > yc[i] ^ a ? 1 : -1;\r\n\r\n  // Compare lengths.\r\n  return k == l ? 0 : k > l ^ a ? 1 : -1;\r\n}\r\n\r\n\r\n/*\r\n * Check that n is a primitive number, an integer, and in range, otherwise throw.\r\n */\r\nfunction intCheck(n, min, max, name) {\r\n  if (n < min || n > max || n !== mathfloor(n)) {\r\n    throw Error\r\n     (bignumberError + (name || 'Argument') + (typeof n == 'number'\r\n       ? n < min || n > max ? ' out of range: ' : ' not an integer: '\r\n       : ' not a primitive number: ') + String(n));\r\n  }\r\n}\r\n\r\n\r\n// Assumes finite n.\r\nfunction isOdd(n) {\r\n  var k = n.c.length - 1;\r\n  return bitFloor(n.e / LOG_BASE) == k && n.c[k] % 2 != 0;\r\n}\r\n\r\n\r\nfunction toExponential(str, e) {\r\n  return (str.length > 1 ? str.charAt(0) + '.' + str.slice(1) : str) +\r\n   (e < 0 ? 'e' : 'e+') + e;\r\n}\r\n\r\n\r\nfunction toFixedPoint(str, e, z) {\r\n  var len, zs;\r\n\r\n  // Negative exponent?\r\n  if (e < 0) {\r\n\r\n    // Prepend zeros.\r\n    for (zs = z + '.'; ++e; zs += z);\r\n    str = zs + str;\r\n\r\n  // Positive exponent\r\n  } else {\r\n    len = str.length;\r\n\r\n    // Append zeros.\r\n    if (++e > len) {\r\n      for (zs = z, e -= len; --e; zs += z);\r\n      str += zs;\r\n    } else if (e < len) {\r\n      str = str.slice(0, e) + '.' + str.slice(e);\r\n    }\r\n  }\r\n\r\n  return str;\r\n}\r\n\r\n\r\n// EXPORT\r\n\r\n\r\nexport var BigNumber = clone();\r\n\r\nexport default BigNumber;\r\n", "import BigNumber from \"bignumber.js\";\nimport * as sha256 from \"../primitive/sha256.js\";\n\n/**\n * @param {string[]} words\n * @param {string[]} wordlist\n * @returns {[Uint8Array, number]}\n */\nexport function legacy1(words, wordlist) {\n    const indicies = words.map((word) => wordlist.indexOf(word.toLowerCase()));\n\n    const data = convertRadix(indicies, wordlist.length, 256, 33);\n    const checksum = data[data.length - 1];\n    const result = new Uint8Array(data.length - 1);\n\n    for (let i = 0; i < data.length - 1; i += 1) {\n        result[i] = data[i] ^ checksum;\n    }\n\n    return [result, checksum];\n}\n\n/**\n * @param {string[]} words\n * @param {string[]} wordlist\n * @returns {Promise<Uint8Array>}\n */\nexport async function legacy2(words, wordlist) {\n    const concatBitsLen = words.length * 11;\n    /** @type {boolean[]} */\n    const concatBits = [];\n    concatBits.fill(false, 0, concatBitsLen);\n\n    for (const [wordIndex, word] of words.entries()) {\n        const index = wordlist.indexOf(word.toLowerCase());\n\n        if (index < 0) {\n            throw new Error(`Word not found in wordlist: ${word}`);\n        }\n\n        for (let i = 0; i < 11; i += 1) {\n            concatBits[wordIndex * 11 + i] = (index & (1 << (10 - i))) !== 0;\n        }\n    }\n\n    const checksumBitsLen = concatBitsLen / 33;\n    const entropyBitsLen = concatBitsLen - checksumBitsLen;\n    const entropy = new Uint8Array(entropyBitsLen / 8);\n\n    for (let i = 0; i < entropy.length; i += 1) {\n        for (let j = 0; j < 8; j += 1) {\n            if (concatBits[i * 8 + j]) {\n                entropy[i] |= 1 << (7 - j);\n            }\n        }\n    }\n\n    // Checksum validation\n    const hash = await sha256.digest(entropy);\n    const hashBits = bytesToBits(hash);\n\n    for (let i = 0; i < checksumBitsLen; i += 1) {\n        if (concatBits[entropyBitsLen + i] !== hashBits[i]) {\n            throw new Error(\"Checksum mismatch\");\n        }\n    }\n\n    return entropy;\n}\n\n/**\n * @param {Uint8Array} data\n * @returns {number}\n */\nexport function crc8(data) {\n    let crc = 0xff;\n\n    for (let i = 0; i < data.length - 1; i += 1) {\n        crc ^= data[i];\n        for (let j = 0; j < 8; j += 1) {\n            crc = (crc >>> 1) ^ ((crc & 1) === 0 ? 0 : 0xb2);\n        }\n    }\n\n    return crc ^ 0xff;\n}\n\n/**\n * @param {number[]} nums\n * @param {number} fromRadix\n * @param {number} toRadix\n * @param {number} toLength\n * @returns {Uint8Array}\n */\nexport function convertRadix(nums, fromRadix, toRadix, toLength) {\n    let num = new BigNumber(0);\n\n    for (const element of nums) {\n        num = num.times(fromRadix);\n        num = num.plus(element);\n    }\n\n    const result = new Uint8Array(toLength);\n\n    for (let i = toLength - 1; i >= 0; i -= 1) {\n        const tem = num.dividedToIntegerBy(toRadix);\n        const rem = num.modulo(toRadix);\n        num = tem;\n        result[i] = rem.toNumber();\n    }\n\n    return result;\n}\n\n/**\n * @param {Uint8Array} data\n * @returns {boolean[]}\n */\nexport function bytesToBits(data) {\n    /** @type {boolean[]} */\n    const bits = [];\n    bits.fill(false, 0, data.length * 8);\n\n    for (let i = 0; i < data.length; i += 1) {\n        for (let j = 0; j < 8; j += 1) {\n            bits[i * 8 + j] = (data[i] & (1 << (7 - j))) !== 0;\n        }\n    }\n\n    return bits;\n}\n", "// Originally sourced from:\n// https://github.com/MaiaVictor/eth-lib/blob/da0971f5b09964d9c8449975fa87933f0c9fef35/src/hash.js\n//  - added type declarations\n//  - switched to es6 module syntax\n\n/** @type {number[]} */\nconst KECCAK_PADDING = [1, 256, 65536, 16777216];\n\n/** @type {number[]} */\nconst SHIFT = [0, 8, 16, 24];\n\n/** @type {number[]} */\nconst RC = [\n    1, 0, 32898, 0, 32906, 2147483648, 2147516416, 2147483648, 32907, 0,\n    2147483649, 0, 2147516545, 2147483648, 32777, 2147483648, 138, 0, 136, 0,\n    2147516425, 0, 2147483658, 0, 2147516555, 0, 139, 2147483648, 32905,\n    2147483648, 32771, 2147483648, 32770, 2147483648, 128, 2147483648, 32778, 0,\n    2147483658, 2147483648, 2147516545, 2147483648, 32896, 2147483648,\n    2147483649, 0, 2147516424, 2147483648,\n];\n\n/**\n * @typedef {object} Keccak\n * @property {number[]} blocks\n * @property {number} blockCount\n * @property {number} outputBlocks\n * @property {number[]} s\n * @property {number} start\n * @property {number} block\n * @property {boolean} reset\n * @property {?number} lastByteIndex\n */\n\n/**\n * @param {number} bits\n * @returns {Keccak}\n */\nfunction createKeccakState(bits) {\n    return {\n        blocks: [],\n        reset: true,\n        block: 0,\n        start: 0,\n        lastByteIndex: null,\n        blockCount: (1600 - (bits << 1)) >> 5,\n        outputBlocks: bits >> 5,\n        s: zeroFill(50),\n    };\n}\n\n/**\n * @param {number} n\n * @returns {number[]}\n */\nfunction zeroFill(n) {\n    /** @type {number[]} */\n    let arr = Array(n);\n\n    for (let i = 0; i < n; ++i) arr[i] = 0;\n\n    return arr;\n}\n\n/**\n * @param {Keccak} state\n * @param {string | Uint8Array} message\n * @returns {Uint8Array}\n */\nfunction update(state, message) {\n    var length = message.length,\n        blocks = state.blocks,\n        byteCount = state.blockCount << 2,\n        blockCount = state.blockCount,\n        outputBlocks = state.outputBlocks,\n        s = state.s,\n        index = 0,\n        i = 0,\n        code;\n\n    // update\n    while (index < length) {\n        if (state.reset) {\n            state.reset = false;\n            blocks[0] = state.block;\n            for (i = 1; i < blockCount + 1; ++i) {\n                blocks[i] = 0;\n            }\n        }\n        for (i = state.start; index < length && i < byteCount; ++index) {\n            code =\n                typeof message === \"string\"\n                    ? message.charCodeAt(index)\n                    : message[index];\n            if (code < 0x80) {\n                blocks[i >> 2] |= code << SHIFT[i++ & 3];\n            } else if (code < 0x800) {\n                blocks[i >> 2] |= (0xc0 | (code >> 6)) << SHIFT[i++ & 3];\n                blocks[i >> 2] |= (0x80 | (code & 0x3f)) << SHIFT[i++ & 3];\n            } else if (code < 0xd800 || code >= 0xe000) {\n                blocks[i >> 2] |= (0xe0 | (code >> 12)) << SHIFT[i++ & 3];\n                blocks[i >> 2] |=\n                    (0x80 | ((code >> 6) & 0x3f)) << SHIFT[i++ & 3];\n                blocks[i >> 2] |= (0x80 | (code & 0x3f)) << SHIFT[i++ & 3];\n            } else {\n                code =\n                    0x10000 +\n                    (((code & 0x3ff) << 10) |\n                        ((typeof message === \"string\"\n                            ? message.charCodeAt(++index)\n                            : message[++index]) &\n                            0x3ff));\n                blocks[i >> 2] |= (0xf0 | (code >> 18)) << SHIFT[i++ & 3];\n                blocks[i >> 2] |=\n                    (0x80 | ((code >> 12) & 0x3f)) << SHIFT[i++ & 3];\n                blocks[i >> 2] |=\n                    (0x80 | ((code >> 6) & 0x3f)) << SHIFT[i++ & 3];\n                blocks[i >> 2] |= (0x80 | (code & 0x3f)) << SHIFT[i++ & 3];\n            }\n        }\n        state.lastByteIndex = i;\n        if (i >= byteCount) {\n            state.start = i - byteCount;\n            state.block = blocks[blockCount];\n            for (i = 0; i < blockCount; ++i) {\n                s[i] ^= blocks[i];\n            }\n            f(s);\n            state.reset = true;\n        } else {\n            state.start = i;\n        }\n    }\n\n    // finalize\n    i = /** @type {number} */ (state.lastByteIndex);\n    blocks[i >> 2] |= KECCAK_PADDING[i & 3];\n\n    if (state.lastByteIndex === byteCount) {\n        blocks[0] = blocks[blockCount];\n        for (i = 1; i < blockCount + 1; ++i) {\n            blocks[i] = 0;\n        }\n    }\n    blocks[blockCount - 1] |= 0x80000000;\n    for (i = 0; i < blockCount; ++i) {\n        s[i] ^= blocks[i];\n    }\n\n    f(s);\n\n    const buffer = new ArrayBuffer(outputBlocks * 4);\n    const view = new DataView(buffer);\n\n    i = 0;\n    var j = 0;\n\n    while (j < outputBlocks) {\n        for (i = 0; i < blockCount && j < outputBlocks; ++i, ++j) {\n            view.setInt32(i * 4, s[i], true);\n        }\n\n        if (j % blockCount === 0) {\n            f(s);\n            i = 0;\n        }\n    }\n\n    return new Uint8Array(buffer);\n}\n\n/**\n * @param {number[]} s\n */\nfunction f(s) {\n    var h,\n        l,\n        n,\n        c0,\n        c1,\n        c2,\n        c3,\n        c4,\n        c5,\n        c6,\n        c7,\n        c8,\n        c9,\n        b0,\n        b1,\n        b2,\n        b3,\n        b4,\n        b5,\n        b6,\n        b7,\n        b8,\n        b9,\n        b10,\n        b11,\n        b12,\n        b13,\n        b14,\n        b15,\n        b16,\n        b17,\n        b18,\n        b19,\n        b20,\n        b21,\n        b22,\n        b23,\n        b24,\n        b25,\n        b26,\n        b27,\n        b28,\n        b29,\n        b30,\n        b31,\n        b32,\n        b33,\n        b34,\n        b35,\n        b36,\n        b37,\n        b38,\n        b39,\n        b40,\n        b41,\n        b42,\n        b43,\n        b44,\n        b45,\n        b46,\n        b47,\n        b48,\n        b49;\n\n    for (n = 0; n < 48; n += 2) {\n        c0 = s[0] ^ s[10] ^ s[20] ^ s[30] ^ s[40];\n        c1 = s[1] ^ s[11] ^ s[21] ^ s[31] ^ s[41];\n        c2 = s[2] ^ s[12] ^ s[22] ^ s[32] ^ s[42];\n        c3 = s[3] ^ s[13] ^ s[23] ^ s[33] ^ s[43];\n        c4 = s[4] ^ s[14] ^ s[24] ^ s[34] ^ s[44];\n        c5 = s[5] ^ s[15] ^ s[25] ^ s[35] ^ s[45];\n        c6 = s[6] ^ s[16] ^ s[26] ^ s[36] ^ s[46];\n        c7 = s[7] ^ s[17] ^ s[27] ^ s[37] ^ s[47];\n        c8 = s[8] ^ s[18] ^ s[28] ^ s[38] ^ s[48];\n        c9 = s[9] ^ s[19] ^ s[29] ^ s[39] ^ s[49];\n\n        h = c8 ^ ((c2 << 1) | (c3 >>> 31));\n        l = c9 ^ ((c3 << 1) | (c2 >>> 31));\n        s[0] ^= h;\n        s[1] ^= l;\n        s[10] ^= h;\n        s[11] ^= l;\n        s[20] ^= h;\n        s[21] ^= l;\n        s[30] ^= h;\n        s[31] ^= l;\n        s[40] ^= h;\n        s[41] ^= l;\n        h = c0 ^ ((c4 << 1) | (c5 >>> 31));\n        l = c1 ^ ((c5 << 1) | (c4 >>> 31));\n        s[2] ^= h;\n        s[3] ^= l;\n        s[12] ^= h;\n        s[13] ^= l;\n        s[22] ^= h;\n        s[23] ^= l;\n        s[32] ^= h;\n        s[33] ^= l;\n        s[42] ^= h;\n        s[43] ^= l;\n        h = c2 ^ ((c6 << 1) | (c7 >>> 31));\n        l = c3 ^ ((c7 << 1) | (c6 >>> 31));\n        s[4] ^= h;\n        s[5] ^= l;\n        s[14] ^= h;\n        s[15] ^= l;\n        s[24] ^= h;\n        s[25] ^= l;\n        s[34] ^= h;\n        s[35] ^= l;\n        s[44] ^= h;\n        s[45] ^= l;\n        h = c4 ^ ((c8 << 1) | (c9 >>> 31));\n        l = c5 ^ ((c9 << 1) | (c8 >>> 31));\n        s[6] ^= h;\n        s[7] ^= l;\n        s[16] ^= h;\n        s[17] ^= l;\n        s[26] ^= h;\n        s[27] ^= l;\n        s[36] ^= h;\n        s[37] ^= l;\n        s[46] ^= h;\n        s[47] ^= l;\n        h = c6 ^ ((c0 << 1) | (c1 >>> 31));\n        l = c7 ^ ((c1 << 1) | (c0 >>> 31));\n        s[8] ^= h;\n        s[9] ^= l;\n        s[18] ^= h;\n        s[19] ^= l;\n        s[28] ^= h;\n        s[29] ^= l;\n        s[38] ^= h;\n        s[39] ^= l;\n        s[48] ^= h;\n        s[49] ^= l;\n\n        b0 = s[0];\n        b1 = s[1];\n        b32 = (s[11] << 4) | (s[10] >>> 28);\n        b33 = (s[10] << 4) | (s[11] >>> 28);\n        b14 = (s[20] << 3) | (s[21] >>> 29);\n        b15 = (s[21] << 3) | (s[20] >>> 29);\n        b46 = (s[31] << 9) | (s[30] >>> 23);\n        b47 = (s[30] << 9) | (s[31] >>> 23);\n        b28 = (s[40] << 18) | (s[41] >>> 14);\n        b29 = (s[41] << 18) | (s[40] >>> 14);\n        b20 = (s[2] << 1) | (s[3] >>> 31);\n        b21 = (s[3] << 1) | (s[2] >>> 31);\n        b2 = (s[13] << 12) | (s[12] >>> 20);\n        b3 = (s[12] << 12) | (s[13] >>> 20);\n        b34 = (s[22] << 10) | (s[23] >>> 22);\n        b35 = (s[23] << 10) | (s[22] >>> 22);\n        b16 = (s[33] << 13) | (s[32] >>> 19);\n        b17 = (s[32] << 13) | (s[33] >>> 19);\n        b48 = (s[42] << 2) | (s[43] >>> 30);\n        b49 = (s[43] << 2) | (s[42] >>> 30);\n        b40 = (s[5] << 30) | (s[4] >>> 2);\n        b41 = (s[4] << 30) | (s[5] >>> 2);\n        b22 = (s[14] << 6) | (s[15] >>> 26);\n        b23 = (s[15] << 6) | (s[14] >>> 26);\n        b4 = (s[25] << 11) | (s[24] >>> 21);\n        b5 = (s[24] << 11) | (s[25] >>> 21);\n        b36 = (s[34] << 15) | (s[35] >>> 17);\n        b37 = (s[35] << 15) | (s[34] >>> 17);\n        b18 = (s[45] << 29) | (s[44] >>> 3);\n        b19 = (s[44] << 29) | (s[45] >>> 3);\n        b10 = (s[6] << 28) | (s[7] >>> 4);\n        b11 = (s[7] << 28) | (s[6] >>> 4);\n        b42 = (s[17] << 23) | (s[16] >>> 9);\n        b43 = (s[16] << 23) | (s[17] >>> 9);\n        b24 = (s[26] << 25) | (s[27] >>> 7);\n        b25 = (s[27] << 25) | (s[26] >>> 7);\n        b6 = (s[36] << 21) | (s[37] >>> 11);\n        b7 = (s[37] << 21) | (s[36] >>> 11);\n        b38 = (s[47] << 24) | (s[46] >>> 8);\n        b39 = (s[46] << 24) | (s[47] >>> 8);\n        b30 = (s[8] << 27) | (s[9] >>> 5);\n        b31 = (s[9] << 27) | (s[8] >>> 5);\n        b12 = (s[18] << 20) | (s[19] >>> 12);\n        b13 = (s[19] << 20) | (s[18] >>> 12);\n        b44 = (s[29] << 7) | (s[28] >>> 25);\n        b45 = (s[28] << 7) | (s[29] >>> 25);\n        b26 = (s[38] << 8) | (s[39] >>> 24);\n        b27 = (s[39] << 8) | (s[38] >>> 24);\n        b8 = (s[48] << 14) | (s[49] >>> 18);\n        b9 = (s[49] << 14) | (s[48] >>> 18);\n\n        s[0] = b0 ^ (~b2 & b4);\n        s[1] = b1 ^ (~b3 & b5);\n        s[10] = b10 ^ (~b12 & b14);\n        s[11] = b11 ^ (~b13 & b15);\n        s[20] = b20 ^ (~b22 & b24);\n        s[21] = b21 ^ (~b23 & b25);\n        s[30] = b30 ^ (~b32 & b34);\n        s[31] = b31 ^ (~b33 & b35);\n        s[40] = b40 ^ (~b42 & b44);\n        s[41] = b41 ^ (~b43 & b45);\n        s[2] = b2 ^ (~b4 & b6);\n        s[3] = b3 ^ (~b5 & b7);\n        s[12] = b12 ^ (~b14 & b16);\n        s[13] = b13 ^ (~b15 & b17);\n        s[22] = b22 ^ (~b24 & b26);\n        s[23] = b23 ^ (~b25 & b27);\n        s[32] = b32 ^ (~b34 & b36);\n        s[33] = b33 ^ (~b35 & b37);\n        s[42] = b42 ^ (~b44 & b46);\n        s[43] = b43 ^ (~b45 & b47);\n        s[4] = b4 ^ (~b6 & b8);\n        s[5] = b5 ^ (~b7 & b9);\n        s[14] = b14 ^ (~b16 & b18);\n        s[15] = b15 ^ (~b17 & b19);\n        s[24] = b24 ^ (~b26 & b28);\n        s[25] = b25 ^ (~b27 & b29);\n        s[34] = b34 ^ (~b36 & b38);\n        s[35] = b35 ^ (~b37 & b39);\n        s[44] = b44 ^ (~b46 & b48);\n        s[45] = b45 ^ (~b47 & b49);\n        s[6] = b6 ^ (~b8 & b0);\n        s[7] = b7 ^ (~b9 & b1);\n        s[16] = b16 ^ (~b18 & b10);\n        s[17] = b17 ^ (~b19 & b11);\n        s[26] = b26 ^ (~b28 & b20);\n        s[27] = b27 ^ (~b29 & b21);\n        s[36] = b36 ^ (~b38 & b30);\n        s[37] = b37 ^ (~b39 & b31);\n        s[46] = b46 ^ (~b48 & b40);\n        s[47] = b47 ^ (~b49 & b41);\n        s[8] = b8 ^ (~b0 & b2);\n        s[9] = b9 ^ (~b1 & b3);\n        s[18] = b18 ^ (~b10 & b12);\n        s[19] = b19 ^ (~b11 & b13);\n        s[28] = b28 ^ (~b20 & b22);\n        s[29] = b29 ^ (~b21 & b23);\n        s[38] = b38 ^ (~b30 & b32);\n        s[39] = b39 ^ (~b31 & b33);\n        s[48] = b48 ^ (~b40 & b42);\n        s[49] = b49 ^ (~b41 & b43);\n\n        s[0] ^= RC[n];\n        s[1] ^= RC[n + 1];\n    }\n}\n\n/**\n * @param {number} bits\n * @returns {(message: string | Uint8Array) => Uint8Array}\n */\nfunction createKeccak(bits) {\n    return function (message) {\n        return update(createKeccakState(bits), message);\n    };\n}\n\nexport const keccak256 = createKeccak(256);\n", "import { keccak256 } from \"./keccak.js\";\nimport * as hex from \"../encoding/hex.js\";\nimport elliptic from \"elliptic\";\n\nconst secp256k1 = new elliptic.ec(\"secp256k1\");\n\n/**\n * @typedef {import(\"../EcdsaPrivateKey.js\").KeyPair} KeyPair\n */\n\n/**\n * @returns {KeyPair}\n */\nexport function generate() {\n    const keypair = secp256k1.genKeyPair();\n\n    return {\n        privateKey: hex.decode(keypair.getPrivate(\"hex\")),\n        publicKey: hex.decode(keypair.getPublic(true, \"hex\")),\n    };\n}\n\n/**\n * @returns {Promise<KeyPair>}\n */\n// eslint-disable-next-line @typescript-eslint/no-unused-vars\nexport async function generateAsync() {\n    return Promise.resolve(generate());\n}\n\n/**\n * @param {Uint8Array} data\n * @returns {KeyPair}\n */\n// eslint-disable-next-line @typescript-eslint/no-unused-vars\nexport function fromBytes(data) {\n    const keypair = secp256k1.keyFromPrivate(data);\n\n    return {\n        privateKey: hex.decode(keypair.getPrivate(\"hex\")),\n        publicKey: hex.decode(keypair.getPublic(true, \"hex\")),\n    };\n}\n\n/**\n * @param {Uint8Array} keydata\n * @param {Uint8Array} message\n * @returns {Uint8Array}\n */\n// eslint-disable-next-line @typescript-eslint/no-unused-vars\nexport function sign(keydata, message) {\n    const data = keccak256(message);\n    const keypair = secp256k1.keyFromPrivate(keydata);\n    const signature = keypair.sign(data);\n\n    const r = signature.r.toArray(\"be\", 32);\n    const s = signature.s.toArray(\"be\", 32);\n\n    const result = new Uint8Array(64);\n    result.set(r, 0);\n    result.set(s, 32);\n    return result;\n}\n\n/**\n * @param {Uint8Array} keydata\n * @param {Uint8Array} message\n * @param {Uint8Array} signature\n * @returns {boolean}\n */\n// eslint-disable-next-line @typescript-eslint/no-unused-vars\nexport function verify(keydata, message, signature) {\n    const data = keccak256(message);\n    const keypair = secp256k1.keyFromPublic(keydata);\n\n    return keypair.verify(data, {\n        r: signature.subarray(0, 32),\n        s: signature.subarray(32, 64),\n    });\n}\n", "import Key from \"./Key.js\";\nimport BadKeyError from \"./BadKeyError.js\";\nimport { arrayEqual, arrayStartsWith } from \"./util/array.js\";\nimport * as hex from \"./encoding/hex.js\";\nimport * as ecdsa from \"./primitive/ecdsa.js\";\n\nconst derPrefix = \"302f300706052b8104000a0324000421\";\nconst derPrefixBytes = hex.decode(derPrefix);\n\n/**\n * An public key on the Hedera\u2122 network.\n */\nexport default class EcdsaPublicKey extends Key {\n    /**\n     * @internal\n     * @hideconstructor\n     * @param {Uint8Array} keyData\n     */\n    constructor(keyData) {\n        super();\n\n        /**\n         * @type {Uint8Array}\n         * @private\n         * @readonly\n         */\n        this._keyData = keyData;\n    }\n\n    /**\n     * @returns {string}\n     */\n    get _type() {\n        return \"secp256k1\";\n    }\n\n    /**\n     * @param {Uint8Array} data\n     * @returns {EcdsaPublicKey}\n     */\n    static fromBytes(data) {\n        switch (data.length) {\n            case 33:\n                return EcdsaPublicKey.fromBytesRaw(data);\n            case 49:\n                return EcdsaPublicKey.fromBytesDer(data);\n            default:\n                throw new BadKeyError(\n                    `invalid public key length: ${data.length} bytes`\n                );\n        }\n    }\n\n    /**\n     * @param {Uint8Array} data\n     * @returns {EcdsaPublicKey}\n     */\n    static fromBytesDer(data) {\n        if (data.length != 44 || !arrayStartsWith(data, derPrefixBytes)) {\n            throw new BadKeyError(\n                `invalid public key length: ${data.length} bytes`\n            );\n        }\n\n        return new EcdsaPublicKey(data.subarray(12));\n    }\n\n    /**\n     * @param {Uint8Array} data\n     * @returns {EcdsaPublicKey}\n     */\n    static fromBytesRaw(data) {\n        if (data.length != 32) {\n            throw new BadKeyError(\n                `invalid public key length: ${data.length} bytes`\n            );\n        }\n\n        return new EcdsaPublicKey(data);\n    }\n\n    /**\n     * Parse a public key from a string of hexadecimal digits.\n     *\n     * The public key may optionally be prefixed with\n     * the DER header.\n     *\n     * @param {string} text\n     * @returns {EcdsaPublicKey}\n     */\n    static fromString(text) {\n        return EcdsaPublicKey.fromBytes(hex.decode(text));\n    }\n\n    /**\n     * Verify a signature on a message with this public key.\n     *\n     * @param {Uint8Array} message\n     * @param {Uint8Array} signature\n     * @returns {boolean}\n     */\n    verify(message, signature) {\n        return ecdsa.verify(this._keyData, message, signature);\n    }\n\n    /**\n     * @returns {Uint8Array}\n     */\n    toBytesDer() {\n        const bytes = new Uint8Array(derPrefixBytes.length + 32);\n\n        bytes.set(derPrefixBytes, 0);\n        bytes.set(this._keyData.subarray(0, 32), derPrefixBytes.length);\n\n        return bytes;\n    }\n\n    /**\n     * @returns {Uint8Array}\n     */\n    toBytesRaw() {\n        return this._keyData.slice();\n    }\n\n    /**\n     * @param {EcdsaPublicKey} other\n     * @returns {boolean}\n     */\n    equals(other) {\n        return arrayEqual(this._keyData, other._keyData);\n    }\n}\n", "import BadKeyError from \"./BadKeyError.js\";\nimport EcdsaPublicKey from \"./EcdsaPublicKey.js\";\nimport * as hex from \"./encoding/hex.js\";\nimport * as ecdsa from \"./primitive/ecdsa.js\";\nimport { arrayStartsWith } from \"./util/array.js\";\n\nconst derPrefix = \"3030020100300706052b8104000a04220420\";\nconst derPrefixBytes = hex.decode(derPrefix);\n\n/**\n * @typedef {object} KeyPair\n * @property {Uint8Array} publicKey\n * @property {Uint8Array} privateKey\n */\n\nexport default class EcdsaPrivateKey {\n    /**\n     * @hideconstructor\n     * @internal\n     * @param {KeyPair} keyPair\n     * @param {(Uint8Array)=} chainCode\n     */\n    constructor(keyPair, chainCode) {\n        /**\n         * @type {KeyPair}\n         * @readonly\n         * @private\n         */\n        this._keyPair = keyPair;\n\n        /**\n         * @type {?Uint8Array}\n         * @readonly\n         */\n        this._chainCode = chainCode != null ? chainCode : null;\n    }\n\n    /**\n     * @returns {string}\n     */\n    get _type() {\n        return \"secp256k1\";\n    }\n\n    /**\n     * Generate a random ECDSA private key.\n     *\n     * @returns {EcdsaPrivateKey}\n     */\n    static generate() {\n        return new EcdsaPrivateKey(ecdsa.generate());\n    }\n\n    /**\n     * Generate a random Ed25519 private key.\n     *\n     * @returns {Promise<EcdsaPrivateKey>}\n     */\n    static async generateAsync() {\n        return new EcdsaPrivateKey(await ecdsa.generateAsync());\n    }\n\n    /**\n     * Construct a private key from bytes.\n     *\n     * @param {Uint8Array} data\n     * @returns {EcdsaPrivateKey}\n     */\n    static fromBytes(data) {\n        switch (data.length) {\n            case 32:\n                return EcdsaPrivateKey.fromBytesRaw(data);\n            case 45:\n                return EcdsaPrivateKey.fromBytesDer(data);\n            default:\n                throw new BadKeyError(\n                    `invalid private key length: ${data.length} bytes`\n                );\n        }\n    }\n\n    /**\n     * Construct a private key from bytes.\n     *\n     * @param {Uint8Array} data\n     * @returns {EcdsaPrivateKey}\n     */\n    static fromBytesDer(data) {\n        if (data.length != 32 && !arrayStartsWith(data, derPrefixBytes)) {\n            throw new BadKeyError(\"invalid der header\");\n        }\n\n        return new EcdsaPrivateKey(\n            ecdsa.fromBytes(data.subarray(derPrefixBytes.length))\n        );\n    }\n\n    /**\n     * Construct a private key from bytes.\n     *\n     * @param {Uint8Array} data\n     * @returns {EcdsaPrivateKey}\n     */\n    static fromBytesRaw(data) {\n        return new EcdsaPrivateKey(ecdsa.fromBytes(data));\n    }\n\n    /**\n     * Construct a private key from a hex-encoded string.\n     *\n     * @param {string} text\n     * @returns {EcdsaPrivateKey}\n     */\n    static fromString(text) {\n        return EcdsaPrivateKey.fromBytes(hex.decode(text));\n    }\n\n    /**\n     * Construct a private key from a hex-encoded string.\n     *\n     * @param {string} text\n     * @returns {EcdsaPrivateKey}\n     */\n    static fromStringDer(text) {\n        return EcdsaPrivateKey.fromBytesDer(hex.decode(text));\n    }\n\n    /**\n     * Construct a private key from a hex-encoded string.\n     *\n     * @param {string} text\n     * @returns {EcdsaPrivateKey}\n     */\n    static fromStringRaw(text) {\n        return EcdsaPrivateKey.fromBytesRaw(hex.decode(text));\n    }\n\n    /**\n     * Get the public key associated with this private key.\n     *\n     * The public key can be freely given and used by other parties to verify\n     * the signatures generated by this private key.\n     *\n     * @returns {EcdsaPublicKey}\n     */\n    get publicKey() {\n        return new EcdsaPublicKey(this._keyPair.publicKey);\n    }\n\n    /**\n     * Sign a message with this private key.\n     *\n     * @param {Uint8Array} bytes\n     * @returns {Uint8Array} - The signature bytes without the message\n     */\n    sign(bytes) {\n        return ecdsa.sign(this._keyPair.privateKey, bytes);\n    }\n\n    /**\n     * @returns {Uint8Array}\n     */\n    toBytesDer() {\n        const bytes = new Uint8Array(derPrefixBytes.length + 32);\n\n        bytes.set(derPrefixBytes, 0);\n        bytes.set(\n            this._keyPair.privateKey.subarray(0, 32),\n            derPrefixBytes.length\n        );\n\n        return bytes;\n    }\n\n    /**\n     * @returns {Uint8Array}\n     */\n    toBytesRaw() {\n        return this._keyPair.privateKey.slice(0, 32);\n    }\n}\n", "import Key from \"./Key.js\";\nimport BadKeyError from \"./BadKeyError.js\";\nimport Ed25519PublicKey from \"./Ed25519PublicKey.js\";\nimport EcdsaPublicKey from \"./EcdsaPublicKey.js\";\nimport { arrayEqual } from \"./util/array.js\";\nimport * as hex from \"./encoding/hex.js\";\n\n/**\n * @typedef {import(\"./PrivateKey.js\").Transaction} Transaction\n */\n\n/**\n * An public key on the Hedera\u2122 network.\n */\nexport default class PublicKey extends Key {\n    /**\n     * @internal\n     * @hideconstructor\n     * @param {Ed25519PublicKey | EcdsaPublicKey} key\n     */\n    constructor(key) {\n        super();\n\n        /**\n         * @type {Ed25519PublicKey | EcdsaPublicKey}\n         * @private\n         * @readonly\n         */\n        this._key = key;\n    }\n\n    /**\n     * @returns {string}\n     */\n    get _type() {\n        return this._key._type;\n    }\n\n    /**\n     * @param {Uint8Array} data\n     * @returns {PublicKey}\n     */\n    static fromBytes(data) {\n        try {\n            return new PublicKey(Ed25519PublicKey.fromBytes(data));\n        } catch {\n            // Do nothing\n        }\n\n        try {\n            return new PublicKey(EcdsaPublicKey.fromBytes(data));\n        } catch {\n            // Do nothing\n        }\n\n        throw new BadKeyError(\n            `invalid public key length: ${data.length} bytes`\n        );\n    }\n\n    /**\n     * @param {Uint8Array} data\n     * @returns {PublicKey}\n     */\n    static fromBytesED25519(data) {\n        return new PublicKey(Ed25519PublicKey.fromBytes(data));\n    }\n\n    /**\n     * @param {Uint8Array} data\n     * @returns {PublicKey}\n     */\n    static fromBytesECDSA(data) {\n        return new PublicKey(EcdsaPublicKey.fromBytes(data));\n    }\n\n    /**\n     * Parse a public key from a string of hexadecimal digits.\n     *\n     * The public key may optionally be prefixed with\n     * the DER header.\n     *\n     * @param {string} text\n     * @returns {PublicKey}\n     */\n    static fromString(text) {\n        return PublicKey.fromBytes(hex.decode(text));\n    }\n\n    /**\n     * @param {string} text\n     * @returns {PublicKey}\n     */\n    static fromStringED25519(text) {\n        return PublicKey.fromBytesED25519(hex.decode(text));\n    }\n\n    /**\n     * @param {string} text\n     * @returns {PublicKey}\n     */\n    static fromStringECDSA(text) {\n        return PublicKey.fromBytesECDSA(hex.decode(text));\n    }\n\n    /**\n     * Verify a signature on a message with this public key.\n     *\n     * @param {Uint8Array} message\n     * @param {Uint8Array} signature\n     * @returns {boolean}\n     */\n    verify(message, signature) {\n        return this._key.verify(message, signature);\n    }\n\n    /**\n     * @deprecated - use `@hashgraph/sdk`.PublicKey instead\n     * @param {Transaction} transaction\n     * @returns {boolean}\n     */\n    verifyTransaction(transaction) {\n        console.log(\"Deprecated: use `@hashgraph/sdk`.PublicKey instead\");\n\n        transaction._requireFrozen();\n\n        if (!transaction.isFrozen()) {\n            transaction.freeze();\n        }\n\n        for (const signedTransaction of transaction._signedTransactions) {\n            if (\n                signedTransaction.sigMap != null &&\n                signedTransaction.sigMap.sigPair != null\n            ) {\n                let found = false;\n                for (const sigPair of signedTransaction.sigMap.sigPair) {\n                    const pubKeyPrefix = /** @type {Uint8Array} */ (\n                        sigPair.pubKeyPrefix\n                    );\n                    if (arrayEqual(pubKeyPrefix, this.toBytesRaw())) {\n                        found = true;\n                        const bodyBytes = /** @type {Uint8Array} */ (\n                            signedTransaction.bodyBytes\n                        );\n                        const signature =\n                            sigPair.ed25519 != null\n                                ? sigPair.ed25519\n                                : /** @type {Uint8Array} */ (\n                                      sigPair.ECDSASecp256k1\n                                  );\n                        if (!this.verify(bodyBytes, signature)) {\n                            return false;\n                        }\n                    }\n                }\n\n                if (!found) {\n                    return false;\n                }\n            }\n        }\n\n        return true;\n    }\n\n    /**\n     * @returns {Uint8Array}\n     */\n    toBytes() {\n        if (this._key instanceof Ed25519PublicKey) {\n            return this.toBytesRaw();\n        } else {\n            return this.toBytesDer();\n        }\n    }\n\n    /**\n     * @returns {Uint8Array}\n     */\n    toBytesDer() {\n        return this._key.toBytesDer();\n    }\n\n    /**\n     * @returns {Uint8Array}\n     */\n    toBytesRaw() {\n        return this._key.toBytesRaw();\n    }\n\n    /**\n     * @returns {string}\n     */\n    toString() {\n        return this.toStringDer();\n    }\n\n    /**\n     * @returns {string}\n     */\n    toStringDer() {\n        return hex.encode(this.toBytesDer());\n    }\n\n    /**\n     * @returns {string}\n     */\n    toStringRaw() {\n        return hex.encode(this.toBytesRaw());\n    }\n\n    /**\n     * @param {PublicKey} other\n     * @returns {boolean}\n     */\n    equals(other) {\n        if (\n            this._key instanceof Ed25519PublicKey &&\n            other instanceof Ed25519PublicKey\n        ) {\n            return this._key.equals(other);\n        } else if (\n            this._key instanceof EcdsaPublicKey &&\n            other instanceof EcdsaPublicKey\n        ) {\n            return this._key.equals(other);\n        } else {\n            return false;\n        }\n    }\n}\n", "export const CipherAlgorithm = {\n    Aes128Ctr: \"AES-128-CTR\",\n    Aes128Cbc: \"AES-128-CBC\",\n};\n\n/**\n * @param {string} algorithm\n * @param {Uint8Array} key\n * @param {Uint8Array} iv\n * @param {Uint8Array} data\n * @returns {Promise<Uint8Array>}\n */\nexport async function createCipheriv(algorithm, key, iv, data) {\n    let algorithm_;\n\n    switch (algorithm.toUpperCase()) {\n        case CipherAlgorithm.Aes128Ctr:\n            algorithm_ = {\n                name: \"AES-CTR\",\n                counter: iv,\n                length: 128,\n            };\n            break;\n        case CipherAlgorithm.Aes128Cbc:\n            algorithm_ = {\n                name: \"AES-CBC\",\n                iv: iv,\n            };\n            break;\n        default:\n            throw new Error(\n                \"(BUG) non-exhaustive switch statement for CipherAlgorithm\"\n            );\n    }\n\n    const key_ = await window.crypto.subtle.importKey(\n        \"raw\",\n        key,\n        algorithm_.name,\n        false,\n        [\"encrypt\"]\n    );\n\n    return new Uint8Array(\n        await window.crypto.subtle.encrypt(algorithm_, key_, data)\n    );\n}\n\n/**\n * @param {string} algorithm\n * @param {Uint8Array} key\n * @param {Uint8Array} iv\n * @param {Uint8Array} data\n * @returns {Promise<Uint8Array>}\n */\nexport async function createDecipheriv(algorithm, key, iv, data) {\n    let algorithm_;\n\n    switch (algorithm.toUpperCase()) {\n        case CipherAlgorithm.Aes128Ctr:\n            algorithm_ = {\n                name: \"AES-CTR\",\n                counter: iv,\n                length: 128,\n            };\n            break;\n        case CipherAlgorithm.Aes128Cbc:\n            algorithm_ = {\n                name: \"AES-CBC\",\n                iv,\n            };\n            break;\n        default:\n            throw new Error(\n                \"(BUG) non-exhaustive switch statement for CipherAlgorithm\"\n            );\n    }\n\n    const key_ = await window.crypto.subtle.importKey(\n        \"raw\",\n        key,\n        algorithm_.name,\n        false,\n        [\"decrypt\"]\n    );\n\n    return new Uint8Array(\n        await window.crypto.subtle.decrypt(algorithm_, key_, data)\n    );\n}\n", "import BadKeyError from \"../BadKeyError.js\";\nimport * as crypto from \"./aes.js\";\nimport * as hex from \"../encoding/hex.js\";\nimport * as utf8 from \"../encoding/utf8.js\";\nimport * as hmac from \"./hmac.js\";\nimport * as pbkdf2 from \"./pbkdf2.js\";\nimport * as random from \"./random.js\";\n\nconst HMAC_SHA256 = \"hmac-sha256\";\n\n/**\n * @typedef {Object} KeystoreKdfParams\n * @property {number} dkLen\n * @property {string} salt\n * @property {number} c\n * @property {string} prf\n */\n\n/**\n * @typedef {Object} KeystoreCipherParams\n * @property {string} iv\n */\n\n/**\n * @typedef {Object} KeystoreCrypto\n * @property {string} ciphertext\n * @property {KeystoreCipherParams} cipherparams\n * @property {string} cipher\n * @property {string} kdf\n * @property {KeystoreKdfParams} kdfparams\n * @property {string} mac\n */\n\n/**\n * @typedef {Object} Keystore\n * @property {number} version\n * @property {KeystoreCrypto} crypto\n */\n\n/**\n * @param {Uint8Array} privateKey\n * @param {string} passphrase\n * @returns {Promise<Uint8Array>}\n */\nexport async function createKeystore(privateKey, passphrase) {\n    // all values taken from https://github.com/ethereumjs/ethereumjs-wallet/blob/de3a92e752673ada1d78f95cf80bc56ae1f59775/src/index.ts#L25\n    const dkLen = 32;\n    const c = 262144;\n    const saltLen = 32;\n    const salt = await random.bytesAsync(saltLen);\n\n    const key = await pbkdf2.deriveKey(\n        hmac.HashAlgorithm.Sha256,\n        passphrase,\n        salt,\n        c,\n        dkLen\n    );\n\n    const iv = await random.bytesAsync(16);\n\n    // AES-128-CTR with the first half of the derived key and a random IV\n    const cipherText = await crypto.createCipheriv(\n        crypto.CipherAlgorithm.Aes128Ctr,\n        key.slice(0, 16),\n        iv,\n        privateKey\n    );\n\n    const mac = await hmac.hash(\n        hmac.HashAlgorithm.Sha384,\n        key.slice(16),\n        cipherText\n    );\n\n    /**\n     * @type {Keystore}\n     */\n    const keystore = {\n        version: 1,\n        crypto: {\n            ciphertext: hex.encode(cipherText),\n            cipherparams: { iv: hex.encode(iv) },\n            cipher: crypto.CipherAlgorithm.Aes128Ctr,\n            kdf: \"pbkdf2\",\n            kdfparams: {\n                dkLen,\n                salt: hex.encode(salt),\n                c,\n                prf: HMAC_SHA256,\n            },\n            mac: hex.encode(mac),\n        },\n    };\n\n    return utf8.encode(JSON.stringify(keystore));\n}\n\n/**\n * @param {Uint8Array} keystoreBytes\n * @param {string} passphrase\n * @returns {Promise<Uint8Array>}\n */\nexport async function loadKeystore(keystoreBytes, passphrase) {\n    /**\n     * @type {Keystore}\n     */\n    // eslint-disable-next-line @typescript-eslint/no-unsafe-assignment\n    const keystore = JSON.parse(utf8.decode(keystoreBytes));\n\n    if (keystore.version !== 1) {\n        throw new BadKeyError(\n            `unsupported keystore version: ${keystore.version}`\n        );\n    }\n\n    const {\n        ciphertext,\n        cipherparams: { iv },\n        cipher,\n        kdf,\n        kdfparams: { dkLen, salt, c, prf },\n        mac,\n    } = keystore.crypto;\n\n    if (kdf !== \"pbkdf2\") {\n        throw new BadKeyError(`unsupported key derivation function:\" + ${kdf}`);\n    }\n\n    if (prf !== HMAC_SHA256) {\n        throw new BadKeyError(\n            `unsupported key derivation hash function: ${prf}`\n        );\n    }\n\n    const saltBytes = hex.decode(salt);\n    const ivBytes = hex.decode(iv);\n    const cipherBytes = hex.decode(ciphertext);\n\n    const key = await pbkdf2.deriveKey(\n        hmac.HashAlgorithm.Sha256,\n        passphrase,\n        saltBytes,\n        c,\n        dkLen\n    );\n\n    const macHex = hex.decode(mac);\n    const verifyHmac = await hmac.hash(\n        hmac.HashAlgorithm.Sha384,\n        key.slice(16),\n        cipherBytes\n    );\n\n    // compare that these two Uint8Arrays are equivalent\n    if (!macHex.every((b, i) => b === verifyHmac[i])) {\n        throw new BadKeyError(\"HMAC mismatch; passphrase is incorrect\");\n    }\n\n    return crypto.createDecipheriv(\n        cipher,\n        key.slice(0, 16),\n        ivBytes,\n        cipherBytes\n    );\n}\n", "/**\n * @typedef {Object} AsnSeq\n * @property {AsnType[]} seq\n */\n\n/**\n * @typedef {Object} AsnInt\n * @property {number} int\n */\n\n/**\n * @typedef {Object} AsnBytes\n * @property {Uint8Array} bytes\n */\n\n/**\n * @typedef {Object} AsnIdent\n * @property {string} ident\n */\n\n/**\n * @typedef {{}} AsnNull\n */\n\n/**\n * @typedef {AsnSeq | AsnInt | AsnBytes | AsnIdent | AsnNull} AsnType\n */\n\n/**\n * Note: may throw weird errors on malformed input. Catch and rethrow with, e.g. `BadKeyError`.\n *\n *@param {Uint8Array} data\n *@returns {AsnType}\n */\nexport function decode(data) {\n    return decodeIncremental(data)[0];\n}\n\n/**\n * @param {Uint8Array} bytes\n * @returns {[AsnType, Uint8Array]}\n */\nfunction decodeIncremental(bytes) {\n    // slice off the initial tag byte, `decodeLength` returns a slice of the remaining data\n    const [len, rem] = decodeLength(bytes.subarray(1));\n    const data = rem.subarray(0, len);\n    const tail = rem.subarray(len);\n\n    switch (bytes[0]) {\n        case 2:\n            return [{ int: decodeInt(data) }, tail];\n        case 4: // must always be primitive form in DER; for OCTET STRING this is literal bytes\n            return [{ bytes: data }, tail];\n        case 5: // empty\n            return [{}, tail];\n        case 6:\n            return [{ ident: decodeObjectIdent(data) }, tail];\n        case 48:\n            return [{ seq: decodeSeq(data) }, tail];\n        default:\n            throw new Error(`unsupported DER type tag: ${bytes[0]}`);\n    }\n}\n\n/**\n * @param {Uint8Array} seqBytes\n * @returns {AsnType[]}\n */\nfunction decodeSeq(seqBytes) {\n    let data = seqBytes;\n\n    const seq = [];\n\n    while (data.length !== 0) {\n        const [decoded, remaining] = decodeIncremental(data);\n        seq.push(decoded);\n        data = remaining;\n    }\n\n    return seq;\n}\n\n/**\n * @param {Uint8Array} idBytes\n * @returns {string}\n */\nfunction decodeObjectIdent(idBytes) {\n    const id = [\n        // first octet is 40 * value1 + value2\n        Math.floor(idBytes[0] / 40),\n        idBytes[0] % 40,\n    ];\n\n    // each following ID component is big-endian base128 where the MSB is set if another byte\n    // follows for the same value\n    let val = 0;\n\n    for (const byte of idBytes.subarray(1)) {\n        // shift the entire value left by 7 bits\n        val *= 128;\n\n        if (byte < 128) {\n            // no more octets follow for this value, finish it off\n            val += byte;\n            id.push(val);\n            val = 0;\n        } else {\n            // zero the MSB\n            val += byte & 127;\n        }\n    }\n\n    return id.join(\".\");\n}\n\n/**\n * @param {Uint8Array} lenBytes\n * @returns {[number, Uint8Array]}\n */\nfunction decodeLength(lenBytes) {\n    if (lenBytes[0] < 128) {\n        // definite, short form\n        return [lenBytes[0], lenBytes.subarray(1)];\n    }\n\n    const numBytes = lenBytes[0] - 128;\n\n    const intBytes = lenBytes.subarray(1, numBytes + 1);\n    const rem = lenBytes.subarray(numBytes + 1);\n\n    return [decodeInt(intBytes), rem];\n}\n\n/**\n * @param {Uint8Array} intBytes\n * @returns {number}\n */\nfunction decodeInt(intBytes) {\n    const len = intBytes.length;\n    if (len === 1) {\n        return intBytes[0];\n    }\n\n    let view = new DataView(\n        intBytes.buffer,\n        intBytes.byteOffset,\n        intBytes.byteLength\n    );\n\n    if (len === 2) return view.getUint16(0, false);\n\n    if (len === 3) {\n        // prefix a zero byte and we'll treat it as a 32-bit int\n        const data = Uint8Array.of(0, ...intBytes);\n        view = new DataView(data.buffer, data.byteOffset, data.byteLength);\n    }\n\n    if (len > 4) {\n        // this probably means a bug in the decoding as this would mean a >4GB structure\n        throw new Error(`unsupported DER integer length of ${len} bytes`);\n    }\n\n    return view.getUint32(0, false);\n}\n", "import * as crypto from \"./aes.js\";\nimport * as der from \"../encoding/der.js\";\nimport * as pbkdf2 from \"./pbkdf2.js\";\nimport * as hmac from \"./hmac.js\";\n\nexport class AlgorithmIdentifier {\n    /**\n     * @param {import(\"../encoding/der.js\").AsnType} asn\n     */\n    constructor(asn) {\n        if (\"seq\" in asn && asn.seq.length >= 1 && \"ident\" in asn.seq[0]) {\n            /**\n             * @type {string}\n             */\n            this.algIdent = asn.seq[0].ident;\n\n            /**\n             * @type {import(\"../encoding/der.js\").AsnType | undefined}\n             */\n            this.parameters = asn.seq[1];\n        } else {\n            throw new Error(\n                `error parsing AlgorithmIdentifier from ${JSON.stringify(asn)}`\n            );\n        }\n    }\n\n    /**\n     * @returns {string}\n     */\n    toString() {\n        return JSON.stringify(this);\n    }\n}\n\nclass PBES2Params {\n    /**\n     * @param {import(\"../encoding/der.js\").AsnType} asn\n     */\n    constructor(asn) {\n        if (\"seq\" in asn && asn.seq.length === 2) {\n            /**\n             * @type {AlgorithmIdentifier}\n             */\n            this.kdf = new AlgorithmIdentifier(asn.seq[0]);\n\n            /**\n             * @type {AlgorithmIdentifier}\n             */\n            this.encScheme = new AlgorithmIdentifier(asn.seq[1]);\n        } else {\n            throw new Error(\n                `error parsing PBES2Params from ${JSON.stringify(asn)}`\n            );\n        }\n    }\n}\n\nclass PBKDF2Params {\n    /**\n     * @param {import(\"../encoding/der.js\").AsnType} asn\n     */\n    constructor(asn) {\n        if (\n            \"seq\" in asn &&\n            asn.seq.length >= 2 &&\n            \"bytes\" in asn.seq[0] &&\n            \"int\" in asn.seq[1]\n        ) {\n            /**\n             * @type {Uint8Array}\n             */\n            this.salt = asn.seq[0].bytes;\n\n            /**\n             * @type {number}\n             */\n            this.iterCount = asn.seq[1][\"int\"];\n\n            if (asn.seq.length > 2) {\n                if (\"seq\" in asn.seq[2]) {\n                    this.prf = new AlgorithmIdentifier(asn.seq[2]);\n                    return;\n                } else if (\"int\" in asn.seq[2]) {\n                    /**\n                     * @type {number | undefined}\n                     */\n                    this.keyLength = asn.seq[2][\"int\"];\n                }\n\n                if (asn.seq.length === 4) {\n                    /**\n                     * @type {AlgorithmIdentifier | undefined}\n                     */\n                    this.prf = new AlgorithmIdentifier(asn.seq[3]);\n                }\n\n                return;\n            }\n        }\n\n        throw new Error(\n            `error parsing PBKDF2Params from ${JSON.stringify(asn)}`\n        );\n    }\n}\n\nexport class PrivateKeyInfo {\n    /**\n     * @param {import(\"../encoding/der.js\").AsnType} asn\n     */\n    constructor(asn) {\n        if (\"seq\" in asn && asn.seq.length === 3) {\n            if (\"int\" in asn.seq[0] && asn.seq[0][\"int\"] === 0) {\n                /**\n                 * @type {number}\n                 */\n                this.version = 0;\n            } else {\n                throw new Error(\n                    `expected version = 0, got ${JSON.stringify(asn.seq[0])}`\n                );\n            }\n\n            /**\n             * @type {AlgorithmIdentifier}\n             */\n            this.algId = new AlgorithmIdentifier(asn.seq[1]);\n\n            if (\"bytes\" in asn.seq[2]) {\n                /**\n                 * @type {Uint8Array}\n                 */\n                this.privateKey = asn.seq[2].bytes;\n            } else {\n                throw new Error(\n                    `expected octet string as 3rd element, got ${JSON.stringify(\n                        asn.seq[2]\n                    )}`\n                );\n            }\n\n            return;\n        }\n\n        throw new Error(\n            `error parsing PrivateKeyInfo from ${JSON.stringify(asn)}`\n        );\n    }\n\n    /**\n     * @param {Uint8Array} encoded\n     * @returns {PrivateKeyInfo}\n     */\n    static parse(encoded) {\n        return new PrivateKeyInfo(der.decode(encoded));\n    }\n}\n\nexport class EncryptedPrivateKeyInfo {\n    /**\n     * @param {import(\"../encoding/der.js\").AsnType} asn\n     */\n    constructor(asn) {\n        if (\"seq\" in asn && asn.seq.length === 2 && \"bytes\" in asn.seq[1]) {\n            /**\n             * @type {AlgorithmIdentifier}\n             */\n            this.algId = new AlgorithmIdentifier(asn.seq[0]);\n\n            /**\n             * @type {Uint8Array}\n             */\n            this.data = asn.seq[1].bytes;\n            return;\n        }\n\n        throw new Error(\n            `error parsing EncryptedPrivateKeyInfo from ${JSON.stringify(asn)}`\n        );\n    }\n\n    /**\n     * @param {Uint8Array} encoded\n     * @returns {EncryptedPrivateKeyInfo}\n     */\n    static parse(encoded) {\n        return new EncryptedPrivateKeyInfo(der.decode(encoded));\n    }\n\n    /**\n     * @param {string} passphrase\n     * @returns {Promise<PrivateKeyInfo>}\n     */\n    async decrypt(passphrase) {\n        if (\n            this.algId.algIdent !== \"1.2.840.113549.1.5.13\" ||\n            !this.algId.parameters\n        ) {\n            // PBES2\n            throw new Error(\n                `unsupported key encryption algorithm: ${this.algId.toString()}`\n            );\n        }\n\n        const pbes2Params = new PBES2Params(this.algId.parameters);\n\n        if (\n            pbes2Params.kdf.algIdent !== \"1.2.840.113549.1.5.12\" ||\n            !pbes2Params.kdf.parameters\n        ) {\n            // PBKDF2\n            throw new Error(\n                `unsupported key derivation function: ${pbes2Params.kdf.toString()}`\n            );\n        }\n\n        const pbkdf2Params = new PBKDF2Params(pbes2Params.kdf.parameters);\n\n        if (!pbkdf2Params.prf) {\n            throw new Error(\"unsupported PRF HMAC-SHA-1\");\n        } else if (pbkdf2Params.prf.algIdent !== \"1.2.840.113549.2.9\") {\n            // HMAC-SHA-256\n            throw new Error(`unsupported PRF ${pbkdf2Params.prf.toString()}`);\n        }\n\n        if (pbes2Params.encScheme.algIdent !== \"2.16.840.1.101.3.4.1.2\") {\n            // AES-128-CBC\n            throw new Error(\n                `unsupported encryption scheme: ${pbes2Params.encScheme.toString()}`\n            );\n        }\n\n        if (\n            !pbes2Params.encScheme.parameters ||\n            !(\"bytes\" in pbes2Params.encScheme.parameters)\n        ) {\n            throw new Error(\n                \"expected IV as bytes for AES-128-CBC, \" +\n                    `got: ${JSON.stringify(pbes2Params.encScheme.parameters)}`\n            );\n        }\n\n        const keyLen = pbkdf2Params.keyLength || 16;\n        const iv = pbes2Params.encScheme.parameters.bytes;\n\n        const key = await pbkdf2.deriveKey(\n            hmac.HashAlgorithm.Sha256,\n            passphrase,\n            pbkdf2Params.salt,\n            pbkdf2Params.iterCount,\n            keyLen\n        );\n\n        const decrypted = await crypto.createDecipheriv(\n            crypto.CipherAlgorithm.Aes128Cbc,\n            key,\n            iv,\n            this.data\n        );\n\n        return PrivateKeyInfo.parse(decrypted);\n    }\n}\n", "/**\n * @param {string} text\n * @returns {Uint8Array}\n */\nexport function decode(text) {\n    // note: assumes <atob> is available in the global scope if <Buffer> is not\n    return Uint8Array.from(atob(text), (c) => c.charCodeAt(0));\n}\n\n/**\n * @param {Uint8Array} data\n * @returns {string};\n */\nexport function encode(data) {\n    // note: assumes <btoa> is available in the global scope if <Buffer> is not\n    return btoa(String.fromCharCode.apply(null, Array.from(data)));\n}\n", "import BadKeyError from \"../BadKeyError.js\";\nimport { EncryptedPrivateKeyInfo } from \"../primitive/pkcs.js\";\nimport * as der from \"./der.js\";\nimport * as base64 from \"./base64.js\";\nimport Ed25519PrivateKey from \"../Ed25519PrivateKey.js\";\nimport EcdsaPrivateKey from \"../EcdsaPrivateKey.js\";\n\nconst BEGIN_PRIVATEKEY = \"-----BEGIN PRIVATE KEY-----\\n\";\nconst END_PRIVATEKEY = \"-----END PRIVATE KEY-----\\n\";\n\nconst BEGIN_ENCRYPTED_PRIVATEKEY = \"-----BEGIN ENCRYPTED PRIVATE KEY-----\\n\";\nconst END_ENCRYPTED_PRIVATEKEY = \"-----END ENCRYPTED PRIVATE KEY-----\\n\";\n\n/**\n * @param {string} pem\n * @param {string} [passphrase]\n * @returns {Promise<Ed25519PrivateKey | EcdsaPrivateKey | Uint8Array>}\n */\nexport async function read(pem, passphrase) {\n    const beginTag = passphrase ? BEGIN_ENCRYPTED_PRIVATEKEY : BEGIN_PRIVATEKEY;\n\n    const endTag = passphrase ? END_ENCRYPTED_PRIVATEKEY : END_PRIVATEKEY;\n\n    const beginIndex = pem.indexOf(beginTag);\n    const endIndex = pem.indexOf(endTag);\n\n    if (beginIndex === -1 || endIndex === -1) {\n        throw new BadKeyError(\"failed to find a private key in the PEM file\");\n    }\n\n    const keyEncoded = pem.slice(beginIndex + beginTag.length, endIndex);\n\n    const key = base64.decode(keyEncoded);\n\n    if (passphrase) {\n        let encrypted;\n\n        try {\n            encrypted = EncryptedPrivateKeyInfo.parse(key);\n        } catch (error) {\n            const message =\n                // eslint-disable-next-line @typescript-eslint/no-unsafe-member-access\n                error != null && /** @type {Error} */ (error).message != null\n                    ? // eslint-disable-next-line @typescript-eslint/no-unsafe-member-access\n                      /** @type {Error} */ (error).message\n                    : \"\";\n\n            throw new BadKeyError(\n                `failed to parse encrypted private key: ${message}`\n            );\n        }\n\n        const decrypted = await encrypted.decrypt(passphrase);\n\n        let privateKey = null;\n\n        if (decrypted.algId.algIdent === \"1.3.101.112\") {\n            privateKey = Ed25519PrivateKey;\n        } else if (decrypted.algId.algIdent === \"1.3.132.0.10\") {\n            privateKey = EcdsaPrivateKey;\n        } else {\n            throw new BadKeyError(\n                `unknown private key algorithm ${decrypted.algId.toString()}`\n            );\n        }\n\n        const keyData = der.decode(decrypted.privateKey);\n\n        if (!(\"bytes\" in keyData)) {\n            throw new BadKeyError(\n                `expected ASN bytes, got ${JSON.stringify(keyData)}`\n            );\n        }\n\n        return privateKey.fromBytes(keyData.bytes);\n    }\n\n    return key.subarray(16);\n}\n", "import * as pbkdf2 from \"../primitive/pbkdf2.js\";\nimport * as hmac from \"../primitive/hmac.js\";\n\n/**\n * @param {Uint8Array} seed\n * @param {number} index\n * @returns {Promise<Uint8Array>}\n */\nexport function legacy(seed, index) {\n    const password = new Uint8Array(seed.length + 8);\n    password.set(seed, 0);\n\n    const view = new DataView(\n        password.buffer,\n        password.byteOffset,\n        password.byteLength\n    );\n\n    if (index === 0xffffffffff) {\n        view.setInt32(seed.length + 0, 0xff);\n        view.setInt32(seed.length + 4, -1); // 0xffffffff\n    } else {\n        view.setInt32(seed.length + 0, index < 0 ? -1 : 0);\n        view.setInt32(seed.length + 4, index);\n    }\n\n    const salt = Uint8Array.from([0xff]);\n    return pbkdf2.deriveKey(\n        hmac.HashAlgorithm.Sha512,\n        password,\n        salt,\n        2048,\n        32\n    );\n}\n", "import Mnemonic from \"./Mnemonic.js\";\nimport BadKeyError from \"./BadKeyError.js\";\nimport Key from \"./Key.js\";\nimport Ed25519PrivateKey from \"./Ed25519PrivateKey.js\";\nimport EcdsaPrivateKey from \"./EcdsaPrivateKey.js\";\nimport PublicKey from \"./PublicKey.js\";\nimport { createKeystore, loadKeystore } from \"./primitive/keystore.js\";\nimport { read as readPem } from \"./encoding/pem.js\";\nimport * as hex from \"./encoding/hex.js\";\nimport * as slip10 from \"./primitive/slip10.js\";\nimport * as derive from \"./util/derive.js\";\n\n/**\n * @typedef {object} ProtoSignaturePair\n * @property {(Uint8Array | null)=} pubKeyPrefix\n * @property {(Uint8Array | null)=} ed25519\n * @property {(Uint8Array | null)=} ECDSASecp256k1\n */\n\n/**\n * @typedef {object} ProtoSigMap\n * @property {(ProtoSignaturePair[] | null)=} sigPair\n */\n\n/**\n * @typedef {object} ProtoSignedTransaction\n * @property {(Uint8Array | null)=} bodyBytes\n * @property {(ProtoSigMap | null)=} sigMap\n */\n\n/**\n * @typedef {object} Transaction\n * @property {() => boolean} isFrozen\n * @property {ProtoSignedTransaction[]} _signedTransactions\n * @property {Set<string>} _signerPublicKeys\n * @property {(publicKey: PublicKey, signature: Uint8Array) => Transaction} addSignature\n * @property {() => void} _requireFrozen\n * @property {() => Transaction} freeze\n */\n\n/**\n * A private key on the Hedera\u2122 network.\n */\nexport default class PrivateKey extends Key {\n    /**\n     * @hideconstructor\n     * @internal\n     * @param {Ed25519PrivateKey | EcdsaPrivateKey} key\n     */\n    constructor(key) {\n        super();\n\n        /**\n         * @type {Ed25519PrivateKey | EcdsaPrivateKey}\n         * @readonly\n         * @private\n         */\n        this._key = key;\n    }\n\n    /**\n     * @returns {string}\n     */\n    get _type() {\n        return this._key._type;\n    }\n\n    /**\n     * Generate a random Ed25519 private key.\n     *\n     * @returns {PrivateKey}\n     */\n    static generateED25519() {\n        return new PrivateKey(Ed25519PrivateKey.generate());\n    }\n\n    /**\n     * Generate a random EDSA private key.\n     *\n     * @returns {PrivateKey}\n     */\n    static generateECDSA() {\n        return new PrivateKey(EcdsaPrivateKey.generate());\n    }\n\n    /**\n     * Depredated - Use `generateEd25519()` instead\n     * Generate a random Ed25519 private key.\n     *\n     * @returns {PrivateKey}\n     */\n    static generate() {\n        return PrivateKey.generateED25519();\n    }\n\n    /**\n     * Depredated - Use `generateEd25519Async()` instead\n     * Generate a random Ed25519 private key.\n     *\n     * @returns {Promise<PrivateKey>}\n     */\n    static async generateAsync() {\n        return PrivateKey.generateED25519Async();\n    }\n\n    /**\n     * Generate a random Ed25519 private key.\n     *\n     * @returns {Promise<PrivateKey>}\n     */\n    static async generateED25519Async() {\n        return new PrivateKey(await Ed25519PrivateKey.generateAsync());\n    }\n\n    /**\n     * Generate a random ECDSA private key.\n     *\n     * @returns {Promise<PrivateKey>}\n     */\n    static async generateECDSAAsync() {\n        return new PrivateKey(await EcdsaPrivateKey.generateAsync());\n    }\n\n    /**\n     * Construct a private key from bytes. Requires DER header.\n     *\n     * @param {Uint8Array} data\n     * @returns {PrivateKey}\n     */\n    static fromBytes(data) {\n        try {\n            return new PrivateKey(Ed25519PrivateKey.fromBytes(data));\n        } catch {\n            // Do nothing\n        }\n\n        try {\n            return new PrivateKey(EcdsaPrivateKey.fromBytes(data));\n        } catch {\n            // Do nothing\n        }\n\n        throw new BadKeyError(\n            `invalid private key length: ${data.length} bytes`\n        );\n    }\n\n    /**\n     * Construct a ECDSA private key from bytes.\n     *\n     * @param {Uint8Array} data\n     * @returns {PrivateKey}\n     */\n    static fromBytesECDSA(data) {\n        return new PrivateKey(EcdsaPrivateKey.fromBytes(data));\n    }\n\n    /**\n     * Construct a ED25519 private key from bytes.\n     *\n     * @param {Uint8Array} data\n     * @returns {PrivateKey}\n     */\n    static fromBytesED25519(data) {\n        return new PrivateKey(Ed25519PrivateKey.fromBytes(data));\n    }\n\n    /**\n     * Construct a private key from a hex-encoded string. Requires DER header.\n     *\n     * @param {string} text\n     * @returns {PrivateKey}\n     */\n    static fromString(text) {\n        return PrivateKey.fromBytes(hex.decode(text));\n    }\n\n    /**\n     * Construct a ECDSA private key from a hex-encoded string.\n     *\n     * @param {string} text\n     * @returns {PrivateKey}\n     */\n    static fromStringECDSA(text) {\n        return PrivateKey.fromBytesECDSA(hex.decode(text));\n    }\n\n    /**\n     * Construct a Ed25519 private key from a hex-encoded string.\n     *\n     * @param {string} text\n     * @returns {PrivateKey}\n     */\n    static fromStringED25519(text) {\n        return PrivateKey.fromBytesED25519(hex.decode(text));\n    }\n\n    /**\n     * Recover a private key from a mnemonic phrase (and optionally a password).\n     *\n     * @param {Mnemonic | string} mnemonic\n     * @param {string} [passphrase]\n     * @returns {Promise<PrivateKey>}\n     */\n    static async fromMnemonic(mnemonic, passphrase = \"\") {\n        return (\n            typeof mnemonic === \"string\"\n                ? await Mnemonic.fromString(mnemonic)\n                : mnemonic\n        ).toPrivateKey(passphrase);\n    }\n\n    /**\n     * Recover a private key from a keystore, previously created by `.toKeystore()`.\n     *\n     * This key will _not_ support child key derivation.\n     *\n     * @param {Uint8Array} data\n     * @param {string} [passphrase]\n     * @returns {Promise<PrivateKey>}\n     * @throws {BadKeyError} If the passphrase is incorrect or the hash fails to validate.\n     */\n    static async fromKeystore(data, passphrase = \"\") {\n        return PrivateKey.fromBytes(await loadKeystore(data, passphrase));\n    }\n\n    /**\n     * Recover a private key from a pem string; the private key may be encrypted.\n     *\n     * This method assumes the .pem file has been converted to a string already.\n     *\n     * If `passphrase` is not null or empty, this looks for the first `ENCRYPTED PRIVATE KEY`\n     * section and uses `passphrase` to decrypt it; otherwise, it looks for the first `PRIVATE KEY`\n     * section and decodes that as a DER-encoded  private key.\n     *\n     * @param {string} data\n     * @param {string} [passphrase]\n     * @returns {Promise<PrivateKey>}\n     */\n    static async fromPem(data, passphrase = \"\") {\n        const pem = await readPem(data, passphrase);\n\n        if (\n            pem instanceof Ed25519PrivateKey ||\n            pem instanceof EcdsaPrivateKey\n        ) {\n            return new PrivateKey(pem);\n        }\n\n        return PrivateKey.fromBytes(pem);\n    }\n\n    /**\n     * Derive a new private key at the given wallet index.\n     *\n     * Only currently supported for keys created with `fromMnemonic()`; other keys will throw\n     * an error.\n     *\n     * You can check if a key supports derivation with `.supportsDerivation()`\n     *\n     * @param {number} index\n     * @returns {Promise<PrivateKey>}\n     * @throws If this key does not support derivation.\n     */\n    async derive(index) {\n        // return new PrivateKey(await this._key.derive(index));\n        if (this._key._chainCode == null) {\n            throw new Error(\"this private key does not support key derivation\");\n        }\n\n        const { keyData, chainCode } = await slip10.derive(\n            this.toBytesRaw(),\n            this._key._chainCode,\n            index\n        );\n\n        /** @type {new (bytes: Uint8Array, chainCode?: Uint8Array) => Ed25519PrivateKey | EcdsaPrivateKey} */\n        const constructor = /** @type {any} */ (this._key.constructor);\n\n        // eslint-disable-next-line @typescript-eslint/no-unsafe-call\n        return new PrivateKey(new constructor(keyData, chainCode));\n    }\n\n    /**\n     * @param {number} index\n     * @returns {Promise<PrivateKey>}\n     * @throws If this key does not support derivation.\n     */\n    async legacyDerive(index) {\n        const keyBytes = await derive.legacy(\n            this.toBytesRaw().subarray(0, 32),\n            index\n        );\n\n        /** @type {new (bytes: Uint8Array) => Ed25519PrivateKey | EcdsaPrivateKey} */\n        const constructor = /** @type {any} */ (this._key.constructor);\n\n        // eslint-disable-next-line @typescript-eslint/no-unsafe-call\n        return new PrivateKey(new constructor(keyBytes));\n    }\n\n    /**\n     * Get the public key associated with this private key.\n     *\n     * The public key can be freely given and used by other parties to verify\n     * the signatures generated by this private key.\n     *\n     * @returns {PublicKey}\n     */\n    get publicKey() {\n        return new PublicKey(this._key.publicKey);\n    }\n\n    /**\n     * Sign a message with this private key.\n     *\n     * @param {Uint8Array} bytes\n     * @returns {Uint8Array} - The signature bytes without the message\n     */\n    sign(bytes) {\n        return this._key.sign(bytes);\n    }\n\n    /**\n     * @param {Transaction} transaction\n     * @returns {Uint8Array}\n     */\n    signTransaction(transaction) {\n        transaction._requireFrozen();\n\n        if (!transaction.isFrozen()) {\n            transaction.freeze();\n        }\n\n        if (transaction._signedTransactions.length != 1) {\n            throw new Error(\n                \"`PrivateKey.signTransaction()` requires `Transaction` to have a single node `AccountId` set\"\n            );\n        }\n\n        const tx = /** @type {ProtoSignedTransaction} */ (\n            transaction._signedTransactions[0]\n        );\n\n        const publicKeyHex = hex.encode(this.publicKey.toBytesRaw());\n\n        if (tx.sigMap == null) {\n            tx.sigMap = {};\n        }\n\n        if (tx.sigMap.sigPair == null) {\n            tx.sigMap.sigPair = [];\n        }\n\n        for (const sigPair of tx.sigMap.sigPair) {\n            if (\n                sigPair.pubKeyPrefix != null &&\n                hex.encode(sigPair.pubKeyPrefix) === publicKeyHex\n            ) {\n                return /** @type {Uint8Array} */ (sigPair.ed25519);\n            }\n        }\n\n        const siganture = this.sign(\n            tx.bodyBytes != null ? tx.bodyBytes : new Uint8Array()\n        );\n\n        /** @type {ProtoSignaturePair} */\n        const protoSignature = {\n            pubKeyPrefix: this.publicKey.toBytesRaw(),\n        };\n\n        if (this._key instanceof Ed25519PrivateKey) {\n            protoSignature.ed25519 = siganture;\n        } else {\n            protoSignature.ECDSASecp256k1 = siganture;\n        }\n\n        tx.sigMap.sigPair.push(protoSignature);\n        transaction._signerPublicKeys.add(publicKeyHex);\n\n        return siganture;\n    }\n\n    /**\n     * Check if `derive` can be called on this private key.\n     *\n     * This is only the case if the key was created from a mnemonic.\n     *\n     * @returns {boolean}\n     */\n    isDerivable() {\n        return this._key._chainCode != null;\n    }\n\n    /**\n     * @returns {Uint8Array}\n     */\n    toBytes() {\n        if (this._key instanceof Ed25519PrivateKey) {\n            return this.toBytesRaw();\n        } else {\n            return this.toBytesDer();\n        }\n    }\n\n    /**\n     * @returns {Uint8Array}\n     */\n    toBytesDer() {\n        return this._key.toBytesDer();\n    }\n\n    /**\n     * @returns {Uint8Array}\n     */\n    toBytesRaw() {\n        return this._key.toBytesRaw();\n    }\n\n    /**\n     * @returns {string}\n     */\n    toString() {\n        return this.toStringDer();\n    }\n\n    /**\n     * @returns {string}\n     */\n    toStringDer() {\n        return hex.encode(this.toBytesDer());\n    }\n\n    /**\n     * @returns {string}\n     */\n    toStringRaw() {\n        return hex.encode(this.toBytesRaw());\n    }\n\n    /**\n     * Create a keystore with a given passphrase.\n     *\n     * The key can be recovered later with `fromKeystore()`.\n     *\n     * Note that this will not retain the ancillary data used for\n     * deriving child keys, thus `.derive()` on the restored key will\n     * throw even if this instance supports derivation.\n     *\n     * @param {string} [passphrase]\n     * @returns {Promise<Uint8Array>}\n     */\n    toKeystore(passphrase = \"\") {\n        return createKeystore(this.toBytesRaw(), passphrase);\n    }\n}\n", "/**\n * @typedef {import(\"./contract/ContractId.js\").default} ContractId\n * @typedef {import(\"./account/AccountId.js\").default} AccountId\n * @typedef {import(\"./KeyList.js\").default} KeyList\n * @typedef {import(\"./PublicKey.js\").default} PublicKey\n * @typedef {import(\"./PrivateKey.js\").default} PrivateKey\n */\n\n/**\n * @namespace proto\n * @typedef {import(\"@hashgraph/proto\").IKey} proto.IKey\n * @typedef {import(\"@hashgraph/proto\").IKeyList} proto.IKeyList\n * @typedef {import(\"@hashgraph/proto\").IThresholdKey} proto.IThresholdKey\n * @typedef {import(\"@hashgraph/proto\").IContractID} proto.IContractID\n */\n\n/**\n * @namespace cryptography\n * @typedef {import(\"@hashgraph/cryptography\").PrivateKey} cryptography.PrivateKey\n */\n\n/**\n * @template {object} ProtobufT\n * @template {object} SdkT\n * @typedef {{ (proto: ProtobufT): SdkT }} FromProtobufKeyFuncT\n */\n\nconst CACHE = {\n    /** @type {FromProtobufKeyFuncT<proto.IContractID, ContractId> | null} */\n    contractId: null,\n\n    /** @type {FromProtobufKeyFuncT<proto.IKeyList, KeyList> | null} */\n    keyList: null,\n\n    /** @type {FromProtobufKeyFuncT<proto.IThresholdKey, KeyList> | null} */\n    thresholdKey: null,\n\n    /** @type {FromProtobufKeyFuncT<Uint8Array, PublicKey> | null} */\n    publicKeyED25519: null,\n\n    /** @type {FromProtobufKeyFuncT<Uint8Array, PublicKey> | null} */\n    publicKeyECDSA: null,\n\n    /** @type {((key: cryptography.PrivateKey) => PrivateKey) | null} */\n    privateKeyConstructor: null,\n\n    /** @type {((shard: Long | number, realm: Long | number, key: PublicKey) => AccountId) | null} */\n    accountIdConstructor: null,\n};\n\nexport default CACHE;\n", "import * as cryptography from \"@hashgraph/cryptography\";\nimport CACHE from \"./Cache.js\";\n\n/**\n * @typedef {import(\"./PrivateKey.js\").default} PrivateKey\n */\n\n/**\n * Multi-word mnemonic phrase (BIP-39).\n *\n * Compatible with the official Hedera mobile\n * wallets (24-words or 22-words) and BRD (12-words).\n */\nexport default class Mnemonic {\n    /**\n     * @param {cryptography.Mnemonic} mnemonic\n     * @hideconstructor\n     * @private\n     */\n    constructor(mnemonic) {\n        this._mnemonic = mnemonic;\n    }\n\n    /**\n     * Returns a new random 24-word mnemonic from the BIP-39\n     * standard English word list.\n     *\n     * @returns {Promise<Mnemonic>}\n     */\n    static async generate() {\n        return new Mnemonic(await cryptography.Mnemonic._generate(24));\n    }\n\n    /**\n     * Returns a new random 12-word mnemonic from the BIP-39\n     * standard English word list.\n     *\n     * @returns {Promise<Mnemonic>}\n     */\n    static async generate12() {\n        return new Mnemonic(await cryptography.Mnemonic._generate(12));\n    }\n\n    /**\n     * Construct a mnemonic from a list of words. Handles 12, 22 (legacy), and 24 words.\n     *\n     * An exception of BadMnemonicError will be thrown if the mnemonic\n     * contains unknown words or fails the checksum. An invalid mnemonic\n     * can still be used to create private keys, the exception will\n     * contain the failing mnemonic in case you wish to ignore the\n     * validation error and continue.\n     *\n     * @param {string[]} words\n     * @throws {BadMnemonicError}\n     * @returns {Promise<Mnemonic>}\n     */\n    static async fromWords(words) {\n        return new Mnemonic(await cryptography.Mnemonic.fromWords(words));\n    }\n\n    /**\n     * Recover a private key from this mnemonic phrase, with an\n     * optional passphrase.\n     *\n     * @param {string} [passphrase]\n     * @returns {Promise<PrivateKey>}\n     */\n    async toPrivateKey(passphrase = \"\") {\n        if (CACHE.privateKeyConstructor == null) {\n            throw new Error(\"`PrivateKey` has not been loaded\");\n        }\n\n        return CACHE.privateKeyConstructor(\n            await this._mnemonic.toPrivateKey(passphrase)\n        );\n    }\n\n    /**\n     * Recover a mnemonic phrase from a string, splitting on spaces. Handles 12, 22 (legacy), and 24 words.\n     *\n     * @param {string} mnemonic\n     * @returns {Promise<Mnemonic>}\n     */\n    static async fromString(mnemonic) {\n        return new Mnemonic(await cryptography.Mnemonic.fromString(mnemonic));\n    }\n\n    /**\n     * @returns {Promise<PrivateKey>}\n     */\n    async toLegacyPrivateKey() {\n        if (CACHE.privateKeyConstructor == null) {\n            throw new Error(\"`PrivateKey` has not been loaded\");\n        }\n\n        return CACHE.privateKeyConstructor(\n            await this._mnemonic.toLegacyPrivateKey()\n        );\n    }\n\n    /**\n     * @returns {string}\n     */\n    toString() {\n        return this._mnemonic.toString();\n    }\n}\n", "/**\n * @param {Uint8Array} array1\n * @param {Uint8Array} array2\n * @returns {boolean}\n */\nexport function arrayEqual(array1, array2) {\n    if (array1 === array2) {\n        return true;\n    }\n\n    if (array1.byteLength !== array2.byteLength) {\n        return false;\n    }\n\n    const view1 = new DataView(\n        array1.buffer,\n        array1.byteOffset,\n        array1.byteLength\n    );\n    const view2 = new DataView(\n        array2.buffer,\n        array2.byteOffset,\n        array2.byteLength\n    );\n\n    let i = array1.byteLength;\n\n    while (i--) {\n        if (view1.getUint8(i) !== view2.getUint8(i)) {\n            return false;\n        }\n    }\n\n    return true;\n}\n\n/**\n * @param {Uint8Array} array\n * @param {Uint8Array} arrayPrefix\n * @returns {boolean}\n */\nexport function arrayStartsWith(array, arrayPrefix) {\n    if (array.byteLength < arrayPrefix.byteLength) {\n        return false;\n    }\n\n    let i = arrayPrefix.byteLength;\n\n    while (i--) {\n        if (array[i] !== arrayPrefix[i]) {\n            return false;\n        }\n    }\n\n    return true;\n}\n", "import CACHE from \"./Cache.js\";\n\n/**\n * @namespace proto\n * @typedef {import(\"@hashgraph/proto\").IKey} proto.IKey\n */\n\nexport default class Key {\n    /**\n     * @internal\n     * @abstract\n     * @returns {proto.IKey}\n     */\n    // eslint-disable-next-line jsdoc/require-returns-check\n    _toProtobufKey() {\n        throw new Error(\"not implemented\");\n    }\n\n    /**\n     * @internal\n     * @param {proto.IKey} key\n     * @returns {Key}\n     */\n    static _fromProtobufKey(key) {\n        if (key.contractID != null) {\n            if (CACHE.contractId == null) {\n                throw new Error(\n                    \"`ContractId` was not loaded before decoding `Key`\"\n                );\n            }\n\n            return CACHE.contractId(key.contractID);\n        }\n\n        if (key.delegatableContractId != null) {\n            if (CACHE.contractId == null) {\n                throw new Error(\n                    \"`ContractId` was not loaded before decoding `Key`\"\n                );\n            }\n\n            return CACHE.contractId(key.delegatableContractId);\n        }\n\n        if (key.ed25519 != null && key.ed25519.byteLength > 0) {\n            if (CACHE.publicKeyED25519 == null) {\n                throw new Error(\n                    \"`PublicKey` was not loaded before decoding `Key`\"\n                );\n            }\n\n            return CACHE.publicKeyED25519(key.ed25519);\n        }\n\n        if (key.ECDSASecp256k1 != null && key.ECDSASecp256k1.byteLength > 0) {\n            if (CACHE.publicKeyECDSA == null) {\n                throw new Error(\n                    \"`PublicKey` was not loaded before decoding `Key`\"\n                );\n            }\n\n            return CACHE.publicKeyECDSA(key.ECDSASecp256k1);\n        }\n\n        if (key.thresholdKey != null && key.thresholdKey.threshold != null) {\n            if (CACHE.thresholdKey == null) {\n                throw new Error(\n                    \"`PublicKey` was not loaded before decoding `Key`\"\n                );\n            }\n\n            return CACHE.thresholdKey(key.thresholdKey);\n        }\n\n        if (key.keyList != null) {\n            if (CACHE.keyList == null) {\n                throw new Error(\n                    \"`PublicKey` was not loaded before decoding `Key`\"\n                );\n            }\n\n            return CACHE.keyList(key.keyList);\n        }\n\n        throw new Error(\n            `(BUG) keyFromProtobuf: not implemented key case: ${JSON.stringify(\n                key\n            )}`\n        );\n    }\n}\n", "import * as cryptography from \"@hashgraph/cryptography\";\nimport { arrayEqual } from \"./array.js\";\nimport Key from \"./Key.js\";\nimport CACHE from \"./Cache.js\";\n\n/**\n * @typedef {import(\"./transaction/Transaction.js\").default} Transaction\n * @typedef {import(\"./account/AccountId.js\").default} AccountId\n */\n\n/**\n * @namespace proto\n * @typedef {import(\"@hashgraph/proto\").IKey} proto.IKey\n * @typedef {import(\"@hashgraph/proto\").ITransaction} proto.ITransaction\n * @typedef {import(\"@hashgraph/proto\").ISignaturePair} proto.ISignaturePair\n * @typedef {import(\"@hashgraph/proto\").ISignedTransaction} proto.ISignedTransaction\n */\n\nexport default class PublicKey extends Key {\n    /**\n     * @internal\n     * @hideconstructor\n     * @param {cryptography.PublicKey} key\n     */\n    constructor(key) {\n        super();\n\n        this._key = key;\n    }\n\n    /**\n     * @param {Uint8Array} data\n     * @returns {PublicKey}\n     */\n    static fromBytes(data) {\n        return new PublicKey(cryptography.PublicKey.fromBytes(data));\n    }\n\n    /**\n     * @param {Uint8Array} data\n     * @returns {PublicKey}\n     */\n    static fromBytesED25519(data) {\n        return new PublicKey(cryptography.PublicKey.fromBytesED25519(data));\n    }\n\n    /**\n     * @param {Uint8Array} data\n     * @returns {PublicKey}\n     */\n    static fromBytesECDSA(data) {\n        return new PublicKey(cryptography.PublicKey.fromBytesECDSA(data));\n    }\n\n    /**\n     * Parse a public key from a string of hexadecimal digits.\n     *\n     * The public key may optionally be prefixed with\n     * the DER header.\n     *\n     * @param {string} text\n     * @returns {PublicKey}\n     */\n    static fromString(text) {\n        return new PublicKey(cryptography.PublicKey.fromString(text));\n    }\n\n    /**\n     * Verify a signature on a message with this public key.\n     *\n     * @param {Uint8Array} message\n     * @param {Uint8Array} signature\n     * @returns {boolean}\n     */\n    verify(message, signature) {\n        return this._key.verify(message, signature);\n    }\n\n    /**\n     * @param {Transaction} transaction\n     * @returns {boolean}\n     */\n    verifyTransaction(transaction) {\n        transaction._requireFrozen();\n\n        if (!transaction.isFrozen()) {\n            transaction.freeze();\n        }\n\n        for (const signedTransaction of transaction._signedTransactions) {\n            if (\n                signedTransaction.sigMap != null &&\n                signedTransaction.sigMap.sigPair != null\n            ) {\n                let found = false;\n                for (const sigPair of signedTransaction.sigMap.sigPair) {\n                    const pubKeyPrefix = /** @type {Uint8Array} */ (\n                        sigPair.pubKeyPrefix\n                    );\n                    if (arrayEqual(pubKeyPrefix, this.toBytesRaw())) {\n                        found = true;\n\n                        const bodyBytes = /** @type {Uint8Array} */ (\n                            signedTransaction.bodyBytes\n                        );\n\n                        let signature = null;\n                        if (sigPair.ed25519 != null) {\n                            signature = sigPair.ed25519;\n                        } else if (sigPair.ECDSASecp256k1 != null) {\n                            signature = sigPair.ECDSASecp256k1;\n                        }\n\n                        if (signature == null) {\n                            continue;\n                        }\n\n                        if (!this.verify(bodyBytes, signature)) {\n                            return false;\n                        }\n                    }\n                }\n\n                if (!found) {\n                    return false;\n                }\n            }\n        }\n\n        return true;\n    }\n\n    /**\n     * @returns {Uint8Array}\n     */\n    toBytes() {\n        return this._key.toBytes();\n    }\n\n    /**\n     * @returns {Uint8Array}\n     */\n    toBytesDer() {\n        return this._key.toBytesDer();\n    }\n\n    /**\n     * @returns {Uint8Array}\n     */\n    toBytesRaw() {\n        return this._key.toBytesRaw();\n    }\n\n    /**\n     * @returns {string}\n     */\n    toString() {\n        return this._key.toString();\n    }\n\n    /**\n     * @returns {string}\n     */\n    toStringDer() {\n        return this._key.toStringDer();\n    }\n\n    /**\n     * @returns {string}\n     */\n    toStringRaw() {\n        return this._key.toStringRaw();\n    }\n\n    /**\n     * @param {PublicKey} other\n     * @returns {boolean}\n     */\n    equals(other) {\n        return this._key.equals(other._key);\n    }\n\n    /**\n     * @returns {proto.IKey}\n     */\n    _toProtobufKey() {\n        switch (this._key._type) {\n            case \"ED25519\":\n                return {\n                    ed25519: this._key.toBytesRaw(),\n                };\n            case \"secp256k1\":\n                return {\n                    ECDSASecp256k1: this._key.toBytesRaw(),\n                };\n            default:\n                throw new Error(`unrecognized key type ${this._key._type}`);\n        }\n    }\n\n    /**\n     * @param {Uint8Array} signature\n     * @returns {proto.ISignaturePair}\n     */\n    _toProtobufSignature(signature) {\n        switch (this._key._type) {\n            case \"ED25519\":\n                return {\n                    pubKeyPrefix: this._key.toBytesRaw(),\n                    ed25519: signature,\n                };\n            case \"secp256k1\":\n                return {\n                    pubKeyPrefix: this._key.toBytesRaw(),\n                    ECDSASecp256k1: signature,\n                };\n            default:\n                throw new Error(`unrecognized key type ${this._key._type}`);\n        }\n    }\n\n    /**\n     * @param {Long | number} shard\n     * @param {Long | number} realm\n     * @returns {AccountId}\n     */\n    toAccountId(shard, realm) {\n        if (CACHE.accountIdConstructor == null) {\n            throw new Error(\"`AccountId` not loaded\");\n        }\n\n        return CACHE.accountIdConstructor(shard, realm, this);\n    }\n}\n\nCACHE.publicKeyED25519 = (key) => PublicKey.fromBytesED25519(key);\nCACHE.publicKeyECDSA = (key) => PublicKey.fromBytesECDSA(key);\n", "import * as cryptography from \"@hashgraph/cryptography\";\nimport Mnemonic from \"./Mnemonic.js\";\nimport PublicKey from \"./PublicKey.js\";\nimport Key from \"./Key.js\";\nimport CACHE from \"./Cache.js\";\n\n/**\n * @typedef {import(\"./transaction/Transaction.js\").default} Transaction\n * @typedef {import(\"./account/AccountId.js\").default} AccountId\n */\n\n/**\n * @namespace proto\n * @typedef {import(\"@hashgraph/proto\").IKey} proto.IKey\n * @typedef {import(\"@hashgraph/proto\").ITransaction} proto.ITransaction\n * @typedef {import(\"@hashgraph/proto\").ISignaturePair} proto.ISignaturePair\n * @typedef {import(\"@hashgraph/proto\").ISignedTransaction} proto.ISignedTransaction\n */\n\nexport default class PrivateKey extends Key {\n    /**\n     * @internal\n     * @hideconstructor\n     * @param {cryptography.PrivateKey} key\n     */\n    constructor(key) {\n        super();\n\n        this._key = key;\n    }\n\n    /**\n     * Generate a random Ed25519 private key.\n     *\n     * @returns {PrivateKey}\n     */\n    static generateED25519() {\n        return new PrivateKey(cryptography.PrivateKey.generateED25519());\n    }\n\n    /**\n     * Generate a random EDSA private key.\n     *\n     * @returns {PrivateKey}\n     */\n    static generateECDSA() {\n        return new PrivateKey(cryptography.PrivateKey.generateECDSA());\n    }\n\n    /**\n     * Depredated - Use `generateEd25519()` instead\n     * Generate a random Ed25519 private key.\n     *\n     * @returns {PrivateKey}\n     */\n    static generate() {\n        return PrivateKey.generateED25519();\n    }\n\n    /**\n     * Depredated - Use `generateEd25519Async()` instead\n     * Generate a random Ed25519 private key.\n     *\n     * @returns {Promise<PrivateKey>}\n     */\n    static async generateAsync() {\n        return new PrivateKey(await cryptography.PrivateKey.generateAsync());\n    }\n\n    /**\n     * Generate a random Ed25519 private key.\n     *\n     * @returns {Promise<PrivateKey>}\n     */\n    static async generateED25519Async() {\n        return new PrivateKey(\n            await cryptography.PrivateKey.generateED25519Async()\n        );\n    }\n\n    /**\n     * Generate a random ECDSA private key.\n     *\n     * @returns {Promise<PrivateKey>}\n     */\n    static async generateECDSAAsync() {\n        return new PrivateKey(\n            await cryptography.PrivateKey.generateECDSAAsync()\n        );\n    }\n\n    /**\n     * Construct a private key from bytes. Requires DER header.\n     *\n     * @param {Uint8Array} data\n     * @returns {PrivateKey}\n     */\n    static fromBytes(data) {\n        return new PrivateKey(cryptography.PrivateKey.fromBytes(data));\n    }\n\n    /**\n     * Construct a ECDSA private key from bytes.\n     *\n     * @param {Uint8Array} data\n     * @returns {PrivateKey}\n     */\n    static fromBytesECDSA(data) {\n        return new PrivateKey(cryptography.PrivateKey.fromBytesECDSA(data));\n    }\n\n    /**\n     * Construct a ED25519 private key from bytes.\n     *\n     * @param {Uint8Array} data\n     * @returns {PrivateKey}\n     */\n    static fromBytesED25519(data) {\n        return new PrivateKey(cryptography.PrivateKey.fromBytesED25519(data));\n    }\n\n    /**\n     * Construct a private key from a hex-encoded string. Requires DER header.\n     *\n     * @param {string} text\n     * @returns {PrivateKey}\n     */\n    static fromString(text) {\n        return new PrivateKey(cryptography.PrivateKey.fromString(text));\n    }\n\n    /**\n     * Construct a ECDSA private key from a hex-encoded string.\n     *\n     * @param {string} text\n     * @returns {PrivateKey}\n     */\n    static fromStringECDSA(text) {\n        return new PrivateKey(cryptography.PrivateKey.fromStringECDSA(text));\n    }\n\n    /**\n     * Construct a Ed25519 private key from a hex-encoded string.\n     *\n     * @param {string} text\n     * @returns {PrivateKey}\n     */\n    static fromStringED25519(text) {\n        return new PrivateKey(cryptography.PrivateKey.fromStringED25519(text));\n    }\n\n    /**\n     * Recover a private key from a mnemonic phrase (and optionally a password).\n     *\n     * @param {Mnemonic | cryptography.Mnemonic | string} mnemonic\n     * @param {string} [passphrase]\n     * @returns {Promise<PrivateKey>}\n     */\n    static async fromMnemonic(mnemonic, passphrase = \"\") {\n        if (mnemonic instanceof Mnemonic) {\n            return new PrivateKey(\n                await cryptography.PrivateKey.fromMnemonic(\n                    mnemonic._mnemonic,\n                    passphrase\n                )\n            );\n        }\n\n        return new PrivateKey(\n            await cryptography.PrivateKey.fromMnemonic(mnemonic, passphrase)\n        );\n    }\n\n    /**\n     * Recover a private key from a keystore, previously created by `.toKeystore()`.\n     *\n     * This key will _not_ support child key derivation.\n     *\n     * @param {Uint8Array} data\n     * @param {string} [passphrase]\n     * @returns {Promise<PrivateKey>}\n     * @throws {BadKeyError} If the passphrase is incorrect or the hash fails to validate.\n     */\n    static async fromKeystore(data, passphrase = \"\") {\n        return new PrivateKey(\n            await cryptography.PrivateKey.fromKeystore(data, passphrase)\n        );\n    }\n\n    /**\n     * Recover a private key from a pem string; the private key may be encrypted.\n     *\n     * This method assumes the .pem file has been converted to a string already.\n     *\n     * If `passphrase` is not null or empty, this looks for the first `ENCRYPTED PRIVATE KEY`\n     * section and uses `passphrase` to decrypt it; otherwise, it looks for the first `PRIVATE KEY`\n     * section and decodes that as a DER-encoded  private key.\n     *\n     * @param {string} data\n     * @param {string} [passphrase]\n     * @returns {Promise<PrivateKey>}\n     */\n    static async fromPem(data, passphrase = \"\") {\n        return new PrivateKey(\n            await cryptography.PrivateKey.fromPem(data, passphrase)\n        );\n    }\n\n    /**\n     * Derive a new private key at the given wallet index.\n     *\n     * Only currently supported for keys created with `fromMnemonic()`; other keys will throw\n     * an error.\n     *\n     * You can check if a key supports derivation with `.supportsDerivation()`\n     *\n     * @param {number} index\n     * @returns {Promise<PrivateKey>}\n     * @throws If this key does not support derivation.\n     */\n    async derive(index) {\n        return new PrivateKey(await this._key.derive(index));\n    }\n\n    /**\n     * @param {number} index\n     * @returns {Promise<PrivateKey>}\n     * @throws If this key does not support derivation.\n     */\n    async legacyDerive(index) {\n        return new PrivateKey(await this._key.legacyDerive(index));\n    }\n\n    /**\n     * Get the public key associated with this private key.\n     *\n     * The public key can be freely given and used by other parties to verify\n     * the signatures generated by this private key.\n     *\n     * @returns {PublicKey}\n     */\n    get publicKey() {\n        return new PublicKey(this._key.publicKey);\n    }\n\n    /**\n     * Sign a message with this private key.\n     *\n     * @param {Uint8Array} bytes\n     * @returns {Uint8Array} - The signature bytes without the message\n     */\n    sign(bytes) {\n        return this._key.sign(bytes);\n    }\n\n    /**\n     * @param {Transaction} transaction\n     * @returns {Uint8Array}\n     */\n    signTransaction(transaction) {\n        const tx = transaction._signedTransactions[0];\n        const signature =\n            tx.bodyBytes != null ? this.sign(tx.bodyBytes) : new Uint8Array();\n\n        transaction.addSignature(this.publicKey, signature);\n\n        return signature;\n    }\n\n    /**\n     * Check if `derive` can be called on this private key.\n     *\n     * This is only the case if the key was created from a mnemonic.\n     *\n     * @returns {boolean}\n     */\n    isDerivable() {\n        return this._key.isDerivable();\n    }\n\n    /**\n     * @returns {Uint8Array}\n     */\n    toBytes() {\n        return this._key.toBytes();\n    }\n\n    /**\n     * @returns {Uint8Array}\n     */\n    toBytesDer() {\n        return this._key.toBytesDer();\n    }\n\n    /**\n     * @returns {Uint8Array}\n     */\n    toBytesRaw() {\n        return this._key.toBytesRaw();\n    }\n\n    /**\n     * @returns {string}\n     */\n    toString() {\n        return this._key.toStringDer();\n    }\n\n    /**\n     * @returns {string}\n     */\n    toStringDer() {\n        return this._key.toStringDer();\n    }\n\n    /**\n     * @returns {string}\n     */\n    toStringRaw() {\n        return this._key.toStringRaw();\n    }\n\n    /**\n     * Create a keystore with a given passphrase.\n     *\n     * The key can be recovered later with `fromKeystore()`.\n     *\n     * Note that this will not retain the ancillary data used for\n     * deriving child keys, thus `.derive()` on the restored key will\n     * throw even if this instance supports derivation.\n     *\n     * @param {string} [passphrase]\n     * @returns {Promise<Uint8Array>}\n     */\n    toKeystore(passphrase = \"\") {\n        return this._key.toKeystore(passphrase);\n    }\n\n    /**\n     * @returns {proto.IKey}\n     */\n    _toProtobufKey() {\n        return this.publicKey._toProtobufKey();\n    }\n\n    /**\n     * @param {Long | number} shard\n     * @param {Long | number} realm\n     * @returns {AccountId}\n     */\n    toAccountId(shard, realm) {\n        return this.publicKey.toAccountId(shard, realm);\n    }\n}\n\nCACHE.privateKeyConstructor = (key) => new PrivateKey(key);\n", "import Key from \"./Key.js\";\nimport CACHE from \"./Cache.js\";\n\n/**\n * @namespace proto\n * @typedef {import(\"@hashgraph/proto\").IKey} proto.IKey\n * @typedef {import(\"@hashgraph/proto\").IKeyList} proto.IKeyList\n * @typedef {import(\"@hashgraph/proto\").IThresholdKey} proto.IThresholdKey\n */\n\n/**\n * A list of Keys (`Key`) with an optional threshold.\n */\nexport default class KeyList extends Key {\n    /**\n     * @param {?Key[]} [keys]\n     * @param {?number} [threshold]\n     */\n    constructor(keys, threshold) {\n        super();\n\n        /**\n         * @private\n         * @type {Key[]}\n         */\n        this._keys = keys == null ? [] : keys;\n\n        /**\n         * @type {?number}\n         */\n        this._threshold = threshold == null ? null : threshold;\n    }\n\n    /**\n     * @param {Key[]} keys\n     * @returns {KeyList}\n     */\n    static of(...keys) {\n        return new KeyList(keys, null);\n    }\n\n    /**\n     * @template T\n     * @param {ArrayLike<Key>} arrayLike\n     * @param {((key: Key) => Key)} [mapFn]\n     * @param {T} [thisArg]\n     * @returns {KeyList}\n     */\n    static from(arrayLike, mapFn, thisArg) {\n        if (mapFn == null) {\n            return new KeyList(Array.from(arrayLike));\n        }\n\n        return new KeyList(Array.from(arrayLike, mapFn, thisArg));\n    }\n\n    /**\n     * @returns {?number}\n     */\n    get threshold() {\n        return this._threshold;\n    }\n\n    /**\n     * @param {number} threshold\n     * @returns {this}\n     */\n    setThreshold(threshold) {\n        this._threshold = threshold;\n        return this;\n    }\n\n    /**\n     * @param {Key[]} keys\n     * @returns {number}\n     */\n    push(...keys) {\n        return this._keys.push(...keys);\n    }\n\n    /**\n     * @param {number} start\n     * @param {number} deleteCount\n     * @param {Key[]} items\n     * @returns {KeyList}\n     */\n    splice(start, deleteCount, ...items) {\n        return new KeyList(\n            this._keys.splice(start, deleteCount, ...items),\n            this.threshold\n        );\n    }\n\n    /**\n     * @param {number=} start\n     * @param {number=} end\n     * @returns {KeyList}\n     */\n    slice(start, end) {\n        return new KeyList(this._keys.slice(start, end), this.threshold);\n    }\n\n    /**\n     * @returns {Iterator<Key>}\n     */\n    [Symbol.iterator]() {\n        return this._keys[Symbol.iterator]();\n    }\n\n    /**\n     * @returns {Key[]}\n     */\n    toArray() {\n        return this._keys.slice();\n    }\n\n    /**\n     * @returns {string}\n     */\n    toString() {\n        return JSON.stringify({\n            threshold: this._threshold,\n            keys: this._keys.toString(),\n        });\n    }\n\n    /**\n     * @returns {proto.IKey}\n     */\n    _toProtobufKey() {\n        const keys = this._keys.map((key) => key._toProtobufKey());\n\n        if (this.threshold == null) {\n            return { keyList: { keys } };\n        } else {\n            return {\n                thresholdKey: {\n                    threshold: this.threshold,\n                    keys: { keys },\n                },\n            };\n        }\n    }\n\n    /**\n     * @param {proto.IKeyList} key\n     * @returns {KeyList}\n     */\n    static __fromProtobufKeyList(key) {\n        const keys = (key.keys != null ? key.keys : []).map((key) =>\n            Key._fromProtobufKey(key)\n        );\n        return new KeyList(keys);\n    }\n\n    /**\n     * @param {proto.IThresholdKey} key\n     * @returns {KeyList}\n     */\n    static __fromProtobufThresoldKey(key) {\n        const list = KeyList.__fromProtobufKeyList(\n            key.keys != null ? key.keys : {}\n        );\n        list.setThreshold(key.threshold != null ? key.threshold : 0);\n        return list;\n    }\n}\n\nCACHE.keyList = (key) => KeyList.__fromProtobufKeyList(key);\nCACHE.thresholdKey = (key) => KeyList.__fromProtobufThresoldKey(key);\n", "/**\n * @namespace proto\n * @typedef {import(\"@hashgraph/proto\").ResponseCodeEnum} proto.ResponseCodeEnum\n */\n\nexport default class Status {\n    /**\n     * @hideconstructor\n     * @internal\n     * @param {number} code\n     */\n    constructor(code) {\n        /** @readonly */\n        this._code = code;\n\n        Object.freeze(this);\n    }\n\n    /**\n     * @returns {string}\n     */\n    toString() {\n        switch (this) {\n            case Status.Ok:\n                return \"OK\";\n            case Status.InvalidTransaction:\n                return \"INVALID_TRANSACTION\";\n            case Status.PayerAccountNotFound:\n                return \"PAYER_ACCOUNT_NOT_FOUND\";\n            case Status.InvalidNodeAccount:\n                return \"INVALID_NODE_ACCOUNT\";\n            case Status.TransactionExpired:\n                return \"TRANSACTION_EXPIRED\";\n            case Status.InvalidTransactionStart:\n                return \"INVALID_TRANSACTION_START\";\n            case Status.InvalidTransactionDuration:\n                return \"INVALID_TRANSACTION_DURATION\";\n            case Status.InvalidSignature:\n                return \"INVALID_SIGNATURE\";\n            case Status.MemoTooLong:\n                return \"MEMO_TOO_LONG\";\n            case Status.InsufficientTxFee:\n                return \"INSUFFICIENT_TX_FEE\";\n            case Status.InsufficientPayerBalance:\n                return \"INSUFFICIENT_PAYER_BALANCE\";\n            case Status.DuplicateTransaction:\n                return \"DUPLICATE_TRANSACTION\";\n            case Status.Busy:\n                return \"BUSY\";\n            case Status.NotSupported:\n                return \"NOT_SUPPORTED\";\n            case Status.InvalidFileId:\n                return \"INVALID_FILE_ID\";\n            case Status.InvalidAccountId:\n                return \"INVALID_ACCOUNT_ID\";\n            case Status.InvalidContractId:\n                return \"INVALID_CONTRACT_ID\";\n            case Status.InvalidTransactionId:\n                return \"INVALID_TRANSACTION_ID\";\n            case Status.ReceiptNotFound:\n                return \"RECEIPT_NOT_FOUND\";\n            case Status.RecordNotFound:\n                return \"RECORD_NOT_FOUND\";\n            case Status.InvalidSolidityId:\n                return \"INVALID_SOLIDITY_ID\";\n            case Status.Unknown:\n                return \"UNKNOWN\";\n            case Status.Success:\n                return \"SUCCESS\";\n            case Status.FailInvalid:\n                return \"FAIL_INVALID\";\n            case Status.FailFee:\n                return \"FAIL_FEE\";\n            case Status.FailBalance:\n                return \"FAIL_BALANCE\";\n            case Status.KeyRequired:\n                return \"KEY_REQUIRED\";\n            case Status.BadEncoding:\n                return \"BAD_ENCODING\";\n            case Status.InsufficientAccountBalance:\n                return \"INSUFFICIENT_ACCOUNT_BALANCE\";\n            case Status.InvalidSolidityAddress:\n                return \"INVALID_SOLIDITY_ADDRESS\";\n            case Status.InsufficientGas:\n                return \"INSUFFICIENT_GAS\";\n            case Status.ContractSizeLimitExceeded:\n                return \"CONTRACT_SIZE_LIMIT_EXCEEDED\";\n            case Status.LocalCallModificationException:\n                return \"LOCAL_CALL_MODIFICATION_EXCEPTION\";\n            case Status.ContractRevertExecuted:\n                return \"CONTRACT_REVERT_EXECUTED\";\n            case Status.ContractExecutionException:\n                return \"CONTRACT_EXECUTION_EXCEPTION\";\n            case Status.InvalidReceivingNodeAccount:\n                return \"INVALID_RECEIVING_NODE_ACCOUNT\";\n            case Status.MissingQueryHeader:\n                return \"MISSING_QUERY_HEADER\";\n            case Status.AccountUpdateFailed:\n                return \"ACCOUNT_UPDATE_FAILED\";\n            case Status.InvalidKeyEncoding:\n                return \"INVALID_KEY_ENCODING\";\n            case Status.NullSolidityAddress:\n                return \"NULL_SOLIDITY_ADDRESS\";\n            case Status.ContractUpdateFailed:\n                return \"CONTRACT_UPDATE_FAILED\";\n            case Status.InvalidQueryHeader:\n                return \"INVALID_QUERY_HEADER\";\n            case Status.InvalidFeeSubmitted:\n                return \"INVALID_FEE_SUBMITTED\";\n            case Status.InvalidPayerSignature:\n                return \"INVALID_PAYER_SIGNATURE\";\n            case Status.KeyNotProvided:\n                return \"KEY_NOT_PROVIDED\";\n            case Status.InvalidExpirationTime:\n                return \"INVALID_EXPIRATION_TIME\";\n            case Status.NoWaclKey:\n                return \"NO_WACL_KEY\";\n            case Status.FileContentEmpty:\n                return \"FILE_CONTENT_EMPTY\";\n            case Status.InvalidAccountAmounts:\n                return \"INVALID_ACCOUNT_AMOUNTS\";\n            case Status.EmptyTransactionBody:\n                return \"EMPTY_TRANSACTION_BODY\";\n            case Status.InvalidTransactionBody:\n                return \"INVALID_TRANSACTION_BODY\";\n            case Status.InvalidSignatureTypeMismatchingKey:\n                return \"INVALID_SIGNATURE_TYPE_MISMATCHING_KEY\";\n            case Status.InvalidSignatureCountMismatchingKey:\n                return \"INVALID_SIGNATURE_COUNT_MISMATCHING_KEY\";\n            case Status.EmptyLiveHashBody:\n                return \"EMPTY_LIVE_HASH_BODY\";\n            case Status.EmptyLiveHash:\n                return \"EMPTY_LIVE_HASH\";\n            case Status.EmptyLiveHashKeys:\n                return \"EMPTY_LIVE_HASH_KEYS\";\n            case Status.InvalidLiveHashSize:\n                return \"INVALID_LIVE_HASH_SIZE\";\n            case Status.EmptyQueryBody:\n                return \"EMPTY_QUERY_BODY\";\n            case Status.EmptyLiveHashQuery:\n                return \"EMPTY_LIVE_HASH_QUERY\";\n            case Status.LiveHashNotFound:\n                return \"LIVE_HASH_NOT_FOUND\";\n            case Status.AccountIdDoesNotExist:\n                return \"ACCOUNT_ID_DOES_NOT_EXIST\";\n            case Status.LiveHashAlreadyExists:\n                return \"LIVE_HASH_ALREADY_EXISTS\";\n            case Status.InvalidFileWacl:\n                return \"INVALID_FILE_WACL\";\n            case Status.SerializationFailed:\n                return \"SERIALIZATION_FAILED\";\n            case Status.TransactionOversize:\n                return \"TRANSACTION_OVERSIZE\";\n            case Status.TransactionTooManyLayers:\n                return \"TRANSACTION_TOO_MANY_LAYERS\";\n            case Status.ContractDeleted:\n                return \"CONTRACT_DELETED\";\n            case Status.PlatformNotActive:\n                return \"PLATFORM_NOT_ACTIVE\";\n            case Status.KeyPrefixMismatch:\n                return \"KEY_PREFIX_MISMATCH\";\n            case Status.PlatformTransactionNotCreated:\n                return \"PLATFORM_TRANSACTION_NOT_CREATED\";\n            case Status.InvalidRenewalPeriod:\n                return \"INVALID_RENEWAL_PERIOD\";\n            case Status.InvalidPayerAccountId:\n                return \"INVALID_PAYER_ACCOUNT_ID\";\n            case Status.AccountDeleted:\n                return \"ACCOUNT_DELETED\";\n            case Status.FileDeleted:\n                return \"FILE_DELETED\";\n            case Status.AccountRepeatedInAccountAmounts:\n                return \"ACCOUNT_REPEATED_IN_ACCOUNT_AMOUNTS\";\n            case Status.SettingNegativeAccountBalance:\n                return \"SETTING_NEGATIVE_ACCOUNT_BALANCE\";\n            case Status.ObtainerRequired:\n                return \"OBTAINER_REQUIRED\";\n            case Status.ObtainerSameContractId:\n                return \"OBTAINER_SAME_CONTRACT_ID\";\n            case Status.ObtainerDoesNotExist:\n                return \"OBTAINER_DOES_NOT_EXIST\";\n            case Status.ModifyingImmutableContract:\n                return \"MODIFYING_IMMUTABLE_CONTRACT\";\n            case Status.FileSystemException:\n                return \"FILE_SYSTEM_EXCEPTION\";\n            case Status.AutorenewDurationNotInRange:\n                return \"AUTORENEW_DURATION_NOT_IN_RANGE\";\n            case Status.ErrorDecodingBytestring:\n                return \"ERROR_DECODING_BYTESTRING\";\n            case Status.ContractFileEmpty:\n                return \"CONTRACT_FILE_EMPTY\";\n            case Status.ContractBytecodeEmpty:\n                return \"CONTRACT_BYTECODE_EMPTY\";\n            case Status.InvalidInitialBalance:\n                return \"INVALID_INITIAL_BALANCE\";\n            case Status.InvalidReceiveRecordThreshold:\n                return \"INVALID_RECEIVE_RECORD_THRESHOLD\";\n            case Status.InvalidSendRecordThreshold:\n                return \"INVALID_SEND_RECORD_THRESHOLD\";\n            case Status.AccountIsNotGenesisAccount:\n                return \"ACCOUNT_IS_NOT_GENESIS_ACCOUNT\";\n            case Status.PayerAccountUnauthorized:\n                return \"PAYER_ACCOUNT_UNAUTHORIZED\";\n            case Status.InvalidFreezeTransactionBody:\n                return \"INVALID_FREEZE_TRANSACTION_BODY\";\n            case Status.FreezeTransactionBodyNotFound:\n                return \"FREEZE_TRANSACTION_BODY_NOT_FOUND\";\n            case Status.TransferListSizeLimitExceeded:\n                return \"TRANSFER_LIST_SIZE_LIMIT_EXCEEDED\";\n            case Status.ResultSizeLimitExceeded:\n                return \"RESULT_SIZE_LIMIT_EXCEEDED\";\n            case Status.NotSpecialAccount:\n                return \"NOT_SPECIAL_ACCOUNT\";\n            case Status.ContractNegativeGas:\n                return \"CONTRACT_NEGATIVE_GAS\";\n            case Status.ContractNegativeValue:\n                return \"CONTRACT_NEGATIVE_VALUE\";\n            case Status.InvalidFeeFile:\n                return \"INVALID_FEE_FILE\";\n            case Status.InvalidExchangeRateFile:\n                return \"INVALID_EXCHANGE_RATE_FILE\";\n            case Status.InsufficientLocalCallGas:\n                return \"INSUFFICIENT_LOCAL_CALL_GAS\";\n            case Status.EntityNotAllowedToDelete:\n                return \"ENTITY_NOT_ALLOWED_TO_DELETE\";\n            case Status.AuthorizationFailed:\n                return \"AUTHORIZATION_FAILED\";\n            case Status.FileUploadedProtoInvalid:\n                return \"FILE_UPLOADED_PROTO_INVALID\";\n            case Status.FileUploadedProtoNotSavedToDisk:\n                return \"FILE_UPLOADED_PROTO_NOT_SAVED_TO_DISK\";\n            case Status.FeeScheduleFilePartUploaded:\n                return \"FEE_SCHEDULE_FILE_PART_UPLOADED\";\n            case Status.ExchangeRateChangeLimitExceeded:\n                return \"EXCHANGE_RATE_CHANGE_LIMIT_EXCEEDED\";\n            case Status.MaxContractStorageExceeded:\n                return \"MAX_CONTRACT_STORAGE_EXCEEDED\";\n            case Status.TransferAccountSameAsDeleteAccount:\n                return \"TRANSFER_ACCOUNT_SAME_AS_DELETE_ACCOUNT\";\n            case Status.TotalLedgerBalanceInvalid:\n                return \"TOTAL_LEDGER_BALANCE_INVALID\";\n            case Status.ExpirationReductionNotAllowed:\n                return \"EXPIRATION_REDUCTION_NOT_ALLOWED\";\n            case Status.MaxGasLimitExceeded:\n                return \"MAX_GAS_LIMIT_EXCEEDED\";\n            case Status.MaxFileSizeExceeded:\n                return \"MAX_FILE_SIZE_EXCEEDED\";\n            case Status.ReceiverSigRequired:\n                return \"RECEIVER_SIG_REQUIRED\";\n            case Status.InvalidTopicId:\n                return \"INVALID_TOPIC_ID\";\n            case Status.InvalidAdminKey:\n                return \"INVALID_ADMIN_KEY\";\n            case Status.InvalidSubmitKey:\n                return \"INVALID_SUBMIT_KEY\";\n            case Status.Unauthorized:\n                return \"UNAUTHORIZED\";\n            case Status.InvalidTopicMessage:\n                return \"INVALID_TOPIC_MESSAGE\";\n            case Status.InvalidAutorenewAccount:\n                return \"INVALID_AUTORENEW_ACCOUNT\";\n            case Status.AutorenewAccountNotAllowed:\n                return \"AUTORENEW_ACCOUNT_NOT_ALLOWED\";\n            case Status.TopicExpired:\n                return \"TOPIC_EXPIRED\";\n            case Status.InvalidChunkNumber:\n                return \"INVALID_CHUNK_NUMBER\";\n            case Status.InvalidChunkTransactionId:\n                return \"INVALID_CHUNK_TRANSACTION_ID\";\n            case Status.AccountFrozenForToken:\n                return \"ACCOUNT_FROZEN_FOR_TOKEN\";\n            case Status.TokensPerAccountLimitExceeded:\n                return \"TOKENS_PER_ACCOUNT_LIMIT_EXCEEDED\";\n            case Status.InvalidTokenId:\n                return \"INVALID_TOKEN_ID\";\n            case Status.InvalidTokenDecimals:\n                return \"INVALID_TOKEN_DECIMALS\";\n            case Status.InvalidTokenInitialSupply:\n                return \"INVALID_TOKEN_INITIAL_SUPPLY\";\n            case Status.InvalidTreasuryAccountForToken:\n                return \"INVALID_TREASURY_ACCOUNT_FOR_TOKEN\";\n            case Status.InvalidTokenSymbol:\n                return \"INVALID_TOKEN_SYMBOL\";\n            case Status.TokenHasNoFreezeKey:\n                return \"TOKEN_HAS_NO_FREEZE_KEY\";\n            case Status.TransfersNotZeroSumForToken:\n                return \"TRANSFERS_NOT_ZERO_SUM_FOR_TOKEN\";\n            case Status.MissingTokenSymbol:\n                return \"MISSING_TOKEN_SYMBOL\";\n            case Status.TokenSymbolTooLong:\n                return \"TOKEN_SYMBOL_TOO_LONG\";\n            case Status.AccountKycNotGrantedForToken:\n                return \"ACCOUNT_KYC_NOT_GRANTED_FOR_TOKEN\";\n            case Status.TokenHasNoKycKey:\n                return \"TOKEN_HAS_NO_KYC_KEY\";\n            case Status.InsufficientTokenBalance:\n                return \"INSUFFICIENT_TOKEN_BALANCE\";\n            case Status.TokenWasDeleted:\n                return \"TOKEN_WAS_DELETED\";\n            case Status.TokenHasNoSupplyKey:\n                return \"TOKEN_HAS_NO_SUPPLY_KEY\";\n            case Status.TokenHasNoWipeKey:\n                return \"TOKEN_HAS_NO_WIPE_KEY\";\n            case Status.InvalidTokenMintAmount:\n                return \"INVALID_TOKEN_MINT_AMOUNT\";\n            case Status.InvalidTokenBurnAmount:\n                return \"INVALID_TOKEN_BURN_AMOUNT\";\n            case Status.TokenNotAssociatedToAccount:\n                return \"TOKEN_NOT_ASSOCIATED_TO_ACCOUNT\";\n            case Status.CannotWipeTokenTreasuryAccount:\n                return \"CANNOT_WIPE_TOKEN_TREASURY_ACCOUNT\";\n            case Status.InvalidKycKey:\n                return \"INVALID_KYC_KEY\";\n            case Status.InvalidWipeKey:\n                return \"INVALID_WIPE_KEY\";\n            case Status.InvalidFreezeKey:\n                return \"INVALID_FREEZE_KEY\";\n            case Status.InvalidSupplyKey:\n                return \"INVALID_SUPPLY_KEY\";\n            case Status.MissingTokenName:\n                return \"MISSING_TOKEN_NAME\";\n            case Status.TokenNameTooLong:\n                return \"TOKEN_NAME_TOO_LONG\";\n            case Status.InvalidWipingAmount:\n                return \"INVALID_WIPING_AMOUNT\";\n            case Status.TokenIsImmutable:\n                return \"TOKEN_IS_IMMUTABLE\";\n            case Status.TokenAlreadyAssociatedToAccount:\n                return \"TOKEN_ALREADY_ASSOCIATED_TO_ACCOUNT\";\n            case Status.TransactionRequiresZeroTokenBalances:\n                return \"TRANSACTION_REQUIRES_ZERO_TOKEN_BALANCES\";\n            case Status.AccountIsTreasury:\n                return \"ACCOUNT_IS_TREASURY\";\n            case Status.TokenIdRepeatedInTokenList:\n                return \"TOKEN_ID_REPEATED_IN_TOKEN_LIST\";\n            case Status.TokenTransferListSizeLimitExceeded:\n                return \"TOKEN_TRANSFER_LIST_SIZE_LIMIT_EXCEEDED\";\n            case Status.EmptyTokenTransferBody:\n                return \"EMPTY_TOKEN_TRANSFER_BODY\";\n            case Status.EmptyTokenTransferAccountAmounts:\n                return \"EMPTY_TOKEN_TRANSFER_ACCOUNT_AMOUNTS\";\n            case Status.InvalidScheduleId:\n                return \"INVALID_SCHEDULE_ID\";\n            case Status.ScheduleIsImmutable:\n                return \"SCHEDULE_IS_IMMUTABLE\";\n            case Status.InvalidSchedulePayerId:\n                return \"INVALID_SCHEDULE_PAYER_ID\";\n            case Status.InvalidScheduleAccountId:\n                return \"INVALID_SCHEDULE_ACCOUNT_ID\";\n            case Status.NoNewValidSignatures:\n                return \"NO_NEW_VALID_SIGNATURES\";\n            case Status.UnresolvableRequiredSigners:\n                return \"UNRESOLVABLE_REQUIRED_SIGNERS\";\n            case Status.ScheduledTransactionNotInWhitelist:\n                return \"SCHEDULED_TRANSACTION_NOT_IN_WHITELIST\";\n            case Status.SomeSignaturesWereInvalid:\n                return \"SOME_SIGNATURES_WERE_INVALID\";\n            case Status.TransactionIdFieldNotAllowed:\n                return \"TRANSACTION_ID_FIELD_NOT_ALLOWED\";\n            case Status.IdenticalScheduleAlreadyCreated:\n                return \"IDENTICAL_SCHEDULE_ALREADY_CREATED\";\n            case Status.InvalidZeroByteInString:\n                return \"INVALID_ZERO_BYTE_IN_STRING\";\n            case Status.ScheduleAlreadyDeleted:\n                return \"SCHEDULE_ALREADY_DELETED\";\n            case Status.ScheduleAlreadyExecuted:\n                return \"SCHEDULE_ALREADY_EXECUTED\";\n            case Status.MessageSizeTooLarge:\n                return \"MESSAGE_SIZE_TOO_LARGE\";\n            case Status.OperationRepeatedInBucketGroups:\n                return \"OPERATION_REPEATED_IN_BUCKET_GROUPS\";\n            case Status.BucketCapacityOverflow:\n                return \"BUCKET_CAPACITY_OVERFLOW\";\n            case Status.NodeCapacityNotSufficientForOperation:\n                return \"NODE_CAPACITY_NOT_SUFFICIENT_FOR_OPERATION\";\n            case Status.BucketHasNoThrottleGroups:\n                return \"BUCKET_HAS_NO_THROTTLE_GROUPS\";\n            case Status.ThrottleGroupHasZeroOpsPerSec:\n                return \"THROTTLE_GROUP_HAS_ZERO_OPS_PER_SEC\";\n            case Status.SuccessButMissingExpectedOperation:\n                return \"SUCCESS_BUT_MISSING_EXPECTED_OPERATION\";\n            case Status.UnparseableThrottleDefinitions:\n                return \"UNPARSEABLE_THROTTLE_DEFINITIONS\";\n            case Status.InvalidThrottleDefinitions:\n                return \"INVALID_THROTTLE_DEFINITIONS\";\n            case Status.AccountExpiredAndPendingRemoval:\n                return \"ACCOUNT_EXPIRED_AND_PENDING_REMOVAL\";\n            case Status.InvalidTokenMaxSupply:\n                return \"INVALID_TOKEN_MAX_SUPPLY\";\n            case Status.InvalidTokenNftSerialNumber:\n                return \"INVALID_TOKEN_NFT_SERIAL_NUMBER\";\n            case Status.InvalidNftId:\n                return \"INVALID_NFT_ID\";\n            case Status.MetadataTooLong:\n                return \"METADATA_TOO_LONG\";\n            case Status.BatchSizeLimitExceeded:\n                return \"BATCH_SIZE_LIMIT_EXCEEDED\";\n            case Status.InvalidQueryRange:\n                return \"INVALID_QUERY_RANGE\";\n            case Status.FractionDividesByZero:\n                return \"FRACTION_DIVIDES_BY_ZERO\";\n            case Status.InsufficientPayerBalanceForCustomFee:\n                return \"INSUFFICIENT_PAYER_BALANCE_FOR_CUSTOM_FEE\";\n            case Status.CustomFeesListTooLong:\n                return \"CUSTOM_FEES_LIST_TOO_LONG\";\n            case Status.InvalidCustomFeeCollector:\n                return \"INVALID_CUSTOM_FEE_COLLECTOR\";\n            case Status.InvalidTokenIdInCustomFees:\n                return \"INVALID_TOKEN_ID_IN_CUSTOM_FEES\";\n            case Status.TokenNotAssociatedToFeeCollector:\n                return \"TOKEN_NOT_ASSOCIATED_TO_FEE_COLLECTOR\";\n            case Status.TokenMaxSupplyReached:\n                return \"TOKEN_MAX_SUPPLY_REACHED\";\n            case Status.SenderDoesNotOwnNftSerialNo:\n                return \"SENDER_DOES_NOT_OWN_NFT_SERIAL_NO\";\n            case Status.CustomFeeNotFullySpecified:\n                return \"CUSTOM_FEE_NOT_FULLY_SPECIFIED\";\n            case Status.CustomFeeMustBePositive:\n                return \"CUSTOM_FEE_MUST_BE_POSITIVE\";\n            case Status.TokenHasNoFeeScheduleKey:\n                return \"TOKEN_HAS_NO_FEE_SCHEDULE_KEY\";\n            case Status.CustomFeeOutsideNumericRange:\n                return \"CUSTOM_FEE_OUTSIDE_NUMERIC_RANGE\";\n            case Status.RoyaltyFractionCannotExceedOne:\n                return \"ROYALTY_FRACTION_CANNOT_EXCEED_ONE\";\n            case Status.FractionalFeeMaxAmountLessThanMinAmount:\n                return \"FRACTIONAL_FEE_MAX_AMOUNT_LESS_THAN_MIN_AMOUNT\";\n            case Status.CustomScheduleAlreadyHasNoFees:\n                return \"CUSTOM_SCHEDULE_ALREADY_HAS_NO_FEES\";\n            case Status.CustomFeeDenominationMustBeFungibleCommon:\n                return \"CUSTOM_FEE_DENOMINATION_MUST_BE_FUNGIBLE_COMMON\";\n            case Status.CustomFractionalFeeOnlyAllowedForFungibleCommon:\n                return \"CUSTOM_FRACTIONAL_FEE_ONLY_ALLOWED_FOR_FUNGIBLE_COMMON\";\n            case Status.InvalidCustomFeeScheduleKey:\n                return \"INVALID_CUSTOM_FEE_SCHEDULE_KEY\";\n            case Status.InvalidTokenMintMetadata:\n                return \"INVALID_TOKEN_MINT_METADATA\";\n            case Status.InvalidTokenBurnMetadata:\n                return \"INVALID_TOKEN_BURN_METADATA\";\n            case Status.CurrentTreasuryStillOwnsNfts:\n                return \"CURRENT_TREASURY_STILL_OWNS_NFTS\";\n            case Status.AccountStillOwnsNfts:\n                return \"ACCOUNT_STILL_OWNS_NFTS\";\n            case Status.TreasuryMustOwnBurnedNft:\n                return \"TREASURY_MUST_OWN_BURNED_NFT\";\n            case Status.AccountDoesNotOwnWipedNft:\n                return \"ACCOUNT_DOES_NOT_OWN_WIPED_NFT\";\n            case Status.AccountAmountTransfersOnlyAllowedForFungibleCommon:\n                return \"ACCOUNT_AMOUNT_TRANSFERS_ONLY_ALLOWED_FOR_FUNGIBLE_COMMON\";\n            case Status.MaxNftsInPriceRegimeHaveBeenMinted:\n                return \"MAX_NFTS_IN_PRICE_REGIME_HAVE_BEEN_MINTED\";\n            case Status.PayerAccountDeleted:\n                return \"PAYER_ACCOUNT_DELETED\";\n            case Status.CustomFeeChargingExceededMaxRecursionDepth:\n                return \"CUSTOM_FEE_CHARGING_EXCEEDED_MAX_RECURSION_DEPTH\";\n            case Status.CustomFeeChargingExceededMaxAccountAmounts:\n                return \"CUSTOM_FEE_CHARGING_EXCEEDED_MAX_ACCOUNT_AMOUNTS\";\n            case Status.InsufficientSenderAccountBalanceForCustomFee:\n                return \"INSUFFICIENT_SENDER_ACCOUNT_BALANCE_FOR_CUSTOM_FEE\";\n            case Status.SerialNumberLimitReached:\n                return \"SERIAL_NUMBER_LIMIT_REACHED\";\n            case Status.CustomRoyaltyFeeOnlyAllowedForNonFungibleUnique:\n                return \"CUSTOM_ROYALTY_FEE_ONLY_ALLOWED_FOR_NON_FUNGIBLE_UNIQUE\";\n            case Status.NoRemainingAutomaticAssociations:\n                return \"NO_REMAINING_AUTOMATIC_ASSOCIATIONS\";\n            case Status.ExistingAutomaticAssociationsExceedGivenLimit:\n                return \"EXISTING_AUTOMATIC_ASSOCIATIONS_EXCEED_GIVEN_LIMIT\";\n            case Status.RequestedNumAutomaticAssociationsExceedsAssociationLimit:\n                return \"REQUESTED_NUM_AUTOMATIC_ASSOCIATIONS_EXCEEDS_ASSOCIATION_LIMIT\";\n            case Status.TokenIsPaused:\n                return \"TOKEN_IS_PAUSED\";\n            case Status.TokenHasNoPauseKey:\n                return \"TOKEN_HAS_NO_PAUSE_KEY\";\n            case Status.InvalidPauseKey:\n                return \"INVALID_PAUSE_KEY\";\n            case Status.FreezeUpdateFileDoesNotExist:\n                return \"FREEZE_UPDATE_FILE_DOES_NOT_EXIST\";\n            case Status.FreezeUpdateFileHashDoesNotMatch:\n                return \"FREEZE_UPDATE_FILE_HASH_DOES_NOT_MATCH\";\n            case Status.NoUpgradeHasBeenPrepared:\n                return \"NO_UPGRADE_HAS_BEEN_PREPARED\";\n            case Status.NoFreezeIsScheduled:\n                return \"NO_FREEZE_IS_SCHEDULED\";\n            case Status.UpdateFileHashChangedSincePrepareUpgrade:\n                return \"UPDATE_FILE_HASH_CHANGED_SINCE_PREPARE_UPGRADE\";\n            case Status.FreezeStartTimeMustBeFuture:\n                return \"FREEZE_START_TIME_MUST_BE_FUTURE\";\n            case Status.PreparedUpdateFileIsImmutable:\n                return \"PREPARED_UPDATE_FILE_IS_IMMUTABLE\";\n            case Status.FreezeAlreadyScheduled:\n                return \"FREEZE_ALREADY_SCHEDULED\";\n            case Status.FreezeUpgradeInProgress:\n                return \"FREEZE_UPGRADE_IN_PROGRESS\";\n            case Status.UpdateFileIdDoesNotMatchPrepared:\n                return \"UPDATE_FILE_ID_DOES_NOT_MATCH_PREPARED\";\n            case Status.UpdateFileHashDoesNotMatchPrepared:\n                return \"UPDATE_FILE_HASH_DOES_NOT_MATCH_PREPARED\";\n            case Status.ConsensusGasExhausted:\n                return \"CONSENSUS_GAS_EXHAUSTED\";\n            case Status.RevertedSuccess:\n                return \"REVERTED_SUCCESS\";\n            case Status.MaxStorageInPriceRegimeHasBeenUsed:\n                return \"MAX_STORAGE_IN_PRICE_REGIME_HAS_BEEN_USED\";\n            case Status.InvalidAliasKey:\n                return \"INVALID_ALIAS_KEY\";\n            default:\n                return `UNKNOWN (${this._code})`;\n        }\n    }\n\n    /**\n     * @internal\n     * @param {number} code\n     * @returns {Status}\n     */\n    static _fromCode(code) {\n        switch (code) {\n            case 0:\n                return Status.Ok;\n            case 1:\n                return Status.InvalidTransaction;\n            case 2:\n                return Status.PayerAccountNotFound;\n            case 3:\n                return Status.InvalidNodeAccount;\n            case 4:\n                return Status.TransactionExpired;\n            case 5:\n                return Status.InvalidTransactionStart;\n            case 6:\n                return Status.InvalidTransactionDuration;\n            case 7:\n                return Status.InvalidSignature;\n            case 8:\n                return Status.MemoTooLong;\n            case 9:\n                return Status.InsufficientTxFee;\n            case 10:\n                return Status.InsufficientPayerBalance;\n            case 11:\n                return Status.DuplicateTransaction;\n            case 12:\n                return Status.Busy;\n            case 13:\n                return Status.NotSupported;\n            case 14:\n                return Status.InvalidFileId;\n            case 15:\n                return Status.InvalidAccountId;\n            case 16:\n                return Status.InvalidContractId;\n            case 17:\n                return Status.InvalidTransactionId;\n            case 18:\n                return Status.ReceiptNotFound;\n            case 19:\n                return Status.RecordNotFound;\n            case 20:\n                return Status.InvalidSolidityId;\n            case 21:\n                return Status.Unknown;\n            case 22:\n                return Status.Success;\n            case 23:\n                return Status.FailInvalid;\n            case 24:\n                return Status.FailFee;\n            case 25:\n                return Status.FailBalance;\n            case 26:\n                return Status.KeyRequired;\n            case 27:\n                return Status.BadEncoding;\n            case 28:\n                return Status.InsufficientAccountBalance;\n            case 29:\n                return Status.InvalidSolidityAddress;\n            case 30:\n                return Status.InsufficientGas;\n            case 31:\n                return Status.ContractSizeLimitExceeded;\n            case 32:\n                return Status.LocalCallModificationException;\n            case 33:\n                return Status.ContractRevertExecuted;\n            case 34:\n                return Status.ContractExecutionException;\n            case 35:\n                return Status.InvalidReceivingNodeAccount;\n            case 36:\n                return Status.MissingQueryHeader;\n            case 37:\n                return Status.AccountUpdateFailed;\n            case 38:\n                return Status.InvalidKeyEncoding;\n            case 39:\n                return Status.NullSolidityAddress;\n            case 40:\n                return Status.ContractUpdateFailed;\n            case 41:\n                return Status.InvalidQueryHeader;\n            case 42:\n                return Status.InvalidFeeSubmitted;\n            case 43:\n                return Status.InvalidPayerSignature;\n            case 44:\n                return Status.KeyNotProvided;\n            case 45:\n                return Status.InvalidExpirationTime;\n            case 46:\n                return Status.NoWaclKey;\n            case 47:\n                return Status.FileContentEmpty;\n            case 48:\n                return Status.InvalidAccountAmounts;\n            case 49:\n                return Status.EmptyTransactionBody;\n            case 50:\n                return Status.InvalidTransactionBody;\n            case 51:\n                return Status.InvalidSignatureTypeMismatchingKey;\n            case 52:\n                return Status.InvalidSignatureCountMismatchingKey;\n            case 53:\n                return Status.EmptyLiveHashBody;\n            case 54:\n                return Status.EmptyLiveHash;\n            case 55:\n                return Status.EmptyLiveHashKeys;\n            case 56:\n                return Status.InvalidLiveHashSize;\n            case 57:\n                return Status.EmptyQueryBody;\n            case 58:\n                return Status.EmptyLiveHashQuery;\n            case 59:\n                return Status.LiveHashNotFound;\n            case 60:\n                return Status.AccountIdDoesNotExist;\n            case 61:\n                return Status.LiveHashAlreadyExists;\n            case 62:\n                return Status.InvalidFileWacl;\n            case 63:\n                return Status.SerializationFailed;\n            case 64:\n                return Status.TransactionOversize;\n            case 65:\n                return Status.TransactionTooManyLayers;\n            case 66:\n                return Status.ContractDeleted;\n            case 67:\n                return Status.PlatformNotActive;\n            case 68:\n                return Status.KeyPrefixMismatch;\n            case 69:\n                return Status.PlatformTransactionNotCreated;\n            case 70:\n                return Status.InvalidRenewalPeriod;\n            case 71:\n                return Status.InvalidPayerAccountId;\n            case 72:\n                return Status.AccountDeleted;\n            case 73:\n                return Status.FileDeleted;\n            case 74:\n                return Status.AccountRepeatedInAccountAmounts;\n            case 75:\n                return Status.SettingNegativeAccountBalance;\n            case 76:\n                return Status.ObtainerRequired;\n            case 77:\n                return Status.ObtainerSameContractId;\n            case 78:\n                return Status.ObtainerDoesNotExist;\n            case 79:\n                return Status.ModifyingImmutableContract;\n            case 80:\n                return Status.FileSystemException;\n            case 81:\n                return Status.AutorenewDurationNotInRange;\n            case 82:\n                return Status.ErrorDecodingBytestring;\n            case 83:\n                return Status.ContractFileEmpty;\n            case 84:\n                return Status.ContractBytecodeEmpty;\n            case 85:\n                return Status.InvalidInitialBalance;\n            case 86:\n                return Status.InvalidReceiveRecordThreshold;\n            case 87:\n                return Status.InvalidSendRecordThreshold;\n            case 88:\n                return Status.AccountIsNotGenesisAccount;\n            case 89:\n                return Status.PayerAccountUnauthorized;\n            case 90:\n                return Status.InvalidFreezeTransactionBody;\n            case 91:\n                return Status.FreezeTransactionBodyNotFound;\n            case 92:\n                return Status.TransferListSizeLimitExceeded;\n            case 93:\n                return Status.ResultSizeLimitExceeded;\n            case 94:\n                return Status.NotSpecialAccount;\n            case 95:\n                return Status.ContractNegativeGas;\n            case 96:\n                return Status.ContractNegativeValue;\n            case 97:\n                return Status.InvalidFeeFile;\n            case 98:\n                return Status.InvalidExchangeRateFile;\n            case 99:\n                return Status.InsufficientLocalCallGas;\n            case 100:\n                return Status.EntityNotAllowedToDelete;\n            case 101:\n                return Status.AuthorizationFailed;\n            case 102:\n                return Status.FileUploadedProtoInvalid;\n            case 103:\n                return Status.FileUploadedProtoNotSavedToDisk;\n            case 104:\n                return Status.FeeScheduleFilePartUploaded;\n            case 105:\n                return Status.ExchangeRateChangeLimitExceeded;\n            case 106:\n                return Status.MaxContractStorageExceeded;\n            case 107:\n                return Status.TransferAccountSameAsDeleteAccount;\n            case 108:\n                return Status.TotalLedgerBalanceInvalid;\n            case 110:\n                return Status.ExpirationReductionNotAllowed;\n            case 111:\n                return Status.MaxGasLimitExceeded;\n            case 112:\n                return Status.MaxFileSizeExceeded;\n            case 113:\n                return Status.ReceiverSigRequired;\n            case 150:\n                return Status.InvalidTopicId;\n            case 155:\n                return Status.InvalidAdminKey;\n            case 156:\n                return Status.InvalidSubmitKey;\n            case 157:\n                return Status.Unauthorized;\n            case 158:\n                return Status.InvalidTopicMessage;\n            case 159:\n                return Status.InvalidAutorenewAccount;\n            case 160:\n                return Status.AutorenewAccountNotAllowed;\n            case 162:\n                return Status.TopicExpired;\n            case 163:\n                return Status.InvalidChunkNumber;\n            case 164:\n                return Status.InvalidChunkTransactionId;\n            case 165:\n                return Status.AccountFrozenForToken;\n            case 166:\n                return Status.TokensPerAccountLimitExceeded;\n            case 167:\n                return Status.InvalidTokenId;\n            case 168:\n                return Status.InvalidTokenDecimals;\n            case 169:\n                return Status.InvalidTokenInitialSupply;\n            case 170:\n                return Status.InvalidTreasuryAccountForToken;\n            case 171:\n                return Status.InvalidTokenSymbol;\n            case 172:\n                return Status.TokenHasNoFreezeKey;\n            case 173:\n                return Status.TransfersNotZeroSumForToken;\n            case 174:\n                return Status.MissingTokenSymbol;\n            case 175:\n                return Status.TokenSymbolTooLong;\n            case 176:\n                return Status.AccountKycNotGrantedForToken;\n            case 177:\n                return Status.TokenHasNoKycKey;\n            case 178:\n                return Status.InsufficientTokenBalance;\n            case 179:\n                return Status.TokenWasDeleted;\n            case 180:\n                return Status.TokenHasNoSupplyKey;\n            case 181:\n                return Status.TokenHasNoWipeKey;\n            case 182:\n                return Status.InvalidTokenMintAmount;\n            case 183:\n                return Status.InvalidTokenBurnAmount;\n            case 184:\n                return Status.TokenNotAssociatedToAccount;\n            case 185:\n                return Status.CannotWipeTokenTreasuryAccount;\n            case 186:\n                return Status.InvalidKycKey;\n            case 187:\n                return Status.InvalidWipeKey;\n            case 188:\n                return Status.InvalidFreezeKey;\n            case 189:\n                return Status.InvalidSupplyKey;\n            case 190:\n                return Status.MissingTokenName;\n            case 191:\n                return Status.TokenNameTooLong;\n            case 192:\n                return Status.InvalidWipingAmount;\n            case 193:\n                return Status.TokenIsImmutable;\n            case 194:\n                return Status.TokenAlreadyAssociatedToAccount;\n            case 195:\n                return Status.TransactionRequiresZeroTokenBalances;\n            case 196:\n                return Status.AccountIsTreasury;\n            case 197:\n                return Status.TokenIdRepeatedInTokenList;\n            case 198:\n                return Status.TokenTransferListSizeLimitExceeded;\n            case 199:\n                return Status.EmptyTokenTransferBody;\n            case 200:\n                return Status.EmptyTokenTransferAccountAmounts;\n            case 201:\n                return Status.InvalidScheduleId;\n            case 202:\n                return Status.ScheduleIsImmutable;\n            case 203:\n                return Status.InvalidSchedulePayerId;\n            case 204:\n                return Status.InvalidScheduleAccountId;\n            case 205:\n                return Status.NoNewValidSignatures;\n            case 206:\n                return Status.UnresolvableRequiredSigners;\n            case 207:\n                return Status.ScheduledTransactionNotInWhitelist;\n            case 208:\n                return Status.SomeSignaturesWereInvalid;\n            case 209:\n                return Status.TransactionIdFieldNotAllowed;\n            case 210:\n                return Status.IdenticalScheduleAlreadyCreated;\n            case 211:\n                return Status.InvalidZeroByteInString;\n            case 212:\n                return Status.ScheduleAlreadyDeleted;\n            case 213:\n                return Status.ScheduleAlreadyExecuted;\n            case 214:\n                return Status.MessageSizeTooLarge;\n            case 215:\n                return Status.OperationRepeatedInBucketGroups;\n            case 216:\n                return Status.BucketCapacityOverflow;\n            case 217:\n                return Status.NodeCapacityNotSufficientForOperation;\n            case 218:\n                return Status.BucketHasNoThrottleGroups;\n            case 219:\n                return Status.ThrottleGroupHasZeroOpsPerSec;\n            case 220:\n                return Status.SuccessButMissingExpectedOperation;\n            case 221:\n                return Status.UnparseableThrottleDefinitions;\n            case 222:\n                return Status.InvalidThrottleDefinitions;\n            case 223:\n                return Status.AccountExpiredAndPendingRemoval;\n            case 224:\n                return Status.InvalidTokenMaxSupply;\n            case 225:\n                return Status.InvalidTokenNftSerialNumber;\n            case 226:\n                return Status.InvalidNftId;\n            case 227:\n                return Status.MetadataTooLong;\n            case 228:\n                return Status.BatchSizeLimitExceeded;\n            case 229:\n                return Status.InvalidQueryRange;\n            case 230:\n                return Status.FractionDividesByZero;\n            case 231:\n                return Status.InsufficientPayerBalanceForCustomFee;\n            case 232:\n                return Status.CustomFeesListTooLong;\n            case 233:\n                return Status.InvalidCustomFeeCollector;\n            case 234:\n                return Status.InvalidTokenIdInCustomFees;\n            case 235:\n                return Status.TokenNotAssociatedToFeeCollector;\n            case 236:\n                return Status.TokenMaxSupplyReached;\n            case 237:\n                return Status.SenderDoesNotOwnNftSerialNo;\n            case 238:\n                return Status.CustomFeeNotFullySpecified;\n            case 239:\n                return Status.CustomFeeMustBePositive;\n            case 240:\n                return Status.TokenHasNoFeeScheduleKey;\n            case 241:\n                return Status.CustomFeeOutsideNumericRange;\n            case 242:\n                return Status.RoyaltyFractionCannotExceedOne;\n            case 243:\n                return Status.FractionalFeeMaxAmountLessThanMinAmount;\n            case 244:\n                return Status.CustomScheduleAlreadyHasNoFees;\n            case 245:\n                return Status.CustomFeeDenominationMustBeFungibleCommon;\n            case 246:\n                return Status.CustomFractionalFeeOnlyAllowedForFungibleCommon;\n            case 247:\n                return Status.InvalidCustomFeeScheduleKey;\n            case 248:\n                return Status.InvalidTokenMintMetadata;\n            case 249:\n                return Status.InvalidTokenBurnMetadata;\n            case 250:\n                return Status.CurrentTreasuryStillOwnsNfts;\n            case 251:\n                return Status.AccountStillOwnsNfts;\n            case 252:\n                return Status.TreasuryMustOwnBurnedNft;\n            case 253:\n                return Status.AccountDoesNotOwnWipedNft;\n            case 254:\n                return Status.AccountAmountTransfersOnlyAllowedForFungibleCommon;\n            case 255:\n                return Status.MaxNftsInPriceRegimeHaveBeenMinted;\n            case 256:\n                return Status.PayerAccountDeleted;\n            case 257:\n                return Status.CustomFeeChargingExceededMaxRecursionDepth;\n            case 258:\n                return Status.CustomFeeChargingExceededMaxAccountAmounts;\n            case 259:\n                return Status.InsufficientSenderAccountBalanceForCustomFee;\n            case 260:\n                return Status.SerialNumberLimitReached;\n            case 261:\n                return Status.CustomRoyaltyFeeOnlyAllowedForNonFungibleUnique;\n            case 262:\n                return Status.NoRemainingAutomaticAssociations;\n            case 263:\n                return Status.ExistingAutomaticAssociationsExceedGivenLimit;\n            case 264:\n                return Status.RequestedNumAutomaticAssociationsExceedsAssociationLimit;\n            case 265:\n                return Status.TokenIsPaused;\n            case 266:\n                return Status.TokenHasNoPauseKey;\n            case 267:\n                return Status.InvalidPauseKey;\n            case 268:\n                return Status.FreezeUpdateFileDoesNotExist;\n            case 269:\n                return Status.FreezeUpdateFileHashDoesNotMatch;\n            case 270:\n                return Status.NoUpgradeHasBeenPrepared;\n            case 271:\n                return Status.NoFreezeIsScheduled;\n            case 272:\n                return Status.UpdateFileHashChangedSincePrepareUpgrade;\n            case 273:\n                return Status.FreezeStartTimeMustBeFuture;\n            case 274:\n                return Status.PreparedUpdateFileIsImmutable;\n            case 275:\n                return Status.FreezeAlreadyScheduled;\n            case 276:\n                return Status.FreezeUpgradeInProgress;\n            case 277:\n                return Status.UpdateFileIdDoesNotMatchPrepared;\n            case 278:\n                return Status.UpdateFileHashDoesNotMatchPrepared;\n            case 279:\n                return Status.ConsensusGasExhausted;\n            case 280:\n                return Status.RevertedSuccess;\n            case 281:\n                return Status.MaxStorageInPriceRegimeHasBeenUsed;\n            case 282:\n                return Status.InvalidAliasKey;\n            default:\n                throw new Error(\n                    `(BUG) Status.fromCode() does not handle code: ${code}`\n                );\n        }\n    }\n\n    /**\n     * @returns {proto.ResponseCodeEnum}\n     */\n    valueOf() {\n        return this._code;\n    }\n}\n\n/**\n * The transaction passed the precheck validations.\n */\nStatus.Ok = new Status(0);\n\n/**\n * For any error not handled by specific error codes listed below.\n */\nStatus.InvalidTransaction = new Status(1);\n\n/**\n * Payer account does not exist.\n */\nStatus.PayerAccountNotFound = new Status(2);\n\n/**\n * Node Account provided does not match the node account of the node the transaction was submitted\n * to.\n */\nStatus.InvalidNodeAccount = new Status(3);\n\n/**\n * Pre-Check error when TransactionValidStart + transactionValidDuration is less than current\n * consensus time.\n */\nStatus.TransactionExpired = new Status(4);\n\n/**\n * Transaction start time is greater than current consensus time\n */\nStatus.InvalidTransactionStart = new Status(5);\n\n/**\n * valid transaction duration is a positive non zero number that does not exceed 120 seconds\n */\nStatus.InvalidTransactionDuration = new Status(6);\n\n/**\n * The transaction signature is not valid\n */\nStatus.InvalidSignature = new Status(7);\n\n/**\n * Transaction memo size exceeded 100 bytes\n */\nStatus.MemoTooLong = new Status(8);\n\n/**\n * The fee provided in the transaction is insufficient for this type of transaction\n */\nStatus.InsufficientTxFee = new Status(9);\n\n/**\n * The payer account has insufficient cryptocurrency to pay the transaction fee\n */\nStatus.InsufficientPayerBalance = new Status(10);\n\n/**\n * This transaction ID is a duplicate of one that was submitted to this node or reached consensus\n * in the last 180 seconds (receipt period)\n */\nStatus.DuplicateTransaction = new Status(11);\n\n/**\n * If API is throttled out\n */\nStatus.Busy = new Status(12);\n\n/**\n * The API is not currently supported\n */\nStatus.NotSupported = new Status(13);\n\n/**\n * The file id is invalid or does not exist\n */\nStatus.InvalidFileId = new Status(14);\n\n/**\n * The account id is invalid or does not exist\n */\nStatus.InvalidAccountId = new Status(15);\n\n/**\n * The contract id is invalid or does not exist\n */\nStatus.InvalidContractId = new Status(16);\n\n/**\n * Transaction id is not valid\n */\nStatus.InvalidTransactionId = new Status(17);\n\n/**\n * Receipt for given transaction id does not exist\n */\nStatus.ReceiptNotFound = new Status(18);\n\n/**\n * Record for given transaction id does not exist\n */\nStatus.RecordNotFound = new Status(19);\n\n/**\n * The solidity id is invalid or entity with this solidity id does not exist\n */\nStatus.InvalidSolidityId = new Status(20);\n\n/**\n * The responding node has submitted the transaction to the network. Its final status is still\n * unknown.\n */\nStatus.Unknown = new Status(21);\n\n/**\n * The transaction succeeded\n */\nStatus.Success = new Status(22);\n\n/**\n * There was a system error and the transaction failed because of invalid request parameters.\n */\nStatus.FailInvalid = new Status(23);\n\n/**\n * There was a system error while performing fee calculation, reserved for future.\n */\nStatus.FailFee = new Status(24);\n\n/**\n * There was a system error while performing balance checks, reserved for future.\n */\nStatus.FailBalance = new Status(25);\n\n/**\n * Key not provided in the transaction body\n */\nStatus.KeyRequired = new Status(26);\n\n/**\n * Unsupported algorithm/encoding used for keys in the transaction\n */\nStatus.BadEncoding = new Status(27);\n\n/**\n * When the account balance is not sufficient for the transfer\n */\nStatus.InsufficientAccountBalance = new Status(28);\n\n/**\n * During an update transaction when the system is not able to find the Users Solidity address\n */\nStatus.InvalidSolidityAddress = new Status(29);\n\n/**\n * Not enough gas was supplied to execute transaction\n */\nStatus.InsufficientGas = new Status(30);\n\n/**\n * contract byte code size is over the limit\n */\nStatus.ContractSizeLimitExceeded = new Status(31);\n\n/**\n * local execution (query) is requested for a function which changes state\n */\nStatus.LocalCallModificationException = new Status(32);\n\n/**\n * Contract REVERT OPCODE executed\n */\nStatus.ContractRevertExecuted = new Status(33);\n\n/**\n * For any contract execution related error not handled by specific error codes listed above.\n */\nStatus.ContractExecutionException = new Status(34);\n\n/**\n * In Query validation, account with +ve(amount) value should be Receiving node account, the\n * receiver account should be only one account in the list\n */\nStatus.InvalidReceivingNodeAccount = new Status(35);\n\n/**\n * Header is missing in Query request\n */\nStatus.MissingQueryHeader = new Status(36);\n\n/**\n * The update of the account failed\n */\nStatus.AccountUpdateFailed = new Status(37);\n\n/**\n * Provided key encoding was not supported by the system\n */\nStatus.InvalidKeyEncoding = new Status(38);\n\n/**\n * null solidity address\n */\nStatus.NullSolidityAddress = new Status(39);\n\n/**\n * update of the contract failed\n */\nStatus.ContractUpdateFailed = new Status(40);\n\n/**\n * the query header is invalid\n */\nStatus.InvalidQueryHeader = new Status(41);\n\n/**\n * Invalid fee submitted\n */\nStatus.InvalidFeeSubmitted = new Status(42);\n\n/**\n * Payer signature is invalid\n */\nStatus.InvalidPayerSignature = new Status(43);\n\n/**\n * The keys were not provided in the request.\n */\nStatus.KeyNotProvided = new Status(44);\n\n/**\n * Expiration time provided in the transaction was invalid.\n */\nStatus.InvalidExpirationTime = new Status(45);\n\n/**\n * WriteAccess Control Keys are not provided for the file\n */\nStatus.NoWaclKey = new Status(46);\n\n/**\n * The contents of file are provided as empty.\n */\nStatus.FileContentEmpty = new Status(47);\n\n/**\n * The crypto transfer credit and debit do not sum equal to 0\n */\nStatus.InvalidAccountAmounts = new Status(48);\n\n/**\n * Transaction body provided is empty\n */\nStatus.EmptyTransactionBody = new Status(49);\n\n/**\n * Invalid transaction body provided\n */\nStatus.InvalidTransactionBody = new Status(50);\n\n/**\n * the type of key (base ed25519 key, KeyList, or ThresholdKey) does not match the type of\n * signature (base ed25519 signature, SignatureList, or ThresholdKeySignature)\n */\nStatus.InvalidSignatureTypeMismatchingKey = new Status(51);\n\n/**\n * the number of key (KeyList, or ThresholdKey) does not match that of signature (SignatureList,\n * or ThresholdKeySignature). e.g. if a keyList has 3 base keys, then the corresponding\n * signatureList should also have 3 base signatures.\n */\nStatus.InvalidSignatureCountMismatchingKey = new Status(52);\n\n/**\n * the livehash body is empty\n */\nStatus.EmptyLiveHashBody = new Status(53);\n\n/**\n * the livehash data is missing\n */\nStatus.EmptyLiveHash = new Status(54);\n\n/**\n * the keys for a livehash are missing\n */\nStatus.EmptyLiveHashKeys = new Status(55);\n\n/**\n * the livehash data is not the output of a SHA-384 digest\n */\nStatus.InvalidLiveHashSize = new Status(56);\n\n/**\n * the query body is empty\n */\nStatus.EmptyQueryBody = new Status(57);\n\n/**\n * the crypto livehash query is empty\n */\nStatus.EmptyLiveHashQuery = new Status(58);\n\n/**\n * the livehash is not present\n */\nStatus.LiveHashNotFound = new Status(59);\n\n/**\n * the account id passed has not yet been created.\n */\nStatus.AccountIdDoesNotExist = new Status(60);\n\n/**\n * the livehash already exists for a given account\n */\nStatus.LiveHashAlreadyExists = new Status(61);\n\n/**\n * File WACL keys are invalid\n */\nStatus.InvalidFileWacl = new Status(62);\n\n/**\n * Serialization failure\n */\nStatus.SerializationFailed = new Status(63);\n\n/**\n * The size of the Transaction is greater than transactionMaxBytes\n */\nStatus.TransactionOversize = new Status(64);\n\n/**\n * The Transaction has more than 50 levels\n */\nStatus.TransactionTooManyLayers = new Status(65);\n\n/**\n * Contract is marked as deleted\n */\nStatus.ContractDeleted = new Status(66);\n\n/**\n * the platform node is either disconnected or lagging behind.\n */\nStatus.PlatformNotActive = new Status(67);\n\n/**\n * one public key matches more than one prefixes on the signature map\n */\nStatus.KeyPrefixMismatch = new Status(68);\n\n/**\n * transaction not created by platform due to large backlog\n */\nStatus.PlatformTransactionNotCreated = new Status(69);\n\n/**\n * auto renewal period is not a positive number of seconds\n */\nStatus.InvalidRenewalPeriod = new Status(70);\n\n/**\n * the response code when a smart contract id is passed for a crypto API request\n */\nStatus.InvalidPayerAccountId = new Status(71);\n\n/**\n * the account has been marked as deleted\n */\nStatus.AccountDeleted = new Status(72);\n\n/**\n * the file has been marked as deleted\n */\nStatus.FileDeleted = new Status(73);\n\n/**\n * same accounts repeated in the transfer account list\n */\nStatus.AccountRepeatedInAccountAmounts = new Status(74);\n\n/**\n * attempting to set negative balance value for crypto account\n */\nStatus.SettingNegativeAccountBalance = new Status(75);\n\n/**\n * when deleting smart contract that has crypto balance either transfer account or transfer smart\n * contract is required\n */\nStatus.ObtainerRequired = new Status(76);\n\n/**\n * when deleting smart contract that has crypto balance you can not use the same contract id as\n * transferContractId as the one being deleted\n */\nStatus.ObtainerSameContractId = new Status(77);\n\n/**\n * transferAccountId or transferContractId specified for contract delete does not exist\n */\nStatus.ObtainerDoesNotExist = new Status(78);\n\n/**\n * attempting to modify (update or delete a immutable smart contract, i.e. one created without a\n * admin key)\n */\nStatus.ModifyingImmutableContract = new Status(79);\n\n/**\n * Unexpected exception thrown by file system functions\n */\nStatus.FileSystemException = new Status(80);\n\n/**\n * the duration is not a subset of [MINIMUM_AUTORENEW_DURATION,MAXIMUM_AUTORENEW_DURATION]\n */\nStatus.AutorenewDurationNotInRange = new Status(81);\n\n/**\n * Decoding the smart contract binary to a byte array failed. Check that the input is a valid hex\n * string.\n */\nStatus.ErrorDecodingBytestring = new Status(82);\n\n/**\n * File to create a smart contract was of length zero\n */\nStatus.ContractFileEmpty = new Status(83);\n\n/**\n * Bytecode for smart contract is of length zero\n */\nStatus.ContractBytecodeEmpty = new Status(84);\n\n/**\n * Attempt to set negative initial balance\n */\nStatus.InvalidInitialBalance = new Status(85);\n\n/**\n * [Deprecated]. attempt to set negative receive record threshold\n */\nStatus.InvalidReceiveRecordThreshold = new Status(86);\n\n/**\n * [Deprecated]. attempt to set negative send record threshold\n */\nStatus.InvalidSendRecordThreshold = new Status(87);\n\n/**\n * Special Account Operations should be performed by only Genesis account, return this code if it\n * is not Genesis Account\n */\nStatus.AccountIsNotGenesisAccount = new Status(88);\n\n/**\n * The fee payer account doesn't have permission to submit such Transaction\n */\nStatus.PayerAccountUnauthorized = new Status(89);\n\n/**\n * FreezeTransactionBody is invalid\n */\nStatus.InvalidFreezeTransactionBody = new Status(90);\n\n/**\n * FreezeTransactionBody does not exist\n */\nStatus.FreezeTransactionBodyNotFound = new Status(91);\n\n/**\n * Exceeded the number of accounts (both from and to) allowed for crypto transfer list\n */\nStatus.TransferListSizeLimitExceeded = new Status(92);\n\n/**\n * Smart contract result size greater than specified maxResultSize\n */\nStatus.ResultSizeLimitExceeded = new Status(93);\n\n/**\n * The payer account is not a special account(account 0.0.55)\n */\nStatus.NotSpecialAccount = new Status(94);\n\n/**\n * Negative gas was offered in smart contract call\n */\nStatus.ContractNegativeGas = new Status(95);\n\n/**\n * Negative value / initial balance was specified in a smart contract call / create\n */\nStatus.ContractNegativeValue = new Status(96);\n\n/**\n * Failed to update fee file\n */\nStatus.InvalidFeeFile = new Status(97);\n\n/**\n * Failed to update exchange rate file\n */\nStatus.InvalidExchangeRateFile = new Status(98);\n\n/**\n * Payment tendered for contract local call cannot cover both the fee and the gas\n */\nStatus.InsufficientLocalCallGas = new Status(99);\n\n/**\n * Entities with Entity ID below 1000 are not allowed to be deleted\n */\nStatus.EntityNotAllowedToDelete = new Status(100);\n\n/**\n * Violating one of these rules: 1) treasury account can update all entities below 0.0.1000, 2)\n * account 0.0.50 can update all entities from 0.0.51 - 0.0.80, 3) Network Function Master Account\n * A/c 0.0.50 - Update all Network Function accounts & perform all the Network Functions listed\n * below, 4) Network Function Accounts: i) A/c 0.0.55 - Update Address Book files (0.0.101/102),\n * ii) A/c 0.0.56 - Update Fee schedule (0.0.111), iii) A/c 0.0.57 - Update Exchange Rate\n * (0.0.112).\n */\nStatus.AuthorizationFailed = new Status(101);\n\n/**\n * Fee Schedule Proto uploaded but not valid (append or update is required)\n */\nStatus.FileUploadedProtoInvalid = new Status(102);\n\n/**\n * Fee Schedule Proto uploaded but not valid (append or update is required)\n */\nStatus.FileUploadedProtoNotSavedToDisk = new Status(103);\n\n/**\n * Fee Schedule Proto File Part uploaded\n */\nStatus.FeeScheduleFilePartUploaded = new Status(104);\n\n/**\n * The change on Exchange Rate exceeds Exchange_Rate_Allowed_Percentage\n */\nStatus.ExchangeRateChangeLimitExceeded = new Status(105);\n\n/**\n * Contract permanent storage exceeded the currently allowable limit\n */\nStatus.MaxContractStorageExceeded = new Status(106);\n\n/**\n * Transfer Account should not be same as Account to be deleted\n */\nStatus.TransferAccountSameAsDeleteAccount = new Status(107);\n\nStatus.TotalLedgerBalanceInvalid = new Status(108);\n/**\n * The expiration date/time on a smart contract may not be reduced\n */\nStatus.ExpirationReductionNotAllowed = new Status(110);\n\n/**\n * Gas exceeded currently allowable gas limit per transaction\n */\nStatus.MaxGasLimitExceeded = new Status(111);\n\n/**\n * File size exceeded the currently allowable limit\n */\nStatus.MaxFileSizeExceeded = new Status(112);\n\n/**\n * When a valid signature is not provided for operations on account with receiverSigRequired=true\n */\nStatus.ReceiverSigRequired = new Status(113);\n\n/**\n * The Topic ID specified is not in the system.\n */\nStatus.InvalidTopicId = new Status(150);\n\n/**\n * A provided admin key was invalid.\n */\nStatus.InvalidAdminKey = new Status(155);\n\n/**\n * A provided submit key was invalid.\n */\nStatus.InvalidSubmitKey = new Status(156);\n\n/**\n * An attempted operation was not authorized (ie - a deleteTopic for a topic with no adminKey).\n */\nStatus.Unauthorized = new Status(157);\n\n/**\n * A ConsensusService message is empty.\n */\nStatus.InvalidTopicMessage = new Status(158);\n\n/**\n * The autoRenewAccount specified is not a valid, active account.\n */\nStatus.InvalidAutorenewAccount = new Status(159);\n\n/**\n * An adminKey was not specified on the topic, so there must not be an autoRenewAccount.\n */\nStatus.AutorenewAccountNotAllowed = new Status(160);\n\n/**\n * The topic has expired, was not automatically renewed, and is in a 7 day grace period before the\n * topic will be deleted unrecoverably. This error response code will not be returned until\n * autoRenew functionality is supported by HAPI.\n */\nStatus.TopicExpired = new Status(162);\n\n/**\n * chunk number must be from 1 to total (chunks) inclusive.\n */\nStatus.InvalidChunkNumber = new Status(163);\n\n/**\n * For every chunk, the payer account that is part of initialTransactionID must match the Payer\n * Account of this transaction. The entire initialTransactionID should match the transactionID of\n * the first chunk, but this is not checked or enforced by Hedera except when the chunk number is 1.\n */\nStatus.InvalidChunkTransactionId = new Status(164);\n\n/**\n * Account is frozen and cannot transact with the token\n */\nStatus.AccountFrozenForToken = new Status(165);\n\n/**\n * An involved account already has more than <tt>tokens.maxPerAccount</tt> associations with\n * non-deleted tokens.\n */\nStatus.TokensPerAccountLimitExceeded = new Status(166);\n\n/**\n * The token is invalid or does not exist\n */\nStatus.InvalidTokenId = new Status(167);\n\n/**\n * Invalid token decimals\n */\nStatus.InvalidTokenDecimals = new Status(168);\n\n/**\n * Invalid token initial supply\n */\nStatus.InvalidTokenInitialSupply = new Status(169);\n\n/**\n * Treasury Account does not exist or is deleted\n */\nStatus.InvalidTreasuryAccountForToken = new Status(170);\n\n/**\n * Token Symbol is not UTF-8 capitalized alphabetical string\n */\nStatus.InvalidTokenSymbol = new Status(171);\n\n/**\n * Freeze key is not set on token\n */\nStatus.TokenHasNoFreezeKey = new Status(172);\n\n/**\n * Amounts in transfer list are not net zero\n */\nStatus.TransfersNotZeroSumForToken = new Status(173);\n\n/**\n * A token symbol was not provided\n */\nStatus.MissingTokenSymbol = new Status(174);\n\n/**\n * The provided token symbol was too long\n */\nStatus.TokenSymbolTooLong = new Status(175);\n\n/**\n * KYC must be granted and account does not have KYC granted\n */\nStatus.AccountKycNotGrantedForToken = new Status(176);\n\n/**\n * KYC key is not set on token\n */\nStatus.TokenHasNoKycKey = new Status(177);\n\n/**\n * Token balance is not sufficient for the transaction\n */\nStatus.InsufficientTokenBalance = new Status(178);\n\n/**\n * Token transactions cannot be executed on deleted token\n */\nStatus.TokenWasDeleted = new Status(179);\n\n/**\n * Supply key is not set on token\n */\nStatus.TokenHasNoSupplyKey = new Status(180);\n\n/**\n * Wipe key is not set on token\n */\nStatus.TokenHasNoWipeKey = new Status(181);\n\n/**\n * The requested token mint amount would cause an invalid total supply\n */\nStatus.InvalidTokenMintAmount = new Status(182);\n\n/**\n * The requested token burn amount would cause an invalid total supply\n */\nStatus.InvalidTokenBurnAmount = new Status(183);\n\n/**\n * A required token-account relationship is missing\n */\nStatus.TokenNotAssociatedToAccount = new Status(184);\n\n/**\n * The target of a wipe operation was the token treasury account\n */\nStatus.CannotWipeTokenTreasuryAccount = new Status(185);\n\n/**\n * The provided KYC key was invalid.\n */\nStatus.InvalidKycKey = new Status(186);\n\n/**\n * The provided wipe key was invalid.\n */\nStatus.InvalidWipeKey = new Status(187);\n\n/**\n * The provided freeze key was invalid.\n */\nStatus.InvalidFreezeKey = new Status(188);\n\n/**\n * The provided supply key was invalid.\n */\nStatus.InvalidSupplyKey = new Status(189);\n\n/**\n * Token Name is not provided\n */\nStatus.MissingTokenName = new Status(190);\n\n/**\n * Token Name is too long\n */\nStatus.TokenNameTooLong = new Status(191);\n\n/**\n * The provided wipe amount must not be negative, zero or bigger than the token holder balance\n */\nStatus.InvalidWipingAmount = new Status(192);\n\n/**\n * Token does not have Admin key set, thus update/delete transactions cannot be performed\n */\nStatus.TokenIsImmutable = new Status(193);\n\n/**\n * An <tt>associateToken</tt> operation specified a token already associated to the account\n */\nStatus.TokenAlreadyAssociatedToAccount = new Status(194);\n\n/**\n * An attempted operation is invalid until all token balances for the target account are zero\n */\nStatus.TransactionRequiresZeroTokenBalances = new Status(195);\n\n/**\n * An attempted operation is invalid because the account is a treasury\n */\nStatus.AccountIsTreasury = new Status(196);\n\n/**\n * Same TokenIDs present in the token list\n */\nStatus.TokenIdRepeatedInTokenList = new Status(197);\n\n/**\n * Exceeded the number of token transfers (both from and to) allowed for token transfer list\n */\nStatus.TokenTransferListSizeLimitExceeded = new Status(198);\n\n/**\n * TokenTransfersTransactionBody has no TokenTransferList\n */\nStatus.EmptyTokenTransferBody = new Status(199);\n\n/**\n * TokenTransfersTransactionBody has a TokenTransferList with no AccountAmounts\n */\nStatus.EmptyTokenTransferAccountAmounts = new Status(200);\n\n/**\n * The Scheduled entity does not exist; or has now expired, been deleted, or been executed\n */\nStatus.InvalidScheduleId = new Status(201);\n\n/**\n * The Scheduled entity cannot be modified. Admin key not set\n */\nStatus.ScheduleIsImmutable = new Status(202);\n\n/**\n * The provided Scheduled Payer does not exist\n */\nStatus.InvalidSchedulePayerId = new Status(203);\n\n/**\n * The Schedule Create Transaction TransactionID account does not exist\n */\nStatus.InvalidScheduleAccountId = new Status(204);\n\n/**\n * The provided sig map did not contain any new valid signatures from required signers of the\n * scheduled transaction\n */\nStatus.NoNewValidSignatures = new Status(205);\n\n/**\n * The required signers for a scheduled transaction cannot be resolved, for example because they do\n * not exist or have been deleted\n */\nStatus.UnresolvableRequiredSigners = new Status(206);\n\n/**\n * Only whitelisted transaction types may be scheduled\n */\nStatus.ScheduledTransactionNotInWhitelist = new Status(207);\n\n/**\n * At least one of the signatures in the provided sig map did not represent a valid signature for\n * any required signer\n */\nStatus.SomeSignaturesWereInvalid = new Status(208);\n\n/**\n * The scheduled field in the TransactionID may not be set to true\n */\nStatus.TransactionIdFieldNotAllowed = new Status(209);\n\n/**\n * A schedule already exists with the same identifying fields of an attempted ScheduleCreate (that\n * is, all fields other than scheduledPayerAccountID)\n */\nStatus.IdenticalScheduleAlreadyCreated = new Status(210);\n\n/**\n * A string field in the transaction has a UTF-8 encoding with the prohibited zero byte\n */\nStatus.InvalidZeroByteInString = new Status(211);\n\n/**\n * A schedule being signed or deleted has already been deleted\n */\nStatus.ScheduleAlreadyDeleted = new Status(212);\n\n/**\n * A schedule being signed or deleted has already been executed\n */\nStatus.ScheduleAlreadyExecuted = new Status(213);\n\n/**\n * ConsensusSubmitMessage request's message size is larger than allowed.\n */\nStatus.MessageSizeTooLarge = new Status(214);\n\n/**\n * An operation was assigned to more than one throttle group in a given bucket\n */\nStatus.OperationRepeatedInBucketGroups = new Status(215);\n\n/**\n * The capacity needed to satisfy all opsPerSec groups in a bucket overflowed a signed 8-byte\n * integral type\n */\nStatus.BucketCapacityOverflow = new Status(216);\n\n/**\n * Given the network size in the address book, the node-level capacity for an operation would never\n * be enough to accept a single request; usually means a bucket burstPeriod should be increased\n */\nStatus.NodeCapacityNotSufficientForOperation = new Status(217);\n\n/**\n * A bucket was defined without any throttle groups\n */\nStatus.BucketHasNoThrottleGroups = new Status(218);\n\n/**\n * A throttle group was granted zero opsPerSec\n */\nStatus.ThrottleGroupHasZeroOpsPerSec = new Status(219);\n\n/**\n * The throttle definitions file was updated, but some supported operations were not assigned a\n * bucket\n */\nStatus.SuccessButMissingExpectedOperation = new Status(220);\n\n/**\n * The new contents for the throttle definitions system file were not valid protobuf\n */\nStatus.UnparseableThrottleDefinitions = new Status(221);\n\n/**\n * The new throttle definitions system file were invalid, and no more specific error could be\n * divined\n */\nStatus.InvalidThrottleDefinitions = new Status(222);\n\n/**\n * The transaction references an account which has passed its expiration without renewal funds\n * available, and currently remains in the ledger only because of the grace period given to expired\n * entities\n */\nStatus.AccountExpiredAndPendingRemoval = new Status(223);\n\n/**\n * Invalid token max supply\n */\nStatus.InvalidTokenMaxSupply = new Status(224);\n\n/**\n * Invalid token nft serial number\n */\nStatus.InvalidTokenNftSerialNumber = new Status(225);\n\n/**\n * Invalid nft id\n */\nStatus.InvalidNftId = new Status(226);\n\n/**\n * Nft metadata is too long\n */\nStatus.MetadataTooLong = new Status(227);\n\n/**\n * Repeated operations count exceeds the limit\n */\nStatus.BatchSizeLimitExceeded = new Status(228);\n\n/**\n * The range of data to be gathered is out of the set boundaries\n */\nStatus.InvalidQueryRange = new Status(229);\n\n/**\n * A custom fractional fee set a denominator of zero\n */\nStatus.FractionDividesByZero = new Status(230);\n\n/**\n * The transaction payer could not afford a custom fee\n */\nStatus.InsufficientPayerBalanceForCustomFee = new Status(231);\n\n/**\n * More than 10 custom fees were specified\n */\nStatus.CustomFeesListTooLong = new Status(232);\n\n/**\n * Any of the feeCollector accounts for customFees is invalid\n */\nStatus.InvalidCustomFeeCollector = new Status(233);\n\n/**\n * Any of the token Ids in customFees is invalid\n */\nStatus.InvalidTokenIdInCustomFees = new Status(234);\n\n/**\n * Any of the token Ids in customFees are not associated to feeCollector\n */\nStatus.TokenNotAssociatedToFeeCollector = new Status(235);\n\n/**\n * A token cannot have more units minted due to its configured supply ceiling\n */\nStatus.TokenMaxSupplyReached = new Status(236);\n\n/**\n * The transaction attempted to move an NFT serial number from an account other than its owner\n */\nStatus.SenderDoesNotOwnNftSerialNo = new Status(237);\n\n/**\n * A custom fee schedule entry did not specify either a fixed or fractional fee\n */\nStatus.CustomFeeNotFullySpecified = new Status(238);\n\n/**\n * Only positive fees may be assessed at this time\n */\nStatus.CustomFeeMustBePositive = new Status(239);\n\n/**\n * Fee schedule key is not set on token\n */\nStatus.TokenHasNoFeeScheduleKey = new Status(240);\n\n/**\n * A fractional custom fee exceeded the range of a 64-bit signed integer\n */\nStatus.CustomFeeOutsideNumericRange = new Status(241);\n\n/**\n * A royalty cannot exceed the total fungible value exchanged for an NFT\n */\nStatus.RoyaltyFractionCannotExceedOne = new Status(242);\n\n/**\n * Each fractional custom fee must have its maximum_amount, if specified, at least its\n * minimum_amount\n */\nStatus.FractionalFeeMaxAmountLessThanMinAmount = new Status(243);\n\n/**\n * A fee schedule update tried to clear the custom fees from a token whose fee schedule was already\n * empty\n */\nStatus.CustomScheduleAlreadyHasNoFees = new Status(244);\n\n/**\n * Only tokens of type FUNGIBLE_COMMON can be used to as fee schedule denominations\n */\nStatus.CustomFeeDenominationMustBeFungibleCommon = new Status(245);\n\n/**\n * Only tokens of type FUNGIBLE_COMMON can have fractional fees\n */\nStatus.CustomFractionalFeeOnlyAllowedForFungibleCommon = new Status(246);\n\n/**\n * The provided custom fee schedule key was invalid\n */\nStatus.InvalidCustomFeeScheduleKey = new Status(247);\n\n/**\n * The requested token mint metadata was invalid\n */\nStatus.InvalidTokenMintMetadata = new Status(248);\n\n/**\n * The requested token burn metadata was invalid\n */\nStatus.InvalidTokenBurnMetadata = new Status(249);\n\n/**\n * The treasury for a unique token cannot be changed until it owns no NFTs\n */\nStatus.CurrentTreasuryStillOwnsNfts = new Status(250);\n\n/**\n * An account cannot be dissociated from a unique token if it owns NFTs for the token\n */\nStatus.AccountStillOwnsNfts = new Status(251);\n\n/**\n * A NFT can only be burned when owned by the unique token's treasury\n */\nStatus.TreasuryMustOwnBurnedNft = new Status(252);\n\n/**\n * An account did not own the NFT to be wiped\n */\nStatus.AccountDoesNotOwnWipedNft = new Status(253);\n\n/**\n * An AccountAmount token transfers list referenced a token type other than FUNGIBLE_COMMON\n */\nStatus.AccountAmountTransfersOnlyAllowedForFungibleCommon = new Status(254);\n\n/**\n * All the NFTs allowed in the current price regime have already been minted\n */\nStatus.MaxNftsInPriceRegimeHaveBeenMinted = new Status(255);\n\n/**\n * The payer account has been marked as deleted\n */\nStatus.PayerAccountDeleted = new Status(256);\n\n/**\n * The reference chain of custom fees for a transferred token exceeded the maximum length of 2\n */\nStatus.CustomFeeChargingExceededMaxRecursionDepth = new Status(257);\n\n/**\n * More than 20 balance adjustments were to satisfy a CryptoTransfer and its implied custom fee\n * payments\n */\nStatus.CustomFeeChargingExceededMaxAccountAmounts = new Status(258);\n\n/**\n * The sender account in the token transfer transaction could not afford a custom fee\n */\nStatus.InsufficientSenderAccountBalanceForCustomFee = new Status(259);\n\n/**\n * Currently no more than 4,294,967,295 NFTs may be minted for a given unique token type\n */\nStatus.SerialNumberLimitReached = new Status(260);\n\n/**\n * Only tokens of type NON_FUNGIBLE_UNIQUE can have royalty fees\n */\nStatus.CustomRoyaltyFeeOnlyAllowedForNonFungibleUnique = new Status(261);\n\n/**\n * The account has reached the limit on the automatic associations count.\n */\nStatus.NoRemainingAutomaticAssociations = new Status(262);\n\n/**\n * Already existing automatic associations are more than the new maximum automatic associations.\n */\nStatus.ExistingAutomaticAssociationsExceedGivenLimit = new Status(263);\n\n/**\n * Cannot set the number of automatic associations for an account more than the\n * maximum allowed token associations <tt>tokens.maxPerAccount</tt>\n */\nStatus.RequestedNumAutomaticAssociationsExceedsAssociationLimit = new Status(\n    264\n);\n\n/**\n * Token is paused. This Token cannot be a part of any kind of Transaction until unpaused.\n */\nStatus.TokenIsPaused = new Status(265);\n\n/**\n * Pause key is not set on token\n */\nStatus.TokenHasNoPauseKey = new Status(266);\n\n/**\n * The provided pause key was invalid\n */\nStatus.InvalidPauseKey = new Status(267);\n\n/**\n * The update file in a freeze transaction body must exist.\n */\nStatus.FreezeUpdateFileDoesNotExist = new Status(268);\n\n/**\n * The hash of the update file in a freeze transaction body must match the in-memory hash.\n */\nStatus.FreezeUpdateFileHashDoesNotMatch = new Status(269);\n\n/**\n * A FREEZE_UPGRADE transaction was handled with no previous update prepared.\n */\nStatus.NoUpgradeHasBeenPrepared = new Status(270);\n\n/**\n * A FREEZE_ABORT transaction was handled with no scheduled freeze.\n */\nStatus.NoFreezeIsScheduled = new Status(271);\n\n/**\n * The update file hash when handling a FREEZE_UPGRADE transaction differs from the file\n * hash at the time of handling the PREPARE_UPGRADE transaction.\n */\nStatus.UpdateFileHashChangedSincePrepareUpgrade = new Status(272);\n\n/**\n * The given freeze start time was in the (consensus) past.\n */\nStatus.FreezeStartTimeMustBeFuture = new Status(273);\n\n/**\n * The prepared update file cannot be updated or appended until either the upgrade has\n * been completed, or a FREEZE_ABORT has been handled.\n */\nStatus.PreparedUpdateFileIsImmutable = new Status(274);\n\n/**\n * Once a freeze is scheduled, it must be aborted before any other type of freeze can\n * can be performed.\n */\nStatus.FreezeAlreadyScheduled = new Status(275);\n\n/**\n * If an NMT upgrade has been prepared, the following operation must be a FREEZE_UPGRADE.\n * (To issue a FREEZE_ONLY, submit a FREEZE_ABORT first.)\n */\nStatus.FreezeUpgradeInProgress = new Status(276);\n\n/**\n * If an NMT upgrade has been prepared, the subsequent FREEZE_UPGRADE transaction must\n * confirm the id of the file to be used in the upgrade.\n */\nStatus.UpdateFileIdDoesNotMatchPrepared = new Status(277);\n\n/**\n * If an NMT upgrade has been prepared, the subsequent FREEZE_UPGRADE transaction must\n * confirm the hash of the file to be used in the upgrade.\n */\nStatus.UpdateFileHashDoesNotMatchPrepared = new Status(278);\n\n/**\n * Consensus throttle did not allow execution of this transaction. System is throttled at\n * consensus level.\n */\nStatus.ConsensusGasExhausted = new Status(279);\n\n/**\n * A precompiled contract succeeded, but was later reverted.\n */\nStatus.RevertedSuccess = new Status(280);\n\n/**\n * All contract storage allocated to the current price regime has been consumed.\n */\nStatus.MaxStorageInPriceRegimeHasBeenUsed = new Status(281);\n\n/**\n * An alias used in a CryptoTransfer transaction is not the serialization of a primitive Key\n * message--that is, a Key with a single Ed25519 or ECDSA(secp256k1) public key and no\n * unknown protobuf fields.\n */\nStatus.InvalidAliasKey = new Status(282);\n", "import Long from \"long\";\nimport * as entity_id from \"../EntityIdHelper.js\";\nimport * as proto from \"@hashgraph/proto\";\nimport Key from \"../Key.js\";\nimport PublicKey from \"../PublicKey.js\";\nimport CACHE from \"../Cache.js\";\n\n/**\n * @typedef {import(\"../client/Client.js\").default<*, *>} Client\n */\n\nconst regex = new RegExp(\n    \"^(0|[1-9]\\\\d*)\\\\.(0|[1-9]\\\\d*)\\\\.((?:[0-9a-fA-F][0-9a-fA-F])+)$\"\n);\n\n/**\n * The ID for a crypto-currency account on Hedera.\n */\nexport default class AccountId {\n    /**\n     * @param {number | Long | import(\"../EntityIdHelper\").IEntityId} props\n     * @param {(number | Long)=} realm\n     * @param {(number | Long | PublicKey)=} numOrAliasKey\n     */\n    constructor(props, realm, numOrAliasKey) {\n        const result = entity_id.constructor(props, realm, numOrAliasKey);\n\n        this.shard = result.shard;\n        this.realm = result.realm;\n        this.num = result.num;\n        this.aliasKey = result.aliasKey;\n\n        /**\n         * @type {string | null}\n         */\n        this._checksum = null;\n    }\n\n    /**\n     * @param {string} text\n     * @returns {AccountId}\n     */\n    static fromString(text) {\n        try {\n            const result = entity_id.fromString(text);\n            const id = new AccountId(result);\n            id._checksum = result.checksum;\n            return id;\n        } catch {\n            let match = regex.exec(text);\n            if (match == null) {\n                throw new Error(\"invalid account ID\");\n            }\n\n            return new AccountId(\n                Long.fromString(match[1]),\n                Long.fromString(match[2]),\n                PublicKey.fromString(match[3])\n            );\n        }\n    }\n\n    /**\n     * @internal\n     * @param {proto.IAccountID} id\n     * @returns {AccountId}\n     */\n    static _fromProtobuf(id) {\n        let key =\n            id.alias != null && id.alias.length > 0\n                ? Key._fromProtobufKey(proto.Key.decode(id.alias))\n                : null;\n\n        if (!(key instanceof PublicKey)) {\n            key = null;\n        }\n\n        const account = key != null ? key : /** @type {Long} */ (id.accountNum);\n\n        return new AccountId(\n            id.shardNum != null ? id.shardNum : 0,\n            id.realmNum != null ? id.realmNum : 0,\n            account\n        );\n    }\n\n    /**\n     * @returns {string | null}\n     */\n    get checksum() {\n        return this._checksum;\n    }\n\n    /**\n     * @deprecated - Use `validateChecksum` instead\n     * @param {Client} client\n     */\n    validate(client) {\n        console.warn(\"Deprecated: Use `validateChecksum` instead\");\n        this.validateChecksum(client);\n    }\n\n    /**\n     * @param {Client} client\n     */\n    validateChecksum(client) {\n        if (this.aliasKey != null) {\n            throw new Error(\n                \"cannot calculate checksum with an account ID that has a aliasKey\"\n            );\n        }\n\n        entity_id.validateChecksum(\n            this.shard,\n            this.realm,\n            this.num,\n            this._checksum,\n            client\n        );\n    }\n\n    /**\n     * @param {Uint8Array} bytes\n     * @returns {AccountId}\n     */\n    static fromBytes(bytes) {\n        return AccountId._fromProtobuf(proto.AccountID.decode(bytes));\n    }\n\n    /**\n     * @param {string} address\n     * @returns {AccountId}\n     */\n    static fromSolidityAddress(address) {\n        return new AccountId(...entity_id.fromSolidityAddress(address));\n    }\n\n    /**\n     * @returns {string}\n     */\n    toSolidityAddress() {\n        return entity_id.toSolidityAddress([this.shard, this.realm, this.num]);\n    }\n\n    /**\n     * @internal\n     * @returns {proto.IAccountID}\n     */\n    _toProtobuf() {\n        return {\n            alias:\n                this.aliasKey != null\n                    ? proto.Key.encode(this.aliasKey._toProtobufKey()).finish()\n                    : null,\n            accountNum: this.num,\n            shardNum: this.shard,\n            realmNum: this.realm,\n        };\n    }\n\n    /**\n     * @returns {Uint8Array}\n     */\n    toBytes() {\n        return proto.AccountID.encode(this._toProtobuf()).finish();\n    }\n\n    /**\n     * @returns {string}\n     */\n    toString() {\n        const account =\n            this.aliasKey != null\n                ? this.aliasKey.toString()\n                : this.num.toString();\n\n        return `${this.shard.toString()}.${this.realm.toString()}.${account}`;\n    }\n\n    /**\n     * @param {Client} client\n     * @returns {string}\n     */\n    toStringWithChecksum(client) {\n        if (this.aliasKey != null) {\n            throw new Error(\n                \"cannot calculate checksum with an account ID that has a aliasKey\"\n            );\n        }\n\n        return entity_id.toStringWithChecksum(this.toString(), client);\n    }\n\n    /**\n     * @param {this} other\n     * @returns {boolean}\n     */\n    equals(other) {\n        let account = false;\n\n        if (this.aliasKey != null && other.aliasKey != null) {\n            account = this.aliasKey.equals(other.aliasKey);\n        } else if (this.aliasKey == null && other.aliasKey == null) {\n            account = this.num.eq(other.num);\n        }\n\n        return (\n            this.shard.eq(other.shard) && this.realm.eq(other.realm) && account\n        );\n    }\n\n    /**\n     * @returns {AccountId}\n     */\n    clone() {\n        const id = new AccountId(this);\n        id._checksum = this._checksum;\n        return id;\n    }\n\n    /**\n     * @param {AccountId} other\n     * @returns {number}\n     */\n    compare(other) {\n        let comparison = this.shard.compare(other.shard);\n        if (comparison != 0) {\n            return comparison;\n        }\n\n        comparison = this.realm.compare(other.realm);\n        if (comparison != 0) {\n            return comparison;\n        }\n\n        if (this.aliasKey != null && other.aliasKey != null) {\n            const t = this.aliasKey.toString();\n            const o = other.aliasKey.toString();\n\n            if (t > o) {\n                return 1;\n            } else if (t < o) {\n                return -1;\n            } else {\n                return 0;\n            }\n        } else if (this.aliasKey == null && other.aliasKey == null) {\n            return this.num.compare(other.num);\n        } else {\n            return 0;\n        }\n    }\n}\n\nCACHE.accountIdConstructor = (shard, realm, key) =>\n    new AccountId(shard, realm, key);\n", "import Long from \"long\";\nimport * as hex from \"./encoding/hex.js\";\nimport BadEntityIdError from \"./BadEntityIdError.js\";\nimport * as util from \"./util.js\";\nimport PublicKey from \"./PublicKey.js\";\n\n/**\n * @typedef {import(\"./client/Client.js\").default<*, *>} Client\n */\n\n/**\n * @typedef {object} IEntityId\n * @property {(PublicKey | null)=} aliasKey\n * @property {number | Long} num\n * @property {(number | Long)=} shard\n * @property {(number | Long)=} realm\n */\n\n/**\n * @typedef {object} IEntityIdResult\n * @property {Long} shard\n * @property {Long} realm\n * @property {Long} num\n * @property {(PublicKey | null)=} aliasKey\n */\n\n/**\n * @typedef {object} IEntityIdResultWithChecksum\n * @property {Long} shard\n * @property {Long} realm\n * @property {Long} num\n * @property {string | null} checksum\n * @property {PublicKey | null} aliasKey\n */\n\nconst regex = RegExp(\n    \"^(0|(?:[1-9]\\\\d*))\\\\.(0|(?:[1-9]\\\\d*))\\\\.(0|(?:[1-9]\\\\d*))(?:-([a-z]{5}))?$\"\n);\n\n/**\n * @param {number | Long | IEntityId} props\n * @param {(number | null | Long)=} realm\n * @param {(number | null | Long | PublicKey)=} numOrAliasKey\n * @returns {IEntityIdResult}\n */\nexport function constructor(props, realm, numOrAliasKey) {\n    let shard_ = Long.ZERO;\n    let realm_ = Long.ZERO;\n    let num_ = Long.ZERO;\n    let aliasKey_;\n\n    if (numOrAliasKey instanceof PublicKey) {\n        aliasKey_ = numOrAliasKey;\n    }\n\n    if (typeof props === \"number\" || Long.isLong(props)) {\n        if (realm == null || typeof realm === \"string\") {\n            num_ = Long.fromValue(props);\n        } else {\n            shard_ = Long.fromValue(props);\n            realm_ = Long.fromValue(realm);\n            num_ =\n                numOrAliasKey != null && !(numOrAliasKey instanceof PublicKey)\n                    ? Long.fromValue(numOrAliasKey)\n                    : Long.ZERO;\n        }\n    } else {\n        shard_ = Long.fromValue(props.shard != null ? props.shard : 0);\n        realm_ = Long.fromValue(props.realm != null ? props.realm : 0);\n        num_ = Long.fromValue(props.num != null ? props.num : 0);\n        aliasKey_ = props.aliasKey;\n    }\n\n    if (shard_.isNegative() || realm_.isNegative() || num_.isNegative()) {\n        throw new Error(\"negative numbers are not allowed in IDs\");\n    }\n\n    return {\n        shard: shard_,\n        realm: realm_,\n        num: num_,\n        aliasKey: aliasKey_,\n    };\n}\n\n/**\n * @param {[Long, Long, Long]} a\n * @param {[Long, Long, Long]} b\n * @returns {number}\n */\nexport function compare(a, b) {\n    let comparison = a[0].compare(b[0]);\n    if (comparison != 0) {\n        return comparison;\n    }\n\n    comparison = a[1].compare(b[1]);\n    if (comparison != 0) {\n        return comparison;\n    }\n\n    return a[2].compare(b[2]);\n}\n\n/**\n * @typedef {object} ParseAddressResult\n * @property {number} status\n * @property {Long} [num1]\n * @property {Long} [num2]\n * @property {Long} [num3]\n * @property {string} [correctChecksum]\n * @property {string} [givenChecksum]\n * @property {string} [noChecksumFormat]\n * @property {string} [withChecksumFormat]\n */\n\n/**\n * @param {string} text\n * @returns {IEntityIdResultWithChecksum}\n */\nexport function fromString(text) {\n    const [id, checksum] = text.split(\"-\");\n    const parts = id.split(\".\");\n\n    for (const part of parts) {\n        if (part === \"\") {\n            throw new Error(\"invalid format for entity ID\");\n        }\n    }\n\n    const components = parts.map(Number);\n\n    for (const component of components) {\n        if (Number.isNaN(component)) {\n            throw new Error(\"invalid format for entity ID\");\n        }\n    }\n\n    let shard = Long.ZERO;\n    let realm = Long.ZERO;\n    let num;\n\n    if (components.length === 1) {\n        num = Long.fromNumber(components[0]);\n    } else if (components.length === 3) {\n        shard = Long.fromNumber(components[0]);\n        realm = Long.fromNumber(components[1]);\n        num = Long.fromNumber(components[2]);\n    } else {\n        throw new Error(\"invalid format for entity ID\");\n    }\n\n    return {\n        shard,\n        realm,\n        num,\n        checksum,\n        aliasKey: null,\n    };\n}\n\n/**\n * @param {string} address\n * @returns {[Long, Long, Long]}\n */\nexport function fromSolidityAddress(address) {\n    const addr = address.startsWith(\"0x\")\n        ? hex.decode(address.slice(2))\n        : hex.decode(address);\n\n    if (addr.length !== 20) {\n        throw new Error(`Invalid hex encoded solidity address length:\n                expected length 40, got length ${address.length}`);\n    }\n\n    const shard = Long.fromBytesBE([0, 0, 0, 0, ...addr.slice(0, 4)]);\n    const realm = Long.fromBytesBE(Array.from(addr.slice(4, 12)));\n    const num = Long.fromBytesBE(Array.from(addr.slice(12, 20)));\n\n    return [shard, realm, num];\n}\n\n/**\n * @param {[Long,Long,Long] | [number,number,number]} address\n * @returns {string}\n */\nexport function toSolidityAddress(address) {\n    const buffer = new Uint8Array(20);\n    const view = util.safeView(buffer);\n    const [shard, realm, num] = address;\n\n    view.setUint32(0, util.convertToNumber(shard));\n    view.setUint32(8, util.convertToNumber(realm));\n    view.setUint32(16, util.convertToNumber(num));\n\n    return hex.encode(buffer);\n}\n\n/**\n * Parse the address string addr and return an object with the results (8 fields).\n * The first four fields are numbers, which could be implemented as signed 32 bit\n * integers, and the last four are strings.\n *\n *   status;  //the status of the parsed address\n *            //   0 = syntax error\n *            //   1 = an invalid with-checksum address (bad checksum)\n *            //   2 = a valid no-checksum address\n *            //   3 = a valid with-checksum address\n *   num1;    //the 3 numbers in the address, such as 1.2.3, with leading zeros removed\n *   num2;\n *   num3;\n *   correctchecksum;    //the correct checksum\n *   givenChecksum;      //the checksum in the address that was parsed\n *   noChecksumFormat;   //the address in no-checksum format\n *   withChecksumFormat; //the address in with-checksum format\n *\n * @param {string} ledgerId\n * @param {string} addr\n * @returns {ParseAddressResult}\n */\nexport function _parseAddress(ledgerId, addr) {\n    let match = regex.exec(addr);\n    if (match === null) {\n        let result = { status: 0 }; // When status == 0, the rest of the fields should be ignored\n        return result;\n    }\n    let a = [\n        Long.fromString(match[1]),\n        Long.fromString(match[2]),\n        Long.fromString(match[3]),\n    ];\n    let ad = `${a[0].toString()}.${a[1].toString()}.${a[2].toString()}`;\n    let c = _checksum(ledgerId, ad);\n    let s = match[4] === undefined ? 2 : c == match[4] ? 3 : 1; //the status\n    let result = {\n        status: s,\n        num1: a[0],\n        num2: a[1],\n        num3: a[2],\n        givenChecksum: match[4],\n        correctChecksum: c,\n        noChecksumFormat: ad,\n        withChecksumFormat: `${ad}-${c}`,\n    };\n    return result;\n}\n\n/**\n * Given an address like \"0.0.123\", return a checksum like \"laujm\"\n *\n * @param {string} ledgerId\n * @param {string} addr\n * @returns {string}\n */\nexport function _checksum(ledgerId, addr) {\n    let answer = \"\";\n    let d = []; // Digits with 10 for \".\", so if addr == \"0.0.123\" then d == [0, 10, 0, 10, 1, 2, 3]\n    let s0 = 0; // Sum of even positions (mod 11)\n    let s1 = 0; // Sum of odd positions (mod 11)\n    let s = 0; // Weighted sum of all positions (mod p3)\n    let sh = 0; // Hash of the ledger ID\n    let c = 0; // The checksum, as a single number\n    const p3 = 26 * 26 * 26; // 3 digits in base 26\n    const p5 = 26 * 26 * 26 * 26 * 26; // 5 digits in base 26\n    const ascii_a = \"a\".charCodeAt(0); // 97\n    const m = 1000003; // Min prime greater than a million. Used for the final permutation.\n    const w = 31; // Sum s of digit values weights them by powers of w. Should be coprime to p5.\n\n    let id = ledgerId + \"000000000000\";\n    let h = [];\n    for (var i = 0; i < id.length; i += 2) {\n        h.push(parseInt(id.substring(i, i + 2), 16));\n    }\n    for (let i = 0; i < addr.length; i++) {\n        d.push(addr[i] === \".\" ? 10 : parseInt(addr[i], 10));\n    }\n    for (let i = 0; i < d.length; i++) {\n        s = (w * s + d[i]) % p3;\n        if (i % 2 === 0) {\n            s0 = (s0 + d[i]) % 11;\n        } else {\n            s1 = (s1 + d[i]) % 11;\n        }\n    }\n    for (let i = 0; i < h.length; i++) {\n        sh = (w * sh + h[i]) % p5;\n    }\n    c = ((((addr.length % 5) * 11 + s0) * 11 + s1) * p3 + s + sh) % p5;\n    c = (c * m) % p5;\n\n    for (let i = 0; i < 5; i++) {\n        answer = String.fromCharCode(ascii_a + (c % 26)) + answer;\n        c /= 26;\n    }\n\n    return answer;\n}\n\n/**\n * @param {Long} shard\n * @param {Long} realm\n * @param {Long} num\n * @param {string | null} checksum\n * @param {Client} client\n */\nexport function validateChecksum(shard, realm, num, checksum, client) {\n    if (client._network._ledgerId == null || checksum == null) {\n        return;\n    }\n\n    const expectedChecksum = _checksum(\n        client._network._ledgerId,\n        `${shard.toString()}.${realm.toString()}.${num.toString()}`\n    );\n\n    if (checksum != expectedChecksum) {\n        throw new BadEntityIdError(\n            shard,\n            realm,\n            num,\n            checksum,\n            expectedChecksum\n        );\n    }\n}\n\n/**\n * @param {string} string\n * @param {Client} client\n * @returns {string}\n */\nexport function toStringWithChecksum(string, client) {\n    if (client._network._ledgerId == null) {\n        throw new Error(\n            \"cannot calculate checksum with a client that does not contain a recognzied ledger ID\"\n        );\n    }\n\n    const checksum = _checksum(client._network._ledgerId, string);\n\n    return `${string}-${checksum}`;\n}\n", "/**\n * @type {string[]}\n */\nconst byteToHex = [];\n\nfor (let n = 0; n <= 0xff; n += 1) {\n    byteToHex.push(n.toString(16).padStart(2, \"0\"));\n}\n\n/**\n * @param {Uint8Array} data\n * @returns {string}\n */\nexport function encode(data) {\n    let string = \"\";\n\n    for (const byte of data) {\n        string += byteToHex[byte];\n    }\n\n    return string;\n}\n\n/**\n * @param {string} text\n * @returns {Uint8Array}\n */\nexport function decode(text) {\n    const str = text.startsWith(\"0x\") ? text.substring(2) : text;\n    const result = str.match(/.{1,2}/gu);\n\n    return new Uint8Array(\n        (result == null ? [] : result).map((byte) => parseInt(byte, 16))\n    );\n}\n", "export default class BadEntityIdException extends Error {\n    /**\n     * @param {Long} shard\n     * @param {Long} realm\n     * @param {Long} num\n     * @param {string} presentChecksum\n     * @param {string} expectedChecksum\n     */\n    constructor(shard, realm, num, presentChecksum, expectedChecksum) {\n        super(\n            `Entity ID ${shard.toString()}.${realm.toString()}.${num.toString()}-${presentChecksum} was incorrect.`\n        );\n\n        this.name = \"BadEntityIdException\";\n\n        this.shard = shard;\n        this.realm = realm;\n        this.num = num;\n        this.presentChecksum = presentChecksum;\n        this.expectedChecksum = expectedChecksum;\n    }\n}\n", "import BigNumber from \"bignumber.js\";\nimport Long from \"long\";\n\n/**\n * Utility Error Messages\n */\nexport const REQUIRE_NON_NULL_ERROR = \"This value cannot be null | undefined.\";\nexport const REQUIRE_STRING_ERROR = \"This value must be a string.\";\nexport const REQUIRE_UINT8ARRAY_ERROR = \"This value must be a Uint8Array.\";\nexport const REQUIRE_STRING_OR_UINT8ARRAY_ERROR =\n    \"This value must be a string or Uint8Array.\";\nexport const REQUIRE_NUMBER_ERROR = \"This value must be a Number.\";\nexport const REQUIRE_BIGNUMBER_ERROR = \"This value must be a BigNumber.\";\nexport const REQUIRE_ARRAY_ERROR = \"The provided variable must be an Array.\";\nexport const REQUIRE_LONG_ERROR = \"This value must be a Long.\";\n\nexport const REQUIRE_TYPE_ERROR =\n    \"The provided variables are not matching types.\";\n\nexport const FUNCTION_CONVERT_TO_BIGNUMBER_ERROR =\n    \"This value must be a String, Number, or BigNumber to be converted.\";\nexport const FUNCTION_CONVERT_TO_NUMBER_ERROR =\n    \"This value must be a String, Number, or BigNumber to be converted.\";\nexport const FUNCTION_CONVERT_TO_NUMBER_PARSE_ERROR =\n    \"Unable to parse given variable. Returns NaN.\";\n\n//Soft Checks\n\n/**\n * Takes any param and returns false if null or undefined.\n *\n * @param {any | null | undefined} variable\n * @returns {boolean}\n */\nexport function isNonNull(variable) {\n    if (variable == null || variable == undefined) {\n        return false;\n    } else {\n        return true;\n    }\n}\n\n/**\n * Takes any param and returns true if param variable and type are the same.\n *\n * @param {any | null | undefined} variable\n * @param {any | null | undefined} type\n * @returns {boolean}\n */\nexport function isType(variable, type) {\n    return typeof variable == typeof type;\n}\n\n/**\n * Takes any param and returns true if param is not null and of type Uint8Array.\n *\n * @param {any | null | undefined} variable\n * @returns {boolean}\n */\nexport function isUint8Array(variable) {\n    return isNonNull(variable) && variable instanceof Uint8Array;\n}\n\n/**\n * Takes any param and returns true if param is not null and of type Number.\n *\n * @param {any | null | undefined} variable\n * @returns {boolean}\n */\nexport function isNumber(variable) {\n    return (\n        isNonNull(variable) &&\n        (typeof variable == \"number\" || variable instanceof Number)\n    );\n}\n\n/**\n * Takes any param and returns true if param is not null and of type BigNumber.\n *\n * @param {any | null | undefined} variable\n * @returns {boolean}\n */\nexport function isBigNumber(variable) {\n    return isNonNull(variable) && variable instanceof BigNumber;\n}\n\n/**\n * Takes any param and returns true if param is not null and of type BigNumber.\n *\n * @param {any | null | undefined} variable\n * @returns {boolean}\n */\nexport function isLong(variable) {\n    return isNonNull(variable) && variable instanceof Long;\n}\n\n/**\n * Takes any param and returns true if param is not null and of type string.\n *\n * @param {any | null | undefined} variable\n * @returns {boolean}\n */\nexport function isString(variable) {\n    return isNonNull(variable) && typeof variable == \"string\";\n}\n\n/**\n * Takes any param and returns true if param is not null and type string or Uint8Array.\n *\n * @param {any | null | undefined} variable\n * @returns {boolean}\n */\nexport function isStringOrUint8Array(variable) {\n    return (\n        isNonNull(variable) && (isString(variable) || isUint8Array(variable))\n    );\n}\n\n//Requires\n\n/**\n * Takes any param and throws custom error if null or undefined.\n *\n * @param {any} variable\n * @returns {object}\n */\nexport function requireNonNull(variable) {\n    if (!isNonNull(variable)) {\n        throw new Error(REQUIRE_NON_NULL_ERROR);\n    } else {\n        // eslint-disable-next-line @typescript-eslint/no-unsafe-return\n        return variable;\n    }\n}\n\n/**\n * Takes any param and throws custom error if params are not same type.\n *\n * @param {any | null | undefined} variable\n * @param {any | null | undefined} type\n * @returns {object}\n */\nexport function requireType(variable, type) {\n    if (!isType(variable, type)) {\n        throw new Error(REQUIRE_TYPE_ERROR);\n    } else {\n        // eslint-disable-next-line @typescript-eslint/no-unsafe-return\n        return variable;\n    }\n}\n\n/**\n * Takes any param and throws custom error if non BigNumber.\n *\n * @param {any | null | undefined} variable\n * @returns {BigNumber}\n */\nexport function requireBigNumber(variable) {\n    if (!isBigNumber(requireNonNull(variable))) {\n        throw new Error(REQUIRE_BIGNUMBER_ERROR);\n    } else {\n        // eslint-disable-next-line @typescript-eslint/no-unsafe-return\n        return /** @type {BigNumber} */ (variable);\n    }\n}\n\n/**\n * Takes any param and throws custom error if non BigNumber.\n *\n * @param {any | null | undefined} variable\n * @returns {Long}\n */\nexport function requireLong(variable) {\n    if (!isLong(requireNonNull(variable))) {\n        throw new Error(REQUIRE_LONG_ERROR);\n    } else {\n        // eslint-disable-next-line @typescript-eslint/no-unsafe-return\n        return /** @type {Long} */ (variable);\n    }\n}\n\n/**\n * Takes any param and throws custom error if non string.\n *\n * @param {any | null | undefined} variable\n * @returns {string}\n */\nexport function requireString(variable) {\n    if (!isString(requireNonNull(variable))) {\n        throw new Error(REQUIRE_STRING_ERROR);\n    } else {\n        // eslint-disable-next-line @typescript-eslint/no-unsafe-return\n        return /** @type {string} */ (variable);\n    }\n}\n\n/**\n * Takes any param and throws custom error if non Uint8Array.\n *\n * @param {any | null | undefined} variable\n * @returns {Uint8Array}\n */\nexport function requireUint8Array(variable) {\n    if (!isUint8Array(requireNonNull(variable))) {\n        throw new Error(REQUIRE_UINT8ARRAY_ERROR);\n    } else {\n        // eslint-disable-next-line @typescript-eslint/no-unsafe-return\n        return /** @type {Uint8Array} */ (variable);\n    }\n}\n\n/**\n * Takes any param and throws custom error if non Uint8Array.\n *\n * @param {any | null | undefined} variable\n * @returns {number}\n */\nexport function requireNumber(variable) {\n    if (!isNumber(requireNonNull(variable))) {\n        throw new Error(REQUIRE_NUMBER_ERROR);\n    } else {\n        // eslint-disable-next-line @typescript-eslint/no-unsafe-return\n        return /** @type {number} */ (variable);\n    }\n}\n\n/**\n * Takes any param and throws custom error if null or undefined and not a string or Uint8Array.\n *\n * @param {any | null | undefined} variable\n * @returns {string | Uint8Array}\n */\nexport function requireStringOrUint8Array(variable) {\n    if (isStringOrUint8Array(requireNonNull(variable))) {\n        // eslint-disable-next-line @typescript-eslint/no-unsafe-return\n        return /** @type {string | Uint8Array} */ (variable);\n    } else {\n        throw new Error(REQUIRE_STRING_OR_UINT8ARRAY_ERROR);\n    }\n}\n\n//Conversions\n\n/**\n * Converts number or string to BigNumber.\n *\n * @param {any | null | undefined} variable\n * @returns {BigNumber}\n */\nexport function convertToBigNumber(variable) {\n    requireNonNull(variable);\n    if (\n        isBigNumber(variable) ||\n        isString(variable) ||\n        isNumber(variable) ||\n        isLong(variable)\n    ) {\n        return new BigNumber(variable);\n    }\n    throw new Error(FUNCTION_CONVERT_TO_BIGNUMBER_ERROR);\n}\n\n/**\n * Converts Array of Numbers or Strings to Array of BigNumbers.\n *\n * @param {any | null | undefined} variable\n * @returns {Array<BigNumber>}\n */\nexport function convertToBigNumberArray(variable) {\n    if (variable instanceof Array) {\n        return /** @type {Array<BigNumber>} */ (\n            variable.map(convertToBigNumber)\n        );\n    } else {\n        throw new Error(REQUIRE_ARRAY_ERROR);\n    }\n}\n\n/**\n * @param {*} variable\n * @returns {number}\n */\nexport function convertToNumber(variable) {\n    requireNonNull(variable);\n    if (\n        isBigNumber(variable) ||\n        isString(variable) ||\n        isNumber(variable) ||\n        isLong(variable)\n    ) {\n        const num = parseInt(variable);\n        if (isNaN(num)) {\n            throw new Error(FUNCTION_CONVERT_TO_NUMBER_PARSE_ERROR);\n        } else {\n            return num;\n        }\n    } else {\n        throw new Error(FUNCTION_CONVERT_TO_NUMBER_ERROR);\n    }\n}\n\n/**\n * Creates a DataView on top of an Uint8Array that could be or not be pooled, ensuring that we don't get out of bounds.\n *\n * @param {Uint8Array} arr\n * @param {number | undefined} offset\n * @param {number | undefined} length\n * @returns {DataView}\n */\nexport function safeView(arr, offset = 0, length = arr.byteLength) {\n    if (!(Number.isInteger(offset) && offset >= 0))\n        throw new Error(\"Invalid offset!\");\n    if (!(Number.isInteger(length) && length >= 0))\n        throw new Error(\"Invalid length!\");\n    return new DataView(\n        arr.buffer,\n        arr.byteOffset + offset,\n        Math.min(length, arr.byteLength - offset)\n    );\n}\n", "import BigNumber from \"bignumber.js\";\n\n/**\n * @typedef {{low: number, high: number, unsigned: boolean}} LongObject\n * @typedef {import(\"long\")} Long\n */\n\n/**\n * @param {Long | number | string | LongObject | BigNumber} value\n * @returns {BigNumber}\n */\nexport function valueToLong(value) {\n    if (BigNumber.isBigNumber(value)) {\n        return value;\n    } else {\n        return new BigNumber(value.toString());\n    }\n}\n", "import BigNumber from \"bignumber.js\";\n\nexport default class HbarUnit {\n    /**\n     * @internal\n     * @param {string} name\n     * @param {string} symbol\n     * @param {BigNumber} tinybar\n     */\n    constructor(name, symbol, tinybar) {\n        /**\n         * @internal\n         * @readonly\n         */\n        this._name = name;\n\n        /**\n         * @internal\n         * @readonly\n         */\n        this._symbol = symbol;\n\n        /**\n         * @internal\n         * @readonly\n         */\n        this._tinybar = tinybar;\n\n        Object.freeze(this);\n    }\n\n    /**\n     * @param {string} unit\n     * @returns {HbarUnit}\n     */\n    static fromString(unit) {\n        switch (unit) {\n            case HbarUnit.Hbar._symbol:\n                return HbarUnit.Hbar;\n            case HbarUnit.Tinybar._symbol:\n                return HbarUnit.Tinybar;\n            case HbarUnit.Microbar._symbol:\n                return HbarUnit.Microbar;\n            case HbarUnit.Millibar._symbol:\n                return HbarUnit.Millibar;\n            case HbarUnit.Kilobar._symbol:\n                return HbarUnit.Kilobar;\n            case HbarUnit.Megabar._symbol:\n                return HbarUnit.Megabar;\n            case HbarUnit.Gigabar._symbol:\n                return HbarUnit.Gigabar;\n            default:\n                throw new Error(\"Unknown unit.\");\n        }\n    }\n}\n\nHbarUnit.Tinybar = new HbarUnit(\"tinybar\", \"t\u210F\", new BigNumber(1));\n\nHbarUnit.Microbar = new HbarUnit(\"microbar\", \"\u03BC\u210F\", new BigNumber(100));\n\nHbarUnit.Millibar = new HbarUnit(\"millibar\", \"m\u210F\", new BigNumber(100000));\n\nHbarUnit.Hbar = new HbarUnit(\"hbar\", \"\u210F\", new BigNumber(\"100000000\"));\n\nHbarUnit.Kilobar = new HbarUnit(\n    \"kilobar\",\n    \"k\u210F\",\n    new BigNumber(1000).multipliedBy(new BigNumber(\"100000000\"))\n);\n\nHbarUnit.Megabar = new HbarUnit(\n    \"megabar\",\n    \"M\u210F\",\n    new BigNumber(1000000).multipliedBy(new BigNumber(\"100000000\"))\n);\n\nHbarUnit.Gigabar = new HbarUnit(\n    \"gigabar\",\n    \"G\u210F\",\n    new BigNumber(\"1000000000\").multipliedBy(new BigNumber(\"100000000\"))\n);\n", "import BigNumber from \"bignumber.js\";\nimport { valueToLong } from \"./long.js\";\nimport HbarUnit from \"./HbarUnit.js\";\n\nimport Long from \"long\";\n\n/**\n * @typedef {import(\"./long.js\").LongObject} LongObject\n */\n\nexport default class Hbar {\n    /**\n     * @param {number | string | Long | LongObject | BigNumber} amount\n     * @param {HbarUnit=} unit\n     */\n    constructor(amount, unit = HbarUnit.Hbar) {\n        if (unit === HbarUnit.Tinybar) {\n            this._valueInTinybar = valueToLong(amount);\n        } else {\n            /** @type {BigNumber} */\n            let bigAmount;\n\n            if (Long.isLong(amount)) {\n                bigAmount = new BigNumber(amount.toString(10));\n            } else if (\n                BigNumber.isBigNumber(amount) ||\n                typeof amount === \"string\" ||\n                typeof amount === \"number\"\n            ) {\n                bigAmount = new BigNumber(amount);\n            } else {\n                bigAmount = new BigNumber(0);\n            }\n\n            /**\n             * @type {BigNumber}\n             */\n            this._valueInTinybar = bigAmount.multipliedBy(unit._tinybar);\n        }\n        if (!this._valueInTinybar.isInteger()) {\n            throw new Error(\"Hbar in tinybars contains decimals\");\n        }\n    }\n\n    /**\n     * @param {number | Long | BigNumber} amount\n     * @param {HbarUnit} unit\n     * @returns {Hbar}\n     */\n    static from(amount, unit) {\n        return new Hbar(amount, unit);\n    }\n\n    /**\n     * @param {number | Long | string | BigNumber} amount\n     * @returns {Hbar}\n     */\n    static fromTinybars(amount) {\n        if (typeof amount === \"string\") {\n            return this.fromString(amount, HbarUnit.Tinybar);\n        }\n        return new Hbar(amount, HbarUnit.Tinybar);\n    }\n\n    /**\n     * @param {string} str\n     * @param {HbarUnit=} unit\n     * @returns {Hbar}\n     */\n    static fromString(str, unit = HbarUnit.Hbar) {\n        const pattern = /^((?:\\+|-)?\\d+(?:\\.\\d+)?)(?: (t\u210F|\u03BC\u210F|m\u210F|\u210F|k\u210F|M\u210F|G\u210F))?$/;\n        if (pattern.test(str)) {\n            let [amount, symbol] = str.split(\" \");\n            if (symbol != null) {\n                unit = HbarUnit.fromString(symbol);\n            }\n            return new Hbar(new BigNumber(amount), unit);\n        } else {\n            throw new Error(\"invalid argument provided\");\n        }\n    }\n\n    /**\n     * @param {HbarUnit} unit\n     * @returns {BigNumber}\n     */\n    to(unit) {\n        return this._valueInTinybar.dividedBy(unit._tinybar);\n    }\n\n    /**\n     * @returns {BigNumber}\n     */\n    toBigNumber() {\n        return this.to(HbarUnit.Hbar);\n    }\n\n    /**\n     * @returns {Long}\n     */\n    toTinybars() {\n        return Long.fromValue(this._valueInTinybar.toFixed());\n    }\n\n    /**\n     * @returns {Hbar}\n     */\n    negated() {\n        return Hbar.fromTinybars(this._valueInTinybar.negated());\n    }\n\n    /**\n     * @param {HbarUnit=} unit\n     * @returns {string}\n     */\n    toString(unit) {\n        if (unit != null) {\n            return `${this._valueInTinybar\n                .dividedBy(unit._tinybar)\n                .toString()} ${unit._symbol}`;\n        }\n\n        if (\n            this._valueInTinybar.isLessThan(10000) &&\n            this._valueInTinybar.isGreaterThan(-10000)\n        ) {\n            return `${this._valueInTinybar.toFixed()} ${\n                HbarUnit.Tinybar._symbol\n            }`;\n        }\n\n        return `${this.to(HbarUnit.Hbar).toString()} ${HbarUnit.Hbar._symbol}`;\n    }\n}\n", "export default class GrpcStatus {\n    /**\n     * @hideconstructor\n     * @internal\n     * @param {number} code\n     */\n    constructor(code) {\n        /** @readonly */\n        this._code = code;\n\n        Object.freeze(this);\n    }\n\n    /**\n     * @internal\n     * @param {number} code\n     * @returns {GrpcStatus}\n     */\n    static _fromValue(code) {\n        switch (code) {\n            case 0:\n                return GrpcStatus.Ok;\n            case 1:\n                return GrpcStatus.Cancelled;\n            case 2:\n                return GrpcStatus.Unknown;\n            case 3:\n                return GrpcStatus.InvalidArgument;\n            case 4:\n                return GrpcStatus.DeadlineExceeded;\n            case 5:\n                return GrpcStatus.NotFound;\n            case 6:\n                return GrpcStatus.AlreadyExists;\n            case 7:\n                return GrpcStatus.PermissionDenied;\n            case 16:\n                return GrpcStatus.Unauthenticated;\n            case 8:\n                return GrpcStatus.ResourceExhausted;\n            case 9:\n                return GrpcStatus.FailedPrecondition;\n            case 10:\n                return GrpcStatus.Aborted;\n            case 11:\n                return GrpcStatus.OutOfRange;\n            case 12:\n                return GrpcStatus.Unimplemented;\n            case 13:\n                return GrpcStatus.Internal;\n            case 14:\n                return GrpcStatus.Unavailable;\n            case 15:\n                return GrpcStatus.DataLoss;\n            default:\n                throw new Error(\n                    \"(BUG) non-exhaustive GrpcStatus switch statement\"\n                );\n        }\n    }\n\n    /**\n     * @returns {string}\n     */\n    toString() {\n        switch (this) {\n            case GrpcStatus.Ok:\n                return \"OK\";\n            case GrpcStatus.Cancelled:\n                return \"CANCELLED\";\n            case GrpcStatus.Unknown:\n                return \"UNKNOWN\";\n            case GrpcStatus.InvalidArgument:\n                return \"INVALID_ARGUMENT\";\n            case GrpcStatus.DeadlineExceeded:\n                return \"DEADLINE_EXCEEDED\";\n            case GrpcStatus.NotFound:\n                return \"NOT_FOUND\";\n            case GrpcStatus.AlreadyExists:\n                return \"ALREADY_EXISTS\";\n            case GrpcStatus.PermissionDenied:\n                return \"PERMISSION_DENIED\";\n            case GrpcStatus.Unauthenticated:\n                return \"UNAUTHENTICATED\";\n            case GrpcStatus.ResourceExhausted:\n                return \"RESOURCE_EXHAUSTED\";\n            case GrpcStatus.FailedPrecondition:\n                return \"FAILED_PRECONDITION\";\n            case GrpcStatus.Aborted:\n                return \"ABORTED\";\n            case GrpcStatus.OutOfRange:\n                return \"OUT_OF_RANGE\";\n            case GrpcStatus.Unimplemented:\n                return \"UNIMPLEMENTED\";\n            case GrpcStatus.Internal:\n                return \"INTERNAL\";\n            case GrpcStatus.Unavailable:\n                return \"UNAVAILABLE\";\n            case GrpcStatus.DataLoss:\n                return \"DATA_LOSS\";\n\n            default:\n                return `UNKNOWN (${this._code})`;\n        }\n    }\n\n    /**\n     * @returns {number}\n     */\n    valueOf() {\n        return this._code;\n    }\n}\n\nGrpcStatus.Ok = new GrpcStatus(0);\nGrpcStatus.Cancelled = new GrpcStatus(1);\nGrpcStatus.Unknown = new GrpcStatus(2);\nGrpcStatus.InvalidArgument = new GrpcStatus(3);\nGrpcStatus.DeadlineExceeded = new GrpcStatus(4);\nGrpcStatus.NotFound = new GrpcStatus(5);\nGrpcStatus.AlreadyExists = new GrpcStatus(6);\nGrpcStatus.PermissionDenied = new GrpcStatus(7);\nGrpcStatus.Unauthenticated = new GrpcStatus(16);\nGrpcStatus.ResourceExhausted = new GrpcStatus(8);\nGrpcStatus.FailedPrecondition = new GrpcStatus(9);\nGrpcStatus.Aborted = new GrpcStatus(10);\nGrpcStatus.OutOfRange = new GrpcStatus(11);\nGrpcStatus.Unimplemented = new GrpcStatus(12);\nGrpcStatus.Internal = new GrpcStatus(13);\nGrpcStatus.Unavailable = new GrpcStatus(14);\nGrpcStatus.DataLoss = new GrpcStatus(15);\n", "import GrpcStatus from \"./GrpcStatus.js\";\n\n/**\n * Describes how the gRPC request failed.\n *\n * Exists in order for the Hedera JavaScript SDK to produce the same error type for gRPC errors regardless of\n * operating in node or the browser.\n *\n * Definition taken from <https://grpc.github.io/grpc/node/grpc.html#~ServiceError>.\n */\nexport default class GrpcServiceError extends Error {\n    /**\n     * @param {GrpcStatus} status\n     */\n    constructor(status) {\n        super(`gRPC service failed with status: ${status.toString()}`);\n\n        /**\n         * @readonly\n         */\n        this.status = status;\n\n        this.name = \"GrpcServiceError\";\n\n        if (typeof Error.captureStackTrace !== \"undefined\") {\n            Error.captureStackTrace(this, GrpcServiceError);\n        }\n    }\n\n    /**\n     * @param {Error & { code?: number; details?: string }} obj\n     * @returns {Error}\n     */\n    static _fromResponse(obj) {\n        if (obj.code != null && obj.details != null) {\n            const status = GrpcStatus._fromValue(obj.code);\n            const err = new GrpcServiceError(status);\n            err.message = obj.details;\n            return err;\n        } else {\n            return /** @type {Error} */ (obj);\n        }\n    }\n}\n", "import GrpcServiceError from \"./grpc/GrpcServiceError.js\";\nimport GrpcStatus from \"./grpc/GrpcStatus.js\";\n\n/**\n * @typedef {import(\"./account/AccountId.js\").default} AccountId\n * @typedef {import(\"./channel/Channel.js\").default} Channel\n * @typedef {import(\"./transaction/TransactionId.js\").default} TransactionId\n */\n\n/**\n * @enum {string}\n */\nexport const ExecutionState = {\n    Finished: \"Finished\",\n    Retry: \"Retry\",\n    Error: \"Error\",\n};\n\nexport const RST_STREAM = /\\brst[^0-9a-zA-Z]stream\\b/i;\n\n/**\n * @abstract\n * @internal\n * @template RequestT\n * @template ResponseT\n * @template OutputT\n */\nexport default class Executable {\n    constructor() {\n        /**\n         * The number of times we can retry the grpc call\n         *\n         * @private\n         * @type {number}\n         */\n        this._maxAttempts = 10;\n\n        /**\n         * The index of the next transaction to be executed.\n         *\n         * @protected\n         * @type {number}\n         */\n        this._nextNodeIndex = 0;\n\n        /**\n         * List of node account IDs for each transaction that has been\n         * built.\n         *\n         * @internal\n         * @type {AccountId[]}\n         */\n        this._nodeIds = [];\n\n        /** @type {number | null} */\n        this._minBackoff = null;\n\n        /** @type {number | null} */\n        this._maxBackoff = null;\n    }\n\n    /**\n     * @returns {?AccountId[]}\n     */\n    get nodeAccountIds() {\n        return this._nodeIds.length != 0 ? this._nodeIds : null;\n    }\n\n    /**\n     * @param {AccountId[]} nodeIds\n     * @returns {this}\n     */\n    setNodeAccountIds(nodeIds) {\n        this._nodeIds = nodeIds;\n\n        return this;\n    }\n\n    /**\n     * @deprecated\n     * @returns {number}\n     */\n    get maxRetries() {\n        console.warn(\"Deprecated: use maxAttempts instead\");\n        return this.maxAttempts;\n    }\n\n    /**\n     * @param {number} maxRetries\n     * @returns {this}\n     */\n    setMaxRetries(maxRetries) {\n        console.warn(\"Deprecated: use setMaxAttempts() instead\");\n        return this.setMaxAttempts(maxRetries);\n    }\n\n    /**\n     * @returns {number}\n     */\n    get maxAttempts() {\n        return this._maxAttempts;\n    }\n\n    /**\n     * @param {number} maxAttempts\n     * @returns {this}\n     */\n    setMaxAttempts(maxAttempts) {\n        this._maxAttempts = maxAttempts;\n\n        return this;\n    }\n\n    /**\n     * @param {number} minBackoff\n     * @returns {this}\n     */\n    setMinBackoff(minBackoff) {\n        if (minBackoff == null) {\n            throw new Error(\"minBackoff cannot be null.\");\n        } else if (this._maxBackoff != null && minBackoff > this._maxBackoff) {\n            throw new Error(\"minBackoff cannot be larger than maxBackoff.\");\n        }\n        this._minBackoff = minBackoff;\n        return this;\n    }\n\n    /**\n     * @returns {number | null}\n     */\n    get minBackoff() {\n        return this._minBackoff;\n    }\n\n    /**\n     * @param {?number} maxBackoff\n     * @returns {this}\n     */\n    setMaxBackoff(maxBackoff) {\n        if (maxBackoff == null) {\n            throw new Error(\"maxBackoff cannot be null.\");\n        } else if (this._minBackoff != null && maxBackoff < this._minBackoff) {\n            throw new Error(\"maxBackoff cannot be smaller than minBackoff.\");\n        }\n        this._maxBackoff = maxBackoff;\n        return this;\n    }\n\n    /**\n     * @returns {number | null}\n     */\n    get maxBackoff() {\n        return this._maxBackoff;\n    }\n\n    // /**\n    //  * @param {?number} minBackoff\n    //  * @param {?number} maxBackoff\n    //  * @returns {this}\n    //  */\n    // _setBackoff(minBackoff, maxBackoff) {\n    //     if (minBackoff == null) {\n    //         throw new Error(\"minBackoff cannot be null.\");\n    //     }\n    //     if (maxBackoff == null) {\n    //         throw new Error(\"maxBackoff cannot be null.\");\n    //     }\n    //     if (minBackoff > maxBackoff) {\n    //         throw new Error(\"minBackoff cannot be larger than maxBackoff.\");\n    //     }\n    //     this._minBackoff = minBackoff;\n    //     this._maxAttempts = maxBackoff;\n    //     return this;\n    // }\n\n    // /**\n    //  * @typedef {Object} Backoff\n    //  * @property {number | null} minBackoff\n    //  * @property {number | null} maxBackoff\n    //  * @returns {Backoff}\n    //  */\n    // get _backoff() {\n    //     return { minBackoff: this._minBackoff, maxBackoff: this._maxBackoff };\n    // }\n\n    /**\n     * @abstract\n     * @protected\n     * @param {import(\"./client/Client.js\").default<Channel, *>} client\n     * @returns {Promise<void>}\n     */\n    // eslint-disable-next-line @typescript-eslint/no-unused-vars\n    _beforeExecute(client) {\n        throw new Error(\"not implemented\");\n    }\n\n    /**\n     * @abstract\n     * @protected\n     * @returns {Promise<RequestT>}\n     */\n    _makeRequestAsync() {\n        throw new Error(\"not implemented\");\n    }\n\n    /**\n     * @abstract\n     * @internal\n     * @param {RequestT} request\n     * @param {ResponseT} response\n     * @returns {Error}\n     */\n    // eslint-disable-next-line @typescript-eslint/no-unused-vars\n    _mapStatusError(request, response) {\n        throw new Error(\"not implemented\");\n    }\n\n    /**\n     * @abstract\n     * @protected\n     * @param {ResponseT} response\n     * @param {AccountId} nodeAccountId\n     * @param {RequestT} request\n     * @returns {Promise<OutputT>}\n     */\n    // eslint-disable-next-line @typescript-eslint/no-unused-vars\n    _mapResponse(response, nodeAccountId, request) {\n        throw new Error(\"not implemented\");\n    }\n\n    /**\n     * @abstract\n     * @internal\n     * @param {Channel} channel\n     * @param {RequestT} request\n     * @returns {Promise<ResponseT>}\n     */\n    // eslint-disable-next-line @typescript-eslint/no-unused-vars\n    _execute(channel, request) {\n        throw new Error(\"not implemented\");\n    }\n\n    /**\n     * @abstract\n     * @protected\n     * @returns {AccountId}\n     */\n    _getNodeAccountId() {\n        throw new Error(\"not implemented\");\n    }\n\n    /**\n     * @abstract\n     * @protected\n     * @returns {TransactionId}\n     */\n    _getTransactionId() {\n        throw new Error(\"not implemented\");\n    }\n\n    /**\n     * @protected\n     * @returns {void}\n     */\n    _advanceRequest() {\n        // each time we move our cursor to the next transaction\n        // wrapping around to ensure we are cycling\n        this._nextNodeIndex = (this._nextNodeIndex + 1) % this._nodeIds.length;\n    }\n\n    /**\n     * @abstract\n     * @protected\n     * @param {RequestT} request\n     * @param {ResponseT} response\n     * @returns {ExecutionState}\n     */\n    // eslint-disable-next-line @typescript-eslint/no-unused-vars\n    _shouldRetry(request, response) {\n        throw new Error(\"not implemented\");\n    }\n\n    /**\n     * @protected\n     * @param {GrpcServiceError} error\n     * @returns {boolean}\n     */\n    _shouldRetryExceptionally(error) {\n        return (\n            error.status._code === GrpcStatus.Unavailable._code ||\n            error.status._code === GrpcStatus.ResourceExhausted._code ||\n            (error.status._code === GrpcStatus.Internal._code &&\n                RST_STREAM.test(error.message))\n        );\n    }\n\n    /**\n     * @template {Channel} ChannelT\n     * @template MirrorChannelT\n     * @param {import(\"./client/Client.js\").default<ChannelT, MirrorChannelT>} client\n     * @returns {Promise<OutputT>}\n     */\n    async execute(client) {\n        await this._beforeExecute(client);\n\n        if (this._maxBackoff == null) {\n            this._maxBackoff = client.maxBackoff;\n        }\n        if (this._minBackoff == null) {\n            this._minBackoff = client.minBackoff;\n        }\n\n        const maxAttempts =\n            client._maxAttempts != null\n                ? client._maxAttempts\n                : this._maxAttempts;\n\n        for (let attempt = 1 /* loop forever */; ; attempt += 1) {\n            const nodeAccountId = this._getNodeAccountId();\n            const node = client._network.getNode(nodeAccountId);\n\n            if (node == null) {\n                throw new Error(\n                    `NodeAccountId not recognized: ${nodeAccountId.toString()}`\n                );\n            }\n\n            const channel = node.getChannel();\n            const request = await this._makeRequestAsync();\n\n            // advance the internal index\n            // non-free queries and transactions map to more than 1 actual transaction and this will cause\n            // the next invocation of makeRequest to return the _next_ transaction\n            this._advanceRequest();\n\n            let response;\n\n            if (!node.isHealthy()) {\n                await node.wait();\n            }\n\n            try {\n                response = await this._execute(channel, request);\n            } catch (err) {\n                const error = GrpcServiceError._fromResponse(\n                    /** @type {Error} */ (err)\n                );\n\n                if (\n                    error instanceof GrpcServiceError &&\n                    this._shouldRetryExceptionally(error) &&\n                    attempt <= maxAttempts\n                ) {\n                    node.increaseDelay();\n                    continue;\n                }\n\n                throw err;\n            }\n\n            node.decreaseDelay();\n\n            switch (this._shouldRetry(request, response)) {\n                case ExecutionState.Retry:\n                    await delayForAttempt(\n                        attempt,\n                        this._minBackoff,\n                        this._maxBackoff\n                    );\n                    continue;\n                case ExecutionState.Finished:\n                    return this._mapResponse(response, nodeAccountId, request);\n                case ExecutionState.Error:\n                    throw this._mapStatusError(request, response);\n                default:\n                    throw new Error(\n                        \"(BUG) non-exhuastive switch statement for `ExecutionState`\"\n                    );\n            }\n        }\n    }\n}\n\n/**\n * @param {number} attempt\n * @param {number} minBackoff\n * @param {number} maxBackoff\n * @returns {Promise<void>}\n */\nfunction delayForAttempt(attempt, minBackoff, maxBackoff) {\n    // 0.1s, 0.2s, 0.4s, 0.8s, ...\n    const ms = Math.min(\n        Math.floor(minBackoff * Math.pow(2, attempt)),\n        maxBackoff\n    );\n    return new Promise((resolve) => setTimeout(resolve, ms));\n}\n", "import Long from \"long\";\n\n/**\n * @namespace proto\n * @typedef {import(\"@hashgraph/proto\").ITimestamp} proto.ITimestamp\n */\n\nconst MAX_NS = Long.fromNumber(1000000000);\n\nexport default class Timestamp {\n    /**\n     * @param {Long | number} seconds\n     * @param {Long | number} nanos\n     */\n    constructor(seconds, nanos) {\n        /**\n         * @readonly\n         * @type {Long}\n         */\n        this.seconds =\n            seconds instanceof Long ? seconds : Long.fromNumber(seconds);\n\n        /**\n         * @readonly\n         * @type {Long}\n         */\n        this.nanos = nanos instanceof Long ? nanos : Long.fromNumber(nanos);\n\n        Object.freeze(this);\n    }\n\n    /**\n     * @returns {Timestamp}\n     */\n    static generate() {\n        const jitter = Math.floor(Math.random() * 5000) + 8000;\n        const now = Date.now() - jitter;\n        const seconds = Math.floor(now / 1000);\n        const nanos =\n            Math.floor(now % 1000) * 1000000 +\n            Math.floor(Math.random() * 1000000);\n\n        return new Timestamp(seconds, nanos);\n    }\n\n    /**\n     * @param {string | number | Date} date\n     * @returns {Timestamp}\n     */\n    static fromDate(date) {\n        let ms;\n\n        if (typeof date === \"number\") {\n            ms = date;\n        } else if (typeof date === \"string\") {\n            ms = Date.parse(date);\n        } else if (date instanceof Date) {\n            ms = date.getTime();\n        } else {\n            throw new TypeError(\n                `invalid type '${typeof date}' for 'data', expected 'Date'`\n            );\n        }\n\n        const seconds = Math.floor(ms / 1000);\n        const nanos = Math.floor(ms % 1000) * 1000000;\n\n        return new Timestamp(seconds, nanos);\n    }\n\n    /**\n     * @returns {Date}\n     */\n    toDate() {\n        return new Date(\n            this.seconds.toInt() * 1000 +\n                Math.floor(this.nanos.toInt() / 1000000)\n        );\n    }\n\n    /**\n     * @param {Long | number} nanos\n     * @returns {Timestamp}\n     */\n    plusNanos(nanos) {\n        const ns = this.nanos.add(nanos);\n\n        return new Timestamp(this.seconds.add(ns.div(MAX_NS)), ns.mod(MAX_NS));\n    }\n\n    /**\n     * @internal\n     * @returns {proto.ITimestamp}\n     */\n    _toProtobuf() {\n        return {\n            seconds: this.seconds,\n            nanos: this.nanos.toInt(),\n        };\n    }\n\n    /**\n     * @internal\n     * @param {proto.ITimestamp} timestamp\n     * @returns {Timestamp}\n     */\n    static _fromProtobuf(timestamp) {\n        return new Timestamp(\n            timestamp.seconds instanceof Long\n                ? timestamp.seconds.toInt()\n                : timestamp.seconds != null\n                ? timestamp.seconds\n                : 0,\n\n            timestamp.nanos != null ? timestamp.nanos : 0\n        );\n    }\n\n    /**\n     * @returns {string}\n     */\n    toString() {\n        return `${this.seconds.toString()}.${this.nanos.toString()}`;\n    }\n\n    /**\n     * @param {Timestamp} other\n     * @returns {number}\n     */\n    compare(other) {\n        const comparison = this.seconds.compare(other.seconds);\n\n        if (comparison != 0) {\n            return comparison;\n        }\n\n        return this.nanos.compare(other.nanos);\n    }\n}\n", "import AccountId from \"../account/AccountId.js\";\nimport Timestamp from \"../Timestamp.js\";\nimport * as proto from \"@hashgraph/proto\";\nimport Long from \"long\";\n\n/**\n * The client-generated ID for a transaction.\n *\n * This is used for retrieving receipts and records for a transaction, for appending to a file\n * right after creating it, for instantiating a smart contract with bytecode in a file just created,\n * and internally by the network for detecting when duplicate transactions are submitted.\n */\nexport default class TransactionId {\n    /**\n     * Don't use this method directly.\n     * Use `TransactionId.[generate|withNonce|withValidStart]()` instead.\n     *\n     * @param {?AccountId} accountId\n     * @param {?Timestamp} validStart\n     * @param {?boolean} scheduled\n     * @param {?Long | number} nonce\n     */\n    constructor(accountId, validStart, scheduled = false, nonce = null) {\n        /**\n         * The Account ID that paid for this transaction.\n         *\n         * @readonly\n         */\n        this.accountId = accountId;\n\n        /**\n         * The time from when this transaction is valid.\n         *\n         * When a transaction is submitted there is additionally a validDuration (defaults to 120s)\n         * and together they define a time window that a transaction may be processed in.\n         *\n         * @readonly\n         */\n        this.validStart = validStart;\n\n        this.scheduled = scheduled;\n\n        this.nonce = null;\n        if (nonce != null) {\n            this.setNonce(nonce);\n        }\n\n        Object.freeze(this);\n    }\n\n    /**\n     * @param {Long | number} nonce\n     * @returns {TransactionId}\n     */\n    setNonce(nonce) {\n        this.nonce = typeof nonce === \"number\" ? Long.fromNumber(nonce) : nonce;\n        return this;\n    }\n\n    /**\n     * @param {AccountId} accountId\n     * @param {Timestamp} validStart\n     * @returns {TransactionId}\n     */\n    static withValidStart(accountId, validStart) {\n        return new TransactionId(accountId, validStart, null);\n    }\n\n    /**\n     * Generates a new transaction ID for the given account ID.\n     *\n     * Note that transaction IDs are made of the valid start of the transaction and the account\n     * that will be charged the transaction fees for the transaction.\n     *\n     * @param {AccountId | string} id\n     * @returns {TransactionId}\n     */\n    static generate(id) {\n        return new TransactionId(\n            typeof id === \"string\"\n                ? AccountId.fromString(id)\n                : new AccountId(id),\n            Timestamp.generate()\n        );\n    }\n\n    /**\n     * @param {string} wholeId\n     * @returns {TransactionId}\n     */\n    static fromString(wholeId) {\n        let account, seconds, nanos, isScheduled, nonce;\n        let rest;\n        // 1.1.1@5.4?scheduled/117\n\n        [account, rest] = wholeId.split(\"@\");\n        [seconds, rest] = rest.split(\".\");\n        if (rest.includes(\"?\")) {\n            [nanos, rest] = rest.split(\"?scheduled\");\n            isScheduled = true;\n            if (rest.includes(\"/\")) {\n                nonce = rest.replace(\"/\", \"\");\n            } else {\n                nonce = null;\n            }\n        } else if (rest.includes(\"/\")) {\n            [nanos, nonce] = rest.split(\"/\");\n            isScheduled = false;\n        } else {\n            nanos = rest;\n        }\n\n        return new TransactionId(\n            AccountId.fromString(account),\n            new Timestamp(Long.fromValue(seconds), Long.fromValue(nanos)),\n            isScheduled,\n            nonce != null ? Long.fromString(nonce) : null\n        );\n    }\n\n    /**\n     * @param {boolean} scheduled\n     * @returns {this}\n     */\n    setScheduled(scheduled) {\n        this.scheduled = scheduled;\n        return this;\n    }\n\n    /**\n     * @returns {string}\n     */\n    toString() {\n        if (this.accountId != null && this.validStart != null) {\n            const nonce =\n                this.nonce != null ? \"/\".concat(this.nonce.toString()) : \"\";\n            const scheduled = this.scheduled ? \"?scheduled\" : \"\";\n            return `${this.accountId.toString()}@${this.validStart.seconds.toString()}.${this.validStart.nanos.toString()}${scheduled}${nonce}`;\n        } else {\n            throw new Error(\"neither `accountId` nor `validStart` are set\");\n        }\n    }\n\n    /**\n     * @internal\n     * @param {proto.ITransactionID} id\n     * @returns {TransactionId}\n     */\n    static _fromProtobuf(id) {\n        if (id.accountID != null && id.transactionValidStart != null) {\n            return new TransactionId(\n                AccountId._fromProtobuf(id.accountID),\n                Timestamp._fromProtobuf(id.transactionValidStart),\n                id.scheduled,\n                id.nonce\n            );\n        } else {\n            throw new Error(\n                \"Neither `nonce` or `accountID` and `transactionValidStart` are set\"\n            );\n        }\n    }\n\n    /**\n     * @internal\n     * @returns {proto.ITransactionID}\n     */\n    _toProtobuf() {\n        return {\n            accountID:\n                this.accountId != null ? this.accountId._toProtobuf() : null,\n            transactionValidStart:\n                this.validStart != null ? this.validStart._toProtobuf() : null,\n            scheduled: this.scheduled,\n            nonce: this.nonce != null ? this.nonce.toInt() : null,\n        };\n    }\n\n    /**\n     * @param {Uint8Array} bytes\n     * @returns {TransactionId}\n     */\n    static fromBytes(bytes) {\n        return TransactionId._fromProtobuf(proto.TransactionID.decode(bytes));\n    }\n\n    /**\n     * @returns {Uint8Array}\n     */\n    toBytes() {\n        return proto.TransactionID.encode(this._toProtobuf()).finish();\n    }\n\n    /**\n     * @returns {TransactionId}\n     */\n    clone() {\n        return new TransactionId(\n            this.accountId,\n            this.validStart,\n            this.scheduled,\n            this.nonce\n        );\n    }\n\n    /**\n     * @param {TransactionId} other\n     * @returns {number}\n     */\n    compare(other) {\n        const comparison = /** @type {AccountId} */ (this.accountId).compare(\n            /** @type {AccountId} */ (other.accountId)\n        );\n\n        if (comparison != 0) {\n            return comparison;\n        }\n\n        return /** @type {Timestamp} */ (this.validStart).compare(\n            /** @type {Timestamp} */ (other.validStart)\n        );\n    }\n}\n", "import Status from \"../Status.js\";\nimport AccountId from \"../account/AccountId.js\";\nimport Hbar from \"../Hbar.js\";\nimport Executable, { ExecutionState } from \"../Executable.js\";\nimport TransactionId from \"../transaction/TransactionId.js\";\nimport {\n    Query as ProtoQuery,\n    TransactionBody as ProtoTransactionBody,\n    SignedTransaction as ProtoSignedTransaction,\n    ResponseType as ProtoResponseType,\n    ResponseCodeEnum,\n} from \"@hashgraph/proto\";\nimport PrecheckStatusError from \"../PrecheckStatusError.js\";\nimport MaxQueryPaymentExceeded from \"../MaxQueryPaymentExceeded.js\";\nimport Long from \"long\";\n\n/**\n * @typedef {import(\"../channel/Channel.js\").default} Channel\n */\n\n/**\n * @namespace proto\n * @typedef {import(\"@hashgraph/proto\").IQuery} proto.IQuery\n * @typedef {import(\"@hashgraph/proto\").IQueryHeader} proto.IQueryHeader\n * @typedef {import(\"@hashgraph/proto\").ITransaction} proto.ITransaction\n * @typedef {import(\"@hashgraph/proto\").ISignedTransaction} proto.ISignedTransaction\n * @typedef {import(\"@hashgraph/proto\").IResponse} proto.IResponse\n * @typedef {import(\"@hashgraph/proto\").IResponseHeader} proto.IResponseHeader\n * @typedef {import(\"@hashgraph/proto\").ITransactionBody} proto.ITransactionBody\n * @typedef {import(\"@hashgraph/proto\").ResponseCodeEnum} proto.ResponseCodeEnum\n */\n\n/**\n * @typedef {import(\"../client/Client.js\").ClientOperator} ClientOperator\n * @typedef {import(\"../client/Client.js\").default<*, *>} Client\n */\n\n/**\n * @type {Map<ProtoQuery[\"query\"], (query: proto.IQuery) => Query<*>>}\n */\nexport const QUERY_REGISTRY = new Map();\n\n/**\n * Base class for all queries that can be submitted to Hedera.\n *\n * @abstract\n * @template OutputT\n * @augments {Executable<proto.IQuery, proto.IResponse, OutputT>}\n */\nexport default class Query extends Executable {\n    constructor() {\n        super();\n\n        /** @type {?TransactionId} */\n        this._paymentTransactionId = null;\n\n        /** @type {proto.ITransaction[]} */\n        this._paymentTransactions = [];\n\n        /** @type {?Hbar} */\n        this._queryPayment = null;\n\n        /** @type {?Hbar} */\n        this._maxQueryPayment = null;\n    }\n\n    /**\n     * @template T\n     * @param {Uint8Array} bytes\n     * @returns {Query<T>}\n     */\n    static fromBytes(bytes) {\n        const query = ProtoQuery.decode(bytes);\n\n        if (query.query == null) {\n            throw new Error(\"(BUG) query.query was not set in the protobuf\");\n        }\n\n        const fromProtobuf = /** @type {(query: proto.IQuery) => Query<T>} */ (\n            QUERY_REGISTRY.get(query.query)\n        );\n\n        if (fromProtobuf == null) {\n            throw new Error(\n                `(BUG) Query.fromBytes() not implemented for type ${query.query}`\n            );\n        }\n\n        return fromProtobuf(query);\n    }\n\n    /**\n     * @returns {Uint8Array}\n     */\n    toBytes() {\n        return ProtoQuery.encode(this._makeRequest()).finish();\n    }\n\n    /**\n     * Set an explicit payment amount for this query.\n     *\n     * The client will submit exactly this amount for the payment of this query. Hedera\n     * will not return any remainder.\n     *\n     * @param {Hbar} queryPayment\n     * @returns {this}\n     */\n    setQueryPayment(queryPayment) {\n        this._queryPayment = queryPayment;\n\n        return this;\n    }\n\n    /**\n     * Set the maximum payment allowable for this query.\n     *\n     * @param {Hbar} maxQueryPayment\n     * @returns {this}\n     */\n    setMaxQueryPayment(maxQueryPayment) {\n        this._maxQueryPayment = maxQueryPayment;\n\n        return this;\n    }\n\n    /**\n     * @param {import(\"../client/Client.js\").default<Channel, *>} client\n     * @returns {Promise<Hbar>}\n     */\n    getCost(client) {\n        if (this._nodeIds.length == 0) {\n            this._nodeIds = client._network.getNodeAccountIdsForExecute();\n        }\n\n        if (COST_QUERY.length != 1) {\n            throw new Error(\"CostQuery has not been loaded yet\");\n        }\n\n        return COST_QUERY[0](this).execute(client);\n    }\n\n    /**\n     * @param {TransactionId} paymentTransactionId\n     * @returns {this}\n     */\n    setPaymentTransactionId(paymentTransactionId) {\n        this._paymentTransactionId = paymentTransactionId;\n        return this;\n    }\n\n    /**\n     * @returns {?TransactionId}\n     */\n    get paymentTransactionId() {\n        return this._paymentTransactionId;\n    }\n\n    /**\n     * @returns {TransactionId}\n     */\n    _getTransactionId() {\n        if (this._paymentTransactionId == null) {\n            throw new Error(\n                \"Query.PaymentTransactionId was not set duration execution\"\n            );\n        }\n\n        return this._paymentTransactionId;\n    }\n\n    /**\n     * @protected\n     * @returns {boolean}\n     */\n    _isPaymentRequired() {\n        return true;\n    }\n\n    /**\n     * @param {Client} client\n     */\n    // eslint-disable-next-line @typescript-eslint/no-unused-vars,@typescript-eslint/no-empty-function\n    _validateChecksums(client) {\n        // Do nothing\n    }\n\n    /**\n     * @template MirrorChannelT\n     * @param {import(\"../client/Client.js\").default<Channel, MirrorChannelT>} client\n     * @returns {Promise<void>}\n     */\n    async _beforeExecute(client) {\n        if (this._paymentTransactions.length > 0) {\n            return;\n        }\n\n        if (client.isAutoValidateChecksumsEnabled()) {\n            this._validateChecksums(client);\n        }\n\n        if (this._nodeIds.length == 0) {\n            this._nodeIds = client._network.getNodeAccountIdsForExecute();\n        }\n\n        const operator = client._operator;\n\n        if (this._paymentTransactionId == null) {\n            if (this._isPaymentRequired()) {\n                if (operator != null) {\n                    this._paymentTransactionId = TransactionId.generate(\n                        operator.accountId\n                    );\n                } else {\n                    throw new Error(\n                        \"`client` must have an `operator` or an explicit payment transaction must be provided\"\n                    );\n                }\n            } else {\n                this._paymentTransactionId = TransactionId.generate(\n                    new AccountId(0)\n                );\n            }\n        }\n\n        let cost =\n            this._queryPayment != null\n                ? this._queryPayment\n                : client.maxQueryPayment;\n\n        if (\n            this._paymentTransactions.length !== 0 ||\n            !this._isPaymentRequired()\n        ) {\n            cost = new Hbar(0);\n        } else {\n            if (this._queryPayment == null) {\n                const actualCost = await this.getCost(client);\n\n                if (\n                    cost.toTinybars().toInt() < actualCost.toTinybars().toInt()\n                ) {\n                    throw new MaxQueryPaymentExceeded(cost, actualCost);\n                }\n\n                cost = actualCost;\n            }\n        }\n\n        for (const node of this._nodeIds) {\n            this._paymentTransactions.push(\n                await _makePaymentTransaction(\n                    /** @type {import(\"../transaction/TransactionId.js\").default} */ (\n                        this._paymentTransactionId\n                    ),\n                    node,\n                    this._isPaymentRequired() ? operator : null,\n                    /** @type {Hbar} */ (cost)\n                )\n            );\n        }\n    }\n\n    /**\n     * @abstract\n     * @internal\n     * @param {proto.IResponse} response\n     * @returns {proto.IResponseHeader}\n     */\n    // eslint-disable-next-line @typescript-eslint/no-unused-vars\n    _mapResponseHeader(response) {\n        throw new Error(\"not implemented\");\n    }\n\n    /**\n     * @protected\n     * @returns {proto.IQueryHeader}\n     */\n    _makeRequestHeader() {\n        /** @type {proto.IQueryHeader} */\n        let header = {};\n\n        if (this._isPaymentRequired() && this._paymentTransactions.length > 0) {\n            header = {\n                responseType: ProtoResponseType.ANSWER_ONLY,\n                payment: this._paymentTransactions[this._nextNodeIndex],\n            };\n        }\n\n        return header;\n    }\n\n    /**\n     * @abstract\n     * @internal\n     * @param {proto.IQueryHeader} header\n     * @returns {proto.IQuery}\n     */\n    // eslint-disable-next-line @typescript-eslint/no-unused-vars\n    _onMakeRequest(header) {\n        throw new Error(\"not implemented\");\n    }\n\n    /**\n     * @internal\n     * @returns {proto.IQuery}\n     */\n    _makeRequest() {\n        /** @type {proto.IQueryHeader} */\n        let header = {};\n\n        if (this._isPaymentRequired() && this._paymentTransactions != null) {\n            header = {\n                payment: this._paymentTransactions[this._nextNodeIndex],\n                responseType: ProtoResponseType.ANSWER_ONLY,\n            };\n        }\n\n        return this._onMakeRequest(header);\n    }\n\n    /**\n     * @override\n     * @internal\n     * @returns {Promise<proto.IQuery>}\n     */\n    _makeRequestAsync() {\n        return Promise.resolve(this._makeRequest());\n    }\n\n    /**\n     * @override\n     * @internal\n     * @param {proto.IQuery} request\n     * @param {proto.IResponse} response\n     * @returns {ExecutionState}\n     */\n    // eslint-disable-next-line @typescript-eslint/no-unused-vars\n    _shouldRetry(request, response) {\n        const { nodeTransactionPrecheckCode } =\n            this._mapResponseHeader(response);\n\n        const status = Status._fromCode(\n            nodeTransactionPrecheckCode != null\n                ? nodeTransactionPrecheckCode\n                : ResponseCodeEnum.OK\n        );\n\n        switch (status) {\n            case Status.Busy:\n            case Status.Unknown:\n            case Status.PlatformTransactionNotCreated:\n                return ExecutionState.Retry;\n            case Status.Ok:\n                return ExecutionState.Finished;\n            default:\n                return ExecutionState.Error;\n        }\n    }\n\n    /**\n     * @override\n     * @internal\n     * @param {proto.IQuery} request\n     * @param {proto.IResponse} response\n     * @returns {Error}\n     */\n    // eslint-disable-next-line @typescript-eslint/no-unused-vars\n    _mapStatusError(request, response) {\n        const { nodeTransactionPrecheckCode } =\n            this._mapResponseHeader(response);\n\n        const status = Status._fromCode(\n            nodeTransactionPrecheckCode != null\n                ? nodeTransactionPrecheckCode\n                : ResponseCodeEnum.OK\n        );\n\n        return new PrecheckStatusError({\n            status,\n            transactionId: this._getTransactionId(),\n        });\n    }\n\n    /**\n     * @returns {AccountId}\n     */\n    _getNodeAccountId() {\n        if (this._nodeIds.length > 0) {\n            // if there are payment transactions,\n            // we need to use the node of the current payment transaction\n            return this._nodeIds[this._nextNodeIndex];\n        } else {\n            throw new Error(\n                \"(BUG) nodeAccountIds were not set for query before executing\"\n            );\n        }\n    }\n\n    /**\n     * @override\n     * @protected\n     * @returns {void}\n     */\n    _advanceRequest() {\n        if (this._isPaymentRequired() && this._paymentTransactions.length > 0) {\n            // each time we move our cursor to the next transaction\n            // wrapping around to ensure we are cycling\n            super._nextNodeIndex =\n                (this._nextNodeIndex + 1) % this._paymentTransactions.length;\n        } else {\n            super._advanceRequest();\n        }\n    }\n}\n\n/**\n * @param {TransactionId} paymentTransactionId\n * @param {AccountId} nodeId\n * @param {?ClientOperator} operator\n * @param {Hbar} paymentAmount\n * @returns {Promise<proto.ITransaction>}\n */\nexport async function _makePaymentTransaction(\n    paymentTransactionId,\n    nodeId,\n    operator,\n    paymentAmount\n) {\n    const accountAmounts = [];\n\n    if (operator != null) {\n        accountAmounts.push({\n            accountID: operator.accountId._toProtobuf(),\n            amount: paymentAmount.negated().toTinybars(),\n        });\n        accountAmounts.push({\n            accountID: nodeId._toProtobuf(),\n            amount: paymentAmount.toTinybars(),\n        });\n    } else {\n        accountAmounts.push({\n            accountID: new AccountId(0)._toProtobuf(),\n            amount: paymentAmount.negated().toTinybars(),\n        });\n        accountAmounts.push({\n            accountID: nodeId._toProtobuf(),\n            amount: paymentAmount.toTinybars(),\n        });\n    }\n    /**\n     * @type {proto.ITransactionBody}\n     */\n    const body = {\n        transactionID: paymentTransactionId._toProtobuf(),\n        nodeAccountID: nodeId._toProtobuf(),\n        transactionFee: new Hbar(1).toTinybars(),\n        transactionValidDuration: {\n            seconds: Long.fromNumber(120),\n        },\n        cryptoTransfer: {\n            transfers: {\n                accountAmounts,\n            },\n        },\n    };\n\n    /** @type {proto.ISignedTransaction} */\n    const signedTransaction = {\n        bodyBytes: ProtoTransactionBody.encode(body).finish(),\n    };\n\n    if (operator != null) {\n        const signature = await operator.transactionSigner(\n            /** @type {Uint8Array} */ (signedTransaction.bodyBytes)\n        );\n\n        signedTransaction.sigMap = {\n            sigPair: [operator.publicKey._toProtobufSignature(signature)],\n        };\n    }\n\n    return {\n        signedTransactionBytes:\n            ProtoSignedTransaction.encode(signedTransaction).finish(),\n    };\n}\n\n/**\n * @type {((query: Query<*>) => import(\"./CostQuery.js\").default<*>)[]}\n */\nexport const COST_QUERY = [];\n", "/**\n * @typedef {import(\"./Status.js\").default} Status\n * @typedef {import(\"./transaction/TransactionId.js\").default} TransactionId\n */\n\nexport default class StatusError extends Error {\n    /**\n     * @param {object} props\n     * @param {Status} props.status\n     * @param {TransactionId} props.transactionId\n     * @param {string} message\n     */\n    constructor(props, message) {\n        super(message);\n\n        this.name = \"StatusError\";\n\n        this.status = props.status;\n\n        this.transactionId = props.transactionId;\n\n        this.message = message;\n\n        if (typeof Error.captureStackTrace !== \"undefined\") {\n            Error.captureStackTrace(this, StatusError);\n        }\n    }\n}\n", "import StatusError from \"./StatusError.js\";\n\n/**\n * @typedef {import(\"./Status.js\").default} Status\n * @typedef {import(\"./transaction/TransactionId.js\").default} TransactionId\n */\n\nexport default class PrecheckStatusError extends StatusError {\n    /**\n     * @param {object} props\n     * @param {Status} props.status\n     * @param {TransactionId} props.transactionId\n     */\n    constructor(props) {\n        super(\n            props,\n            `transaction ${props.transactionId.toString()} failed precheck with status ${props.status.toString()}`\n        );\n    }\n}\n", "/**\n * @typedef {import(\"./Hbar.js\").default} Hbar\n */\n\nexport default class MaxQueryPaymentExceeded extends Error {\n    /**\n     * @param {Hbar} queryCost\n     * @param {Hbar} maxQueryPayment\n     */\n    constructor(queryCost, maxQueryPayment) {\n        super();\n\n        this.message = `query cost of ${queryCost.toString()} HBAR exceeds max set on client: ${maxQueryPayment.toString()} HBAR`;\n        this.name = \"MaxQueryPaymentExceededError\";\n        this.queryCost = queryCost;\n        this.maxQueryPayment = maxQueryPayment;\n    }\n}\n", "import * as entity_id from \"../EntityIdHelper.js\";\nimport { Key } from \"@hashgraph/cryptography\";\nimport * as proto from \"@hashgraph/proto\";\nimport CACHE from \"../Cache.js\";\n\n/**\n * @typedef {import(\"long\").Long} Long\n * @typedef {import(\"../client/Client.js\").default<*, *>} Client\n */\n\n/**\n * The ID for a crypto-currency contract on Hedera.\n */\nexport default class ContractId extends Key {\n    /**\n     * @param {number | Long | import(\"../EntityIdHelper\").IEntityId} props\n     * @param {(number | Long)=} realm\n     * @param {(number | Long)=} num\n     */\n    constructor(props, realm, num) {\n        super();\n\n        const result = entity_id.constructor(props, realm, num);\n\n        this.shard = result.shard;\n        this.realm = result.realm;\n        this.num = result.num;\n\n        /**\n         * @type {string | null}\n         */\n        this._checksum = null;\n    }\n\n    /**\n     * @param {string} text\n     * @returns {ContractId}\n     */\n    static fromString(text) {\n        const result = entity_id.fromString(text);\n        const id = new ContractId(result);\n        id._checksum = result.checksum;\n        return id;\n    }\n\n    /**\n     * @internal\n     * @param {proto.IContractID} id\n     * @returns {ContractId}\n     */\n    static _fromProtobuf(id) {\n        const contractId = new ContractId(\n            id.shardNum != null ? id.shardNum : 0,\n            id.realmNum != null ? id.realmNum : 0,\n            id.contractNum != null ? id.contractNum : 0\n        );\n\n        return contractId;\n    }\n\n    /**\n     * @returns {string | null}\n     */\n    get checksum() {\n        return this._checksum;\n    }\n\n    /**\n     * @deprecated - Use `validateChecksum` instead\n     * @param {Client} client\n     */\n    validate(client) {\n        console.warn(\"Deprecated: Use `validateChecksum` instead\");\n        this.validateChecksum(client);\n    }\n\n    /**\n     * @param {Client} client\n     */\n    validateChecksum(client) {\n        entity_id.validateChecksum(\n            this.shard,\n            this.realm,\n            this.num,\n            this._checksum,\n            client\n        );\n    }\n\n    /**\n     * @param {Uint8Array} bytes\n     * @returns {ContractId}\n     */\n    static fromBytes(bytes) {\n        return ContractId._fromProtobuf(proto.ContractID.decode(bytes));\n    }\n\n    /**\n     * @param {string} address\n     * @returns {ContractId}\n     */\n    static fromSolidityAddress(address) {\n        const [shard, realm, contract] = entity_id.fromSolidityAddress(address);\n        return new ContractId(shard, realm, contract);\n    }\n\n    /**\n     * @returns {string}\n     */\n    toSolidityAddress() {\n        return entity_id.toSolidityAddress([this.shard, this.realm, this.num]);\n    }\n\n    /**\n     * @internal\n     * @returns {proto.IContractID}\n     */\n    _toProtobuf() {\n        return {\n            contractNum: this.num,\n            shardNum: this.shard,\n            realmNum: this.realm,\n        };\n    }\n\n    /**\n     * @returns {string}\n     */\n    toString() {\n        return `${this.shard.toString()}.${this.realm.toString()}.${this.num.toString()}`;\n    }\n\n    /**\n     * @param {Client} client\n     * @returns {string}\n     */\n    toStringWithChecksum(client) {\n        return entity_id.toStringWithChecksum(this.toString(), client);\n    }\n\n    /**\n     * @returns {Uint8Array}\n     */\n    toBytes() {\n        return proto.ContractID.encode(this._toProtobuf()).finish();\n    }\n\n    /**\n     * @returns {ContractId}\n     */\n    clone() {\n        const id = new ContractId(this);\n        id._checksum = this._checksum;\n        return id;\n    }\n\n    /**\n     * @param {ContractId} other\n     * @returns {number}\n     */\n    compare(other) {\n        return entity_id.compare(\n            [this.shard, this.realm, this.num],\n            [other.shard, other.realm, other.num]\n        );\n    }\n\n    /**\n     * @returns {proto.IKey}\n     */\n    _toProtobufKey() {\n        return {\n            contractID: this._toProtobuf(),\n        };\n    }\n\n    /**\n     * @param {proto.IContractID} key\n     * @returns {ContractId}\n     */\n    static __fromProtobufKey(key) {\n        return ContractId._fromProtobuf(key);\n    }\n}\n\nCACHE.contractId = (key) => ContractId.__fromProtobufKey(key);\n", "import Long from \"long\";\nimport Hbar from \"../Hbar.js\";\nimport TokenId from \"../token/TokenId.js\";\nimport TokenBalanceMap from \"./TokenBalanceMap.js\";\nimport TokenDecimalMap from \"./TokenDecimalMap.js\";\n\n/**\n * @namespace proto\n * @typedef {import(\"@hashgraph/proto\").ITimestamp} proto.ITimestamp\n * @typedef {import(\"@hashgraph/proto\").IAccountID} proto.IAccountID\n * @typedef {import(\"@hashgraph/proto\").ICryptoGetAccountBalanceResponse} proto.ICryptoGetAccountBalanceResponse\n * @typedef {import(\"@hashgraph/proto\").IKey} proto.IKey\n * @typedef {import(\"@hashgraph/proto\").ITokenID} proto.ITokenID\n * @typedef {import(\"@hashgraph/proto\").ITokenBalance} proto.ITokenBalance\n */\n\n/**\n * @typedef {object} TokenBalanceJson\n * @property {string} tokenId\n * @property {string} balance\n * @property {number} decimals\n */\n\n/**\n * @typedef {object} AccountBalanceJson\n * @property {string} hbars\n * @property {TokenBalanceJson[]} tokens\n */\n\n/**\n * @typedef {import(\"@hashgraph/cryptography\").Key} Key\n */\n\nexport default class AccountBalance {\n    /**\n     * @private\n     * @param {object} props\n     * @param {Hbar} props.hbars\n     * @param {?TokenBalanceMap} props.tokens\n     * @param {?TokenDecimalMap} props.tokenDecimals\n     */\n    constructor(props) {\n        /**\n         * The account ID for which this balancermation applies.\n         *\n         * @readonly\n         */\n        this.hbars = props.hbars;\n\n        /** @readonly */\n        this.tokens = props.tokens;\n\n        /** @readonly */\n        this.tokenDecimals = props.tokenDecimals;\n\n        Object.freeze(this);\n    }\n\n    /**\n     * @internal\n     * @param {proto.ICryptoGetAccountBalanceResponse} accountBalance\n     * @returns {AccountBalance}\n     */\n    static _fromProtobuf(accountBalance) {\n        const tokenBalances = new TokenBalanceMap();\n        const tokenDecimals = new TokenDecimalMap();\n\n        if (accountBalance.tokenBalances != null) {\n            for (const balance of accountBalance.tokenBalances) {\n                const tokenId = TokenId._fromProtobuf(\n                    /** @type {proto.ITokenID} */ (balance.tokenId)\n                );\n\n                tokenDecimals._set(\n                    tokenId,\n                    balance.decimals != null ? balance.decimals : 0\n                );\n                tokenBalances._set(\n                    tokenId,\n                    Long.fromValue(/** @type {Long} */ (balance.balance))\n                );\n            }\n        }\n\n        return new AccountBalance({\n            hbars: Hbar.fromTinybars(\n                /** @type {Long} */ (accountBalance.balance)\n            ),\n            tokens: tokenBalances,\n            tokenDecimals,\n        });\n    }\n\n    /**\n     * @returns {proto.ICryptoGetAccountBalanceResponse}\n     */\n    _toProtobuf() {\n        /** @type {proto.ITokenBalance[]} */\n        const list = [];\n\n        for (const [key, value] of this.tokens != null ? this.tokens : []) {\n            list.push({\n                tokenId: key._toProtobuf(),\n                balance: value,\n                decimals:\n                    this.tokenDecimals != null\n                        ? this.tokenDecimals.get(key)\n                        : null,\n            });\n        }\n\n        return {\n            balance: this.hbars.toTinybars(),\n            tokenBalances: list,\n        };\n    }\n\n    /**\n     * @returns {string}\n     */\n    toString() {\n        return JSON.stringify(this.toJSON());\n    }\n\n    /**\n     * @returns {AccountBalanceJson}\n     */\n    toJSON() {\n        const tokens = [];\n        for (const [key, value] of this.tokens != null ? this.tokens : []) {\n            const decimals =\n                this.tokenDecimals != null ? this.tokenDecimals.get(key) : null;\n\n            tokens.push({\n                tokenId: key.toString(),\n                balance: value.toString(),\n                decimals: decimals != null ? decimals : 0,\n            });\n        }\n\n        return {\n            hbars: this.hbars.toString(),\n            tokens,\n        };\n    }\n}\n", "import * as entity_id from \"../EntityIdHelper.js\";\nimport * as proto from \"@hashgraph/proto\";\n\n/**\n * @typedef {import(\"long\").Long} Long\n * @typedef {import(\"../client/Client.js\").default<*, *>} Client\n */\n\n/**\n * The ID for a crypto-currency token on Hedera.\n */\nexport default class TokenId {\n    /**\n     * @param {number | Long | import(\"../EntityIdHelper\").IEntityId} props\n     * @param {(number | Long)=} realm\n     * @param {(number | Long)=} num\n     */\n    constructor(props, realm, num) {\n        const result = entity_id.constructor(props, realm, num);\n\n        this.shard = result.shard;\n        this.realm = result.realm;\n        this.num = result.num;\n\n        /**\n         * @type {string | null}\n         */\n        this._checksum = null;\n    }\n\n    /**\n     * @param {string} text\n     * @returns {TokenId}\n     */\n    static fromString(text) {\n        const result = entity_id.fromString(text);\n        const id = new TokenId(result);\n        id._checksum = result.checksum;\n        return id;\n    }\n\n    /**\n     * @internal\n     * @param {proto.ITokenID} id\n     * @returns {TokenId}\n     */\n    static _fromProtobuf(id) {\n        const tokenId = new TokenId(\n            id.shardNum != null ? id.shardNum : 0,\n            id.realmNum != null ? id.realmNum : 0,\n            id.tokenNum != null ? id.tokenNum : 0\n        );\n\n        return tokenId;\n    }\n\n    /**\n     * @returns {string | null}\n     */\n    get checksum() {\n        return this._checksum;\n    }\n\n    /**\n     * @deprecated - Use `validateChecksum` instead\n     * @param {Client} client\n     */\n    validate(client) {\n        console.warn(\"Deprecated: Use `validateChecksum` instead\");\n        this.validateChecksum(client);\n    }\n\n    /**\n     * @param {Client} client\n     */\n    validateChecksum(client) {\n        entity_id.validateChecksum(\n            this.shard,\n            this.realm,\n            this.num,\n            this._checksum,\n            client\n        );\n    }\n\n    /**\n     * @param {Uint8Array} bytes\n     * @returns {TokenId}\n     */\n    static fromBytes(bytes) {\n        return TokenId._fromProtobuf(proto.TokenID.decode(bytes));\n    }\n\n    /**\n     * @param {string} address\n     * @returns {TokenId}\n     */\n    static fromSolidityAddress(address) {\n        return new TokenId(...entity_id.fromSolidityAddress(address));\n    }\n\n    /**\n     * @returns {string}\n     */\n    toSolidityAddress() {\n        return entity_id.toSolidityAddress([this.shard, this.realm, this.num]);\n    }\n\n    /**\n     * @internal\n     * @returns {proto.ITokenID}\n     */\n    _toProtobuf() {\n        return {\n            tokenNum: this.num,\n            shardNum: this.shard,\n            realmNum: this.realm,\n        };\n    }\n\n    /**\n     * @returns {string}\n     */\n    toString() {\n        return `${this.shard.toString()}.${this.realm.toString()}.${this.num.toString()}`;\n    }\n\n    /**\n     * @param {Client} client\n     * @returns {string}\n     */\n    toStringWithChecksum(client) {\n        return entity_id.toStringWithChecksum(this.toString(), client);\n    }\n\n    /**\n     * @returns {Uint8Array}\n     */\n    toBytes() {\n        return proto.TokenID.encode(this._toProtobuf()).finish();\n    }\n\n    /**\n     * @returns {TokenId}\n     */\n    clone() {\n        const id = new TokenId(this);\n        id._checksum = this._checksum;\n        return id;\n    }\n\n    /**\n     * @param {TokenId} other\n     * @returns {number}\n     */\n    compare(other) {\n        return entity_id.compare(\n            [this.shard, this.realm, this.num],\n            [other.shard, other.realm, other.num]\n        );\n    }\n}\n", "/**\n * @abstract\n * @template {{ toString(): string }} KeyT\n * @template {{ toString(): string }} ValueT\n */\nexport default class ObjectMap {\n    /**\n     * @param {(s: string) => KeyT} fromString\n     */\n    constructor(fromString) {\n        /** @type {Map<string, ValueT>} */\n        // eslint-disable-next-line @typescript-eslint/no-unsafe-assignment\n        this._map = new Map();\n\n        /** @type {Map<KeyT, ValueT>} */\n        // eslint-disable-next-line @typescript-eslint/no-unsafe-assignment\n        this.__map = new Map();\n\n        this._fromString = fromString;\n    }\n\n    /**\n     * @param {KeyT | string} key\n     * @returns {?ValueT}\n     */\n    get(key) {\n        const k = typeof key === \"string\" ? key : key.toString();\n\n        const value = this._map.get(k);\n        return value != null ? value : null;\n    }\n\n    /**\n     * @internal\n     * @param {KeyT} key\n     * @param {ValueT} value\n     */\n    _set(key, value) {\n        const k = typeof key === \"string\" ? key : key.toString();\n\n        this._map.set(k, value);\n        this.__map.set(key, value);\n    }\n\n    /**\n     * @returns {IterableIterator<ValueT>}\n     */\n    values() {\n        return this._map.values();\n    }\n\n    /**\n     * @returns {number}\n     */\n    get size() {\n        return this._map.size;\n    }\n\n    /**\n     * @returns {IterableIterator<KeyT>}\n     */\n    keys() {\n        return this.__map.keys();\n    }\n\n    /**\n     * @returns {IterableIterator<[KeyT, ValueT]>}\n     */\n    [Symbol.iterator]() {\n        return this.__map[Symbol.iterator]();\n    }\n\n    /**\n     * @returns {string}\n     */\n    toString() {\n        /** @type {Object.<string, string>} */\n        const map = {};\n\n        for (const [key, value] of this._map) {\n            map[key] = value.toString();\n        }\n\n        return JSON.stringify(map);\n    }\n}\n", "import TokenId from \"../token/TokenId.js\";\nimport ObjectMap from \"../ObjectMap.js\";\n\n/**\n * @namespace proto\n * @typedef {import(\"@hashgraph/proto\").ITokenBalance} proto.ITokenBalance\n * @typedef {import(\"@hashgraph/proto\").ITokenID} proto.ITokenID\n */\n\n/**\n * @typedef {import(\"long\")} Long\n */\n\n/**\n * @augments {ObjectMap<TokenId, Long>}\n */\nexport default class TokenBalanceMap extends ObjectMap {\n    constructor() {\n        super((s) => TokenId.fromString(s));\n    }\n}\n", "import TokenId from \"../token/TokenId.js\";\nimport ObjectMap from \"../ObjectMap.js\";\n\n/**\n * @namespace proto\n * @typedef {import(\"@hashgraph/proto\").ITokenBalance} proto.ITokenBalance\n * @typedef {import(\"@hashgraph/proto\").ITokenID} proto.ITokenID\n */\n\n/**\n * @augments {ObjectMap<TokenId, number>}\n */\nexport default class TokenDecimalMap extends ObjectMap {\n    constructor() {\n        super((s) => TokenId.fromString(s));\n    }\n}\n", "import Query, { QUERY_REGISTRY } from \"../query/Query.js\";\nimport AccountId from \"./AccountId.js\";\nimport ContractId from \"../contract/ContractId.js\";\nimport AccountBalance from \"./AccountBalance.js\";\n\n/**\n * @namespace proto\n * @typedef {import(\"@hashgraph/proto\").IQuery} proto.IQuery\n * @typedef {import(\"@hashgraph/proto\").IQueryHeader} proto.IQueryHeader\n * @typedef {import(\"@hashgraph/proto\").IResponse} proto.IResponse\n * @typedef {import(\"@hashgraph/proto\").IResponseHeader} proto.IResponseHeader\n * @typedef {import(\"@hashgraph/proto\").ICryptoGetAccountBalanceQuery} proto.ICryptoGetAccountBalanceQuery\n * @typedef {import(\"@hashgraph/proto\").ICryptoGetAccountBalanceResponse} proto.ICryptoGetAccountBalanceResponse\n */\n\n/**\n * @typedef {import(\"../channel/Channel.js\").default} Channel\n * @typedef {import(\"../client/Client.js\").default<*, *>} Client\n */\n\n/**\n * Get the balance of a Hedera\u2122 crypto-currency account.\n *\n * This returns only the balance, so its a smaller and faster reply\n * than AccountInfoQuery.\n *\n * This query is free.\n *\n * @augments {Query<AccountBalance>}\n */\nexport default class AccountBalanceQuery extends Query {\n    /**\n     * @param {object} [props]\n     * @param {AccountId | string} [props.accountId]\n     * @param {ContractId | string} [props.contractId]\n     */\n    constructor(props = {}) {\n        super();\n\n        /**\n         * @type {?AccountId}\n         * @private\n         */\n        this._accountId = null;\n\n        /**\n         * @type {?ContractId}\n         * @private\n         */\n        this._contractId = null;\n\n        if (props.accountId != null) {\n            this.setAccountId(props.accountId);\n        }\n\n        if (props.contractId != null) {\n            this.setContractId(props.contractId);\n        }\n    }\n\n    /**\n     * @internal\n     * @param {proto.IQuery} query\n     * @returns {AccountBalanceQuery}\n     */\n    static _fromProtobuf(query) {\n        const balance = /** @type {proto.ICryptoGetAccountBalanceQuery} */ (\n            query.cryptogetAccountBalance\n        );\n\n        return new AccountBalanceQuery({\n            accountId:\n                balance.accountID != null\n                    ? AccountId._fromProtobuf(balance.accountID)\n                    : undefined,\n            contractId:\n                balance.contractID != null\n                    ? ContractId._fromProtobuf(balance.contractID)\n                    : undefined,\n        });\n    }\n\n    /**\n     * @returns {?AccountId}\n     */\n    get accountId() {\n        return this._accountId;\n    }\n\n    /**\n     * Set the account ID for which the balance is being requested.\n     *\n     * This is mutually exclusive with `setContractId`.\n     *\n     * @param {AccountId | string} accountId\n     * @returns {this}\n     */\n    setAccountId(accountId) {\n        this._accountId =\n            typeof accountId === \"string\"\n                ? AccountId.fromString(accountId)\n                : accountId.clone();\n\n        return this;\n    }\n\n    /**\n     * @returns {?ContractId}\n     */\n    get contractId() {\n        return this._contractId;\n    }\n\n    /**\n     * Set the contract ID for which the balance is being requested.\n     *\n     * This is mutually exclusive with `setAccountId`.\n     *\n     * @param {ContractId | string} contractId\n     * @returns {this}\n     */\n    setContractId(contractId) {\n        this._contractId =\n            typeof contractId === \"string\"\n                ? ContractId.fromString(contractId)\n                : contractId.clone();\n\n        return this;\n    }\n\n    /**\n     * @protected\n     * @override\n     * @returns {boolean}\n     */\n    _isPaymentRequired() {\n        return false;\n    }\n\n    /**\n     * @param {Client} client\n     */\n    _validateChecksums(client) {\n        if (this._accountId != null) {\n            this._accountId.validateChecksum(client);\n        }\n\n        if (this._contractId != null) {\n            this._contractId.validateChecksum(client);\n        }\n    }\n\n    /**\n     * @override\n     * @internal\n     * @param {Channel} channel\n     * @param {proto.IQuery} request\n     * @returns {Promise<proto.IResponse>}\n     */\n    _execute(channel, request) {\n        return channel.crypto.cryptoGetBalance(request);\n    }\n\n    /**\n     * @override\n     * @override\n     * @internal\n     * @param {proto.IResponse} response\n     * @returns {proto.IResponseHeader}\n     */\n    _mapResponseHeader(response) {\n        const cryptogetAccountBalance =\n            /** @type {proto.ICryptoGetAccountBalanceResponse} */ (\n                response.cryptogetAccountBalance\n            );\n        return /** @type {proto.IResponseHeader} */ (\n            cryptogetAccountBalance.header\n        );\n    }\n\n    /**\n     * @override\n     * @override\n     * @internal\n     * @param {proto.IResponse} response\n     * @param {AccountId} nodeAccountId\n     * @param {proto.IQuery} request\n     * @returns {Promise<AccountBalance>}\n     */\n    // eslint-disable-next-line @typescript-eslint/no-unused-vars\n    _mapResponse(response, nodeAccountId, request) {\n        const cryptogetAccountBalance =\n            /** @type {proto.ICryptoGetAccountBalanceResponse} */ (\n                response.cryptogetAccountBalance\n            );\n        return Promise.resolve(\n            AccountBalance._fromProtobuf(cryptogetAccountBalance)\n        );\n    }\n\n    /**\n     * @override\n     * @internal\n     * @param {proto.IQueryHeader} header\n     * @returns {proto.IQuery}\n     */\n    _onMakeRequest(header) {\n        return {\n            cryptogetAccountBalance: {\n                header,\n                accountID:\n                    this._accountId != null\n                        ? this._accountId._toProtobuf()\n                        : null,\n                contractID:\n                    this._contractId != null\n                        ? this._contractId._toProtobuf()\n                        : null,\n            },\n        };\n    }\n}\n\nQUERY_REGISTRY.set(\n    \"cryptogetAccountBalance\",\n    // eslint-disable-next-line @typescript-eslint/unbound-method\n    AccountBalanceQuery._fromProtobuf\n);\n", "import StatusError from \"./StatusError.js\";\n\n/**\n * @typedef {import(\"./Status.js\").default} Status\n * @typedef {import(\"./transaction/TransactionId.js\").default} TransactionId\n * @typedef {import(\"./transaction/TransactionReceipt.js\").default} TransactionReceipt\n */\n\nexport default class ReceiptStatusError extends StatusError {\n    /**\n     * @param {object} props\n     * @param {TransactionReceipt} props.transactionReceipt\n     * @param {Status} props.status\n     * @param {TransactionId} props.transactionId\n     */\n    constructor(props) {\n        super(\n            props,\n            `receipt for transaction ${props.transactionId.toString()} contained error status ${props.status.toString()}`\n        );\n\n        /**\n         * @type {TransactionReceipt}\n         * @readonly\n         */\n        this.transactionReceipt = props.transactionReceipt;\n    }\n}\n", "import * as entity_id from \"../EntityIdHelper.js\";\nimport * as proto from \"@hashgraph/proto\";\n\n/**\n * @typedef {import(\"long\").Long} Long\n * @typedef {import(\"../client/Client.js\").default<*, *>} Client\n */\n\n/**\n * The ID for a crypto-currency file on Hedera.\n */\nexport default class FileId {\n    /**\n     * @param {number | Long | import(\"../EntityIdHelper\").IEntityId} props\n     * @param {(number | Long)=} realm\n     * @param {(number | Long)=} num\n     */\n    constructor(props, realm, num) {\n        const result = entity_id.constructor(props, realm, num);\n\n        this.shard = result.shard;\n        this.realm = result.realm;\n        this.num = result.num;\n\n        /**\n         * @type {string | null}\n         */\n        this._checksum = null;\n    }\n\n    /**\n     * @param {string} text\n     * @returns {FileId}\n     */\n    static fromString(text) {\n        const result = entity_id.fromString(text);\n        const id = new FileId(result);\n        id._checksum = result.checksum;\n        return id;\n    }\n\n    /**\n     * @internal\n     * @param {proto.IFileID} id\n     * @returns {FileId}\n     */\n    static _fromProtobuf(id) {\n        const fileId = new FileId(\n            id.shardNum != null ? id.shardNum : 0,\n            id.realmNum != null ? id.realmNum : 0,\n            id.fileNum != null ? id.fileNum : 0\n        );\n\n        return fileId;\n    }\n\n    /**\n     * @returns {string | null}\n     */\n    get checksum() {\n        return this._checksum;\n    }\n\n    /**\n     * @deprecated - Use `validateChecksum` instead\n     * @param {Client} client\n     */\n    validate(client) {\n        console.warn(\"Deprecated: Use `validateChecksum` instead\");\n        this.validateChecksum(client);\n    }\n\n    /**\n     * @param {Client} client\n     */\n    validateChecksum(client) {\n        entity_id.validateChecksum(\n            this.shard,\n            this.realm,\n            this.num,\n            this._checksum,\n            client\n        );\n    }\n\n    /**\n     * @param {Uint8Array} bytes\n     * @returns {FileId}\n     */\n    static fromBytes(bytes) {\n        return FileId._fromProtobuf(proto.FileID.decode(bytes));\n    }\n\n    /**\n     * @internal\n     * @returns {proto.IFileID}\n     */\n    _toProtobuf() {\n        return {\n            fileNum: this.num,\n            shardNum: this.shard,\n            realmNum: this.realm,\n        };\n    }\n\n    /**\n     * @returns {string}\n     */\n    toString() {\n        return `${this.shard.toString()}.${this.realm.toString()}.${this.num.toString()}`;\n    }\n\n    /**\n     * @param {Client} client\n     * @returns {string}\n     */\n    toStringWithChecksum(client) {\n        return entity_id.toStringWithChecksum(this.toString(), client);\n    }\n\n    /**\n     * @returns {Uint8Array}\n     */\n    toBytes() {\n        return proto.FileID.encode(this._toProtobuf()).finish();\n    }\n\n    /**\n     * @returns {FileId}\n     */\n    clone() {\n        const id = new FileId(this);\n        id._checksum = this._checksum;\n        return id;\n    }\n\n    /**\n     * @param {FileId} other\n     * @returns {number}\n     */\n    compare(other) {\n        return entity_id.compare(\n            [this.shard, this.realm, this.num],\n            [other.shard, other.realm, other.num]\n        );\n    }\n}\n", "import * as entity_id from \"../EntityIdHelper.js\";\nimport { TopicID as ProtoTopicID } from \"@hashgraph/proto\";\n\n/**\n * @typedef {import(\"long\").Long} Long\n * @typedef {import(\"../client/Client.js\").default<*, *>} Client\n */\n\n/**\n * @namespace proto\n * @typedef {import(\"@hashgraph/proto\").ITopicID} proto.ITopicID\n */\n\n/**\n * Unique identifier for a topic (used by the consensus service).\n */\nexport default class TopicId {\n    /**\n     * @param {number | Long | import(\"../EntityIdHelper\").IEntityId} props\n     * @param {(number | Long)=} realm\n     * @param {(number | Long)=} num\n     */\n    constructor(props, realm, num) {\n        const result = entity_id.constructor(props, realm, num);\n\n        this.shard = result.shard;\n        this.realm = result.realm;\n        this.num = result.num;\n\n        /**\n         * @type {string | null}\n         */\n        this._checksum = null;\n    }\n\n    /**\n     * @param {string} text\n     * @returns {TopicId}\n     */\n    static fromString(text) {\n        const result = entity_id.fromString(text);\n        const id = new TopicId(result);\n        id._checksum = result.checksum;\n        return id;\n    }\n\n    /**\n     * @internal\n     * @param {proto.ITopicID} id\n     * @returns {TopicId}\n     */\n    static _fromProtobuf(id) {\n        const topicId = new TopicId(\n            id.shardNum != null ? id.shardNum : 0,\n            id.realmNum != null ? id.realmNum : 0,\n            id.topicNum != null ? id.topicNum : 0\n        );\n\n        return topicId;\n    }\n\n    /**\n     * @returns {string | null}\n     */\n    get checksum() {\n        return this._checksum;\n    }\n\n    /**\n     * @deprecated - Use `validateChecksum` instead\n     * @param {Client} client\n     */\n    validate(client) {\n        console.warn(\"Deprecated: Use `validateChecksum` instead\");\n        this.validateChecksum(client);\n    }\n\n    /**\n     * @param {Client} client\n     */\n    validateChecksum(client) {\n        entity_id.validateChecksum(\n            this.shard,\n            this.realm,\n            this.num,\n            this._checksum,\n            client\n        );\n    }\n\n    /**\n     * @param {Uint8Array} bytes\n     * @returns {TopicId}\n     */\n    static fromBytes(bytes) {\n        return TopicId._fromProtobuf(ProtoTopicID.decode(bytes));\n    }\n\n    /**\n     * @returns {proto.ITopicID}\n     */\n    _toProtobuf() {\n        return {\n            topicNum: this.num,\n            shardNum: this.shard,\n            realmNum: this.realm,\n        };\n    }\n\n    /**\n     * @returns {string}\n     */\n    toString() {\n        return `${this.shard.toString()}.${this.realm.toString()}.${this.num.toString()}`;\n    }\n\n    /**\n     * @param {Client} client\n     * @returns {string}\n     */\n    toStringWithChecksum(client) {\n        return entity_id.toStringWithChecksum(this.toString(), client);\n    }\n\n    /**\n     * @returns {Uint8Array}\n     */\n    toBytes() {\n        return ProtoTopicID.encode(this._toProtobuf()).finish();\n    }\n\n    /**\n     * @returns {TopicId}\n     */\n    clone() {\n        const id = new TopicId(this);\n        id._checksum = this._checksum;\n        return id;\n    }\n\n    /**\n     * @param {TopicId} other\n     * @returns {number}\n     */\n    compare(other) {\n        return entity_id.compare(\n            [this.shard, this.realm, this.num],\n            [other.shard, other.realm, other.num]\n        );\n    }\n}\n", "import * as entity_id from \"../EntityIdHelper.js\";\nimport * as proto from \"@hashgraph/proto\";\n\n/**\n * @typedef {import(\"long\").Long} Long\n * @typedef {import(\"../client/Client.js\").default<*, *>} Client\n */\n\n/**\n *\n * @augments {EntityId<proto.IScheduleID>}\n */\n\nexport default class ScheduleId {\n    /**\n     * @param {number | Long | import(\"../EntityIdHelper\").IEntityId} props\n     * @param {(number | Long)=} realm\n     * @param {(number | Long)=} num\n     */\n    constructor(props, realm, num) {\n        const result = entity_id.constructor(props, realm, num);\n\n        this.shard = result.shard;\n        this.realm = result.realm;\n        this.num = result.num;\n\n        /**\n         * @type {string | null}\n         */\n        this._checksum = null;\n    }\n\n    /**\n     * @param {string} text\n     * @returns {ScheduleId}\n     */\n    static fromString(text) {\n        const result = entity_id.fromString(text);\n        const id = new ScheduleId(result);\n        id._checksum = result.checksum;\n        return id;\n    }\n\n    /**\n     * @internal\n     * @param {proto.IScheduleID} id\n     * @returns {ScheduleId}\n     */\n    static _fromProtobuf(id) {\n        const scheduleId = new ScheduleId(\n            id.shardNum != null ? id.shardNum : 0,\n            id.realmNum != null ? id.realmNum : 0,\n            id.scheduleNum != null ? id.scheduleNum : 0\n        );\n\n        return scheduleId;\n    }\n\n    /**\n     * @returns {string | null}\n     */\n    get checksum() {\n        return this._checksum;\n    }\n\n    /**\n     * @deprecated - Use `validateChecksum` instead\n     * @param {Client} client\n     */\n    validate(client) {\n        console.warn(\"Deprecated: Use `validateChecksum` instead\");\n        this.validateChecksum(client);\n    }\n\n    /**\n     * @param {Client} client\n     */\n    validateChecksum(client) {\n        entity_id.validateChecksum(\n            this.shard,\n            this.realm,\n            this.num,\n            this._checksum,\n            client\n        );\n    }\n\n    /**\n     * @param {Uint8Array} bytes\n     * @returns {ScheduleId}\n     */\n    static fromBytes(bytes) {\n        return ScheduleId._fromProtobuf(proto.ScheduleID.decode(bytes));\n    }\n\n    /**\n     * @param {string} address\n     * @returns {ScheduleId}\n     */\n    static fromSolidityAddress(address) {\n        return new ScheduleId(...entity_id.fromSolidityAddress(address));\n    }\n\n    /**\n     * @returns {string}\n     */\n    toSolidityAddress() {\n        return entity_id.toSolidityAddress([this.shard, this.realm, this.num]);\n    }\n\n    /**\n     * @internal\n     * @returns {proto.ScheduleID}\n     */\n    _toProtobuf() {\n        return {\n            scheduleNum: this.num,\n            shardNum: this.shard,\n            realmNum: this.realm,\n        };\n    }\n\n    /**\n     * @returns {string}\n     */\n    toString() {\n        return `${this.shard.toString()}.${this.realm.toString()}.${this.num.toString()}`;\n    }\n\n    /**\n     * @param {Client} client\n     * @returns {string}\n     */\n    toStringWithChecksum(client) {\n        return entity_id.toStringWithChecksum(this.toString(), client);\n    }\n\n    /**\n     * @returns {Uint8Array}\n     */\n    toBytes() {\n        return proto.ScheduleID.encode(this._toProtobuf()).finish();\n    }\n\n    /**\n     * @returns {ScheduleId}\n     */\n    clone() {\n        const id = new ScheduleId(this);\n        id._checksum = this._checksum;\n        return id;\n    }\n\n    /**\n     * @param {ScheduleId} other\n     * @returns {number}\n     */\n    compare(other) {\n        return entity_id.compare(\n            [this.shard, this.realm, this.num],\n            [other.shard, other.realm, other.num]\n        );\n    }\n}\n", "import Long from \"long\";\n\nexport default class ExchangeRate {\n    /**\n     * @private\n     * @param {object} props\n     * @param {number} props.hbars\n     * @param {number} props.cents\n     * @param {Date} props.expirationTime\n     */\n    constructor(props) {\n        /**\n         * Denotes Hbar equivalent to cents (USD)\n         *\n         * @readonly\n         * @type {number}\n         */\n        this.hbars = props.hbars;\n\n        /**\n         * Denotes cents (USD) equivalent to Hbar\n         *\n         * @readonly\n         * @type {number}\n         */\n        this.cents = props.cents;\n\n        /**\n         * Expiration time of this exchange rate\n         *\n         * @readonly\n         * @type {Date}\n         */\n        this.expirationTime = props.expirationTime;\n\n        Object.freeze(this);\n    }\n\n    /**\n     * @internal\n     * @param {import(\"@hashgraph/proto\").IExchangeRate} rate\n     * @returns {ExchangeRate}\n     */\n    static _fromProtobuf(rate) {\n        return new ExchangeRate({\n            hbars: /** @type {number} */ (rate.hbarEquiv),\n            cents: /** @type {number} */ (rate.centEquiv),\n            expirationTime: new Date(\n                rate.expirationTime != null\n                    ? rate.expirationTime.seconds != null\n                        ? rate.expirationTime.seconds instanceof Long\n                            ? rate.expirationTime.seconds.toInt()\n                            : rate.expirationTime.seconds\n                        : 0 * 1000\n                    : 0 * 1000\n            ),\n        });\n    }\n\n    /**\n     * @internal\n     * @returns {import(\"@hashgraph/proto\").IExchangeRate}\n     */\n    _toProtobuf() {\n        return {\n            hbarEquiv: this.hbars,\n            centEquiv: this.cents,\n            expirationTime: {\n                seconds: Long.fromNumber(this.expirationTime.getSeconds()),\n            },\n        };\n    }\n}\n", "import AccountId from \"../account/AccountId.js\";\nimport ContractId from \"../contract/ContractId.js\";\nimport FileId from \"../file/FileId.js\";\nimport TopicId from \"../topic/TopicId.js\";\nimport TokenId from \"../token/TokenId.js\";\nimport ScheduleId from \"../schedule/ScheduleId.js\";\nimport ExchangeRate from \"../ExchangeRate.js\";\nimport Status from \"../Status.js\";\nimport Long from \"long\";\nimport * as proto from \"@hashgraph/proto\";\nimport TransactionId from \"../transaction/TransactionId.js\";\n\n/**\n * The consensus result for a transaction, which might not be currently known,\n * or may succeed or fail.\n */\nexport default class TransactionReceipt {\n    /**\n     * @private\n     * @param {object} props\n     * @param {Status} props.status\n     * @param {?AccountId} props.accountId\n     * @param {?FileId} props.fileId\n     * @param {?ContractId} props.contractId\n     * @param {?TopicId} props.topicId\n     * @param {?TokenId} props.tokenId\n     * @param {?ScheduleId} props.scheduleId\n     * @param {?ExchangeRate} props.exchangeRate\n     * @param {?Long} props.topicSequenceNumber\n     * @param {?Uint8Array} props.topicRunningHash\n     * @param {?Long} props.totalSupply\n     * @param {?TransactionId} props.scheduledTransactionId\n     * @param {Long[]} props.serials\n     * @param {TransactionReceipt[]} props.duplicates\n     * @param {TransactionReceipt[]} props.children\n     */\n    constructor(props) {\n        /**\n         * Whether the transaction succeeded or failed (or is unknown).\n         *\n         * @readonly\n         */\n        this.status = props.status;\n\n        /**\n         * The account ID, if a new account was created.\n         *\n         * @readonly\n         */\n        this.accountId = props.accountId;\n\n        /**\n         * The file ID, if a new file was created.\n         *\n         * @readonly\n         */\n        this.fileId = props.fileId;\n\n        /**\n         * The contract ID, if a new contract was created.\n         *\n         * @readonly\n         */\n        this.contractId = props.contractId;\n\n        /**\n         * The topic ID, if a new topic was created.\n         *\n         * @readonly\n         */\n        this.topicId = props.topicId;\n\n        /**\n         * The token ID, if a new token was created.\n         *\n         * @readonly\n         */\n        this.tokenId = props.tokenId;\n\n        /**\n         * The schedule ID, if a new schedule was created.\n         *\n         * @readonly\n         */\n        this.scheduleId = props.scheduleId;\n\n        /**\n         * The exchange rate of Hbars to cents (USD).\n         *\n         * @readonly\n         */\n        this.exchangeRate = props.exchangeRate;\n\n        /**\n         * Updated sequence number for a consensus service topic.\n         *\n         * @readonly\n         */\n        this.topicSequenceNumber = props.topicSequenceNumber;\n\n        /**\n         * Updated running hash for a consensus service topic.\n         *\n         * @readonly\n         */\n        this.topicRunningHash = props.topicRunningHash;\n\n        /**\n         * Updated total supply for a token\n         *\n         * @readonly\n         */\n        this.totalSupply = props.totalSupply;\n\n        this.scheduledTransactionId = props.scheduledTransactionId;\n\n        this.serials = props.serials;\n\n        /**\n         * @readonly\n         */\n        this.duplicates = props.duplicates;\n\n        /**\n         * @readonly\n         */\n        this.children = props.children;\n\n        Object.freeze(this);\n    }\n\n    /**\n     * @internal\n     * @returns {proto.ITransactionGetReceiptResponse}\n     */\n    _toProtobuf() {\n        const duplicates = this.duplicates.map(\n            (receipt) =>\n                /** @type {proto.ITransactionReceipt} */ (\n                    receipt._toProtobuf().receipt\n                )\n        );\n        const children = this.children.map(\n            (receipt) =>\n                /** @type {proto.ITransactionReceipt} */ (\n                    receipt._toProtobuf().receipt\n                )\n        );\n\n        return {\n            duplicateTransactionReceipts: duplicates,\n            childTransactionReceipts: children,\n            receipt: {\n                status: this.status.valueOf(),\n\n                accountID:\n                    this.accountId != null\n                        ? this.accountId._toProtobuf()\n                        : null,\n                fileID: this.fileId != null ? this.fileId._toProtobuf() : null,\n                contractID:\n                    this.contractId != null\n                        ? this.contractId._toProtobuf()\n                        : null,\n                topicID:\n                    this.topicId != null ? this.topicId._toProtobuf() : null,\n                tokenID:\n                    this.topicId != null ? this.topicId._toProtobuf() : null,\n                scheduleID:\n                    this.topicId != null ? this.topicId._toProtobuf() : null,\n\n                topicRunningHash:\n                    this.topicRunningHash == null\n                        ? null\n                        : this.topicRunningHash,\n\n                topicSequenceNumber: this.topicSequenceNumber,\n\n                exchangeRate: {\n                    nextRate: null,\n                    currentRate:\n                        this.exchangeRate != null\n                            ? this.exchangeRate._toProtobuf()\n                            : null,\n                },\n\n                scheduledTransactionID:\n                    this.scheduledTransactionId != null\n                        ? this.scheduledTransactionId._toProtobuf()\n                        : null,\n\n                serialNumbers: this.serials,\n            },\n        };\n    }\n\n    /**\n     * @internal\n     * @param {proto.ITransactionGetReceiptResponse} response\n     * @returns {TransactionReceipt}\n     */\n    static _fromProtobuf(response) {\n        const receipt = /** @type {proto.ITransactionReceipt} */ (\n            response.receipt\n        );\n\n        const exchangeRateSet = /** @type {proto.IExchangeRateSet} */ (\n            receipt.exchangeRate\n        );\n\n        const children =\n            response.childTransactionReceipts != null\n                ? response.childTransactionReceipts.map((child) =>\n                      TransactionReceipt._fromProtobuf({ receipt: child })\n                  )\n                : [];\n\n        const duplicates =\n            response.duplicateTransactionReceipts != null\n                ? response.duplicateTransactionReceipts.map((duplicate) =>\n                      TransactionReceipt._fromProtobuf({ receipt: duplicate })\n                  )\n                : [];\n\n        return new TransactionReceipt({\n            status: Status._fromCode(\n                receipt.status != null ? receipt.status : 0\n            ),\n\n            accountId:\n                receipt.accountID != null\n                    ? AccountId._fromProtobuf(receipt.accountID)\n                    : null,\n\n            fileId:\n                receipt.fileID != null\n                    ? FileId._fromProtobuf(receipt.fileID)\n                    : null,\n\n            contractId:\n                receipt.contractID != null\n                    ? ContractId._fromProtobuf(receipt.contractID)\n                    : null,\n\n            topicId:\n                receipt.topicID != null\n                    ? TopicId._fromProtobuf(receipt.topicID)\n                    : null,\n\n            tokenId:\n                receipt.tokenID != null\n                    ? TokenId._fromProtobuf(receipt.tokenID)\n                    : null,\n\n            scheduleId:\n                receipt.scheduleID != null\n                    ? ScheduleId._fromProtobuf(receipt.scheduleID)\n                    : null,\n\n            exchangeRate:\n                receipt.exchangeRate != null\n                    ? ExchangeRate._fromProtobuf(\n                          /** @type {proto.IExchangeRate} */\n                          (exchangeRateSet.currentRate)\n                      )\n                    : null,\n\n            topicSequenceNumber:\n                receipt.topicSequenceNumber == null\n                    ? null\n                    : Long.fromValue(receipt.topicSequenceNumber),\n\n            topicRunningHash:\n                receipt.topicRunningHash != null\n                    ? receipt.topicRunningHash\n                    : null,\n\n            totalSupply:\n                receipt.newTotalSupply != null ? receipt.newTotalSupply : null,\n\n            scheduledTransactionId:\n                receipt.scheduledTransactionID != null\n                    ? TransactionId._fromProtobuf(\n                          receipt.scheduledTransactionID\n                      )\n                    : null,\n            serials: receipt.serialNumbers != null ? receipt.serialNumbers : [],\n            children,\n            duplicates,\n        });\n    }\n\n    /**\n     * @param {Uint8Array} bytes\n     * @returns {TransactionReceipt}\n     */\n    static fromBytes(bytes) {\n        return TransactionReceipt._fromProtobuf(\n            proto.TransactionGetReceiptResponse.decode(bytes)\n        );\n    }\n\n    /**\n     * @returns {Uint8Array}\n     */\n    toBytes() {\n        return proto.TransactionGetReceiptResponse.encode(\n            this._toProtobuf()\n        ).finish();\n    }\n}\n", "import Query, { QUERY_REGISTRY } from \"../query/Query.js\";\nimport Status from \"../Status.js\";\nimport TransactionReceipt from \"./TransactionReceipt.js\";\nimport TransactionId from \"./TransactionId.js\";\nimport PrecheckStatusError from \"../PrecheckStatusError.js\";\nimport ReceiptStatusError from \"../ReceiptStatusError.js\";\nimport { ExecutionState } from \"../Executable.js\";\nimport { ResponseCodeEnum } from \"@hashgraph/proto\";\n\n/**\n * @namespace proto\n * @typedef {import(\"@hashgraph/proto\").IQuery} proto.IQuery\n * @typedef {import(\"@hashgraph/proto\").IQueryHeader} proto.IQueryHeader\n * @typedef {import(\"@hashgraph/proto\").IResponse} proto.IResponse\n * @typedef {import(\"@hashgraph/proto\").IResponseHeader} proto.IResponseHeader\n * @typedef {import(\"@hashgraph/proto\").ITransactionReceipt} proto.ITransactionReceipt\n * @typedef {import(\"@hashgraph/proto\").ITransactionGetReceiptQuery} proto.ITransactionGetReceiptQuery\n * @typedef {import(\"@hashgraph/proto\").ITransactionGetReceiptResponse} proto.ITransactionGetReceiptResponse\n * @typedef {import(\"@hashgraph/proto\").ResponseCodeEnum} proto.ResponseCodeEnum\n */\n\n/**\n * @typedef {import(\"../account/AccountId.js\").default} AccountId\n * @typedef {import(\"../channel/Channel.js\").default} Channel\n * @typedef {import(\"../client/Client.js\").default<*, *>} Client\n */\n\n/**\n * @augments {Query<TransactionReceipt>}\n */\nexport default class TransactionReceiptQuery extends Query {\n    /**\n     * @param {object} [props]\n     * @param {TransactionId | string} [props.transactionId]\n     * @param {boolean} [props.includeDuplicates]\n     * @param {boolean} [props.includeChildren]\n     */\n    constructor(props = {}) {\n        super();\n\n        /**\n         * @private\n         * @type {?TransactionId}\n         */\n        this._transactionId = null;\n\n        /**\n         * @private\n         * @type {?boolean}\n         */\n        this._includeChildren = null;\n\n        /**\n         * @private\n         * @type {?boolean}\n         */\n        this._includeDuplicates = null;\n\n        if (props.transactionId != null) {\n            this.setTransactionId(props.transactionId);\n        }\n\n        if (props.includeChildren != null) {\n            this.setIncludeChildren(props.includeChildren);\n        }\n\n        if (props.includeDuplicates != null) {\n            this.setIncludeDuplicates(props.includeDuplicates);\n        }\n    }\n\n    /**\n     * @internal\n     * @param {proto.IQuery} query\n     * @returns {TransactionReceiptQuery}\n     */\n    static _fromProtobuf(query) {\n        const receipt = /** @type {proto.ITransactionGetReceiptQuery} */ (\n            query.transactionGetReceipt\n        );\n\n        return new TransactionReceiptQuery({\n            transactionId: receipt.transactionID\n                ? TransactionId._fromProtobuf(receipt.transactionID)\n                : undefined,\n            includeDuplicates:\n                receipt.includeDuplicates != null\n                    ? receipt.includeDuplicates\n                    : undefined,\n            includeChildren:\n                receipt.includeChildReceipts != null\n                    ? receipt.includeChildReceipts\n                    : undefined,\n        });\n    }\n\n    /**\n     * @returns {?TransactionId}\n     */\n    get transactionId() {\n        return this._transactionId;\n    }\n\n    /**\n     * Set the transaction ID for which the receipt is being requested.\n     *\n     * @param {TransactionId | string} transactionId\n     * @returns {this}\n     */\n    setTransactionId(transactionId) {\n        this._transactionId =\n            typeof transactionId === \"string\"\n                ? TransactionId.fromString(transactionId)\n                : transactionId.clone();\n\n        return this;\n    }\n\n    /**\n     * @param {boolean} includeDuplicates\n     * @returns {TransactionReceiptQuery}\n     */\n    setIncludeDuplicates(includeDuplicates) {\n        this._includeDuplicates = includeDuplicates;\n        return this;\n    }\n\n    /**\n     * @returns {boolean}\n     */\n    get includeDuplicates() {\n        return this._includeDuplicates != null\n            ? this._includeDuplicates\n            : false;\n    }\n\n    /**\n     * @param {boolean} includeChildren\n     * @returns {TransactionReceiptQuery}\n     */\n    setIncludeChildren(includeChildren) {\n        this._includeChildren = includeChildren;\n        return this;\n    }\n\n    /**\n     * @returns {boolean}\n     */\n    get includeChildren() {\n        return this._includeChildren != null ? this._includeChildren : false;\n    }\n\n    /**\n     * @override\n     * @protected\n     * @returns {boolean}\n     */\n    _isPaymentRequired() {\n        return false;\n    }\n\n    /**\n     * @override\n     * @internal\n     * @param {proto.IQuery} request\n     * @param {proto.IResponse} response\n     * @returns {ExecutionState}\n     */\n    // eslint-disable-next-line @typescript-eslint/no-unused-vars\n    _shouldRetry(request, response) {\n        const { nodeTransactionPrecheckCode } =\n            this._mapResponseHeader(response);\n\n        let status = Status._fromCode(\n            nodeTransactionPrecheckCode != null\n                ? nodeTransactionPrecheckCode\n                : ResponseCodeEnum.OK\n        );\n\n        switch (status) {\n            case Status.Busy:\n            case Status.Unknown:\n            case Status.ReceiptNotFound:\n                return ExecutionState.Retry;\n            case Status.Ok:\n                break;\n            default:\n                return ExecutionState.Error;\n        }\n\n        const transactionGetReceipt =\n            /** @type {proto.ITransactionGetReceiptResponse} */ (\n                response.transactionGetReceipt\n            );\n        const receipt = /** @type {proto.ITransactionReceipt} */ (\n            transactionGetReceipt.receipt\n        );\n        const receiptStatusCode = /** @type {proto.ResponseCodeEnum} */ (\n            receipt.status\n        );\n\n        status = Status._fromCode(receiptStatusCode);\n\n        switch (status) {\n            case Status.Busy:\n            case Status.Unknown:\n            case Status.ReceiptNotFound:\n                return ExecutionState.Retry;\n            case Status.Success:\n                return ExecutionState.Finished;\n            default:\n                return ExecutionState.Error;\n        }\n    }\n\n    /**\n     * @override\n     * @internal\n     * @param {proto.IQuery} request\n     * @param {proto.IResponse} response\n     * @returns {Error}\n     */\n    // eslint-disable-next-line @typescript-eslint/no-unused-vars\n    _mapStatusError(request, response) {\n        const { nodeTransactionPrecheckCode } =\n            this._mapResponseHeader(response);\n\n        let status = Status._fromCode(\n            nodeTransactionPrecheckCode != null\n                ? nodeTransactionPrecheckCode\n                : ResponseCodeEnum.OK\n        );\n\n        switch (status) {\n            case Status.Ok:\n                // Do nothing\n                break;\n\n            default:\n                return new PrecheckStatusError({\n                    status,\n                    transactionId: this._getTransactionId(),\n                });\n        }\n\n        const transactionGetReceipt =\n            /** @type {proto.ITransactionGetReceiptResponse} */ (\n                response.transactionGetReceipt\n            );\n        const receipt = /** @type {proto.ITransactionReceipt} */ (\n            transactionGetReceipt.receipt\n        );\n        const receiptStatusCode = /** @type {proto.ResponseCodeEnum} */ (\n            receipt.status\n        );\n\n        status = Status._fromCode(receiptStatusCode);\n\n        return new ReceiptStatusError({\n            status,\n            transactionId: this._getTransactionId(),\n            transactionReceipt: TransactionReceipt._fromProtobuf(\n                transactionGetReceipt\n            ),\n        });\n    }\n\n    /**\n     * @param {Client} client\n     */\n    _validateChecksums(client) {\n        if (\n            this._transactionId != null &&\n            this._transactionId.accountId != null\n        ) {\n            this._transactionId.accountId.validateChecksum(client);\n        }\n    }\n\n    /**\n     * @override\n     * @internal\n     * @param {Channel} channel\n     * @param {proto.IQuery} request\n     * @returns {Promise<proto.IResponse>}\n     */\n    _execute(channel, request) {\n        return channel.crypto.getTransactionReceipts(request);\n    }\n\n    /**\n     * @override\n     * @internal\n     * @param {proto.IResponse} response\n     * @returns {proto.IResponseHeader}\n     */\n    _mapResponseHeader(response) {\n        const transactionGetReceipt =\n            /** @type {proto.ITransactionGetReceiptResponse} */ (\n                response.transactionGetReceipt\n            );\n        return /** @type {proto.IResponseHeader} */ (\n            transactionGetReceipt.header\n        );\n    }\n\n    /**\n     * @protected\n     * @override\n     * @param {proto.IResponse} response\n     * @param {AccountId} nodeAccountId\n     * @param {proto.IQuery} request\n     * @returns {Promise<TransactionReceipt>}\n     */\n    // eslint-disable-next-line @typescript-eslint/no-unused-vars\n    _mapResponse(response, nodeAccountId, request) {\n        const transactionGetReceipt =\n            /** @type {proto.ITransactionGetReceiptResponse} */ (\n                response.transactionGetReceipt\n            );\n\n        return Promise.resolve(\n            TransactionReceipt._fromProtobuf(transactionGetReceipt)\n        );\n    }\n\n    /**\n     * @override\n     * @internal\n     * @param {proto.IQueryHeader} header\n     * @returns {proto.IQuery}\n     */\n    _onMakeRequest(header) {\n        return {\n            transactionGetReceipt: {\n                header,\n                transactionID:\n                    this._transactionId != null\n                        ? this._transactionId._toProtobuf()\n                        : null,\n                includeDuplicates: this._includeDuplicates,\n                includeChildReceipts: this._includeChildren,\n            },\n        };\n    }\n}\n\nQUERY_REGISTRY.set(\n    \"transactionGetReceipt\",\n    // eslint-disable-next-line @typescript-eslint/unbound-method\n    TransactionReceiptQuery._fromProtobuf\n);\n", "import AccountId from \"./account/AccountId.js\";\nimport Hbar from \"./Hbar.js\";\n\n/**\n * @namespace proto\n * @typedef {import(\"@hashgraph/proto\").IAccountAmount} proto.IAccountAmount\n * @typedef {import(\"@hashgraph/proto\").IAccountID} proto.IAccountID\n */\n\n/**\n * @typedef {import(\"bignumber.js\").default} BigNumber\n * @typedef {import(\"long\")} Long\n */\n\n/**\n * An account, and the amount that it sends or receives during a cryptocurrency transfer.\n */\nexport default class Transfer {\n    /**\n     * @internal\n     * @param {object} props\n     * @param {AccountId | string} props.accountId\n     * @param {number | string | Long | BigNumber | Hbar} props.amount\n     */\n    constructor(props) {\n        /**\n         * The Account ID that sends or receives cryptocurrency.\n         *\n         * @readonly\n         */\n        this.accountId =\n            props.accountId instanceof AccountId\n                ? props.accountId\n                : AccountId.fromString(props.accountId);\n\n        /**\n         * The amount of tinybars that the account sends(negative) or receives(positive).\n         *\n         * @readonly\n         */\n        this.amount =\n            props.amount instanceof Hbar\n                ? props.amount\n                : new Hbar(props.amount);\n\n        Object.freeze(this);\n    }\n\n    /**\n     * @internal\n     * @param {proto.IAccountAmount} transfer\n     * @returns {Transfer}\n     */\n    static _fromProtobuf(transfer) {\n        return new Transfer({\n            accountId: AccountId._fromProtobuf(\n                /** @type {proto.IAccountID} */ (transfer.accountID)\n            ),\n            amount: Hbar.fromTinybars(\n                transfer.amount != null ? transfer.amount : 0\n            ),\n        });\n    }\n\n    /**\n     * @internal\n     * @returns {proto.IAccountAmount}\n     */\n    _toProtobuf() {\n        return {\n            accountID: this.accountId._toProtobuf(),\n            amount: this.amount.toTinybars(),\n        };\n    }\n}\n", "import ContractId from \"./ContractId.js\";\n\n/**\n * @namespace proto\n * @typedef {import(\"@hashgraph/proto\").IContractLoginfo} proto.IContractLoginfo\n * @typedef {import(\"@hashgraph/proto\").IContractID} proto.IContractID\n */\n\n/**\n * The log information for an event returned by a smart contract function call. One function call\n * may return several such events.\n */\nexport default class ContractLogInfo {\n    /**\n     * @param {object} props\n     * @param {ContractId} props.contractId\n     * @param {Uint8Array} props.bloom\n     * @param {Uint8Array[]} props.topics\n     * @param {Uint8Array} props.data\n     */\n    constructor(props) {\n        /**\n         * Address of a contract that emitted the event.\n         *\n         * @readonly\n         */\n        this.contractId = props.contractId;\n\n        /**\n         * Bloom filter for a particular log.\n         *\n         * @readonly\n         */\n        this.bloom = props.bloom;\n\n        /**\n         * Topics of a particular event.\n         *\n         * @readonly\n         */\n        this.topics = props.topics;\n\n        /**\n         * Event data.\n         *\n         * @readonly\n         */\n        this.data = props.data;\n\n        Object.freeze(this);\n    }\n\n    /**\n     * @internal\n     * @param {proto.IContractLoginfo} info\n     * @returns {ContractLogInfo}\n     */\n    static _fromProtobuf(info) {\n        return new ContractLogInfo({\n            contractId: ContractId._fromProtobuf(\n                /** @type {proto.IContractID} */ (info.contractID)\n            ),\n            bloom: info.bloom != null ? info.bloom : new Uint8Array(),\n            topics: info.topic != null ? info.topic : [],\n            data: info.data != null ? info.data : new Uint8Array(),\n        });\n    }\n\n    /**\n     * @internal\n     * @returns {proto.IContractLoginfo}\n     */\n    _toProtobuf() {\n        return {\n            contractID: this.contractId._toProtobuf(),\n            bloom: this.bloom,\n            topic: this.topics,\n            data: this.data,\n        };\n    }\n}\n", "/**\n * @param {Uint8Array} data\n * @returns {string}\n */\nexport function decode(data) {\n    // eslint-disable-next-line node/no-unsupported-features/node-builtins\n    return new TextDecoder().decode(data);\n}\n\n/**\n * @param {string} text\n * @returns {Uint8Array}\n */\nexport function encode(text) {\n    // eslint-disable-next-line node/no-unsupported-features/node-builtins\n    return new TextEncoder().encode(text);\n}\n", "import ContractLogInfo from \"./ContractLogInfo.js\";\nimport ContractId from \"./ContractId.js\";\nimport BigNumber from \"bignumber.js\";\nimport * as hex from \"../encoding/hex.js\";\nimport * as utf8 from \"../encoding/utf8.js\";\nimport * as util from \"../util.js\";\nimport Long from \"long\";\n\n/**\n * @namespace proto\n * @typedef {import(\"@hashgraph/proto\").IContractFunctionResult} proto.IContractFunctionResult\n * @typedef {import(\"@hashgraph/proto\").IContractID} proto.IContractID\n */\n/**\n * The result returned by a call to a smart contract function. This is part of the response to\n * a ContractCallLocal query, and is in the record for a ContractCall or ContractCreateInstance\n * transaction. The ContractCreateInstance transaction record has the results of the call to\n * the constructor.\n */\nexport default class ContractFunctionResult {\n    /**\n     * Constructor isn't part of the stable API\n     *\n     * @param {object} result\n     * @param {?ContractId} result.contractId\n     * @param {?string} result.errorMessage\n     * @param {Uint8Array} result.bloom\n     * @param {Long} result.gasUsed\n     * @param {ContractLogInfo[]} result.logs\n     * @param {ContractId[]} result.createdContractIds\n     * @param {Uint8Array} result.bytes\n     */\n    constructor(result) {\n        /**\n         * The smart contract instance whose function was called.\n         */\n        this.contractId = result.contractId;\n\n        this.bytes = result.bytes;\n\n        /**\n         * Message In case there was an error during smart contract execution.\n         */\n        this.errorMessage = result.errorMessage;\n\n        /**\n         * Bloom filter for record\n         */\n        this.bloom = result.bloom;\n\n        /**\n         * Units of gas used  to execute contract.\n         */\n        this.gasUsed = result.gasUsed;\n\n        /**\n         * The log info for events returned by the function.\n         */\n        this.logs = result.logs;\n\n        this.createdContractIds = result.createdContractIds;\n    }\n\n    /**\n     * @param {proto.IContractFunctionResult} result\n     * @returns {ContractFunctionResult}\n     */\n    static _fromProtobuf(result) {\n        const contractId = /** @type {proto.IContractID | null} */ (\n            result.contractID\n        );\n        const gas = /** @type {Long | number} */ (result.gasUsed);\n\n        return new ContractFunctionResult({\n            bytes: /** @type {Uint8Array} */ (result.contractCallResult),\n            contractId:\n                contractId != null\n                    ? ContractId._fromProtobuf(contractId)\n                    : null,\n            errorMessage:\n                result.errorMessage != null ? result.errorMessage : null,\n            bloom: /** @type {Uint8Array} */ (result.bloom),\n            gasUsed: gas instanceof Long ? gas : Long.fromValue(gas),\n            logs: (result.logInfo != null ? result.logInfo : []).map((info) =>\n                ContractLogInfo._fromProtobuf(info)\n            ),\n            createdContractIds: (result.createdContractIDs != null\n                ? result.createdContractIDs\n                : []\n            ).map((contractId) => ContractId._fromProtobuf(contractId)),\n        });\n    }\n\n    /**\n     * @returns {Uint8Array}\n     */\n    asBytes() {\n        return this.bytes;\n    }\n\n    /**\n     * @param {number} [index]\n     * @returns {string}\n     */\n    getString(index) {\n        return utf8.decode(this.getBytes(index));\n    }\n\n    /**\n     * @private\n     * @param {number} [index]\n     * @returns {Uint8Array}\n     */\n    getBytes(index) {\n        // Len should never be larger than Number.MAX\n        // index * 32 is the position of the lenth\n        // (index + 1) * 32 onward to (index + 1) * 32 + len will be the elements of the array\n        // Arrays in solidity cannot be longer than 1024:\n        // https://solidity.readthedocs.io/en/v0.4.21/introduction-to-smart-contracts.html\n        const offset = this.getInt32(index);\n        const len = util.safeView(this.bytes).getInt32(offset + 28);\n\n        return this.bytes.subarray(offset + 32, offset + 32 + len);\n    }\n\n    /**\n     * @param {number} [index]\n     * @returns {Uint8Array}\n     */\n    getBytes32(index) {\n        return this.bytes.subarray(\n            (index != null ? index : 0) * 32,\n            (index != null ? index : 0) * 32 + 32\n        );\n    }\n\n    /**\n     * @param {number} [index]\n     * @returns {boolean}\n     */\n    getBool(index) {\n        return this.bytes[(index != null ? index : 0) * 32 + 31] !== 0;\n    }\n\n    /**\n     * @param {number} [index]\n     * @returns {number}\n     */\n    getInt8(index) {\n        return this.bytes[(index != null ? index : 0) * 32 + 31];\n    }\n\n    /**\n     * @param {number} [index]\n     * @returns {number}\n     */\n    getInt32(index) {\n        // .getInt32() interprets as big-endian\n        // Using DataView instead of Uint32Array because the latter interprets\n        // using platform endianness which is little-endian on x86\n        const position = (index != null ? index : 0) * 32 + 28;\n        return util.safeView(this.bytes).getInt32(position);\n    }\n\n    /**\n     * @param {number} [index]\n     * @returns {BigNumber}\n     */\n    getInt64(index) {\n        return new BigNumber(\n            hex.encode(\n                this._getBytes32(index != null ? index : 0).subarray(24, 32)\n            ),\n            16\n        );\n    }\n\n    /**\n     * @param {number} [index]\n     * @returns {BigNumber}\n     */\n    getInt256(index) {\n        return new BigNumber(\n            hex.encode(this._getBytes32(index != null ? index : 0)),\n            16\n        );\n    }\n\n    /**\n     * @param {number} [index]\n     * @returns {number}\n     */\n    getUint8(index) {\n        return this.bytes[(index != null ? index : 0) * 32 + 31];\n    }\n\n    /**\n     * @param {number} [index]\n     * @returns {number}\n     */\n    getUint32(index) {\n        // .getUint32() interprets as big-endian\n        // Using DataView instead of Uint32Array because the latter interprets\n        // using platform endianness which is little-endian on x86\n        const position = (index != null ? index : 0) * 32 + 28;\n        return util.safeView(this.bytes).getUint32(position);\n    }\n\n    /**\n     * @param {number} [index]\n     * @returns {BigNumber}\n     */\n    getUint64(index) {\n        return new BigNumber(\n            hex.encode(this._getBytes32(index).subarray(24, 32)),\n            16\n        );\n    }\n\n    /**\n     * @param {number} [index]\n     * @returns {BigNumber}\n     */\n    getUint256(index) {\n        return new BigNumber(hex.encode(this._getBytes32(index)), 16);\n    }\n\n    /**\n     * @param {number} [index]\n     * @returns {string}\n     */\n    getAddress(index) {\n        return hex.encode(\n            this.bytes.subarray(\n                (index != null ? index : 0) * 32 + 12,\n                (index != null ? index : 0) * 32 + 32\n            )\n        );\n    }\n\n    /**\n     * @param {number} [index]\n     * @returns {Uint8Array}\n     */\n    _getBytes32(index) {\n        return this.bytes.subarray(\n            (index != null ? index : 0) * 32,\n            (index != null ? index : 0) * 32 + 32\n        );\n    }\n}\n", "import AccountId from \"../account/AccountId.js\";\nimport ObjectMap from \"../ObjectMap.js\";\n\n/**\n * @augments {ObjectMap<AccountId, Long>}\n */\nexport default class TokenTransferAccountMap extends ObjectMap {\n    constructor() {\n        super((s) => AccountId.fromString(s));\n    }\n}\n", "import TokenId from \"../token/TokenId.js\";\nimport AccountId from \"../account/AccountId.js\";\nimport TokenTransferAccountMap from \"./TokenTransferAccountMap.js\";\nimport ObjectMap from \"../ObjectMap.js\";\n\n/**\n * @namespace proto\n * @typedef {import(\"@hashgraph/proto\").ITokenTransferList} proto.ITokenTransferList\n * @typedef {import(\"@hashgraph/proto\").IAccountAmount} proto.IAccountAmount\n * @typedef {import(\"@hashgraph/proto\").ITokenID} proto.ITokenID\n * @typedef {import(\"@hashgraph/proto\").IAccountID} proto.IAccountID\n */\n\n/**\n * @augments {ObjectMap<TokenId, TokenTransferAccountMap>}\n */\nexport default class TokenTransferMap extends ObjectMap {\n    constructor() {\n        super((s) => TokenId.fromString(s));\n    }\n\n    /**\n     * @internal\n     * @param {TokenId} tokenId\n     * @param {AccountId} accountId\n     * @param {Long} amount\n     */\n    __set(tokenId, accountId, amount) {\n        const token = tokenId.toString();\n\n        let _map = this._map.get(token);\n        if (_map == null) {\n            _map = new TokenTransferAccountMap();\n            this._map.set(token, _map);\n            this.__map.set(tokenId, _map);\n        }\n\n        _map._set(accountId, amount);\n    }\n\n    /**\n     * @param {proto.ITokenTransferList[]} transfers\n     * @returns {TokenTransferMap}\n     */\n    static _fromProtobuf(transfers) {\n        const tokenTransfersMap = new TokenTransferMap();\n\n        for (const transfer of transfers) {\n            const token = TokenId._fromProtobuf(\n                /** @type {proto.ITokenID} */ (transfer.token)\n            );\n\n            for (const aa of transfer.transfers != null\n                ? transfer.transfers\n                : []) {\n                const account = AccountId._fromProtobuf(\n                    /** @type {proto.IAccountID} */ (aa.accountID)\n                );\n\n                tokenTransfersMap.__set(\n                    token,\n                    account,\n                    /** @type {Long} */ (aa.amount)\n                );\n            }\n        }\n\n        return tokenTransfersMap;\n    }\n\n    /**\n     * @returns {proto.ITokenTransferList[]}\n     */\n    _toProtobuf() {\n        /** @type {proto.ITokenTransferList[]} */\n        const tokenTransferList = [];\n\n        for (const [tokenId, value] of this) {\n            /** @type {proto.IAccountAmount[]} */\n            const transfers = [];\n\n            for (const [accountId, amount] of value) {\n                transfers.push({\n                    accountID: accountId._toProtobuf(),\n                    amount: amount,\n                });\n            }\n\n            tokenTransferList.push({\n                token: tokenId._toProtobuf(),\n                transfers: transfers,\n            });\n        }\n\n        return tokenTransferList;\n    }\n}\n", "import TokenId from \"../token/TokenId.js\";\nimport AccountId from \"../account/AccountId.js\";\nimport ObjectMap from \"../ObjectMap.js\";\n\n/**\n * @namespace proto\n * @typedef {import(\"@hashgraph/proto\").ITokenTransferList} proto.ITokenTransferList\n * @typedef {import(\"@hashgraph/proto\").INftTransfer} proto.INftTransfer\n * @typedef {import(\"@hashgraph/proto\").IAccountAmount} proto.IAccountAmount\n * @typedef {import(\"@hashgraph/proto\").ITokenID} proto.ITokenID\n * @typedef {import(\"@hashgraph/proto\").IAccountID} proto.IAccountID\n */\n\n/**\n * @typedef {object} NftTransfer\n * @property {AccountId} sender\n * @property {AccountId} recipient\n * @property {Long} serial\n */\n\n/**\n * @augments {ObjectMap<TokenId, NftTransfer[]>}\n */\nexport default class TokenNftTransferMap extends ObjectMap {\n    constructor() {\n        super((s) => TokenId.fromString(s));\n    }\n\n    /**\n     * @internal\n     * @param {TokenId} tokenId\n     * @param {NftTransfer} nftTransfer\n     */\n    __set(tokenId, nftTransfer) {\n        const token = tokenId.toString();\n\n        let _map = this._map.get(token);\n        if (_map == null) {\n            _map = [];\n            this._map.set(token, _map);\n            this.__map.set(tokenId, _map);\n        }\n\n        _map.push(nftTransfer);\n    }\n\n    /**\n     * @param {proto.ITokenTransferList[]} transfers\n     * @returns {TokenNftTransferMap}\n     */\n    static _fromProtobuf(transfers) {\n        const tokenTransfersMap = new TokenNftTransferMap();\n\n        for (const transfer of transfers) {\n            const token = TokenId._fromProtobuf(\n                /** @type {proto.ITokenID} */ (transfer.token)\n            );\n\n            for (const aa of transfer.nftTransfers != null\n                ? transfer.nftTransfers\n                : []) {\n                const sender = AccountId._fromProtobuf(\n                    /** @type {proto.IAccountID} */ (aa.senderAccountID)\n                );\n                const recipient = AccountId._fromProtobuf(\n                    /** @type {proto.IAccountID} */ (aa.receiverAccountID)\n                );\n\n                tokenTransfersMap.__set(token, {\n                    sender,\n                    recipient,\n                    serial: /** @type {Long} */ (aa.serialNumber),\n                });\n            }\n        }\n\n        return tokenTransfersMap;\n    }\n\n    /**\n     * @returns {proto.ITokenTransferList[]}\n     */\n    _toProtobuf() {\n        /** @type {proto.ITokenTransferList[]} */\n        const tokenTransferList = [];\n\n        for (const [tokenId, value] of this) {\n            /** @type {proto.INftTransfer[]} */\n            const transfers = [];\n\n            for (const transfer of value) {\n                transfers.push({\n                    senderAccountID: transfer.sender._toProtobuf(),\n                    receiverAccountID: transfer.recipient._toProtobuf(),\n                    serialNumber: transfer.serial,\n                });\n            }\n\n            tokenTransferList.push({\n                token: tokenId._toProtobuf(),\n                nftTransfers: transfers,\n            });\n        }\n\n        return tokenTransferList;\n    }\n}\n", "import TransactionReceipt from \"./TransactionReceipt.js\";\nimport TransactionId from \"./TransactionId.js\";\nimport Timestamp from \"../Timestamp.js\";\nimport Hbar from \"../Hbar.js\";\nimport Transfer from \"../Transfer.js\";\nimport ContractFunctionResult from \"../contract/ContractFunctionResult.js\";\nimport TokenTransferMap from \"../account/TokenTransferMap.js\";\nimport TokenNftTransferMap from \"../account/TokenNftTransferMap.js\";\nimport * as proto from \"@hashgraph/proto\";\nimport ScheduleId from \"../schedule/ScheduleId.js\";\nimport AssessedCustomFee from \"../token/AssessedCustomFee.js\";\nimport TokenAssocation from \"../token/TokenAssociation.js\";\nimport Key from \"../Key.js\";\nimport PublicKey from \"../PublicKey.js\";\n\n/**\n * @typedef {import(\"../token/TokenId.js\").default} TokenId\n */\n\n/**\n * Response when the client sends the node TransactionGetRecordResponse.\n */\nexport default class TransactionRecord {\n    /**\n     * @private\n     * @param {object} props\n     * @param {ContractFunctionResult} [props.contractFunctionResult]\n     * @param {TransactionReceipt} props.receipt\n     * @param {Uint8Array} props.transactionHash\n     * @param {Timestamp} props.consensusTimestamp\n     * @param {TransactionId} props.transactionId\n     * @param {string} props.transactionMemo\n     * @param {Hbar} props.transactionFee\n     * @param {Transfer[]} props.transfers\n     * @param {TokenTransferMap} props.tokenTransfers\n     * @param {?ScheduleId} props.scheduleRef\n     * @param {AssessedCustomFee[]} props.assessedCustomFees\n     * @param {TokenNftTransferMap} props.nftTransfers\n     * @param {TokenAssocation[]} props.automaticTokenAssociations\n     * @param {Timestamp | null} props.parentConsensusTimestamp\n     * @param {PublicKey | null} props.aliasKey\n     * @param {TransactionRecord[]} props.duplicates\n     * @param {TransactionRecord[]} props.children\n     */\n    constructor(props) {\n        /**\n         * The status (reach consensus, or failed, or is unknown) and the ID of\n         * any new account/file/instance created.\n         *\n         * @readonly\n         */\n        this.receipt = props.receipt;\n\n        /**\n         * The hash of the Transaction that executed (not the hash of any Transaction that failed\n         * for having a duplicate TransactionID).\n         *\n         * @readonly\n         */\n        this.transactionHash = props.transactionHash;\n\n        /**\n         * The consensus timestamp (or null if didn't reach consensus yet).\n         *\n         * @readonly\n         */\n        this.consensusTimestamp = props.consensusTimestamp;\n\n        /**\n         * The ID of the transaction this record represents.\n         *\n         * @readonly\n         */\n        this.transactionId = props.transactionId;\n\n        /**\n         * The memo that was submitted as part of the transaction (max 100 bytes).\n         *\n         * @readonly\n         */\n        this.transactionMemo = props.transactionMemo;\n\n        /**\n         * The actual transaction fee charged,\n         * not the original transactionFee value from TransactionBody.\n         *\n         * @readonly\n         */\n        this.transactionFee = props.transactionFee;\n\n        /**\n         * All hbar transfers as a result of this transaction, such as fees, or transfers performed\n         * by the transaction, or by a smart contract it calls, or by the creation of threshold\n         * records that it triggers.\n         *\n         * @readonly\n         */\n        this.transfers = props.transfers;\n\n        /**\n         * Record of the value returned by the smart contract function or constructor.\n         *\n         * @readonly\n         */\n        this.contractFunctionResult =\n            props.contractFunctionResult != null\n                ? props.contractFunctionResult\n                : null;\n\n        /**\n         * All the token transfers from this account\n         *\n         * @readonly\n         */\n        this.tokenTransfers = props.tokenTransfers;\n\n        /**\n         * Reference to the scheduled transaction ID that this transaction record represent\n         *\n         * @readonly\n         */\n        this.scheduleRef = props.scheduleRef;\n\n        /**\n         * All custom fees that were assessed during a CryptoTransfer, and must be paid if the\n         * transaction status resolved to SUCCESS\n         *\n         * @readonly\n         */\n        this.assessedCustomFees = props.assessedCustomFees;\n\n        /** @readonly */\n        this.nftTransfers = props.nftTransfers;\n\n        /**\n         * All token associations implicitly created while handling this transaction\n         *\n         * @readonly\n         */\n        this.automaticTokenAssociations = props.automaticTokenAssociations;\n\n        /**\n         * The parent consensus timestamp\n         *\n         * @readonly\n         */\n        this.parentConsensusTimestamp = props.parentConsensusTimestamp;\n\n        this.aliasKey = props.aliasKey;\n\n        /**\n         * @readonly\n         */\n        this.duplicates = props.duplicates;\n\n        /**\n         * @readonly\n         */\n        this.children = props.children;\n\n        Object.freeze(this);\n    }\n\n    /**\n     * @internal\n     * @returns {proto.ITransactionGetRecordResponse}\n     */\n    _toProtobuf() {\n        const tokenTransfers = this.tokenTransfers._toProtobuf();\n        const nftTransfers = this.nftTransfers._toProtobuf();\n\n        const tokenTransferLists = [];\n\n        for (const tokenTransfer of tokenTransfers) {\n            for (const nftTransfer of nftTransfers) {\n                if (\n                    tokenTransfer.token != null &&\n                    nftTransfer.token != null &&\n                    tokenTransfer.token.shardNum ===\n                        nftTransfer.token.shardNum &&\n                    tokenTransfer.token.realmNum ===\n                        nftTransfer.token.realmNum &&\n                    tokenTransfer.token.tokenNum === nftTransfer.token.tokenNum\n                ) {\n                    tokenTransferLists.push({\n                        token: tokenTransfer.token,\n                        transfers: tokenTransfer.transfers,\n                        nftTransfers: tokenTransfer.nftTransfers,\n                    });\n                } else {\n                    tokenTransferLists.push(tokenTransfer);\n                    tokenTransferLists.push(nftTransfer);\n                }\n            }\n        }\n\n        const duplicates = this.duplicates.map(\n            (record) =>\n                /** @type {proto.ITransactionRecord} */ (\n                    record._toProtobuf().transactionRecord\n                )\n        );\n        const children = this.children.map(\n            (record) =>\n                /** @type {proto.ITransactionRecord} */ (\n                    record._toProtobuf().transactionRecord\n                )\n        );\n\n        return {\n            duplicateTransactionRecords: duplicates,\n            childTransactionRecords: children,\n            transactionRecord: {\n                receipt: this.receipt._toProtobuf().receipt,\n\n                transactionHash:\n                    this.transactionHash != null ? this.transactionHash : null,\n                consensusTimestamp:\n                    this.consensusTimestamp != null\n                        ? this.consensusTimestamp._toProtobuf()\n                        : null,\n                transactionID:\n                    this.transactionId != null\n                        ? this.transactionId._toProtobuf()\n                        : null,\n                memo:\n                    this.transactionMemo != null ? this.transactionMemo : null,\n\n                transactionFee:\n                    this.transactionFee != null\n                        ? this.transactionFee.toTinybars()\n                        : null,\n\n                contractCallResult:\n                    this.contractFunctionResult != null\n                        ? this.contractFunctionResult\n                        : null,\n\n                contractCreateResult:\n                    this.contractFunctionResult != null\n                        ? this.contractFunctionResult\n                        : null,\n\n                transferList:\n                    this.transfers != null\n                        ? {\n                              accountAmounts: this.transfers.map((transfer) =>\n                                  transfer._toProtobuf()\n                              ),\n                          }\n                        : null,\n                tokenTransferLists,\n                scheduleRef:\n                    this.scheduleRef != null\n                        ? this.scheduleRef._toProtobuf()\n                        : null,\n                assessedCustomFees: this.assessedCustomFees.map((fee) =>\n                    fee._toProtobuf()\n                ),\n                automaticTokenAssociations: this.automaticTokenAssociations.map(\n                    (association) => association._toProtobuf()\n                ),\n                parentConsensusTimestamp:\n                    this.parentConsensusTimestamp != null\n                        ? this.parentConsensusTimestamp._toProtobuf()\n                        : null,\n                alias:\n                    this.aliasKey != null\n                        ? proto.Key.encode(\n                              this.aliasKey._toProtobufKey()\n                          ).finish()\n                        : null,\n            },\n        };\n    }\n\n    /**\n     * @internal\n     * @param {proto.ITransactionGetRecordResponse} response\n     * @returns {TransactionRecord}\n     */\n    static _fromProtobuf(response) {\n        const record = /** @type {proto.ITransactionRecord} */ (\n            response.transactionRecord\n        );\n\n        let aliasKey =\n            record.alias != null && record.alias.length > 0\n                ? Key._fromProtobufKey(proto.Key.decode(record.alias))\n                : null;\n\n        if (!(aliasKey instanceof PublicKey)) {\n            aliasKey = null;\n        }\n\n        const children =\n            response.childTransactionRecords != null\n                ? response.childTransactionRecords.map((child) =>\n                      TransactionRecord._fromProtobuf({\n                          transactionRecord: child,\n                      })\n                  )\n                : [];\n\n        const duplicates =\n            response.duplicateTransactionRecords != null\n                ? response.duplicateTransactionRecords.map((duplicate) =>\n                      TransactionRecord._fromProtobuf({\n                          transactionRecord: duplicate,\n                      })\n                  )\n                : [];\n\n        const contractFunctionResult =\n            record.contractCallResult != null\n                ? ContractFunctionResult._fromProtobuf(\n                      record.contractCallResult\n                  )\n                : record.contractCreateResult != null\n                ? ContractFunctionResult._fromProtobuf(\n                      record.contractCreateResult\n                  )\n                : undefined;\n\n        return new TransactionRecord({\n            receipt: TransactionReceipt._fromProtobuf({\n                receipt: /** @type {proto.ITransactionReceipt} */ (\n                    record.receipt\n                ),\n            }),\n            transactionHash:\n                record.transactionHash != null\n                    ? record.transactionHash\n                    : new Uint8Array(),\n            consensusTimestamp: Timestamp._fromProtobuf(\n                /** @type {proto.ITimestamp} */\n                (record.consensusTimestamp)\n            ),\n            transactionId: TransactionId._fromProtobuf(\n                /** @type {proto.ITransactionID} */ (record.transactionID)\n            ),\n            transactionMemo: record.memo != null ? record.memo : \"\",\n            transactionFee: Hbar.fromTinybars(\n                record.transactionFee != null ? record.transactionFee : 0\n            ),\n            transfers: (record.transferList != null\n                ? record.transferList.accountAmounts != null\n                    ? record.transferList.accountAmounts\n                    : []\n                : []\n            ).map((aa) => Transfer._fromProtobuf(aa)),\n            contractFunctionResult,\n            tokenTransfers: TokenTransferMap._fromProtobuf(\n                record.tokenTransferLists != null\n                    ? record.tokenTransferLists\n                    : []\n            ),\n            scheduleRef:\n                record.scheduleRef != null\n                    ? ScheduleId._fromProtobuf(record.scheduleRef)\n                    : null,\n            assessedCustomFees:\n                record.assessedCustomFees != null\n                    ? record.assessedCustomFees.map((fee) =>\n                          AssessedCustomFee._fromProtobuf(fee)\n                      )\n                    : [],\n            nftTransfers: TokenNftTransferMap._fromProtobuf(\n                record.tokenTransferLists != null\n                    ? record.tokenTransferLists\n                    : []\n            ),\n            automaticTokenAssociations:\n                record.automaticTokenAssociations != null\n                    ? record.automaticTokenAssociations.map((association) =>\n                          TokenAssocation._fromProtobuf(association)\n                      )\n                    : [],\n            parentConsensusTimestamp:\n                record.parentConsensusTimestamp != null\n                    ? Timestamp._fromProtobuf(record.parentConsensusTimestamp)\n                    : null,\n            aliasKey,\n            duplicates,\n            children,\n        });\n    }\n\n    /**\n     * @param {Uint8Array} bytes\n     * @returns {TransactionRecord}\n     */\n    static fromBytes(bytes) {\n        return TransactionRecord._fromProtobuf(\n            proto.TransactionGetRecordResponse.decode(bytes)\n        );\n    }\n\n    /**\n     * @returns {Uint8Array}\n     */\n    toBytes() {\n        return proto.TransactionGetRecordResponse.encode(\n            this._toProtobuf()\n        ).finish();\n    }\n}\n", "import TokenId from \"./TokenId.js\";\nimport AccountId from \"../account/AccountId.js\";\nimport Long from \"long\";\n\n/**\n * @namespace proto\n * @typedef {import(\"@hashgraph/proto\").IAssessedCustomFee} proto.IAssessedCustomFee\n */\n\nexport default class AssessedCustomFee {\n    /**\n     * @param {object} props\n     * @param {AccountId | string} [props.feeCollectorAccountId]\n     * @param {TokenId | string} [props.tokenId]\n     * @param {Long | number} [props.amount]\n     * @param {AccountId[]} [props.payerAccountIds]\n     */\n    constructor(props = {}) {\n        /**\n         * @type {?AccountId}\n         */\n        this._feeCollectorAccountId;\n\n        if (props.feeCollectorAccountId != null) {\n            this.setFeeCollectorAccountId(props.feeCollectorAccountId);\n        }\n\n        /**\n         * @type {?TokenId}\n         */\n        this._tokenId;\n\n        if (props.tokenId != null) {\n            this.setTokenId(props.tokenId);\n        }\n\n        /**\n         * @type {?Long}\n         */\n        this._amount;\n\n        if (props.amount != null) {\n            this.setAmount(props.amount);\n        }\n\n        /**\n         * @type {?AccountId[]}\n         */\n        this._payerAccountIds;\n\n        if (props.payerAccountIds != null) {\n            this.setPayerAccountIds(props.payerAccountIds);\n        }\n    }\n\n    /**\n     * @returns {?AccountId}\n     */\n    get feeCollectorAccountId() {\n        return this._feeCollectorAccountId;\n    }\n\n    /**\n     * @param {AccountId | string} feeCollectorAccountId\n     * @returns {this}\n     */\n    setFeeCollectorAccountId(feeCollectorAccountId) {\n        this._feeCollectorAccountId =\n            typeof feeCollectorAccountId === \"string\"\n                ? AccountId.fromString(feeCollectorAccountId)\n                : feeCollectorAccountId;\n        return this;\n    }\n\n    /**\n     * @returns {?TokenId}\n     */\n    get tokenId() {\n        return this._tokenId;\n    }\n\n    /**\n     * @param {TokenId | string} tokenId\n     * @returns {this}\n     */\n    setTokenId(tokenId) {\n        this._tokenId =\n            typeof tokenId === \"string\" ? TokenId.fromString(tokenId) : tokenId;\n        return this;\n    }\n\n    /**\n     * @returns {?Long}\n     */\n    get amount() {\n        return this._amount;\n    }\n\n    /**\n     * @param {Long | number} amount\n     * @returns {AssessedCustomFee}\n     */\n    setAmount(amount) {\n        this._amount =\n            typeof amount === \"number\" ? Long.fromNumber(amount) : amount;\n        return this;\n    }\n\n    /**\n     * @returns {?AccountId[]}\n     */\n    get payerAccountIds() {\n        return this._payerAccountIds;\n    }\n\n    /**\n     * @param {AccountId[]} payerAccountIds\n     * @returns {AssessedCustomFee}\n     */\n    setPayerAccountIds(payerAccountIds) {\n        this._payerAccountIds = payerAccountIds;\n        return this;\n    }\n\n    /**\n     * @internal\n     * @param {proto.IAssessedCustomFee} fee\n     * @returns {AssessedCustomFee}\n     */\n    static _fromProtobuf(fee) {\n        return new AssessedCustomFee({\n            feeCollectorAccountId:\n                fee.feeCollectorAccountId != null\n                    ? AccountId._fromProtobuf(fee.feeCollectorAccountId)\n                    : undefined,\n            tokenId:\n                fee.tokenId != null\n                    ? TokenId._fromProtobuf(fee.tokenId)\n                    : undefined,\n            amount: fee.amount != null ? fee.amount : undefined,\n            payerAccountIds:\n                fee.effectivePayerAccountId != null\n                    ? fee.effectivePayerAccountId.map((id) =>\n                          AccountId._fromProtobuf(id)\n                      )\n                    : undefined,\n        });\n    }\n\n    /**\n     * @internal\n     * @abstract\n     * @returns {proto.IAssessedCustomFee}\n     */\n    _toProtobuf() {\n        return {\n            feeCollectorAccountId:\n                this.feeCollectorAccountId != null\n                    ? this.feeCollectorAccountId._toProtobuf()\n                    : null,\n            tokenId: this._tokenId != null ? this._tokenId._toProtobuf() : null,\n            amount: this._amount,\n            effectivePayerAccountId:\n                this._payerAccountIds != null\n                    ? this._payerAccountIds.map((id) => id._toProtobuf())\n                    : null,\n        };\n    }\n}\n", "import AccountId from \"../account/AccountId.js\";\nimport TokenId from \"../token/TokenId.js\";\n\n/**\n * @namespace proto\n * @typedef {import(\"@hashgraph/proto\").ITokenAssociation} proto.ITokenAssociation\n */\n\nexport default class TokenAssociation {\n    /**\n     * @param {object} props\n     * @param {AccountId | string} [props.accountId]\n     * @param {TokenId | string} [props.tokenId]\n     */\n    constructor(props = {}) {\n        /**\n         * @type {?AccountId}\n         */\n        this._accountId;\n\n        if (props.accountId != null) {\n            this.setAccountId(props.accountId);\n        }\n\n        /**\n         * @type {?TokenId}\n         */\n        this._tokenId;\n\n        if (props.tokenId != null) {\n            this.setTokenId(props.tokenId);\n        }\n    }\n\n    /**\n     * @returns {?AccountId}\n     */\n    get accountId() {\n        return this._accountId;\n    }\n\n    /**\n     * @param {AccountId | string} accountId\n     * @returns {this}\n     */\n    setAccountId(accountId) {\n        this._accountId =\n            typeof accountId === \"string\"\n                ? AccountId.fromString(accountId)\n                : accountId;\n        return this;\n    }\n\n    /**\n     * @returns {?TokenId}\n     */\n    get tokenId() {\n        return this._tokenId;\n    }\n\n    /**\n     * @param {TokenId | string} tokenId\n     * @returns {this}\n     */\n    setTokenId(tokenId) {\n        this._tokenId =\n            typeof tokenId === \"string\" ? TokenId.fromString(tokenId) : tokenId;\n        return this;\n    }\n\n    /**\n     * @internal\n     * @abstract\n     * @param {proto.ITokenAssociation} association\n     * @returns {TokenAssociation}\n     */\n    // eslint-disable-next-line @typescript-eslint/no-unused-vars\n    static _fromProtobuf(association) {\n        return new TokenAssociation({\n            accountId:\n                association.accountId != null\n                    ? AccountId._fromProtobuf(association.accountId)\n                    : undefined,\n            tokenId:\n                association.tokenId != null\n                    ? TokenId._fromProtobuf(association.tokenId)\n                    : undefined,\n        });\n    }\n\n    /**\n     * @internal\n     * @abstract\n     * @returns {proto.ITokenAssociation}\n     */\n    _toProtobuf() {\n        return {\n            accountId:\n                this._accountId != null\n                    ? this._accountId._toProtobuf()\n                    : undefined,\n            tokenId:\n                this._tokenId != null ? this._tokenId._toProtobuf() : undefined,\n        };\n    }\n}\n", "import Query, { QUERY_REGISTRY } from \"../query/Query.js\";\nimport TransactionRecord from \"./TransactionRecord.js\";\nimport TransactionReceipt from \"./TransactionReceipt.js\";\nimport TransactionId from \"./TransactionId.js\";\nimport Status from \"../Status.js\";\nimport PrecheckStatusError from \"../PrecheckStatusError.js\";\nimport ReceiptStatusError from \"../ReceiptStatusError.js\";\nimport { ExecutionState } from \"../Executable.js\";\nimport { ResponseType, ResponseCodeEnum } from \"@hashgraph/proto\";\n\n/**\n * @namespace proto\n * @typedef {import(\"@hashgraph/proto\").IQuery} proto.IQuery\n * @typedef {import(\"@hashgraph/proto\").IQueryHeader} proto.IQueryHeader\n * @typedef {import(\"@hashgraph/proto\").ITransactionRecord} proto.ITransactionRecord\n * @typedef {import(\"@hashgraph/proto\").ITransactionReceipt} proto.ITransactionReceipt\n * @typedef {import(\"@hashgraph/proto\").ITransactionGetRecordResponse} proto.ITransactionGetRecordResponse\n * @typedef {import(\"@hashgraph/proto\").ITransactionGetRecordQuery} proto.ITransactionGetRecordQuery\n * @typedef {import(\"@hashgraph/proto\").IResponse} proto.IResponse\n * @typedef {import(\"@hashgraph/proto\").IResponseHeader} proto.IResponseHeader\n * @typedef {import(\"@hashgraph/proto\").ResponseCodeEnum} proto.ResponseCodeEnum\n */\n\n/**\n * @typedef {import(\"../channel/Channel.js\").default} Channel\n * @typedef {import(\"../client/Client.js\").default<*, *>} Client\n * @typedef {import(\"../account/AccountId.js\").default} AccountId\n */\n\n/**\n * @augments {Query<TransactionRecord>}\n */\nexport default class TransactionRecordQuery extends Query {\n    /**\n     * @param {object} [props]\n     * @param {TransactionId} [props.transactionId]\n     * @param {boolean} [props.includeChildren]\n     * @param {boolean} [props.includeDuplicates]\n     */\n    constructor(props = {}) {\n        super();\n\n        /**\n         * @private\n         * @type {?TransactionId}\n         */\n        this._transactionId = null;\n\n        /**\n         * @private\n         * @type {?boolean}\n         */\n        this._includeChildren = null;\n\n        /**\n         * @private\n         * @type {?boolean}\n         */\n        this._includeDuplicates = null;\n\n        if (props.transactionId != null) {\n            this.setTransactionId(props.transactionId);\n        }\n\n        if (props.includeChildren != null) {\n            this.setIncludeChildren(props.includeChildren);\n        }\n\n        if (props.includeDuplicates != null) {\n            this.setIncludeDuplicates(props.includeDuplicates);\n        }\n    }\n\n    /**\n     * @returns {?TransactionId}\n     */\n    get transactionId() {\n        return this._transactionId;\n    }\n\n    /**\n     * @internal\n     * @param {proto.IQuery} query\n     * @returns {TransactionRecordQuery}\n     */\n    static _fromProtobuf(query) {\n        const record = /** @type {proto.ITransactionGetRecordQuery} */ (\n            query.transactionGetRecord\n        );\n\n        return new TransactionRecordQuery({\n            transactionId: record.transactionID\n                ? TransactionId._fromProtobuf(record.transactionID)\n                : undefined,\n            includeChildren:\n                record.includeChildRecords != null\n                    ? record.includeChildRecords\n                    : undefined,\n            includeDuplicates:\n                record.includeDuplicates != null\n                    ? record.includeDuplicates\n                    : undefined,\n        });\n    }\n\n    /**\n     * Set the transaction ID for which the record is being requested.\n     *\n     * @param {TransactionId | string} transactionId\n     * @returns {TransactionRecordQuery}\n     */\n    setTransactionId(transactionId) {\n        this._transactionId =\n            typeof transactionId === \"string\"\n                ? TransactionId.fromString(transactionId)\n                : transactionId.clone();\n\n        return this;\n    }\n\n    /**\n     * @param {boolean} includeChildren\n     * @returns {TransactionRecordQuery}\n     */\n    setIncludeChildren(includeChildren) {\n        this._includeChildren = includeChildren;\n        return this;\n    }\n\n    /**\n     * @returns {boolean}\n     */\n    get includeChildren() {\n        return this._includeChildren != null ? this._includeChildren : false;\n    }\n\n    /**\n     * @param {boolean} includeDuplicates\n     * @returns {TransactionRecordQuery}\n     */\n    setIncludeDuplicates(includeDuplicates) {\n        this._duplicates = includeDuplicates;\n        return this;\n    }\n\n    /**\n     * @returns {boolean}\n     */\n    get includeDuplicates() {\n        return this._duplicates != null ? this._duplicates : false;\n    }\n\n    /**\n     * @override\n     * @internal\n     * @param {proto.IQuery} request\n     * @param {proto.IResponse} response\n     * @returns {ExecutionState}\n     */\n    _shouldRetry(request, response) {\n        const { nodeTransactionPrecheckCode } =\n            this._mapResponseHeader(response);\n\n        let status = Status._fromCode(\n            nodeTransactionPrecheckCode != null\n                ? nodeTransactionPrecheckCode\n                : ResponseCodeEnum.OK\n        );\n\n        switch (status) {\n            case Status.Busy:\n            case Status.Unknown:\n            case Status.ReceiptNotFound:\n            case Status.RecordNotFound:\n                return ExecutionState.Retry;\n\n            case Status.Ok:\n                break;\n\n            default:\n                return ExecutionState.Error;\n        }\n\n        const transactionGetRecord =\n            /** @type {proto.ITransactionGetRecordResponse} */ (\n                response.transactionGetRecord\n            );\n        const header = /** @type {proto.IResponseHeader} */ (\n            transactionGetRecord.header\n        );\n\n        if (header.responseType === ResponseType.COST_ANSWER) {\n            return ExecutionState.Finished;\n        }\n\n        const record = /** @type {proto.ITransactionRecord} */ (\n            transactionGetRecord.transactionRecord\n        );\n        const receipt = /** @type {proto.ITransactionReceipt} */ (\n            record.receipt\n        );\n        const receiptStatusCode = /** @type {proto.ResponseCodeEnum} */ (\n            receipt.status\n        );\n        status = Status._fromCode(receiptStatusCode);\n\n        switch (status) {\n            case Status.Ok:\n            case Status.Busy:\n            case Status.Unknown:\n            case Status.ReceiptNotFound:\n            case Status.RecordNotFound:\n                return ExecutionState.Retry;\n\n            case Status.Success:\n                return ExecutionState.Finished;\n\n            default:\n                return ExecutionState.Error;\n        }\n    }\n\n    /**\n     * @override\n     * @internal\n     * @param {proto.IQuery} request\n     * @param {proto.IResponse} response\n     * @returns {Error}\n     */\n    // eslint-disable-next-line @typescript-eslint/no-unused-vars\n    _mapStatusError(request, response) {\n        const { nodeTransactionPrecheckCode } =\n            this._mapResponseHeader(response);\n\n        let status = Status._fromCode(\n            nodeTransactionPrecheckCode != null\n                ? nodeTransactionPrecheckCode\n                : ResponseCodeEnum.OK\n        );\n\n        switch (status) {\n            case Status.Ok:\n                // Do nothing\n                break;\n\n            default:\n                return new PrecheckStatusError({\n                    status,\n                    transactionId: this._getTransactionId(),\n                });\n        }\n\n        const transactionGetRecord =\n            /** @type {proto.ITransactionGetRecordResponse} */ (\n                response.transactionGetRecord\n            );\n        const record = /** @type {proto.ITransactionRecord} */ (\n            transactionGetRecord.transactionRecord\n        );\n        const receipt = /** @type {proto.ITransactionReceipt} */ (\n            record.receipt\n        );\n        const receiptStatusError = /** @type {proto.ResponseCodeEnum} */ (\n            receipt.status\n        );\n\n        status = Status._fromCode(receiptStatusError);\n\n        return new ReceiptStatusError({\n            status,\n            transactionId: this._getTransactionId(),\n            transactionReceipt: TransactionReceipt._fromProtobuf({ receipt }),\n        });\n    }\n\n    /**\n     * @param {Client} client\n     */\n    _validateChecksums(client) {\n        if (\n            this._transactionId != null &&\n            this._transactionId.accountId != null\n        ) {\n            this._transactionId.accountId.validateChecksum(client);\n        }\n    }\n\n    /**\n     * @override\n     * @internal\n     * @param {Channel} channel\n     * @param {proto.IQuery} request\n     * @returns {Promise<proto.IResponse>}\n     */\n    _execute(channel, request) {\n        return channel.crypto.getTxRecordByTxID(request);\n    }\n\n    /**\n     * @override\n     * @override\n     * @internal\n     * @param {proto.IResponse} response\n     * @returns {proto.IResponseHeader}\n     */\n    _mapResponseHeader(response) {\n        const transactionGetRecord =\n            /** @type {proto.ITransactionGetRecordResponse} */ (\n                response.transactionGetRecord\n            );\n        return /** @type {proto.IResponseHeader} */ (\n            transactionGetRecord.header\n        );\n    }\n\n    /**\n     * @override\n     * @internal\n     * @param {proto.IResponse} response\n     * @param {AccountId} nodeAccountId\n     * @param {proto.IQuery} request\n     * @returns {Promise<TransactionRecord>}\n     */\n    // eslint-disable-next-line @typescript-eslint/no-unused-vars\n    _mapResponse(response, nodeAccountId, request) {\n        const record = /** @type {proto.ITransactionGetRecordResponse} */ (\n            response.transactionGetRecord\n        );\n\n        return Promise.resolve(TransactionRecord._fromProtobuf(record));\n    }\n\n    /**\n     * @override\n     * @internal\n     * @param {proto.IQueryHeader} header\n     * @returns {proto.IQuery}\n     */\n    _onMakeRequest(header) {\n        return {\n            transactionGetRecord: {\n                header,\n                transactionID:\n                    this._transactionId != null\n                        ? this._transactionId._toProtobuf()\n                        : null,\n                includeChildRecords: this._includeChildren,\n                includeDuplicates: this._includeDuplicates,\n            },\n        };\n    }\n}\n\nQUERY_REGISTRY.set(\n    \"transactionGetRecord\",\n    // eslint-disable-next-line @typescript-eslint/unbound-method\n    TransactionRecordQuery._fromProtobuf\n);\n", "import ReceiptStatusError from \"../ReceiptStatusError.js\";\nimport Status from \"../Status.js\";\nimport TransactionReceiptQuery from \"./TransactionReceiptQuery.js\";\nimport TransactionRecordQuery from \"./TransactionRecordQuery.js\";\n\n/**\n * @typedef {import(\"../client/Client.js\").default<*, *>} Client\n * @typedef {import(\"../account/AccountId.js\").default} AccountId\n * @typedef {import(\"./TransactionId.js\").default} TransactionId\n * @typedef {import(\"./TransactionReceipt.js\").default} TransactionReceipt\n * @typedef {import(\"./TransactionRecord.js\").default} TransactionRecord\n */\n\nexport default class TransactionResponse {\n    /**\n     * @internal\n     * @param {object} props\n     * @param {AccountId} props.nodeId\n     * @param {Uint8Array} props.transactionHash\n     * @param {TransactionId} props.transactionId\n     */\n    constructor(props) {\n        /** @readonly */\n        this.nodeId = props.nodeId;\n\n        /** @readonly */\n        this.transactionHash = props.transactionHash;\n\n        /** @readonly */\n        this.transactionId = props.transactionId;\n\n        Object.freeze(this);\n    }\n\n    /**\n     * @param {Client} client\n     * @returns {Promise<TransactionReceipt>}\n     */\n    async getReceipt(client) {\n        const receipt = await new TransactionReceiptQuery()\n            .setTransactionId(this.transactionId)\n            .setNodeAccountIds([this.nodeId])\n            .execute(client);\n\n        if (receipt.status !== Status.Success) {\n            throw new ReceiptStatusError({\n                transactionReceipt: receipt,\n                status: receipt.status,\n                transactionId: this.transactionId,\n            });\n        }\n\n        return receipt;\n    }\n\n    /**\n     * @param {Client} client\n     * @returns {Promise<TransactionRecord>}\n     */\n    async getRecord(client) {\n        await this.getReceipt(client);\n\n        return new TransactionRecordQuery()\n            .setTransactionId(this.transactionId)\n            .setNodeAccountIds([this.nodeId])\n            .execute(client);\n    }\n}\n", "/**\n * @param {Uint8Array} data\n * @returns {Promise<Uint8Array>}\n */\nexport async function digest(data) {\n    // https://developer.mozilla.org/en-US/docs/Web/API/SubtleCrypto/digest\n    return new Uint8Array(await crypto.subtle.digest(\"SHA-384\", data));\n}\n", "import AccountId from \"../account/AccountId.js\";\nimport * as sha384 from \"../cryptography/sha384.js\";\nimport ObjectMap from \"../ObjectMap.js\";\n\n/**\n * @namespace proto\n * @typedef {import(\"@hashgraph/proto\").ITransaction} proto.ITransaction\n */\n\n/**\n * @augments {ObjectMap<AccountId, Uint8Array>}\n */\nexport default class TransactionHashMap extends ObjectMap {\n    constructor() {\n        super((s) => AccountId.fromString(s));\n    }\n\n    /**\n     * @param {import(\"./Transaction.js\").default} transaction\n     * @returns {Promise<TransactionHashMap>}\n     */\n    static async _fromTransaction(transaction) {\n        const hashes = new TransactionHashMap();\n\n        for (let i = 0; i < transaction._nodeIds.length; i++) {\n            const nodeAccountId = transaction._nodeIds[i];\n            const tx = /** @type {proto.ITransaction} */ (\n                transaction._transactions[i]\n            );\n            const hash = await sha384.digest(\n                /** @type {Uint8Array} */ (tx.signedTransactionBytes)\n            );\n\n            hashes._set(nodeAccountId, hash);\n        }\n\n        return hashes;\n    }\n}\n", "import { PublicKey } from \"@hashgraph/cryptography\";\nimport ObjectMap from \"../ObjectMap.js\";\n\n/**\n * @augments {ObjectMap<PublicKey, Uint8Array>}\n */\nexport default class NodeAccountIdSignatureMap extends ObjectMap {\n    constructor() {\n        super((s) => PublicKey.fromString(s));\n    }\n\n    /**\n     * @param {import(\"@hashgraph/proto\").ISignatureMap} sigMap\n     * @returns {NodeAccountIdSignatureMap}\n     */\n    static _fromTransactionSigMap(sigMap) {\n        const signatures = new NodeAccountIdSignatureMap();\n\n        const sigPairs = sigMap.sigPair != null ? sigMap.sigPair : [];\n\n        for (const sigPair of sigPairs) {\n            if (sigPair.pubKeyPrefix != null && sigPair.ed25519 != null) {\n                signatures._set(\n                    PublicKey.fromBytes(sigPair.pubKeyPrefix),\n                    sigPair.ed25519\n                );\n            }\n        }\n\n        return signatures;\n    }\n}\n", "import NodeAccountIdSignatureMap from \"./NodeAccountIdSignatureMap.js\";\nimport ObjectMap from \"../ObjectMap.js\";\nimport AccountId from \"../account/AccountId.js\";\n\n/**\n * @augments {ObjectMap<AccountId, NodeAccountIdSignatureMap>}\n */\nexport default class SignatureMap extends ObjectMap {\n    constructor() {\n        super((s) => AccountId.fromString(s));\n    }\n\n    /**\n     * @param {import(\"./Transaction.js\").default} transaction\n     * @returns {SignatureMap}\n     */\n    static _fromTransaction(transaction) {\n        const signatures = new SignatureMap();\n\n        for (let i = 0; i < transaction._nodeIds.length; i++) {\n            const sigMap = transaction._signedTransactions[i].sigMap;\n\n            if (sigMap != null) {\n                signatures._set(\n                    transaction._nodeIds[i],\n                    NodeAccountIdSignatureMap._fromTransactionSigMap(sigMap)\n                );\n            }\n        }\n\n        return signatures;\n    }\n}\n", "import Hbar from \"../Hbar.js\";\nimport TransactionResponse from \"./TransactionResponse.js\";\nimport TransactionId from \"./TransactionId.js\";\nimport TransactionHashMap from \"./TransactionHashMap.js\";\nimport SignatureMap from \"./SignatureMap.js\";\nimport Executable, { ExecutionState } from \"../Executable.js\";\nimport Status from \"../Status.js\";\nimport Long from \"long\";\nimport * as sha384 from \"../cryptography/sha384.js\";\nimport * as hex from \"../encoding/hex.js\";\nimport {\n    Transaction as ProtoTransaction,\n    SignedTransaction as ProtoSignedTransaction,\n    TransactionList as ProtoTransactionList,\n    TransactionBody as ProtoTransactionBody,\n    ResponseCodeEnum,\n} from \"@hashgraph/proto\";\nimport PrecheckStatusError from \"../PrecheckStatusError.js\";\nimport AccountId from \"../account/AccountId.js\";\nimport { arrayEqual } from \"../array.js\";\nimport PublicKey from \"../PublicKey.js\";\n\n/**\n * @typedef {import(\"bignumber.js\").default} BigNumber\n */\n\n/**\n * @namespace proto\n * @typedef {import(\"@hashgraph/proto\").ITransaction} proto.ITransaction\n * @typedef {import(\"@hashgraph/proto\").ISignaturePair} proto.ISignaturePair\n * @typedef {import(\"@hashgraph/proto\").ISignedTransaction} proto.ISignedTransaction\n * @typedef {import(\"@hashgraph/proto\").ITransactionList} proto.ITransactionList\n * @typedef {import(\"@hashgraph/proto\").ITransactionID} proto.ITransactionID\n * @typedef {import(\"@hashgraph/proto\").IAccountID} proto.IAccountID\n * @typedef {import(\"@hashgraph/proto\").ITransactionBody} proto.ITransactionBody\n * @typedef {import(\"@hashgraph/proto\").ITransactionResponse} proto.ITransactionResponse\n * @typedef {import(\"@hashgraph/proto\").ResponseCodeEnum} proto.ResponseCodeEnum\n * @typedef {import(\"@hashgraph/proto\").TransactionBody} proto.TransactionBody\n * @typedef {import(\"@hashgraph/proto\").ISchedulableTransactionBody} proto.ISchedulableTransactionBody\n */\n\n/**\n * @typedef {import(\"../schedule/ScheduleCreateTransaction.js\").default} ScheduleCreateTransaction\n * @typedef {import(\"../PrivateKey.js\").default} PrivateKey\n * @typedef {import(\"../channel/Channel.js\").default} Channel\n * @typedef {import(\"../client/Client.js\").default<*, *>} Client\n */\n\n// 90 days (in seconds)\nexport const DEFAULT_AUTO_RENEW_PERIOD = Long.fromValue(7776000);\n\n// maximum value of i64 (so there is never a record generated)\nexport const DEFAULT_RECORD_THRESHOLD = Hbar.fromTinybars(\n    Long.fromString(\"9223372036854775807\")\n);\n\n// 120 seconds\nconst DEFAULT_TRANSACTION_VALID_DURATION = 120;\n\nexport const CHUNK_SIZE = 1024;\n\n/**\n * @type {Map<NonNullable<proto.TransactionBody[\"data\"]>, (transactions: proto.ITransaction[], signedTransactions: proto.ISignedTransaction[], transactionIds: TransactionId[], nodeIds: AccountId[], bodies: proto.TransactionBody[]) => Transaction>}\n */\nexport const TRANSACTION_REGISTRY = new Map();\n\n/**\n * Base class for all transactions that may be submitted to Hedera.\n *\n * @abstract\n * @augments {Executable<proto.ITransaction, proto.ITransactionResponse, TransactionResponse>}\n */\nexport default class Transaction extends Executable {\n    // A SDK transaction is composed of multiple, raw protobuf transactions.\n    // These should be functionally identicasl, with the exception of pointing to\n    // different nodes.\n\n    // When retrying a transaction after a network error or retry-able\n    // status response, we try a different transaction and thus a different node.\n\n    constructor() {\n        super();\n\n        /**\n         * List of proto transactions that have been built from this SDK\n         * transaction. Each one should share the same transaction ID.\n         *\n         * @internal\n         * @type {(proto.ITransaction | null)[]}\n         */\n        this._transactions = [];\n\n        /**\n         * List of proto transactions that have been built from this SDK\n         * transaction. Each one should share the same transaction ID.\n         *\n         * @internal\n         * @type {proto.ISignedTransaction[]}\n         */\n        this._signedTransactions = [];\n\n        /**\n         * Set of public keys (as string) who have signed this transaction so\n         * we do not allow them to sign it again.\n         *\n         * @internal\n         * @type {Set<string>}\n         */\n        this._signerPublicKeys = new Set();\n\n        /**\n         * @protected\n         * @type {number}\n         */\n        this._nextTransactionIndex = 0;\n\n        /**\n         * @private\n         * @type {number}\n         */\n        this._transactionValidDuration = DEFAULT_TRANSACTION_VALID_DURATION;\n\n        /**\n         * @private\n         * @type {Hbar}\n         */\n        this._maxTransactionFee = new Hbar(2);\n\n        /**\n         * @private\n         * @type {string}\n         */\n        this._transactionMemo = \"\";\n\n        /**\n         * @protected\n         * @type {TransactionId[]}\n         */\n        this._transactionIds = [];\n\n        this._signOnDemand = false;\n\n        /**\n         * @private\n         * @type {PublicKey[]}\n         */\n        this._publicKeys = [];\n\n        /**\n         * @private\n         * @type {(((message: Uint8Array) => Promise<Uint8Array>) | null)[]}\n         */\n        this._transactionSigners = [];\n    }\n\n    /**\n     * @param {Uint8Array} bytes\n     * @returns {Transaction}\n     */\n    static fromBytes(bytes) {\n        const signedTransactions = [];\n        const transactionIds = [];\n        const nodeIds = [];\n\n        /** @type {string[]} */\n        const transactionIdStrings = [];\n\n        /** @type {string[]} */\n        const nodeIdStrings = [];\n\n        const bodies = [];\n\n        const list = ProtoTransactionList.decode(bytes).transactionList;\n\n        if (list.length == 0) {\n            const transaction = ProtoTransaction.decode(bytes);\n\n            if (transaction.signedTransactionBytes.length != 0) {\n                list.push(transaction);\n            } else {\n                list.push({\n                    signedTransactionBytes: ProtoSignedTransaction.encode({\n                        bodyBytes: transaction.bodyBytes,\n                        sigMap: transaction.sigMap,\n                    }).finish(),\n                });\n            }\n        }\n\n        for (const transaction of list) {\n            if (transaction.signedTransactionBytes == null) {\n                throw new Error(\"Transaction.signedTransactionBytes are null\");\n            }\n\n            const signedTransaction = ProtoSignedTransaction.decode(\n                transaction.signedTransactionBytes\n            );\n            signedTransactions.push(signedTransaction);\n\n            const body = ProtoTransactionBody.decode(\n                signedTransaction.bodyBytes\n            );\n\n            if (body.data == null) {\n                throw new Error(\"(BUG) body.data was not set in the protobuf\");\n            }\n\n            bodies.push(body);\n\n            if (body.transactionID != null) {\n                const transactionId = TransactionId._fromProtobuf(\n                    /** @type {proto.ITransactionID} */ (body.transactionID)\n                );\n\n                if (!transactionIdStrings.includes(transactionId.toString())) {\n                    transactionIds.push(transactionId);\n                    transactionIdStrings.push(transactionId.toString());\n                }\n            }\n\n            if (body.nodeAccountID != null) {\n                const nodeAccountId = AccountId._fromProtobuf(\n                    /** @type {proto.IAccountID} */ (body.nodeAccountID)\n                );\n\n                if (!nodeIdStrings.includes(nodeAccountId.toString())) {\n                    nodeIds.push(nodeAccountId);\n                    nodeIdStrings.push(nodeAccountId.toString());\n                }\n            }\n        }\n\n        const body = bodies[0];\n\n        if (body == null || body.data == null) {\n            throw new Error(\n                \"No transaction found in bytes or failed to decode TransactionBody\"\n            );\n        }\n\n        const fromProtobuf = TRANSACTION_REGISTRY.get(body.data);\n\n        if (fromProtobuf == null) {\n            throw new Error(\n                `(BUG) Transaction.fromBytes() not implemented for type ${body.data}`\n            );\n        }\n\n        return fromProtobuf(\n            list,\n            signedTransactions,\n            transactionIds,\n            nodeIds,\n            bodies\n        );\n    }\n\n    /**\n     * @returns {ScheduleCreateTransaction}\n     */\n    schedule() {\n        this._requireNotFrozen();\n\n        if (SCHEDULE_CREATE_TRANSACTION.length != 1) {\n            throw new Error(\n                \"ScheduleCreateTransaction has not been loaded yet\"\n            );\n        }\n\n        return SCHEDULE_CREATE_TRANSACTION[0]()._setScheduledTransaction(this);\n    }\n\n    /**\n     * @template {Transaction} TransactionT\n     * @param {TransactionT} transaction\n     * @param {proto.ITransaction[]} transactions\n     * @param {proto.ISignedTransaction[]} signedTransactions\n     * @param {TransactionId[]} transactionIds\n     * @param {AccountId[]} nodeIds\n     * @param {proto.ITransactionBody[]} bodies\n     * @returns {TransactionT}\n     */\n    static _fromProtobufTransactions(\n        transaction,\n        transactions,\n        signedTransactions,\n        transactionIds,\n        nodeIds,\n        bodies\n    ) {\n        const body = bodies[0];\n\n        const zero = new AccountId(0);\n        for (let i = 0; i < nodeIds.length; i++) {\n            if (nodeIds[i].equals(zero)) {\n                nodeIds.splice(i--, 1);\n            }\n        }\n\n        transaction._transactions = transactions;\n        transaction._signedTransactions = signedTransactions;\n        transaction._transactionIds = transactionIds;\n        transaction._nodeIds = nodeIds;\n        transaction._nextNodeIndex = 0;\n        transaction._nextTransactionIndex = 0;\n        transaction._transactionValidDuration =\n            body.transactionValidDuration != null &&\n            body.transactionValidDuration.seconds != null\n                ? Long.fromValue(body.transactionValidDuration.seconds).toInt()\n                : DEFAULT_TRANSACTION_VALID_DURATION;\n        transaction._maxTransactionFee =\n            body.transactionFee != null\n                ? Hbar.fromTinybars(body.transactionFee)\n                : new Hbar(0);\n        transaction._transactionMemo = body.memo != null ? body.memo : \"\";\n\n        for (let i = 0; i < nodeIds.length; i++) {\n            const signedTransaction = signedTransactions[i];\n            if (\n                signedTransaction.sigMap != null &&\n                signedTransaction.sigMap.sigPair != null\n            ) {\n                for (const sigPair of signedTransaction.sigMap.sigPair) {\n                    transaction._signerPublicKeys.add(\n                        hex.encode(\n                            /** @type {Uint8Array} */ (sigPair.pubKeyPrefix)\n                        )\n                    );\n\n                    transaction._publicKeys.push(\n                        PublicKey.fromBytes(\n                            /** @type {Uint8Array} */ (sigPair.pubKeyPrefix)\n                        )\n                    );\n                    transaction._transactionSigners.push(null);\n                }\n            }\n        }\n\n        return transaction;\n    }\n\n    /**\n     * @override\n     * @param {AccountId[]} nodeIds\n     * @returns {this}\n     */\n    setNodeAccountIds(nodeIds) {\n        this._requireNotFrozen();\n        super.setNodeAccountIds(nodeIds);\n        return this;\n    }\n\n    /**\n     * @returns {number}\n     */\n    get transactionValidDuration() {\n        return this._transactionValidDuration;\n    }\n\n    /**\n     * Sets the duration (in seconds) that this transaction is valid for.\n     *\n     * This is defaulted to 120 seconds (from the time its executed).\n     *\n     * @param {number} validDuration\n     * @returns {this}\n     */\n    setTransactionValidDuration(validDuration) {\n        this._requireNotFrozen();\n        this._transactionValidDuration = validDuration;\n\n        return this;\n    }\n\n    /**\n     * @returns {?Hbar}\n     */\n    get maxTransactionFee() {\n        return this._maxTransactionFee;\n    }\n\n    /**\n     * Set the maximum transaction fee the operator (paying account)\n     * is willing to pay.\n     *\n     * @param {number | string | Long | BigNumber | Hbar} maxTransactionFee\n     * @returns {this}\n     */\n    setMaxTransactionFee(maxTransactionFee) {\n        this._requireNotFrozen();\n        this._maxTransactionFee =\n            maxTransactionFee instanceof Hbar\n                ? maxTransactionFee\n                : new Hbar(maxTransactionFee);\n\n        return this;\n    }\n\n    /**\n     * @returns {string}\n     */\n    get transactionMemo() {\n        return this._transactionMemo;\n    }\n\n    /**\n     * Set a note or description to be recorded in the transaction\n     * record (maximum length of 100 bytes).\n     *\n     * @param {string} transactionMemo\n     * @returns {this}\n     */\n    setTransactionMemo(transactionMemo) {\n        this._requireNotFrozen();\n        this._transactionMemo = transactionMemo;\n\n        return this;\n    }\n\n    /**\n     * @returns {TransactionId}\n     */\n    get transactionId() {\n        if (this._transactionIds.length === 0) {\n            throw new Error(\n                \"transaction must have been frozen before getting the transaction ID, try calling `freeze`\"\n            );\n        }\n\n        return this._transactionIds[this._nextTransactionIndex];\n    }\n\n    /**\n     * Set the ID for this transaction.\n     *\n     * The transaction ID includes the operator's account ( the account paying the transaction\n     * fee). If two transactions have the same transaction ID, they won't both have an effect. One\n     * will complete normally and the other will fail with a duplicate transaction status.\n     *\n     * Normally, you should not use this method. Just before a transaction is executed, a\n     * transaction ID will be generated from the operator on the client.\n     *\n     * @param {TransactionId} transactionId\n     * @returns {this}\n     */\n    setTransactionId(transactionId) {\n        this._requireNotFrozen();\n        this._transactionIds = [transactionId];\n\n        return this;\n    }\n\n    /**\n     * @param {PrivateKey} privateKey\n     * @returns {Promise<this>}\n     */\n    sign(privateKey) {\n        return this.signWith(privateKey.publicKey, (message) =>\n            Promise.resolve(privateKey.sign(message))\n        );\n    }\n\n    /**\n     * @param {PublicKey} publicKey\n     * @param {(message: Uint8Array) => Promise<Uint8Array>} transactionSigner\n     * @returns {Promise<this>}\n     */\n    async signWith(publicKey, transactionSigner) {\n        this._requireFrozen();\n\n        const publicKeyData = publicKey.toBytesRaw();\n\n        // note: this omits the DER prefix on purpose because Hedera doesn't\n        // support that in the protobuf. this means that we would fail\n        // to re-inflate [this._signerPublicKeys] during [fromBytes] if we used DER\n        // prefixes here\n        const publicKeyHex = hex.encode(publicKeyData);\n\n        if (this._signerPublicKeys.has(publicKeyHex)) {\n            // this public key has already signed this transaction\n            return this;\n        }\n\n        this._transactions = [];\n        this._signerPublicKeys.add(publicKeyHex);\n\n        if (this._signOnDemand) {\n            this._publicKeys.push(publicKey);\n            this._transactionSigners.push(transactionSigner);\n\n            return this;\n        }\n\n        for (const signedTransaction of this._signedTransactions) {\n            const bodyBytes = /** @type {Uint8Array} */ (\n                signedTransaction.bodyBytes\n            );\n            const signature = await transactionSigner(bodyBytes);\n\n            if (signedTransaction.sigMap == null) {\n                signedTransaction.sigMap = {};\n            }\n\n            if (signedTransaction.sigMap.sigPair == null) {\n                signedTransaction.sigMap.sigPair = [];\n            }\n\n            signedTransaction.sigMap.sigPair.push(\n                publicKey._toProtobufSignature(signature)\n            );\n        }\n\n        return this;\n    }\n\n    /**\n     * @param {import(\"../client/Client.js\").default<Channel, *>} client\n     * @returns {Promise<this>}\n     */\n    signWithOperator(client) {\n        const operator = client._operator;\n\n        if (operator == null) {\n            throw new Error(\n                \"`client` must have an operator to sign with the operator\"\n            );\n        }\n\n        if (!this._isFrozen()) {\n            this.freezeWith(client);\n        }\n\n        return this.signWith(operator.publicKey, operator.transactionSigner);\n    }\n    /**\n     * @internal\n     * @protected\n     */\n    _requireOneNodeAccountId() {\n        if (this._nodeIds.length != 1) {\n            throw \"transaction did not have exactly one node ID set\";\n        }\n    }\n\n    /**\n     * @param {PublicKey} publicKey\n     * @param {Uint8Array} signature\n     * @returns {this}\n     */\n    addSignature(publicKey, signature) {\n        this._requireOneNodeAccountId();\n\n        if (!this.isFrozen()) {\n            this.freeze();\n        }\n\n        const publicKeyData = publicKey.toBytesRaw();\n        const publicKeyHex = hex.encode(publicKeyData);\n\n        if (this._signerPublicKeys.has(publicKeyHex)) {\n            // this public key has already signed this transaction\n            return this;\n        }\n\n        this._transactions = [];\n\n        for (const transaction of this._signedTransactions) {\n            if (transaction.sigMap == null) {\n                transaction.sigMap = {};\n            }\n\n            if (transaction.sigMap.sigPair == null) {\n                transaction.sigMap.sigPair = [];\n            }\n\n            transaction.sigMap.sigPair.push(\n                publicKey._toProtobufSignature(signature)\n            );\n        }\n\n        this._signerPublicKeys.add(publicKeyHex);\n        this._publicKeys.push(publicKey);\n        this._transactionSigners.push(null);\n\n        return this;\n    }\n\n    /**\n     * @returns {SignatureMap}\n     */\n    getSignatures() {\n        if (this._signOnDemand) {\n            throw new Error(\n                \"Please use `getSignaturesAsync()` if `signOnDemand` is enabled\"\n            );\n        }\n\n        this._buildAllTransactions();\n\n        return SignatureMap._fromTransaction(this);\n    }\n\n    /**\n     * @returns {Promise<SignatureMap>}\n     */\n    async getSignaturesAsync() {\n        await this._buildAllTransactionsAsync();\n\n        return SignatureMap._fromTransaction(this);\n    }\n\n    /**\n     * Freeze this transaction from future modification to prepare for\n     * signing or serialization.\n     *\n     * @returns {this}\n     */\n    freeze() {\n        return this.freezeWith(null);\n    }\n\n    /**\n     * Freeze this transaction from further modification to prepare for\n     * signing or serialization.\n     *\n     * Will use the `Client`, if available, to generate a default Transaction ID and select 1/3\n     * nodes to prepare this transaction for.\n     *\n     * @param {?import(\"../client/Client.js\").default<Channel, *>} client\n     * @returns {this}\n     */\n    freezeWith(client) {\n        if (client != null) {\n            this._signOnDemand = client._signOnDemand;\n        }\n\n        if (client != null && this._maxTransactionFee == null) {\n            this._maxTransactionFee = client.maxTransactionFee;\n        }\n\n        if (client != null && this._transactionIds.length === 0) {\n            const operator = client._operator;\n\n            if (operator == null) {\n                throw new Error(\n                    \"`client` must have an `operator` or `transactionId` must be set\"\n                );\n            }\n\n            this.setTransactionId(TransactionId.generate(operator.accountId));\n        }\n\n        if (this._transactionIds.length === 0) {\n            throw new Error(\n                \"`transactionId` must be set or `client` must be provided with `freezeWith`\"\n            );\n        }\n\n        if (client != null && this._transactionIds[0].accountId != null) {\n            this._transactionIds[0].accountId.validateChecksum(client);\n        }\n\n        if (this._nodeIds.length > 0) {\n            // Do nothing\n        } else if (client != null) {\n            this._nodeIds = client._network.getNodeAccountIdsForExecute();\n        } else {\n            throw new Error(\n                \"`nodeAccountId` must be set or `client` must be provided with `freezeWith`\"\n            );\n        }\n\n        this._signedTransactions = this._nodeIds.map((nodeId) =>\n            this._makeSignedTransaction(nodeId)\n        );\n\n        return this;\n    }\n\n    /**\n     * Will error if sign-on-demand is enabled\n     *\n     * @returns {Uint8Array}\n     */\n    toBytes() {\n        this._requireFrozen();\n\n        if (this._signOnDemand) {\n            throw new Error(\n                \"Please use `toBytesAsync()` if `signOnDemand` is enabled\"\n            );\n        }\n\n        this._buildAllTransactions();\n\n        return ProtoTransactionList.encode({\n            transactionList: /** @type {proto.ITransaction[]} */ (\n                this._transactions\n            ),\n        }).finish();\n    }\n\n    /**\n     * @returns {Promise<Uint8Array>}\n     */\n    async toBytesAsync() {\n        this._requireFrozen();\n\n        await this._buildAllTransactionsAsync();\n\n        return ProtoTransactionList.encode({\n            transactionList: /** @type {proto.ITransaction[]} */ (\n                this._transactions\n            ),\n        }).finish();\n    }\n\n    /**\n     * @returns {Promise<Uint8Array>}\n     */\n    async getTransactionHash() {\n        this._requireFrozen();\n\n        await this._buildAllTransactionsAsync();\n\n        return sha384.digest(\n            /** @type {Uint8Array} */ (\n                /** @type {proto.ITransaction} */ (this._transactions[0])\n                    .signedTransactionBytes\n            )\n        );\n    }\n\n    /**\n     * @returns {Promise<TransactionHashMap>}\n     */\n    async getTransactionHashPerNode() {\n        this._requireFrozen();\n        await this._buildAllTransactionsAsync();\n        return await TransactionHashMap._fromTransaction(this);\n    }\n\n    isFrozen() {\n        return this._signedTransactions.length > 0;\n    }\n\n    /**\n     * @returns {TransactionId}\n     */\n    _getTransactionId() {\n        return this.transactionId;\n    }\n\n    /**\n     * @param {Client} client\n     */\n    // eslint-disable-next-line @typescript-eslint/no-unused-vars,@typescript-eslint/no-empty-function\n    _validateChecksums(client) {\n        // Do nothing\n    }\n\n    /**\n     * @override\n     * @protected\n     * @param {import(\"../client/Client.js\").default<Channel, *>} client\n     * @returns {Promise<void>}\n     */\n    async _beforeExecute(client) {\n        if (!this._isFrozen()) {\n            this.freezeWith(client);\n        }\n\n        if (client.isAutoValidateChecksumsEnabled()) {\n            this._validateChecksums(client);\n        }\n\n        // on execute, sign each transaction with the operator, if present\n        // and we are signing a transaction that used the default transaction ID\n\n        const transactionId = this.transactionId;\n        const operatorAccountId = client.operatorAccountId;\n\n        if (\n            operatorAccountId != null &&\n            transactionId.accountId != null &&\n            operatorAccountId.equals(transactionId.accountId)\n        ) {\n            await this.signWithOperator(client);\n        }\n    }\n\n    /**\n     * @override\n     * @internal\n     * @returns {Promise<proto.ITransaction>}\n     */\n    async _makeRequestAsync() {\n        const index =\n            this._nextTransactionIndex * this._nodeIds.length +\n            this._nextNodeIndex;\n\n        await this._buildTransactionAsync(index);\n\n        return /** @type {proto.ITransaction} */ (this._transactions[index]);\n    }\n\n    /**\n     * @param {number} index\n     * @internal\n     */\n    async _signTranscation(index) {\n        const signedTransaction = this._signedTransactions[index];\n\n        const bodyBytes = /** @type {Uint8Array} */ (\n            signedTransaction.bodyBytes\n        );\n\n        if (\n            signedTransaction.sigMap != null &&\n            signedTransaction.sigMap.sigPair != null &&\n            signedTransaction.sigMap.sigPair.length > 0\n        ) {\n            for (let i = 0; i < this._publicKeys.length; i++) {\n                const publicKey = this._publicKeys[i];\n                const signer = this._transactionSigners[i];\n\n                if (\n                    signedTransaction.sigMap.sigPair[0].pubKeyPrefix != null &&\n                    signer != null &&\n                    arrayEqual(\n                        signedTransaction.sigMap.sigPair[0].pubKeyPrefix,\n                        publicKey.toBytesRaw()\n                    )\n                ) {\n                    return;\n                }\n            }\n        }\n\n        for (let j = 0; j < this._publicKeys.length; j++) {\n            const publicKey = this._publicKeys[j];\n            const transactionSigner = this._transactionSigners[j];\n\n            if (transactionSigner == null) {\n                continue;\n            }\n\n            const signature = await transactionSigner(bodyBytes);\n\n            if (signedTransaction.sigMap == null) {\n                signedTransaction.sigMap = {};\n            }\n\n            if (signedTransaction.sigMap.sigPair == null) {\n                signedTransaction.sigMap.sigPair = [];\n            }\n\n            signedTransaction.sigMap.sigPair.push(\n                publicKey._toProtobufSignature(signature)\n            );\n        }\n    }\n\n    _buildAllTransactions() {\n        for (let i = 0; i < this._signedTransactions.length; i++) {\n            this._buildTransaction(i);\n        }\n    }\n\n    async _buildAllTransactionsAsync() {\n        for (let i = 0; i < this._signedTransactions.length; i++) {\n            await this._buildTransactionAsync(i);\n        }\n    }\n\n    /**\n     * @param {number} index\n     * @internal\n     */\n    _buildTransaction(index) {\n        if (this._transactions.length < index) {\n            for (let i = this._transactions.length; i < index; i++) {\n                this._transactions.push(null);\n            }\n        }\n\n        this._transactions[index] = {\n            signedTransactionBytes: ProtoSignedTransaction.encode(\n                this._signedTransactions[index]\n            ).finish(),\n        };\n    }\n\n    /**\n     * @param {number} index\n     * @internal\n     */\n    async _buildTransactionAsync(index) {\n        if (this._transactions.length < index) {\n            for (let i = this._transactions.length; i < index; i++) {\n                this._transactions.push(null);\n            }\n        } else if (\n            this._transactions.length > index &&\n            this._transactions[index] != null &&\n            /** @type {proto.ITransaction} */ (this._transactions[index])\n                .signedTransactionBytes != null\n        ) {\n            return;\n        }\n\n        await this._signTranscation(index);\n\n        this._transactions.push({\n            signedTransactionBytes: ProtoSignedTransaction.encode(\n                this._signedTransactions[index]\n            ).finish(),\n        });\n    }\n\n    /**\n     * @override\n     * @internal\n     * @param {proto.ITransaction} request\n     * @param {proto.ITransactionResponse} response\n     * @returns {ExecutionState}\n     */\n    // eslint-disable-next-line @typescript-eslint/no-unused-vars\n    _shouldRetry(request, response) {\n        const { nodeTransactionPrecheckCode } = response;\n\n        const status = Status._fromCode(\n            nodeTransactionPrecheckCode != null\n                ? nodeTransactionPrecheckCode\n                : ResponseCodeEnum.OK\n        );\n\n        switch (status) {\n            case Status.Busy:\n            case Status.Unknown:\n            case Status.PlatformTransactionNotCreated:\n                return ExecutionState.Retry;\n            case Status.Ok:\n                return ExecutionState.Finished;\n            default:\n                return ExecutionState.Error;\n        }\n    }\n\n    /**\n     * @override\n     * @internal\n     * @param {proto.ITransaction} request\n     * @param {proto.ITransactionResponse} response\n     * @returns {Error}\n     */\n    // eslint-disable-next-line @typescript-eslint/no-unused-vars\n    _mapStatusError(request, response) {\n        const { nodeTransactionPrecheckCode } = response;\n\n        const status = Status._fromCode(\n            nodeTransactionPrecheckCode != null\n                ? nodeTransactionPrecheckCode\n                : ResponseCodeEnum.OK\n        );\n\n        return new PrecheckStatusError({\n            status,\n            transactionId: this._getTransactionId(),\n        });\n    }\n\n    /**\n     * @override\n     * @protected\n     * @param {proto.ITransactionResponse} response\n     * @param {AccountId} nodeId\n     * @param {proto.ITransaction} request\n     * @returns {Promise<TransactionResponse>}\n     */\n    async _mapResponse(response, nodeId, request) {\n        const transactionHash = await sha384.digest(\n            /** @type {Uint8Array} */ (request.signedTransactionBytes)\n        );\n        const transactionId = this.transactionId;\n\n        this._nextTransactionIndex =\n            (this._nextTransactionIndex + 1) % this._transactionIds.length;\n\n        return new TransactionResponse({\n            nodeId,\n            transactionHash,\n            transactionId,\n        });\n    }\n\n    /**\n     * @override\n     * @returns {AccountId}\n     */\n    _getNodeAccountId() {\n        if (this._nodeIds.length === 0) {\n            throw new Error(\n                \"(BUG) Transaction::_getNodeAccountId called before transaction has been frozen\"\n            );\n        }\n\n        return this._nodeIds[this._nextNodeIndex % this._nodeIds.length];\n    }\n\n    /**\n     * @internal\n     * @param {?AccountId} nodeId\n     * @returns {proto.ISignedTransaction}\n     */\n    _makeSignedTransaction(nodeId) {\n        const body = this._makeTransactionBody(nodeId);\n        const bodyBytes = ProtoTransactionBody.encode(body).finish();\n\n        return {\n            bodyBytes,\n            sigMap: {\n                sigPair: [],\n            },\n        };\n    }\n\n    /**\n     * @private\n     * @param {?AccountId} nodeId\n     * @returns {proto.ITransactionBody}\n     */\n    _makeTransactionBody(nodeId) {\n        return {\n            [this._getTransactionDataCase()]: this._makeTransactionData(),\n            transactionFee:\n                this._maxTransactionFee != null\n                    ? this._maxTransactionFee.toTinybars()\n                    : null,\n            memo: this._transactionMemo,\n            transactionID:\n                this._transactionIds[this._nextTransactionIndex] != null\n                    ? this._transactionIds[\n                          this._nextTransactionIndex\n                      ]._toProtobuf()\n                    : null,\n            nodeAccountID: nodeId != null ? nodeId._toProtobuf() : null,\n            transactionValidDuration: {\n                seconds: Long.fromNumber(this._transactionValidDuration),\n            },\n        };\n    }\n\n    /**\n     * @abstract\n     * @protected\n     * @returns {NonNullable<proto.TransactionBody[\"data\"]>}\n     */\n    _getTransactionDataCase() {\n        throw new Error(\"not implemented\");\n    }\n\n    /**\n     * @internal\n     * @returns {proto.ISchedulableTransactionBody}\n     */\n    _getScheduledTransactionBody() {\n        return {\n            memo: this.transactionMemo,\n            transactionFee:\n                this.maxTransactionFee != null\n                    ? this.maxTransactionFee.toTinybars()\n                    : null,\n            [this._getTransactionDataCase()]: this._makeTransactionData(),\n        };\n    }\n\n    /**\n     * @abstract\n     * @protected\n     * @returns {object}\n     */\n    _makeTransactionData() {\n        throw new Error(\"not implemented\");\n    }\n\n    /**\n     * @protected\n     * @returns {boolean}\n     */\n    _isFrozen() {\n        return this._signedTransactions.length > 0;\n    }\n\n    /**\n     * @internal\n     */\n    _requireNotFrozen() {\n        if (this._isFrozen()) {\n            throw new Error(\n                \"transaction is immutable; it has at least one signature or has been explicitly frozen\"\n            );\n        }\n    }\n\n    /**\n     * @internal\n     */\n    _requireFrozen() {\n        if (!this._isFrozen()) {\n            throw new Error(\n                \"transaction must have been frozen before calculating the hash will be stable, try calling `freeze`\"\n            );\n        }\n    }\n}\n\n/**\n * @type {(() => ScheduleCreateTransaction)[]}\n */\nexport const SCHEDULE_CREATE_TRANSACTION = [];\n", "import Long from \"long\";\n\n/**\n * @namespace proto\n * @typedef {import(\"@hashgraph/proto\").IDuration} proto.IDuration\n */\n\nexport default class Duration {\n    /**\n     * @param {Long | number} seconds\n     */\n    constructor(seconds) {\n        /**\n         * @readonly\n         * @type {Long}\n         */\n        this.seconds =\n            seconds instanceof Long ? seconds : Long.fromNumber(seconds);\n\n        Object.freeze(this);\n    }\n\n    /**\n     * @internal\n     * @returns {proto.IDuration}\n     */\n    _toProtobuf() {\n        return {\n            seconds: this.seconds,\n        };\n    }\n\n    /**\n     * @internal\n     * @param {proto.IDuration} duration\n     * @returns {Duration}\n     */\n    static _fromProtobuf(duration) {\n        return new Duration(/** @type {Long} */ (duration.seconds));\n    }\n}\n", "import Hbar from \"../Hbar.js\";\nimport AccountId from \"./AccountId.js\";\nimport Transaction, {\n    DEFAULT_AUTO_RENEW_PERIOD,\n    DEFAULT_RECORD_THRESHOLD,\n    TRANSACTION_REGISTRY,\n} from \"../transaction/Transaction.js\";\nimport Duration from \"../Duration.js\";\nimport Long from \"long\";\nimport Key from \"../Key.js\";\n\n/**\n * @namespace proto\n * @typedef {import(\"@hashgraph/proto\").ITransaction} proto.ITransaction\n * @typedef {import(\"@hashgraph/proto\").ISignedTransaction} proto.ISignedTransaction\n * @typedef {import(\"@hashgraph/proto\").TransactionBody} proto.TransactionBody\n * @typedef {import(\"@hashgraph/proto\").ITransactionBody} proto.ITransactionBody\n * @typedef {import(\"@hashgraph/proto\").ITransactionResponse} proto.ITransactionResponse\n * @typedef {import(\"@hashgraph/proto\").ICryptoCreateTransactionBody} proto.ICryptoCreateTransactionBody\n * @typedef {import(\"@hashgraph/proto\").IAccountID} proto.IAccountID\n */\n\n/**\n * @typedef {import(\"bignumber.js\").default} BigNumber\n * @typedef {import(\"../channel/Channel.js\").default} Channel\n * @typedef {import(\"../client/Client.js\").default<*, *>} Client\n * @typedef {import(\"../Timestamp.js\").default} Timestamp\n * @typedef {import(\"../transaction/TransactionId.js\").default} TransactionId\n */\n\n/**\n * Create a new Hedera\u2122 crypto-currency account.\n */\nexport default class AccountCreateTransaction extends Transaction {\n    /**\n     * @param {object} [props]\n     * @param {Key} [props.key]\n     * @param {number | string | Long | BigNumber | Hbar} [props.initialBalance]\n     * @param {boolean} [props.receiverSignatureRequired]\n     * @param {AccountId} [props.proxyAccountId]\n     * @param {Duration | Long | number} [props.autoRenewPeriod]\n     * @param {string} [props.accountMemo]\n     * @param {Long | number} [props.maxAutomaticTokenAssociations]\n     */\n    constructor(props = {}) {\n        super();\n\n        /**\n         * @private\n         * @type {?Key}\n         */\n        this._key = null;\n\n        /**\n         * @private\n         * @type {?Hbar}\n         */\n        this._initialBalance = null;\n\n        /**\n         * @private\n         * @type {Hbar}\n         */\n        this._sendRecordThreshold = DEFAULT_RECORD_THRESHOLD;\n\n        /**\n         * @private\n         * @type {Hbar}\n         */\n        this._receiveRecordThreshold = DEFAULT_RECORD_THRESHOLD;\n\n        /**\n         * @private\n         * @type {boolean}\n         */\n        this._receiverSignatureRequired = false;\n\n        /**\n         * @private\n         * @type {?AccountId}\n         */\n        this._proxyAccountId = null;\n\n        /**\n         * @private\n         * @type {Duration}\n         */\n        this._autoRenewPeriod = new Duration(DEFAULT_AUTO_RENEW_PERIOD);\n\n        /**\n         * @private\n         * @type {?string}\n         */\n        this._accountMemo = null;\n\n        /**\n         * @private\n         * @type {?Long}\n         */\n        this._maxAutomaticTokenAssociations = null;\n\n        if (props.key != null) {\n            this.setKey(props.key);\n        }\n\n        if (props.receiverSignatureRequired != null) {\n            this.setReceiverSignatureRequired(props.receiverSignatureRequired);\n        }\n\n        if (props.initialBalance != null) {\n            this.setInitialBalance(props.initialBalance);\n        }\n\n        if (props.proxyAccountId != null) {\n            this.setProxyAccountId(props.proxyAccountId);\n        }\n\n        if (props.autoRenewPeriod != null) {\n            this.setAutoRenewPeriod(props.autoRenewPeriod);\n        }\n\n        if (props.accountMemo != null) {\n            this.setAccountMemo(props.accountMemo);\n        }\n\n        if (props.maxAutomaticTokenAssociations != null) {\n            this.setMaxAutomaticTokenAssociations(\n                props.maxAutomaticTokenAssociations\n            );\n        }\n    }\n\n    /**\n     * @internal\n     * @param {proto.ITransaction[]} transactions\n     * @param {proto.ISignedTransaction[]} signedTransactions\n     * @param {TransactionId[]} transactionIds\n     * @param {AccountId[]} nodeIds\n     * @param {proto.ITransactionBody[]} bodies\n     * @returns {AccountCreateTransaction}\n     */\n    static _fromProtobuf(\n        transactions,\n        signedTransactions,\n        transactionIds,\n        nodeIds,\n        bodies\n    ) {\n        const body = bodies[0];\n        const create = /** @type {proto.ICryptoCreateTransactionBody} */ (\n            body.cryptoCreateAccount\n        );\n\n        return Transaction._fromProtobufTransactions(\n            new AccountCreateTransaction({\n                key:\n                    create.key != null\n                        ? Key._fromProtobufKey(create.key)\n                        : undefined,\n                initialBalance:\n                    create.initialBalance != null\n                        ? create.initialBalance\n                        : undefined,\n                receiverSignatureRequired:\n                    create.receiverSigRequired != null\n                        ? create.receiverSigRequired\n                        : undefined,\n                proxyAccountId:\n                    create.proxyAccountID != null\n                        ? AccountId._fromProtobuf(\n                              /** @type {proto.IAccountID} */ (\n                                  create.proxyAccountID\n                              )\n                          )\n                        : undefined,\n                autoRenewPeriod:\n                    create.autoRenewPeriod != null\n                        ? create.autoRenewPeriod.seconds != null\n                            ? create.autoRenewPeriod.seconds\n                            : undefined\n                        : undefined,\n                accountMemo: create.memo != null ? create.memo : undefined,\n                maxAutomaticTokenAssociations:\n                    create.maxAutomaticTokenAssociations != null\n                        ? create.maxAutomaticTokenAssociations\n                        : undefined,\n            }),\n            transactions,\n            signedTransactions,\n            transactionIds,\n            nodeIds,\n            bodies\n        );\n    }\n\n    /**\n     * @returns {?Key}\n     */\n    get key() {\n        return this._key;\n    }\n\n    /**\n     * Set the key for this account.\n     *\n     * This is the key that must sign each transfer out of the account.\n     *\n     * If `receiverSignatureRequired` is true, then the key must also sign\n     * any transfer into the account.\n     *\n     * @param {Key} key\n     * @returns {this}\n     */\n    setKey(key) {\n        this._requireNotFrozen();\n        this._key = key;\n\n        return this;\n    }\n\n    /**\n     * @returns {?Hbar}\n     */\n    get initialBalance() {\n        return this._initialBalance;\n    }\n\n    /**\n     * Set the initial amount to transfer into this account.\n     *\n     * @param {number | string | Long | BigNumber | Hbar} initialBalance\n     * @returns {this}\n     */\n    setInitialBalance(initialBalance) {\n        this._requireNotFrozen();\n        this._initialBalance =\n            initialBalance instanceof Hbar\n                ? initialBalance\n                : new Hbar(initialBalance);\n\n        return this;\n    }\n\n    /**\n     * @returns {boolean}\n     */\n    get receiverSignatureRequired() {\n        return this._receiverSignatureRequired;\n    }\n\n    /**\n     * Set to true to require the key for this account to sign any transfer of\n     * hbars to this account.\n     *\n     * @param {boolean} receiverSignatureRequired\n     * @returns {this}\n     */\n    setReceiverSignatureRequired(receiverSignatureRequired) {\n        this._requireNotFrozen();\n        this._receiverSignatureRequired = receiverSignatureRequired;\n\n        return this;\n    }\n\n    /**\n     * @returns {?AccountId}\n     */\n    get proxyAccountId() {\n        return this._proxyAccountId;\n    }\n\n    /**\n     * Set the ID of the account to which this account is proxy staked.\n     *\n     * @param {AccountId} proxyAccountId\n     * @returns {this}\n     */\n    setProxyAccountId(proxyAccountId) {\n        this._requireNotFrozen();\n        this._proxyAccountId = proxyAccountId;\n\n        return this;\n    }\n\n    /**\n     * @returns {Duration}\n     */\n    get autoRenewPeriod() {\n        return this._autoRenewPeriod;\n    }\n\n    /**\n     * Set the auto renew period for this account.\n     *\n     * @param {Duration | Long | number} autoRenewPeriod\n     * @returns {this}\n     */\n    setAutoRenewPeriod(autoRenewPeriod) {\n        this._requireNotFrozen();\n        this._autoRenewPeriod =\n            autoRenewPeriod instanceof Duration\n                ? autoRenewPeriod\n                : new Duration(autoRenewPeriod);\n\n        return this;\n    }\n\n    /**\n     * @returns {?string}\n     */\n    get accountMemo() {\n        return this._accountMemo;\n    }\n\n    /**\n     * @param {string} memo\n     * @returns {this}\n     */\n    setAccountMemo(memo) {\n        this._requireNotFrozen();\n        this._accountMemo = memo;\n\n        return this;\n    }\n\n    /**\n     * @returns {?Long}\n     */\n    get maxAutomaticTokenAssociations() {\n        return this._maxAutomaticTokenAssociations;\n    }\n\n    /**\n     * @param {Long | number} maxAutomaticTokenAssociations\n     * @returns {this}\n     */\n    setMaxAutomaticTokenAssociations(maxAutomaticTokenAssociations) {\n        this._requireNotFrozen();\n        this._maxAutomaticTokenAssociations =\n            typeof maxAutomaticTokenAssociations === \"number\"\n                ? Long.fromNumber(maxAutomaticTokenAssociations)\n                : maxAutomaticTokenAssociations;\n\n        return this;\n    }\n\n    /**\n     * @param {Client} client\n     */\n    _validateChecksums(client) {\n        if (this._proxyAccountId != null) {\n            this._proxyAccountId.validateChecksum(client);\n        }\n    }\n\n    /**\n     * @override\n     * @internal\n     * @param {Channel} channel\n     * @param {proto.ITransaction} request\n     * @returns {Promise<proto.ITransactionResponse>}\n     */\n    _execute(channel, request) {\n        return channel.crypto.createAccount(request);\n    }\n\n    /**\n     * @override\n     * @protected\n     * @returns {NonNullable<proto.TransactionBody[\"data\"]>}\n     */\n    _getTransactionDataCase() {\n        return \"cryptoCreateAccount\";\n    }\n\n    /**\n     * @override\n     * @protected\n     * @returns {proto.ICryptoCreateTransactionBody}\n     */\n    _makeTransactionData() {\n        return {\n            key: this._key != null ? this._key._toProtobufKey() : null,\n            initialBalance:\n                this._initialBalance != null\n                    ? this._initialBalance.toTinybars()\n                    : null,\n            autoRenewPeriod: this._autoRenewPeriod._toProtobuf(),\n            proxyAccountID:\n                this._proxyAccountId != null\n                    ? this._proxyAccountId._toProtobuf()\n                    : null,\n            receiveRecordThreshold: this._receiveRecordThreshold.toTinybars(),\n            sendRecordThreshold: this._sendRecordThreshold.toTinybars(),\n            receiverSigRequired: this._receiverSignatureRequired,\n            memo: this._accountMemo,\n            maxAutomaticTokenAssociations:\n                this._maxAutomaticTokenAssociations != null\n                    ? this._maxAutomaticTokenAssociations.toInt()\n                    : null,\n        };\n    }\n}\n\nTRANSACTION_REGISTRY.set(\n    \"cryptoCreateAccount\",\n    // eslint-disable-next-line @typescript-eslint/unbound-method\n    AccountCreateTransaction._fromProtobuf\n);\n", "import AccountId from \"./AccountId.js\";\nimport Transaction, {\n    TRANSACTION_REGISTRY,\n} from \"../transaction/Transaction.js\";\n\n/**\n * @namespace proto\n * @typedef {import(\"@hashgraph/proto\").ITransaction} proto.ITransaction\n * @typedef {import(\"@hashgraph/proto\").ISignedTransaction} proto.ISignedTransaction\n * @typedef {import(\"@hashgraph/proto\").TransactionBody} proto.TransactionBody\n * @typedef {import(\"@hashgraph/proto\").ITransactionBody} proto.ITransactionBody\n * @typedef {import(\"@hashgraph/proto\").ITransactionResponse} proto.ITransactionResponse\n * @typedef {import(\"@hashgraph/proto\").ICryptoDeleteTransactionBody} proto.ICryptoDeleteTransactionBody\n * @typedef {import(\"@hashgraph/proto\").IAccountID} proto.IAccountID\n */\n\n/**\n * @typedef {import(\"../channel/Channel.js\").default} Channel\n * @typedef {import(\"../client/Client.js\").default<*, *>} Client\n * @typedef {import(\"../transaction/TransactionId.js\").default} TransactionId\n */\n\n/**\n * Marks an account as deleted, moving all its current hbars to another account.\n *\n * It will remain in the ledger, marked as deleted, until it expires.\n * Transfers into it a deleted account fail. But a deleted account can still have its\n * expiration extended in the normal way.\n */\nexport default class AccountDeleteTransaction extends Transaction {\n    /**\n     * @param {object} props\n     * @param {AccountId} [props.accountId]\n     * @param {AccountId} [props.transferAccountId]\n     */\n    constructor(props = {}) {\n        super();\n\n        /**\n         * @private\n         * @type {?AccountId}\n         */\n        this._accountId = null;\n\n        /**\n         * @private\n         * @type {?AccountId}\n         */\n        this._transferAccountId = null;\n\n        if (props.accountId != null) {\n            this.setAccountId(props.accountId);\n        }\n\n        if (props.transferAccountId != null) {\n            this.setTransferAccountId(props.transferAccountId);\n        }\n    }\n\n    /**\n     * @internal\n     * @param {proto.ITransaction[]} transactions\n     * @param {proto.ISignedTransaction[]} signedTransactions\n     * @param {TransactionId[]} transactionIds\n     * @param {AccountId[]} nodeIds\n     * @param {proto.ITransactionBody[]} bodies\n     * @returns {AccountDeleteTransaction}\n     */\n    static _fromProtobuf(\n        transactions,\n        signedTransactions,\n        transactionIds,\n        nodeIds,\n        bodies\n    ) {\n        const body = bodies[0];\n        const accountDelete =\n            /** @type {proto.ICryptoDeleteTransactionBody} */ (\n                body.cryptoDelete\n            );\n\n        return Transaction._fromProtobufTransactions(\n            new AccountDeleteTransaction({\n                accountId:\n                    accountDelete.deleteAccountID != null\n                        ? AccountId._fromProtobuf(\n                              /** @type {proto.IAccountID} */ (\n                                  accountDelete.deleteAccountID\n                              )\n                          )\n                        : undefined,\n                transferAccountId:\n                    accountDelete.transferAccountID != null\n                        ? AccountId._fromProtobuf(\n                              /** @type {proto.IAccountID} */ (\n                                  accountDelete.transferAccountID\n                              )\n                          )\n                        : undefined,\n            }),\n            transactions,\n            signedTransactions,\n            transactionIds,\n            nodeIds,\n            bodies\n        );\n    }\n\n    /**\n     * @returns {?AccountId}\n     */\n    get accountId() {\n        return this._accountId;\n    }\n\n    /**\n     * Set the account ID which is being deleted in this transaction.\n     *\n     * @param {AccountId | string} accountId\n     * @returns {AccountDeleteTransaction}\n     */\n    setAccountId(accountId) {\n        this._requireNotFrozen();\n        this._accountId =\n            typeof accountId === \"string\"\n                ? AccountId.fromString(accountId)\n                : accountId.clone();\n\n        return this;\n    }\n\n    /**\n     * @returns {?AccountId}\n     */\n    get transferAccountId() {\n        return this._transferAccountId;\n    }\n\n    /**\n     * Set the account ID which will receive all remaining hbars.\n     *\n     * @param {AccountId | string} transferAccountId\n     * @returns {AccountDeleteTransaction}\n     */\n    setTransferAccountId(transferAccountId) {\n        this._requireNotFrozen();\n        this._transferAccountId =\n            typeof transferAccountId === \"string\"\n                ? AccountId.fromString(transferAccountId)\n                : transferAccountId.clone();\n\n        return this;\n    }\n\n    /**\n     * @param {Client} client\n     */\n    _validateChecksums(client) {\n        if (this._accountId != null) {\n            this._accountId.validateChecksum(client);\n        }\n\n        if (this._transferAccountId != null) {\n            this._transferAccountId.validateChecksum(client);\n        }\n    }\n\n    /**\n     * @override\n     * @internal\n     * @param {Channel} channel\n     * @param {proto.ITransaction} request\n     * @returns {Promise<proto.ITransactionResponse>}\n     */\n    _execute(channel, request) {\n        return channel.crypto.cryptoDelete(request);\n    }\n\n    /**\n     * @override\n     * @protected\n     * @returns {NonNullable<proto.TransactionBody[\"data\"]>}\n     */\n    _getTransactionDataCase() {\n        return \"cryptoDelete\";\n    }\n\n    /**\n     * @override\n     * @protected\n     * @returns {proto.ICryptoDeleteTransactionBody}\n     */\n    _makeTransactionData() {\n        return {\n            deleteAccountID:\n                this._accountId != null ? this._accountId._toProtobuf() : null,\n            transferAccountID:\n                this._transferAccountId != null\n                    ? this._transferAccountId._toProtobuf()\n                    : null,\n        };\n    }\n}\n\nTRANSACTION_REGISTRY.set(\n    \"cryptoDelete\",\n    // eslint-disable-next-line @typescript-eslint/unbound-method\n    AccountDeleteTransaction._fromProtobuf\n);\n", "import AccountId from \"./AccountId.js\";\nimport Duration from \"../Duration.js\";\nimport KeyList from \"../KeyList.js\";\n\n/**\n * @namespace proto\n * @typedef {import(\"@hashgraph/proto\").IAccountID} proto.IAccountID\n * @typedef {import(\"@hashgraph/proto\").ILiveHash} proto.ILiveHash\n * @typedef {import(\"@hashgraph/proto\").IDuration} proto.IDuration\n */\n\n/**\n * Response when the client sends the node CryptoGetInfoQuery.\n */\nexport default class LiveHash {\n    /**\n     * @private\n     * @param {object} props\n     * @param {AccountId} props.accountId\n     * @param {Uint8Array} props.hash\n     * @param {KeyList} props.keys\n     * @param {Duration} props.duration\n     */\n    constructor(props) {\n        /** @readonly */\n        this.accountId = props.accountId;\n\n        /** @readonly */\n        this.hash = props.hash;\n\n        /** @readonly */\n        this.keys = props.keys;\n\n        /** @readonly */\n        this.duration = props.duration;\n\n        Object.freeze(this);\n    }\n\n    /**\n     * @internal\n     * @param {proto.ILiveHash} liveHash\n     * @returns {LiveHash}\n     */\n    static _fromProtobuf(liveHash) {\n        const liveHash_ = /** @type {proto.ILiveHash} */ (liveHash);\n\n        return new LiveHash({\n            accountId: AccountId._fromProtobuf(\n                /** @type {proto.IAccountID} */ (liveHash_.accountId)\n            ),\n            hash: liveHash_.hash != null ? liveHash_.hash : new Uint8Array(),\n            keys:\n                liveHash_.keys != null\n                    ? KeyList.__fromProtobufKeyList(liveHash_.keys)\n                    : new KeyList(),\n            duration: Duration._fromProtobuf(\n                /** @type {proto.IDuration} */ (liveHash_.duration)\n            ),\n        });\n    }\n\n    /**\n     * @internal\n     * @returns {proto.ILiveHash}\n     */\n    _toProtobuf() {\n        return {\n            accountId: this.accountId._toProtobuf(),\n            hash: this.hash,\n            keys: this.keys._toProtobufKey().keyList,\n            duration: this.duration._toProtobuf(),\n        };\n    }\n}\n", "import AccountId from \"./AccountId.js\";\nimport LiveHash from \"./LiveHash.js\";\nimport Hbar from \"../Hbar.js\";\nimport Timestamp from \"../Timestamp.js\";\nimport Long from \"long\";\nimport TokenRelationshipMap from \"./TokenRelationshipMap.js\";\nimport * as proto from \"@hashgraph/proto\";\nimport Duration from \"../Duration.js\";\nimport Key from \"../Key.js\";\nimport PublicKey from \"../PublicKey.js\";\n\n/**\n * Current information about an account, including the balance.\n */\nexport default class AccountInfo {\n    /**\n     * @private\n     * @param {object} props\n     * @param {AccountId} props.accountId\n     * @param {?string} props.contractAccountId\n     * @param {boolean} props.isDeleted\n     * @param {?AccountId} props.proxyAccountId\n     * @param {Hbar} props.proxyReceived\n     * @param {Key} props.key\n     * @param {Hbar} props.balance\n     * @param {Hbar} props.sendRecordThreshold\n     * @param {Hbar} props.receiveRecordThreshold\n     * @param {boolean} props.isReceiverSignatureRequired\n     * @param {Timestamp} props.expirationTime\n     * @param {Duration} props.autoRenewPeriod\n     * @param {LiveHash[]} props.liveHashes\n     * @param {TokenRelationshipMap} props.tokenRelationships\n     * @param {string} props.accountMemo\n     * @param {Long} props.ownedNfts\n     * @param {Long} props.maxAutomaticTokenAssociations\n     * @param {PublicKey | null} props.aliasKey\n     */\n    constructor(props) {\n        /**\n         * The account ID for which this information applies.\n         *\n         * @readonly\n         */\n        this.accountId = props.accountId;\n\n        /**\n         * The Contract Account ID comprising of both the contract instance and the cryptocurrency\n         * account owned by the contract instance, in the format used by Solidity.\n         *\n         * @readonly\n         */\n        this.contractAccountId = props.contractAccountId;\n\n        /**\n         * If true, then this account has been deleted, it will disappear when it expires, and\n         * all transactions for it will fail except the transaction to extend its expiration date.\n         *\n         * @readonly\n         */\n        this.isDeleted = props.isDeleted;\n\n        /**\n         * The Account ID of the account to which this is proxy staked. If proxyAccountID is null,\n         * or is an invalid account, or is an account that isn't a node, then this account is\n         * automatically proxy staked to a node chosen by the network, but without earning payments.\n         * If the proxyAccountID account refuses to accept proxy staking , or if it is not currently\n         * running a node, then it will behave as if proxyAccountID was null.\n         *\n         * @readonly\n         */\n        this.proxyAccountId = props.proxyAccountId;\n\n        /**\n         * The total number of tinybars proxy staked to this account.\n         *\n         * @readonly\n         */\n        this.proxyReceived = props.proxyReceived;\n\n        /**\n         * The key for the account, which must sign in order to transfer out, or to modify the account\n         * in any way other than extending its expiration date.\n         *\n         * @readonly\n         */\n        this.key = props.key;\n\n        /**\n         * The current balance of account.\n         *\n         * @readonly\n         */\n        this.balance = props.balance;\n\n        /**\n         * The threshold amount (in tinybars) for which an account record is created (and this account\n         * charged for them) for any send/withdraw transaction.\n         *\n         * @readonly\n         */\n        this.sendRecordThreshold = props.sendRecordThreshold;\n\n        /**\n         * The threshold amount (in tinybars) for which an account record is created\n         * (and this account charged for them) for any transaction above this amount.\n         *\n         * @readonly\n         */\n        this.receiveRecordThreshold = props.receiveRecordThreshold;\n\n        /**\n         * If true, no transaction can transfer to this account unless signed by this account's key.\n         *\n         * @readonly\n         */\n        this.isReceiverSignatureRequired = props.isReceiverSignatureRequired;\n\n        /**\n         * The TimeStamp time at which this account is set to expire.\n         *\n         * @readonly\n         */\n        this.expirationTime = props.expirationTime;\n\n        /**\n         * The duration for expiration time will extend every this many seconds. If there are\n         * insufficient funds, then it extends as long as possible. If it is empty when it\n         * expires, then it is deleted.\n         *\n         * @readonly\n         */\n        this.autoRenewPeriod = props.autoRenewPeriod;\n\n        /** @readonly */\n        this.liveHashes = props.liveHashes;\n\n        /** @readonly */\n        this.tokenRelationships = props.tokenRelationships;\n\n        /** @readonly */\n        this.accountMemo = props.accountMemo;\n\n        /** @readonly */\n        this.ownedNfts = props.ownedNfts;\n\n        /** @readonly */\n        this.maxAutomaticTokenAssociations =\n            props.maxAutomaticTokenAssociations;\n\n        this.aliasKey = props.aliasKey;\n\n        Object.freeze(this);\n    }\n\n    /**\n     * @internal\n     * @param {proto.IAccountInfo} info\n     * @returns {AccountInfo}\n     */\n    static _fromProtobuf(info) {\n        let aliasKey =\n            info.alias != null && info.alias.length > 0\n                ? Key._fromProtobufKey(proto.Key.decode(info.alias))\n                : null;\n\n        if (!(aliasKey instanceof PublicKey)) {\n            aliasKey = null;\n        }\n\n        return new AccountInfo({\n            accountId: AccountId._fromProtobuf(\n                /** @type {proto.IAccountID} */ (info.accountID)\n            ),\n            contractAccountId:\n                info.contractAccountID != null ? info.contractAccountID : null,\n            isDeleted: info.deleted != null ? info.deleted : false,\n            key: Key._fromProtobufKey(/** @type {proto.IKey} */ (info.key)),\n            balance: Hbar.fromTinybars(info.balance != null ? info.balance : 0),\n            sendRecordThreshold: Hbar.fromTinybars(\n                info.generateSendRecordThreshold != null\n                    ? info.generateSendRecordThreshold\n                    : 0\n            ),\n            receiveRecordThreshold: Hbar.fromTinybars(\n                info.generateReceiveRecordThreshold != null\n                    ? info.generateReceiveRecordThreshold\n                    : 0\n            ),\n            isReceiverSignatureRequired:\n                info.receiverSigRequired != null\n                    ? info.receiverSigRequired\n                    : false,\n            expirationTime: Timestamp._fromProtobuf(\n                /** @type {proto.ITimestamp} */ (info.expirationTime)\n            ),\n            autoRenewPeriod:\n                info.autoRenewPeriod != null\n                    ? new Duration(\n                          /** @type {Long} */ (info.autoRenewPeriod.seconds)\n                      )\n                    : new Duration(0),\n            proxyAccountId:\n                info.proxyAccountID != null &&\n                Long.fromValue(\n                    /** @type {Long | number} */ (info.proxyAccountID.shardNum)\n                ).toInt() !== 0 &&\n                Long.fromValue(\n                    /** @type {Long | number} */ (info.proxyAccountID.realmNum)\n                ).toInt() !== 0 &&\n                Long.fromValue(\n                    /** @type {Long | number} */ (\n                        info.proxyAccountID.accountNum\n                    )\n                ).toInt() !== 0\n                    ? AccountId._fromProtobuf(info.proxyAccountID)\n                    : null,\n            proxyReceived: Hbar.fromTinybars(\n                info.proxyReceived != null ? info.proxyReceived : 0\n            ),\n            liveHashes: (info.liveHashes != null ? info.liveHashes : []).map(\n                (hash) => LiveHash._fromProtobuf(hash)\n            ),\n            tokenRelationships: TokenRelationshipMap._fromProtobuf(\n                info.tokenRelationships != null ? info.tokenRelationships : []\n            ),\n            accountMemo: info.memo != null ? info.memo : \"\",\n            ownedNfts: info.ownedNfts ? info.ownedNfts : Long.ZERO,\n            maxAutomaticTokenAssociations: info.maxAutomaticTokenAssociations\n                ? Long.fromNumber(info.maxAutomaticTokenAssociations)\n                : Long.ZERO,\n            aliasKey,\n        });\n    }\n\n    /**\n     * @returns {proto.IAccountInfo}\n     */\n    _toProtobuf() {\n        return {\n            accountID: this.accountId._toProtobuf(),\n            contractAccountID: this.contractAccountId,\n            deleted: this.isDeleted,\n            proxyAccountID:\n                this.proxyAccountId != null\n                    ? this.proxyAccountId._toProtobuf()\n                    : null,\n            proxyReceived: this.proxyReceived.toTinybars(),\n            key: this.key._toProtobufKey(),\n            balance: this.balance.toTinybars(),\n            generateSendRecordThreshold: this.sendRecordThreshold.toTinybars(),\n            generateReceiveRecordThreshold:\n                this.receiveRecordThreshold.toTinybars(),\n            receiverSigRequired: this.isReceiverSignatureRequired,\n            expirationTime: this.expirationTime._toProtobuf(),\n            autoRenewPeriod: this.autoRenewPeriod._toProtobuf(),\n            liveHashes: this.liveHashes.map((hash) => hash._toProtobuf()),\n            tokenRelationships:\n                this.tokenRelationships != null\n                    ? this.tokenRelationships._toProtobuf()\n                    : null,\n            memo: this.accountMemo,\n            ownedNfts: this.ownedNfts,\n            maxAutomaticTokenAssociations:\n                this.maxAutomaticTokenAssociations.toInt(),\n            alias:\n                this.aliasKey != null\n                    ? proto.Key.encode(this.aliasKey._toProtobufKey()).finish()\n                    : null,\n        };\n    }\n\n    /**\n     * @param {Uint8Array} bytes\n     * @returns {AccountInfo}\n     */\n    static fromBytes(bytes) {\n        return AccountInfo._fromProtobuf(\n            proto.CryptoGetInfoResponse.AccountInfo.decode(bytes)\n        );\n    }\n\n    /**\n     * @returns {Uint8Array}\n     */\n    toBytes() {\n        return proto.CryptoGetInfoResponse.AccountInfo.encode(\n            this._toProtobuf()\n        ).finish();\n    }\n}\n", "import Long from \"long\";\nimport TokenId from \"../token/TokenId.js\";\n\n/**\n * @namespace proto\n * @typedef {import(\"@hashgraph/proto\").ITokenRelationship} proto.ITokenRelationship\n * @typedef {import(\"@hashgraph/proto\").TokenKycStatus} proto.TokenKycStatus\n * @typedef {import(\"@hashgraph/proto\").TokenFreezeStatus} proto.TokenFreezeStatus\n * @typedef {import(\"@hashgraph/proto\").ITokenID} proto.ITokenID\n */\n\n/**\n * Token's information related to the given Account\n */\nexport default class TokenRelationship {\n    /**\n     * @param {object} props\n     * @param {TokenId} props.tokenId\n     * @param {string} props.symbol\n     * @param {Long} props.balance\n     * @param {boolean | null} props.isKycGranted\n     * @param {boolean | null} props.isFrozen\n     * @param {boolean | null} props.automaticAssociation\n     */\n    constructor(props) {\n        /**\n         * The ID of the token\n         *\n         * @readonly\n         */\n        this.tokenId = props.tokenId;\n\n        /**\n         * The Symbol of the token\n         *\n         * @readonly\n         */\n        this.symbol = props.symbol;\n\n        /**\n         * The balance that the Account holds in the smallest denomination\n         *\n         * @readonly\n         */\n        this.balance = props.balance;\n\n        /**\n         * The KYC status of the account (KycNotApplicable, Granted or Revoked). If the token does\n         * not have KYC key, KycNotApplicable is returned\n         *\n         * @readonly\n         */\n        this.isKycGranted = props.isKycGranted;\n\n        /**\n         * The Freeze status of the account (FreezeNotApplicable, Frozen or Unfrozen). If the token\n         * does not have Freeze key, FreezeNotApplicable is returned\n         *\n         * @readonly\n         */\n        this.isFrozen = props.isFrozen;\n\n        /**\n         * Specifies if the relationship is created implicitly. False : explicitly associated, True :\n         * implicitly associated.\n         *\n         * @readonly\n         */\n        this.automaticAssociation = props.automaticAssociation;\n\n        Object.freeze(this);\n    }\n\n    /**\n     * @param {proto.ITokenRelationship} relationship\n     * @returns {TokenRelationship}\n     */\n    static _fromProtobuf(relationship) {\n        const tokenId = TokenId._fromProtobuf(\n            /** @type {proto.ITokenID} */ (relationship.tokenId)\n        );\n        const isKycGranted =\n            relationship.kycStatus == null || relationship.kycStatus === 0\n                ? null\n                : relationship.kycStatus === 1;\n        const isFrozen =\n            relationship.freezeStatus == null || relationship.freezeStatus === 0\n                ? null\n                : relationship.freezeStatus === 1;\n\n        return new TokenRelationship({\n            tokenId,\n            symbol: /** @type {string} */ (relationship.symbol),\n            balance:\n                relationship.balance != null\n                    ? relationship.balance instanceof Long\n                        ? relationship.balance\n                        : Long.fromValue(relationship.balance)\n                    : Long.ZERO,\n            isKycGranted,\n            isFrozen,\n            automaticAssociation:\n                relationship.automaticAssociation != null\n                    ? relationship.automaticAssociation\n                    : null,\n        });\n    }\n\n    /**\n     * @returns {proto.ITokenRelationship}\n     */\n    _toProtobuf() {\n        return {\n            tokenId: this.tokenId._toProtobuf(),\n            symbol: this.symbol,\n            balance: this.balance,\n            kycStatus:\n                this.isKycGranted == null ? 0 : this.isKycGranted ? 1 : 2,\n            freezeStatus: this.isFrozen == null ? 0 : this.isFrozen ? 1 : 2,\n            automaticAssociation: this.automaticAssociation,\n        };\n    }\n}\n", "import TokenId from \"../token/TokenId.js\";\nimport TokenRelationship from \"./TokenRelationship.js\";\nimport ObjectMap from \"../ObjectMap.js\";\n\n/**\n * @namespace proto\n * @typedef {import(\"@hashgraph/proto\").ITokenRelationship} proto.ITokenRelationship\n * @typedef {import(\"@hashgraph/proto\").ITokenID} proto.ITokenID\n */\n\n/**\n * @typedef {import(\"long\")} Long\n */\n\n/**\n * @augments {ObjectMap<TokenId, TokenRelationship>}\n */\nexport default class TokenRelationshipMap extends ObjectMap {\n    constructor() {\n        super((s) => TokenId.fromString(s));\n    }\n\n    /**\n     * @param {proto.ITokenRelationship[]} relationships\n     * @returns {TokenRelationshipMap}\n     */\n    static _fromProtobuf(relationships) {\n        const tokenRelationships = new TokenRelationshipMap();\n\n        for (const relationship of relationships) {\n            const tokenId = TokenId._fromProtobuf(\n                /** @type {proto.ITokenID} */ (relationship.tokenId)\n            );\n\n            tokenRelationships._set(\n                tokenId,\n                TokenRelationship._fromProtobuf(relationship)\n            );\n        }\n\n        return tokenRelationships;\n    }\n\n    /**\n     * @returns {proto.ITokenRelationship[]}\n     */\n    _toProtobuf() {\n        const list = [];\n\n        // eslint-disable-next-line @typescript-eslint/no-unused-vars\n        for (const [_, relationship] of this) {\n            list.push(relationship._toProtobuf());\n        }\n\n        return list;\n    }\n}\n", "import Query, { QUERY_REGISTRY } from \"../query/Query.js\";\nimport AccountId from \"./AccountId.js\";\nimport AccountInfo from \"./AccountInfo.js\";\nimport Hbar from \"../Hbar.js\";\n\n/**\n * @namespace proto\n * @typedef {import(\"@hashgraph/proto\").IQuery} proto.IQuery\n * @typedef {import(\"@hashgraph/proto\").IQueryHeader} proto.IQueryHeader\n * @typedef {import(\"@hashgraph/proto\").IResponse} proto.IResponse\n * @typedef {import(\"@hashgraph/proto\").IResponseHeader} proto.IResponseHeader\n * @typedef {import(\"@hashgraph/proto\").IAccountInfo} proto.IAccountInfo\n * @typedef {import(\"@hashgraph/proto\").ICryptoGetInfoQuery} proto.ICryptoGetInfoQuery\n * @typedef {import(\"@hashgraph/proto\").ICryptoGetInfoResponse} proto.ICryptoGetInfoResponse\n */\n\n/**\n * @typedef {import(\"../channel/Channel.js\").default} Channel\n * @typedef {import(\"../client/Client.js\").default<*, *>} Client\n */\n\n/**\n * @augments {Query<AccountInfo>}\n */\nexport default class AccountInfoQuery extends Query {\n    /**\n     * @param {object} props\n     * @param {AccountId | string} [props.accountId]\n     */\n    constructor(props = {}) {\n        super();\n\n        /**\n         * @private\n         * @type {?AccountId}\n         */\n        this._accountId = null;\n        if (props.accountId != null) {\n            this.setAccountId(props.accountId);\n        }\n    }\n\n    /**\n     * @internal\n     * @param {proto.IQuery} query\n     * @returns {AccountInfoQuery}\n     */\n    static _fromProtobuf(query) {\n        const info = /** @type {proto.ICryptoGetInfoQuery} */ (\n            query.cryptoGetInfo\n        );\n\n        return new AccountInfoQuery({\n            accountId:\n                info.accountID != null\n                    ? AccountId._fromProtobuf(info.accountID)\n                    : undefined,\n        });\n    }\n\n    /**\n     * @returns {?AccountId}\n     */\n    get accountId() {\n        return this._accountId;\n    }\n\n    /**\n     * Set the account ID for which the info is being requested.\n     *\n     * @param {AccountId | string} accountId\n     * @returns {AccountInfoQuery}\n     */\n    setAccountId(accountId) {\n        this._accountId =\n            typeof accountId === \"string\"\n                ? AccountId.fromString(accountId)\n                : accountId.clone();\n\n        return this;\n    }\n\n    /**\n     * @param {Client} client\n     */\n    _validateChecksums(client) {\n        if (this._accountId != null) {\n            this._accountId.validateChecksum(client);\n        }\n    }\n\n    /**\n     * @override\n     * @internal\n     * @param {Channel} channel\n     * @param {proto.IQuery} request\n     * @returns {Promise<proto.IResponse>}\n     */\n    _execute(channel, request) {\n        return channel.crypto.getAccountInfo(request);\n    }\n\n    /**\n     * @override\n     * @param {import(\"../client/Client.js\").default<Channel, *>} client\n     * @returns {Promise<Hbar>}\n     */\n    async getCost(client) {\n        let cost = await super.getCost(client);\n\n        if (cost.toTinybars().greaterThan(25)) {\n            return cost;\n        } else {\n            return Hbar.fromTinybars(25);\n        }\n    }\n\n    /**\n     * @override\n     * @internal\n     * @param {proto.IResponse} response\n     * @returns {proto.IResponseHeader}\n     */\n    _mapResponseHeader(response) {\n        const cryptoGetInfo = /** @type {proto.ICryptoGetInfoResponse} */ (\n            response.cryptoGetInfo\n        );\n        return /** @type {proto.IResponseHeader} */ (cryptoGetInfo.header);\n    }\n\n    /**\n     * @override\n     * @internal\n     * @param {proto.IResponse} response\n     * @param {AccountId} nodeAccountId\n     * @param {proto.IQuery} request\n     * @returns {Promise<AccountInfo>}\n     */\n    // eslint-disable-next-line @typescript-eslint/no-unused-vars\n    _mapResponse(response, nodeAccountId, request) {\n        const info = /** @type {proto.ICryptoGetInfoResponse} */ (\n            response.cryptoGetInfo\n        );\n\n        return Promise.resolve(\n            AccountInfo._fromProtobuf(\n                /** @type {proto.IAccountInfo} */ (info.accountInfo)\n            )\n        );\n    }\n\n    /**\n     * @override\n     * @internal\n     * @param {proto.IQueryHeader} header\n     * @returns {proto.IQuery}\n     */\n    _onMakeRequest(header) {\n        return {\n            cryptoGetInfo: {\n                header,\n                accountID:\n                    this._accountId != null\n                        ? this._accountId._toProtobuf()\n                        : null,\n            },\n        };\n    }\n}\n\n// eslint-disable-next-line @typescript-eslint/unbound-method\nQUERY_REGISTRY.set(\"cryptoGetInfo\", AccountInfoQuery._fromProtobuf);\n", "import Query, { QUERY_REGISTRY } from \"../query/Query.js\";\nimport AccountId from \"./AccountId.js\";\nimport TransactionRecord from \"../transaction/TransactionRecord.js\";\n\n/**\n * @namespace proto\n * @typedef {import(\"@hashgraph/proto\").IQuery} proto.IQuery\n * @typedef {import(\"@hashgraph/proto\").IQueryHeader} proto.IQueryHeader\n * @typedef {import(\"@hashgraph/proto\").IResponse} proto.IResponse\n * @typedef {import(\"@hashgraph/proto\").IResponseHeader} proto.IResponseHeader\n * @typedef {import(\"@hashgraph/proto\").ICryptoGetAccountRecordsQuery} proto.ICryptoGetAccountRecordsQuery\n * @typedef {import(\"@hashgraph/proto\").ICryptoGetAccountRecordsResponse} proto.ICryptoGetAccountRecordsResponse\n * @typedef {import(\"@hashgraph/proto\").ITransactionRecord} proto.ITransactionRecord\n */\n\n/**\n * @typedef {import(\"../channel/Channel.js\").default} Channel\n * @typedef {import(\"../client/Client.js\").default<*, *>} Client\n */\n\n/**\n * Get all the records for an account for any transfers into it and out of it,\n * that were above the threshold, during the last 25 hours.\n *\n * @augments {Query<TransactionRecord[]>}\n */\nexport default class AccountRecordsQuery extends Query {\n    /**\n     * @param {object} [props]\n     * @param {AccountId | string} [props.accountId]\n     */\n    constructor(props = {}) {\n        super();\n\n        /**\n         * @type {?AccountId}\n         * @private\n         */\n        this._accountId = null;\n\n        if (props.accountId != null) {\n            this.setAccountId(props.accountId);\n        }\n    }\n\n    /**\n     * @internal\n     * @param {proto.IQuery} query\n     * @returns {AccountRecordsQuery}\n     */\n    static _fromProtobuf(query) {\n        const records = /** @type {proto.ICryptoGetAccountRecordsQuery} */ (\n            query.cryptoGetAccountRecords\n        );\n\n        return new AccountRecordsQuery({\n            accountId:\n                records.accountID != null\n                    ? AccountId._fromProtobuf(records.accountID)\n                    : undefined,\n        });\n    }\n\n    /**\n     * @returns {?AccountId}\n     */\n    get accountId() {\n        return this._accountId;\n    }\n\n    /**\n     * Set the account ID for which the records are being requested.\n     *\n     * @param {AccountId | string} accountId\n     * @returns {this}\n     */\n    setAccountId(accountId) {\n        this._accountId =\n            typeof accountId === \"string\"\n                ? AccountId.fromString(accountId)\n                : accountId.clone();\n\n        return this;\n    }\n\n    /**\n     * @param {Client} client\n     */\n    _validateChecksums(client) {\n        if (this._accountId != null) {\n            this._accountId.validateChecksum(client);\n        }\n    }\n\n    /**\n     * @override\n     * @internal\n     * @param {Channel} channel\n     * @param {proto.IQuery} request\n     * @returns {Promise<proto.IResponse>}\n     */\n    _execute(channel, request) {\n        return channel.crypto.getAccountRecords(request);\n    }\n\n    /**\n     * @override\n     * @internal\n     * @param {proto.IResponse} response\n     * @returns {proto.IResponseHeader}\n     */\n    _mapResponseHeader(response) {\n        const cryptoGetAccountRecords =\n            /** @type {proto.ICryptoGetAccountRecordsResponse} */ (\n                response.cryptoGetAccountRecords\n            );\n        return /** @type {proto.IResponseHeader} */ (\n            cryptoGetAccountRecords.header\n        );\n    }\n\n    /**\n     * @protected\n     * @override\n     * @param {proto.IResponse} response\n     * @param {AccountId} nodeAccountId\n     * @param {proto.IQuery} request\n     * @returns {Promise<TransactionRecord[]>}\n     */\n    // eslint-disable-next-line @typescript-eslint/no-unused-vars\n    _mapResponse(response, nodeAccountId, request) {\n        const cryptoGetAccountRecords =\n            /** @type {proto.ICryptoGetAccountRecordsResponse} */ (\n                response.cryptoGetAccountRecords\n            );\n        const records = /** @type {proto.ITransactionRecord[]} */ (\n            cryptoGetAccountRecords.records\n        );\n\n        return Promise.resolve(\n            records.map((record) =>\n                TransactionRecord._fromProtobuf({ transactionRecord: record })\n            )\n        );\n    }\n\n    /**\n     * @override\n     * @internal\n     * @param {proto.IQueryHeader} header\n     * @returns {proto.IQuery}\n     */\n    _onMakeRequest(header) {\n        return {\n            cryptoGetAccountRecords: {\n                header,\n                accountID:\n                    this._accountId != null\n                        ? this._accountId._toProtobuf()\n                        : null,\n            },\n        };\n    }\n}\n\nQUERY_REGISTRY.set(\n    \"cryptoGetAccountRecords\",\n    // eslint-disable-next-line @typescript-eslint/unbound-method\n    AccountRecordsQuery._fromProtobuf\n);\n", "import AccountId from \"./AccountId.js\";\nimport Hbar from \"../Hbar.js\";\n\n/**\n * @namespace proto\n * @typedef {import(\"@hashgraph/proto\").IProxyStaker} proto.IProxyStaker\n * @typedef {import(\"@hashgraph/proto\").IAccountID} proto.IAccountID\n */\n\n/**\n * @typedef {import(\"bignumber.js\").default} BigNumber\n */\n\n/**\n * An account, and the amount that it sends or receives during a cryptocurrency transfer.\n */\nexport default class ProxyStaker {\n    /**\n     * @private\n     * @param {object} props\n     * @param {AccountId} props.accountId\n     * @param {number | string | Long | BigNumber | Hbar} props.amount\n     */\n    constructor(props) {\n        /**\n         * The Account ID that sends or receives cryptocurrency.\n         *\n         * @readonly\n         */\n        this.accountId = props.accountId;\n\n        /**\n         * The amount of tinybars that the account sends(negative)\n         * or receives(positive).\n         *\n         * @readonly\n         */\n        this.amount =\n            props.amount instanceof Hbar\n                ? props.amount\n                : new Hbar(props.amount);\n\n        Object.freeze(this);\n    }\n\n    /**\n     * @internal\n     * @param {proto.IProxyStaker} transfer\n     * @returns {ProxyStaker}\n     */\n    static _fromProtobuf(transfer) {\n        return new ProxyStaker({\n            accountId: AccountId._fromProtobuf(\n                /** @type {proto.IAccountID} */ (transfer.accountID)\n            ),\n            amount: Hbar.fromTinybars(\n                transfer.amount != null ? transfer.amount : 0\n            ),\n        });\n    }\n\n    /**\n     * @internal\n     * @returns {proto.IProxyStaker}\n     */\n    _toProtobuf() {\n        return {\n            accountID: this.accountId._toProtobuf(),\n            amount: this.amount.toTinybars(),\n        };\n    }\n}\n", "import Query, { QUERY_REGISTRY } from \"../query/Query.js\";\nimport AccountId from \"./AccountId.js\";\nimport ProxyStaker from \"./ProxyStaker.js\";\n\n/**\n * @namespace proto\n * @typedef {import(\"@hashgraph/proto\").IQuery} proto.IQuery\n * @typedef {import(\"@hashgraph/proto\").IQueryHeader} proto.IQueryHeader\n * @typedef {import(\"@hashgraph/proto\").IResponse} proto.IResponse\n * @typedef {import(\"@hashgraph/proto\").IResponseHeader} proto.IResponseHeader\n * @typedef {import(\"@hashgraph/proto\").ICryptoGetStakersQuery} proto.ICryptoGetStakersQuery\n * @typedef {import(\"@hashgraph/proto\").ICryptoGetStakersResponse} proto.ICryptoGetStakersResponse\n * @typedef {import(\"@hashgraph/proto\").IAllProxyStakers} proto.IAllProxyStakers\n */\n\n/**\n * @typedef {import(\"../channel/Channel.js\").default} Channel\n * @typedef {import(\"../client/Client.js\").default<*, *>} Client\n */\n\n/**\n * Get all the accounts that are proxy staking to this account.\n * For each of them, give the amount currently staked.\n *\n * This is not yet implemented, but will be in a future version of the API.\n *\n * @augments {Query<ProxyStaker[]>}\n */\nexport default class AccountStakersQuery extends Query {\n    /**\n     * @param {object} [props]\n     * @param {(AccountId | string)=} props.accountId\n     */\n    constructor(props = {}) {\n        super();\n\n        /**\n         * @type {?AccountId}\n         * @private\n         */\n        this._accountId = null;\n\n        if (props.accountId != null) {\n            this.setAccountId(props.accountId);\n        }\n    }\n\n    /**\n     * @internal\n     * @param {proto.IQuery} query\n     * @returns {AccountStakersQuery}\n     */\n    static _fromProtobuf(query) {\n        const stakers = /** @type {proto.ICryptoGetStakersQuery} */ (\n            query.cryptoGetProxyStakers\n        );\n\n        return new AccountStakersQuery({\n            accountId:\n                stakers.accountID != null\n                    ? AccountId._fromProtobuf(stakers.accountID)\n                    : undefined,\n        });\n    }\n\n    /**\n     * @returns {?AccountId}\n     */\n    get accountId() {\n        return this._accountId;\n    }\n\n    /**\n     * Set the account ID for which the stakers are being requested.\n     *\n     * @param {AccountId | string} accountId\n     * @returns {this}\n     */\n    setAccountId(accountId) {\n        this._accountId =\n            typeof accountId === \"string\"\n                ? AccountId.fromString(accountId)\n                : accountId.clone();\n\n        return this;\n    }\n\n    /**\n     * @param {Client} client\n     */\n    _validateChecksums(client) {\n        if (this._accountId != null) {\n            this._accountId.validateChecksum(client);\n        }\n    }\n\n    /**\n     * @override\n     * @internal\n     * @param {Channel} channel\n     * @param {proto.IQuery} request\n     * @returns {Promise<proto.IResponse>}\n     */\n    _execute(channel, request) {\n        return channel.crypto.getStakersByAccountID(request);\n    }\n\n    /**\n     * @override\n     * @internal\n     * @param {proto.IResponse} response\n     * @returns {proto.IResponseHeader}\n     */\n    _mapResponseHeader(response) {\n        const cryptoGetProxyStakers =\n            /** @type {proto.ICryptoGetStakersResponse} */ (\n                response.cryptoGetProxyStakers\n            );\n        return /** @type {proto.IResponseHeader} */ (\n            cryptoGetProxyStakers.header\n        );\n    }\n\n    /**\n     * @protected\n     * @override\n     * @param {proto.IResponse} response\n     * @returns {Promise<ProxyStaker[]>}\n     */\n    _mapResponse(response) {\n        const cryptoGetProxyStakers =\n            /** @type {proto.ICryptoGetStakersResponse} */ (\n                response.cryptoGetProxyStakers\n            );\n        const stakers = /** @type {proto.IAllProxyStakers} */ (\n            cryptoGetProxyStakers.stakers\n        );\n\n        return Promise.resolve(\n            (stakers.proxyStaker != null ? stakers.proxyStaker : []).map(\n                (staker) => ProxyStaker._fromProtobuf(staker)\n            )\n        );\n    }\n\n    /**\n     * @override\n     * @internal\n     * @param {proto.IQueryHeader} header\n     * @returns {proto.IQuery}\n     */\n    _onMakeRequest(header) {\n        return {\n            cryptoGetProxyStakers: {\n                header,\n                accountID:\n                    this._accountId != null\n                        ? this._accountId._toProtobuf()\n                        : null,\n            },\n        };\n    }\n}\n\n// @ts-ignore\n// eslint-disable-next-line @typescript-eslint/unbound-method\nQUERY_REGISTRY.set(\"cryptoGetProxyStakers\", AccountStakersQuery._fromProtobuf);\n", "import Transaction, {\n    TRANSACTION_REGISTRY,\n} from \"../transaction/Transaction.js\";\nimport AccountId from \"./AccountId.js\";\nimport Timestamp from \"../Timestamp.js\";\nimport Duration from \"../Duration.js\";\nimport Long from \"long\";\nimport Key from \"../Key.js\";\n\n/**\n * @namespace proto\n * @typedef {import(\"@hashgraph/proto\").ITransaction} proto.ITransaction\n * @typedef {import(\"@hashgraph/proto\").ISignedTransaction} proto.ISignedTransaction\n * @typedef {import(\"@hashgraph/proto\").TransactionBody} proto.TransactionBody\n * @typedef {import(\"@hashgraph/proto\").ITransactionBody} proto.ITransactionBody\n * @typedef {import(\"@hashgraph/proto\").ITransactionResponse} proto.ITransactionResponse\n * @typedef {import(\"@hashgraph/proto\").ICryptoUpdateTransactionBody} proto.ICryptoUpdateTransactionBody\n * @typedef {import(\"@hashgraph/proto\").IAccountID} proto.IAccountID\n */\n\n/**\n * @typedef {import(\"../channel/Channel.js\").default} Channel\n * @typedef {import(\"../client/Client.js\").default<*, *>} Client\n * @typedef {import(\"../transaction/TransactionId.js\").default} TransactionId\n */\n\n/**\n * Change properties for the given account.\n */\nexport default class AccountUpdateTransaction extends Transaction {\n    /**\n     * @param {object} props\n     * @param {AccountId} [props.accountId]\n     * @param {Key} [props.key]\n     * @param {boolean} [props.receiverSignatureRequired]\n     * @param {AccountId} [props.proxyAccountId]\n     * @param {Duration | Long | number} [props.autoRenewPeriod]\n     * @param {Timestamp | Date} [props.expirationTime]\n     * @param {string} [props.accountMemo]\n     * @param {Long | number} [props.maxAutomaticTokenAssociations]\n     */\n    constructor(props = {}) {\n        super();\n\n        /**\n         * @private\n         * @type {?AccountId}\n         */\n        this._accountId = null;\n\n        /**\n         * @private\n         * @type {?Key}\n         */\n        this._key = null;\n\n        /**\n         * @private\n         * @type {boolean}\n         */\n        this._receiverSignatureRequired = false;\n\n        /**\n         * @private\n         * @type {?AccountId}\n         */\n        this._proxyAccountId = null;\n\n        /**\n         * @private\n         * @type {?Duration}\n         */\n        this._autoRenewPeriod = null;\n\n        /**\n         * @private\n         * @type {?Timestamp}\n         */\n        this._expirationTime = null;\n\n        /**\n         * @private\n         * @type {?string}\n         */\n        this._accountMemo = null;\n\n        /**\n         * @private\n         * @type {?Long}\n         */\n        this._maxAutomaticTokenAssociations = null;\n\n        if (props.accountId != null) {\n            this.setAccountId(props.accountId);\n        }\n\n        if (props.key != null) {\n            this.setKey(props.key);\n        }\n\n        if (props.receiverSignatureRequired != null) {\n            this.setReceiverSignatureRequired(props.receiverSignatureRequired);\n        }\n\n        if (props.proxyAccountId != null) {\n            this.setProxyAccountId(props.proxyAccountId);\n        }\n\n        if (props.autoRenewPeriod != null) {\n            this.setAutoRenewPeriod(props.autoRenewPeriod);\n        }\n\n        if (props.expirationTime != null) {\n            this.setExpirationTime(props.expirationTime);\n        }\n\n        if (props.accountMemo != null) {\n            this.setAccountMemo(props.accountMemo);\n        }\n\n        if (props.maxAutomaticTokenAssociations != null) {\n            this.setMaxAutomaticTokenAssociations(\n                props.maxAutomaticTokenAssociations\n            );\n        }\n    }\n\n    /**\n     * @internal\n     * @param {proto.ITransaction[]} transactions\n     * @param {proto.ISignedTransaction[]} signedTransactions\n     * @param {TransactionId[]} transactionIds\n     * @param {AccountId[]} nodeIds\n     * @param {proto.ITransactionBody[]} bodies\n     * @returns {AccountUpdateTransaction}\n     */\n    static _fromProtobuf(\n        transactions,\n        signedTransactions,\n        transactionIds,\n        nodeIds,\n        bodies\n    ) {\n        const body = bodies[0];\n        const update = /** @type {proto.ICryptoUpdateTransactionBody} */ (\n            body.cryptoUpdateAccount\n        );\n\n        return Transaction._fromProtobufTransactions(\n            new AccountUpdateTransaction({\n                accountId:\n                    update.accountIDToUpdate != null\n                        ? AccountId._fromProtobuf(\n                              /** @type {proto.IAccountID} */ (\n                                  update.accountIDToUpdate\n                              )\n                          )\n                        : undefined,\n                key:\n                    update.key != null\n                        ? Key._fromProtobufKey(update.key)\n                        : undefined,\n                receiverSignatureRequired:\n                    update.receiverSigRequired != null\n                        ? update.receiverSigRequired\n                        : undefined,\n                proxyAccountId:\n                    update.proxyAccountID != null\n                        ? AccountId._fromProtobuf(\n                              /** @type {proto.IAccountID} */ (\n                                  update.proxyAccountID\n                              )\n                          )\n                        : undefined,\n                autoRenewPeriod:\n                    update.autoRenewPeriod != null\n                        ? update.autoRenewPeriod.seconds != null\n                            ? update.autoRenewPeriod.seconds\n                            : undefined\n                        : undefined,\n                expirationTime:\n                    update.expirationTime != null\n                        ? Timestamp._fromProtobuf(update.expirationTime)\n                        : undefined,\n                accountMemo:\n                    update.memo != null\n                        ? update.memo.value != null\n                            ? update.memo.value\n                            : undefined\n                        : undefined,\n                maxAutomaticTokenAssociations:\n                    update.maxAutomaticTokenAssociations != null &&\n                    update.maxAutomaticTokenAssociations.value != null\n                        ? Long.fromNumber(\n                              update.maxAutomaticTokenAssociations.value\n                          )\n                        : undefined,\n            }),\n            transactions,\n            signedTransactions,\n            transactionIds,\n            nodeIds,\n            bodies\n        );\n    }\n\n    /**\n     * @returns {?AccountId}\n     */\n    get accountId() {\n        return this._accountId;\n    }\n\n    /**\n     * Sets the account ID which is being updated in this transaction.\n     *\n     * @param {AccountId | string} accountId\n     * @returns {AccountUpdateTransaction}\n     */\n    setAccountId(accountId) {\n        this._requireNotFrozen();\n        this._accountId =\n            typeof accountId === \"string\"\n                ? AccountId.fromString(accountId)\n                : accountId.clone();\n\n        return this;\n    }\n\n    /**\n     * @returns {?Key}\n     */\n    get key() {\n        return this._key;\n    }\n\n    /**\n     * @param {Key} key\n     * @returns {this}\n     */\n    setKey(key) {\n        this._requireNotFrozen();\n        this._key = key;\n\n        return this;\n    }\n\n    /**\n     * @returns {boolean}\n     */\n    get receiverSignatureRequired() {\n        return this._receiverSignatureRequired;\n    }\n\n    /**\n     * @param {boolean} receiverSignatureRequired\n     * @returns {this}\n     */\n    setReceiverSignatureRequired(receiverSignatureRequired) {\n        this._requireNotFrozen();\n        this._receiverSignatureRequired = receiverSignatureRequired;\n\n        return this;\n    }\n\n    /**\n     * @returns {?AccountId}\n     */\n    get proxyAccountId() {\n        return this._proxyAccountId;\n    }\n\n    /**\n     * @param {AccountId} proxyAccountId\n     * @returns {this}\n     */\n    setProxyAccountId(proxyAccountId) {\n        this._requireNotFrozen();\n        this._proxyAccountId = proxyAccountId;\n\n        return this;\n    }\n\n    /**\n     * @returns {?Duration}\n     */\n    get autoRenewPeriod() {\n        return this._autoRenewPeriod;\n    }\n\n    /**\n     * @param {Duration | Long | number} autoRenewPeriod\n     * @returns {this}\n     */\n    setAutoRenewPeriod(autoRenewPeriod) {\n        this._requireNotFrozen();\n        this._autoRenewPeriod =\n            autoRenewPeriod instanceof Duration\n                ? autoRenewPeriod\n                : new Duration(autoRenewPeriod);\n\n        return this;\n    }\n\n    /**\n     * @returns {?Timestamp}\n     */\n    get expirationTime() {\n        return this._expirationTime;\n    }\n\n    /**\n     * @param {Timestamp | Date} expirationTime\n     * @returns {this}\n     */\n    setExpirationTime(expirationTime) {\n        this._requireNotFrozen();\n        this._expirationTime =\n            expirationTime instanceof Date\n                ? Timestamp.fromDate(expirationTime)\n                : expirationTime;\n\n        return this;\n    }\n\n    /**\n     * @returns {?string}\n     */\n    get accountMemo() {\n        return this._accountMemo;\n    }\n\n    /**\n     * @param {string} memo\n     * @returns {this}\n     */\n    setAccountMemo(memo) {\n        this._requireNotFrozen();\n        this._accountMemo = memo;\n\n        return this;\n    }\n\n    /**\n     * @returns {this}\n     */\n    clearAccountMemo() {\n        this._requireNotFrozen();\n        this._accountMemo = null;\n\n        return this;\n    }\n\n    /**\n     * @returns {?Long}\n     */\n    get maxAutomaticTokenAssociations() {\n        return this._maxAutomaticTokenAssociations;\n    }\n\n    /**\n     * @param {Long | number} maxAutomaticTokenAssociations\n     * @returns {this}\n     */\n    setMaxAutomaticTokenAssociations(maxAutomaticTokenAssociations) {\n        this._requireNotFrozen();\n        this._maxAutomaticTokenAssociations =\n            typeof maxAutomaticTokenAssociations === \"number\"\n                ? Long.fromNumber(maxAutomaticTokenAssociations)\n                : maxAutomaticTokenAssociations;\n\n        return this;\n    }\n\n    /**\n     * @param {Client} client\n     */\n    _validateChecksums(client) {\n        if (this._accountId != null) {\n            this._accountId.validateChecksum(client);\n        }\n\n        if (this._proxyAccountId != null) {\n            this._proxyAccountId.validateChecksum(client);\n        }\n    }\n\n    /**\n     * @override\n     * @internal\n     * @param {Channel} channel\n     * @param {proto.ITransaction} request\n     * @returns {Promise<proto.ITransactionResponse>}\n     */\n    _execute(channel, request) {\n        return channel.crypto.updateAccount(request);\n    }\n\n    /**\n     * @override\n     * @protected\n     * @returns {NonNullable<proto.TransactionBody[\"data\"]>}\n     */\n    _getTransactionDataCase() {\n        return \"cryptoUpdateAccount\";\n    }\n\n    /**\n     * @override\n     * @protected\n     * @returns {proto.ICryptoUpdateTransactionBody}\n     */\n    _makeTransactionData() {\n        return {\n            accountIDToUpdate:\n                this._accountId != null ? this._accountId._toProtobuf() : null,\n            key: this._key != null ? this._key._toProtobufKey() : null,\n            expirationTime:\n                this._expirationTime != null\n                    ? this._expirationTime._toProtobuf()\n                    : null,\n            proxyAccountID:\n                this._proxyAccountId != null\n                    ? this._proxyAccountId._toProtobuf()\n                    : null,\n            autoRenewPeriod:\n                this._autoRenewPeriod != null\n                    ? this._autoRenewPeriod._toProtobuf()\n                    : null,\n            receiverSigRequiredWrapper:\n                this._receiverSignatureRequired == null\n                    ? null\n                    : {\n                          value: this._receiverSignatureRequired,\n                      },\n            memo:\n                this._accountMemo != null\n                    ? {\n                          value: this._accountMemo,\n                      }\n                    : null,\n            maxAutomaticTokenAssociations:\n                this._maxAutomaticTokenAssociations != null\n                    ? { value: this._maxAutomaticTokenAssociations.toInt() }\n                    : null,\n        };\n    }\n}\n\nTRANSACTION_REGISTRY.set(\n    \"cryptoUpdateAccount\",\n    // eslint-disable-next-line @typescript-eslint/unbound-method\n    AccountUpdateTransaction._fromProtobuf\n);\n", "import Query, { QUERY_REGISTRY } from \"../query/Query.js\";\nimport ContractId from \"./ContractId.js\";\n\n/**\n * @namespace proto\n * @typedef {import(\"@hashgraph/proto\").IQuery} proto.IQuery\n * @typedef {import(\"@hashgraph/proto\").IQueryHeader} proto.IQueryHeader\n * @typedef {import(\"@hashgraph/proto\").IResponse} proto.IResponse\n * @typedef {import(\"@hashgraph/proto\").IResponseHeader} proto.IResponseHeader\n * @typedef {import(\"@hashgraph/proto\").IContractGetBytecodeQuery} proto.IContractGetBytecodeQuery\n * @typedef {import(\"@hashgraph/proto\").IContractGetBytecodeResponse} proto.IContractGetBytecodeResponse\n */\n\n/**\n * @typedef {import(\"../channel/Channel.js\").default} Channel\n * @typedef {import(\"../client/Client.js\").default<*, *>} Client\n * @typedef {import(\"../account/AccountId.js\").default} AccountId\n */\n\n/**\n * @augments {Query<Uint8Array>}\n */\nexport default class ContractByteCodeQuery extends Query {\n    /**\n     * @param {object} props\n     * @param {ContractId | string} [props.contractId]\n     */\n    constructor(props = {}) {\n        super();\n\n        /**\n         * @type {?ContractId}\n         * @private\n         */\n        this._contractId = null;\n        if (props.contractId != null) {\n            this.setContractId(props.contractId);\n        }\n    }\n\n    /**\n     * @internal\n     * @param {proto.IQuery} query\n     * @returns {ContractByteCodeQuery}\n     */\n    static _fromProtobuf(query) {\n        const bytecode = /** @type {proto.IContractGetBytecodeQuery} */ (\n            query.contractGetBytecode\n        );\n\n        return new ContractByteCodeQuery({\n            contractId:\n                bytecode.contractID != null\n                    ? ContractId._fromProtobuf(bytecode.contractID)\n                    : undefined,\n        });\n    }\n\n    /**\n     * @returns {?ContractId}\n     */\n    get contractId() {\n        return this._contractId;\n    }\n\n    /**\n     * Set the contract ID for which the info is being requested.\n     *\n     * @param {ContractId | string} contractId\n     * @returns {ContractByteCodeQuery}\n     */\n    setContractId(contractId) {\n        this._contractId =\n            typeof contractId === \"string\"\n                ? ContractId.fromString(contractId)\n                : contractId.clone();\n\n        return this;\n    }\n\n    /**\n     * @param {Client} client\n     */\n    _validateChecksums(client) {\n        if (this._contractId != null) {\n            this._contractId.validateChecksum(client);\n        }\n    }\n\n    /**\n     * @override\n     * @internal\n     * @param {Channel} channel\n     * @param {proto.IQuery} request\n     * @returns {Promise<proto.IResponse>}\n     */\n    _execute(channel, request) {\n        return channel.smartContract.contractGetBytecode(request);\n    }\n\n    /**\n     * @override\n     * @internal\n     * @param {proto.IResponse} response\n     * @returns {proto.IResponseHeader}\n     */\n    _mapResponseHeader(response) {\n        const contractGetBytecodeResponse =\n            /** @type {proto.IContractGetBytecodeResponse} */ (\n                response.contractGetBytecodeResponse\n            );\n        return /** @type {proto.IResponseHeader} */ (\n            contractGetBytecodeResponse.header\n        );\n    }\n\n    /**\n     * @protected\n     * @override\n     * @param {proto.IResponse} response\n     * @returns {Promise<Uint8Array>}\n     */\n    _mapResponse(response) {\n        const contractGetBytecodeResponse =\n            /** @type {proto.IContractGetBytecodeResponse} */ (\n                response.contractGetBytecodeResponse\n            );\n\n        return Promise.resolve(\n            contractGetBytecodeResponse.bytecode != null\n                ? contractGetBytecodeResponse.bytecode\n                : new Uint8Array()\n        );\n    }\n\n    /**\n     * @override\n     * @internal\n     * @param {proto.IQueryHeader} header\n     * @returns {proto.IQuery}\n     */\n    _onMakeRequest(header) {\n        return {\n            contractGetBytecode: {\n                header,\n                contractID:\n                    this._contractId != null\n                        ? this._contractId._toProtobuf()\n                        : null,\n            },\n        };\n    }\n}\n\n// eslint-disable-next-line @typescript-eslint/unbound-method\nQUERY_REGISTRY.set(\"contractGetBytecode\", ContractByteCodeQuery._fromProtobuf);\n", "// Originally sourced from:\n// https://github.com/MaiaVictor/eth-lib/blob/da0971f5b09964d9c8449975fa87933f0c9fef35/src/hash.js\n//  - added type declarations\n//  - switched to es6 module syntax\n\n/** @type {number[]} */\nconst KECCAK_PADDING = [1, 256, 65536, 16777216];\n\n/** @type {number[]} */\nconst SHIFT = [0, 8, 16, 24];\n\n/** @type {number[]} */\nconst RC = [\n    1, 0, 32898, 0, 32906, 2147483648, 2147516416, 2147483648, 32907, 0,\n    2147483649, 0, 2147516545, 2147483648, 32777, 2147483648, 138, 0, 136, 0,\n    2147516425, 0, 2147483658, 0, 2147516555, 0, 139, 2147483648, 32905,\n    2147483648, 32771, 2147483648, 32770, 2147483648, 128, 2147483648, 32778, 0,\n    2147483658, 2147483648, 2147516545, 2147483648, 32896, 2147483648,\n    2147483649, 0, 2147516424, 2147483648,\n];\n\n/**\n * @typedef {object} Keccak\n * @property {number[]} blocks\n * @property {number} blockCount\n * @property {number} outputBlocks\n * @property {number[]} s\n * @property {number} start\n * @property {number} block\n * @property {boolean} reset\n * @property {?number} lastByteIndex\n */\n\n/**\n * @param {number} bits\n * @returns {Keccak}\n */\nfunction createKeccakState(bits) {\n    return {\n        blocks: [],\n        reset: true,\n        block: 0,\n        start: 0,\n        lastByteIndex: null,\n        blockCount: (1600 - (bits << 1)) >> 5,\n        outputBlocks: bits >> 5,\n        s: zeroFill(50),\n    };\n}\n\n/**\n * @param {number} n\n * @returns {number[]}\n */\nfunction zeroFill(n) {\n    /** @type {number[]} */\n    let arr = Array(n);\n\n    for (let i = 0; i < n; ++i) arr[i] = 0;\n\n    return arr;\n}\n\n/**\n * @param {Keccak} state\n * @param {string | Uint8Array} message\n * @returns {Uint8Array}\n */\nfunction update(state, message) {\n    var length = message.length,\n        blocks = state.blocks,\n        byteCount = state.blockCount << 2,\n        blockCount = state.blockCount,\n        outputBlocks = state.outputBlocks,\n        s = state.s,\n        index = 0,\n        i = 0,\n        code;\n\n    // update\n    while (index < length) {\n        if (state.reset) {\n            state.reset = false;\n            blocks[0] = state.block;\n            for (i = 1; i < blockCount + 1; ++i) {\n                blocks[i] = 0;\n            }\n        }\n        for (i = state.start; index < length && i < byteCount; ++index) {\n            code =\n                typeof message === \"string\"\n                    ? message.charCodeAt(index)\n                    : message[index];\n            if (code < 0x80) {\n                blocks[i >> 2] |= code << SHIFT[i++ & 3];\n            } else if (code < 0x800) {\n                blocks[i >> 2] |= (0xc0 | (code >> 6)) << SHIFT[i++ & 3];\n                blocks[i >> 2] |= (0x80 | (code & 0x3f)) << SHIFT[i++ & 3];\n            } else if (code < 0xd800 || code >= 0xe000) {\n                blocks[i >> 2] |= (0xe0 | (code >> 12)) << SHIFT[i++ & 3];\n                blocks[i >> 2] |=\n                    (0x80 | ((code >> 6) & 0x3f)) << SHIFT[i++ & 3];\n                blocks[i >> 2] |= (0x80 | (code & 0x3f)) << SHIFT[i++ & 3];\n            } else {\n                code =\n                    0x10000 +\n                    (((code & 0x3ff) << 10) |\n                        ((typeof message === \"string\"\n                            ? message.charCodeAt(++index)\n                            : message[++index]) &\n                            0x3ff));\n                blocks[i >> 2] |= (0xf0 | (code >> 18)) << SHIFT[i++ & 3];\n                blocks[i >> 2] |=\n                    (0x80 | ((code >> 12) & 0x3f)) << SHIFT[i++ & 3];\n                blocks[i >> 2] |=\n                    (0x80 | ((code >> 6) & 0x3f)) << SHIFT[i++ & 3];\n                blocks[i >> 2] |= (0x80 | (code & 0x3f)) << SHIFT[i++ & 3];\n            }\n        }\n        state.lastByteIndex = i;\n        if (i >= byteCount) {\n            state.start = i - byteCount;\n            state.block = blocks[blockCount];\n            for (i = 0; i < blockCount; ++i) {\n                s[i] ^= blocks[i];\n            }\n            f(s);\n            state.reset = true;\n        } else {\n            state.start = i;\n        }\n    }\n\n    // finalize\n    i = /** @type {number} */ (state.lastByteIndex);\n    blocks[i >> 2] |= KECCAK_PADDING[i & 3];\n\n    if (state.lastByteIndex === byteCount) {\n        blocks[0] = blocks[blockCount];\n        for (i = 1; i < blockCount + 1; ++i) {\n            blocks[i] = 0;\n        }\n    }\n    blocks[blockCount - 1] |= 0x80000000;\n    for (i = 0; i < blockCount; ++i) {\n        s[i] ^= blocks[i];\n    }\n\n    f(s);\n\n    const buffer = new ArrayBuffer(outputBlocks * 4);\n    const view = new DataView(buffer);\n\n    i = 0;\n    var j = 0;\n\n    while (j < outputBlocks) {\n        for (i = 0; i < blockCount && j < outputBlocks; ++i, ++j) {\n            view.setInt32(i * 4, s[i], true);\n        }\n\n        if (j % blockCount === 0) {\n            f(s);\n            i = 0;\n        }\n    }\n\n    return new Uint8Array(buffer);\n}\n\n/**\n * @param {number[]} s\n */\nfunction f(s) {\n    var h,\n        l,\n        n,\n        c0,\n        c1,\n        c2,\n        c3,\n        c4,\n        c5,\n        c6,\n        c7,\n        c8,\n        c9,\n        b0,\n        b1,\n        b2,\n        b3,\n        b4,\n        b5,\n        b6,\n        b7,\n        b8,\n        b9,\n        b10,\n        b11,\n        b12,\n        b13,\n        b14,\n        b15,\n        b16,\n        b17,\n        b18,\n        b19,\n        b20,\n        b21,\n        b22,\n        b23,\n        b24,\n        b25,\n        b26,\n        b27,\n        b28,\n        b29,\n        b30,\n        b31,\n        b32,\n        b33,\n        b34,\n        b35,\n        b36,\n        b37,\n        b38,\n        b39,\n        b40,\n        b41,\n        b42,\n        b43,\n        b44,\n        b45,\n        b46,\n        b47,\n        b48,\n        b49;\n\n    for (n = 0; n < 48; n += 2) {\n        c0 = s[0] ^ s[10] ^ s[20] ^ s[30] ^ s[40];\n        c1 = s[1] ^ s[11] ^ s[21] ^ s[31] ^ s[41];\n        c2 = s[2] ^ s[12] ^ s[22] ^ s[32] ^ s[42];\n        c3 = s[3] ^ s[13] ^ s[23] ^ s[33] ^ s[43];\n        c4 = s[4] ^ s[14] ^ s[24] ^ s[34] ^ s[44];\n        c5 = s[5] ^ s[15] ^ s[25] ^ s[35] ^ s[45];\n        c6 = s[6] ^ s[16] ^ s[26] ^ s[36] ^ s[46];\n        c7 = s[7] ^ s[17] ^ s[27] ^ s[37] ^ s[47];\n        c8 = s[8] ^ s[18] ^ s[28] ^ s[38] ^ s[48];\n        c9 = s[9] ^ s[19] ^ s[29] ^ s[39] ^ s[49];\n\n        h = c8 ^ ((c2 << 1) | (c3 >>> 31));\n        l = c9 ^ ((c3 << 1) | (c2 >>> 31));\n        s[0] ^= h;\n        s[1] ^= l;\n        s[10] ^= h;\n        s[11] ^= l;\n        s[20] ^= h;\n        s[21] ^= l;\n        s[30] ^= h;\n        s[31] ^= l;\n        s[40] ^= h;\n        s[41] ^= l;\n        h = c0 ^ ((c4 << 1) | (c5 >>> 31));\n        l = c1 ^ ((c5 << 1) | (c4 >>> 31));\n        s[2] ^= h;\n        s[3] ^= l;\n        s[12] ^= h;\n        s[13] ^= l;\n        s[22] ^= h;\n        s[23] ^= l;\n        s[32] ^= h;\n        s[33] ^= l;\n        s[42] ^= h;\n        s[43] ^= l;\n        h = c2 ^ ((c6 << 1) | (c7 >>> 31));\n        l = c3 ^ ((c7 << 1) | (c6 >>> 31));\n        s[4] ^= h;\n        s[5] ^= l;\n        s[14] ^= h;\n        s[15] ^= l;\n        s[24] ^= h;\n        s[25] ^= l;\n        s[34] ^= h;\n        s[35] ^= l;\n        s[44] ^= h;\n        s[45] ^= l;\n        h = c4 ^ ((c8 << 1) | (c9 >>> 31));\n        l = c5 ^ ((c9 << 1) | (c8 >>> 31));\n        s[6] ^= h;\n        s[7] ^= l;\n        s[16] ^= h;\n        s[17] ^= l;\n        s[26] ^= h;\n        s[27] ^= l;\n        s[36] ^= h;\n        s[37] ^= l;\n        s[46] ^= h;\n        s[47] ^= l;\n        h = c6 ^ ((c0 << 1) | (c1 >>> 31));\n        l = c7 ^ ((c1 << 1) | (c0 >>> 31));\n        s[8] ^= h;\n        s[9] ^= l;\n        s[18] ^= h;\n        s[19] ^= l;\n        s[28] ^= h;\n        s[29] ^= l;\n        s[38] ^= h;\n        s[39] ^= l;\n        s[48] ^= h;\n        s[49] ^= l;\n\n        b0 = s[0];\n        b1 = s[1];\n        b32 = (s[11] << 4) | (s[10] >>> 28);\n        b33 = (s[10] << 4) | (s[11] >>> 28);\n        b14 = (s[20] << 3) | (s[21] >>> 29);\n        b15 = (s[21] << 3) | (s[20] >>> 29);\n        b46 = (s[31] << 9) | (s[30] >>> 23);\n        b47 = (s[30] << 9) | (s[31] >>> 23);\n        b28 = (s[40] << 18) | (s[41] >>> 14);\n        b29 = (s[41] << 18) | (s[40] >>> 14);\n        b20 = (s[2] << 1) | (s[3] >>> 31);\n        b21 = (s[3] << 1) | (s[2] >>> 31);\n        b2 = (s[13] << 12) | (s[12] >>> 20);\n        b3 = (s[12] << 12) | (s[13] >>> 20);\n        b34 = (s[22] << 10) | (s[23] >>> 22);\n        b35 = (s[23] << 10) | (s[22] >>> 22);\n        b16 = (s[33] << 13) | (s[32] >>> 19);\n        b17 = (s[32] << 13) | (s[33] >>> 19);\n        b48 = (s[42] << 2) | (s[43] >>> 30);\n        b49 = (s[43] << 2) | (s[42] >>> 30);\n        b40 = (s[5] << 30) | (s[4] >>> 2);\n        b41 = (s[4] << 30) | (s[5] >>> 2);\n        b22 = (s[14] << 6) | (s[15] >>> 26);\n        b23 = (s[15] << 6) | (s[14] >>> 26);\n        b4 = (s[25] << 11) | (s[24] >>> 21);\n        b5 = (s[24] << 11) | (s[25] >>> 21);\n        b36 = (s[34] << 15) | (s[35] >>> 17);\n        b37 = (s[35] << 15) | (s[34] >>> 17);\n        b18 = (s[45] << 29) | (s[44] >>> 3);\n        b19 = (s[44] << 29) | (s[45] >>> 3);\n        b10 = (s[6] << 28) | (s[7] >>> 4);\n        b11 = (s[7] << 28) | (s[6] >>> 4);\n        b42 = (s[17] << 23) | (s[16] >>> 9);\n        b43 = (s[16] << 23) | (s[17] >>> 9);\n        b24 = (s[26] << 25) | (s[27] >>> 7);\n        b25 = (s[27] << 25) | (s[26] >>> 7);\n        b6 = (s[36] << 21) | (s[37] >>> 11);\n        b7 = (s[37] << 21) | (s[36] >>> 11);\n        b38 = (s[47] << 24) | (s[46] >>> 8);\n        b39 = (s[46] << 24) | (s[47] >>> 8);\n        b30 = (s[8] << 27) | (s[9] >>> 5);\n        b31 = (s[9] << 27) | (s[8] >>> 5);\n        b12 = (s[18] << 20) | (s[19] >>> 12);\n        b13 = (s[19] << 20) | (s[18] >>> 12);\n        b44 = (s[29] << 7) | (s[28] >>> 25);\n        b45 = (s[28] << 7) | (s[29] >>> 25);\n        b26 = (s[38] << 8) | (s[39] >>> 24);\n        b27 = (s[39] << 8) | (s[38] >>> 24);\n        b8 = (s[48] << 14) | (s[49] >>> 18);\n        b9 = (s[49] << 14) | (s[48] >>> 18);\n\n        s[0] = b0 ^ (~b2 & b4);\n        s[1] = b1 ^ (~b3 & b5);\n        s[10] = b10 ^ (~b12 & b14);\n        s[11] = b11 ^ (~b13 & b15);\n        s[20] = b20 ^ (~b22 & b24);\n        s[21] = b21 ^ (~b23 & b25);\n        s[30] = b30 ^ (~b32 & b34);\n        s[31] = b31 ^ (~b33 & b35);\n        s[40] = b40 ^ (~b42 & b44);\n        s[41] = b41 ^ (~b43 & b45);\n        s[2] = b2 ^ (~b4 & b6);\n        s[3] = b3 ^ (~b5 & b7);\n        s[12] = b12 ^ (~b14 & b16);\n        s[13] = b13 ^ (~b15 & b17);\n        s[22] = b22 ^ (~b24 & b26);\n        s[23] = b23 ^ (~b25 & b27);\n        s[32] = b32 ^ (~b34 & b36);\n        s[33] = b33 ^ (~b35 & b37);\n        s[42] = b42 ^ (~b44 & b46);\n        s[43] = b43 ^ (~b45 & b47);\n        s[4] = b4 ^ (~b6 & b8);\n        s[5] = b5 ^ (~b7 & b9);\n        s[14] = b14 ^ (~b16 & b18);\n        s[15] = b15 ^ (~b17 & b19);\n        s[24] = b24 ^ (~b26 & b28);\n        s[25] = b25 ^ (~b27 & b29);\n        s[34] = b34 ^ (~b36 & b38);\n        s[35] = b35 ^ (~b37 & b39);\n        s[44] = b44 ^ (~b46 & b48);\n        s[45] = b45 ^ (~b47 & b49);\n        s[6] = b6 ^ (~b8 & b0);\n        s[7] = b7 ^ (~b9 & b1);\n        s[16] = b16 ^ (~b18 & b10);\n        s[17] = b17 ^ (~b19 & b11);\n        s[26] = b26 ^ (~b28 & b20);\n        s[27] = b27 ^ (~b29 & b21);\n        s[36] = b36 ^ (~b38 & b30);\n        s[37] = b37 ^ (~b39 & b31);\n        s[46] = b46 ^ (~b48 & b40);\n        s[47] = b47 ^ (~b49 & b41);\n        s[8] = b8 ^ (~b0 & b2);\n        s[9] = b9 ^ (~b1 & b3);\n        s[18] = b18 ^ (~b10 & b12);\n        s[19] = b19 ^ (~b11 & b13);\n        s[28] = b28 ^ (~b20 & b22);\n        s[29] = b29 ^ (~b21 & b23);\n        s[38] = b38 ^ (~b30 & b32);\n        s[39] = b39 ^ (~b31 & b33);\n        s[48] = b48 ^ (~b40 & b42);\n        s[49] = b49 ^ (~b41 & b43);\n\n        s[0] ^= RC[n];\n        s[1] ^= RC[n + 1];\n    }\n}\n\n/**\n * @param {number} bits\n * @returns {(message: string | Uint8Array) => Uint8Array}\n */\nfunction createKeccak(bits) {\n    return function (message) {\n        return update(createKeccakState(bits), message);\n    };\n}\n\nexport const keccak256 = createKeccak(256);\n", "import { keccak256 } from \"../cryptography/keccak.js\";\n\n/**\n * @enum {number}\n */\nexport const ArgumentType = {\n    uint8: 0,\n    int8: 1,\n    uint16: 2,\n    int16: 3,\n    uint32: 4,\n    int32: 5,\n    uint64: 6,\n    int64: 7,\n    uint256: 8,\n    int256: 9,\n    string: 10,\n    bool: 11,\n    bytes: 12,\n    bytes32: 13,\n    address: 14,\n    func: 15,\n};\n\n/**\n * @typedef {object} Argument\n * @property {boolean} dynamic\n * @property {Uint8Array} value\n */\n\n/**\n * @typedef {object} SolidityType\n * @property {ArgumentType} ty\n * @property {boolean} array\n */\n\nexport default class ContractFunctionSelector {\n    /**\n     * @param {string} [name]\n     */\n    constructor(name) {\n        /**\n         * @type {?string}\n         */\n        this.name = null;\n\n        /**\n         * @type {string}\n         */\n        this._params = \"\";\n\n        /**\n         * @type {SolidityType[]}\n         */\n        this._paramTypes = [];\n\n        if (name != null) {\n            this._name = name;\n        }\n    }\n\n    /**\n     * @returns {ContractFunctionSelector}\n     */\n    addString() {\n        return this._addParam({ ty: ArgumentType.string, array: false });\n    }\n\n    /**\n     * @returns {ContractFunctionSelector}\n     */\n    addStringArray() {\n        return this._addParam({ ty: ArgumentType.string, array: true });\n    }\n\n    /**\n     * @returns {ContractFunctionSelector}\n     */\n    addBytes() {\n        return this._addParam({ ty: ArgumentType.bytes, array: false });\n    }\n\n    /**\n     * @returns {ContractFunctionSelector}\n     */\n    addBytes32() {\n        return this._addParam({ ty: ArgumentType.bytes32, array: false });\n    }\n\n    /**\n     * @returns {ContractFunctionSelector}\n     */\n    addBytesArray() {\n        return this._addParam({ ty: ArgumentType.bytes, array: true });\n    }\n\n    /**\n     * @returns {ContractFunctionSelector}\n     */\n    addBytes32Array() {\n        return this._addParam({ ty: ArgumentType.bytes32, array: true });\n    }\n\n    /**\n     * @returns {ContractFunctionSelector}\n     */\n    addInt8() {\n        return this._addParam({ ty: ArgumentType.int8, array: false });\n    }\n\n    /**\n     * @returns {ContractFunctionSelector}\n     */\n    addInt32() {\n        return this._addParam({ ty: ArgumentType.int32, array: false });\n    }\n\n    /**\n     * @returns {ContractFunctionSelector}\n     */\n    addInt64() {\n        return this._addParam({ ty: ArgumentType.int64, array: false });\n    }\n\n    /**\n     * @returns {ContractFunctionSelector}\n     */\n    addInt256() {\n        return this._addParam({ ty: ArgumentType.int256, array: false });\n    }\n\n    /**\n     * @returns {ContractFunctionSelector}\n     */\n    addInt8Array() {\n        return this._addParam({ ty: ArgumentType.int8, array: true });\n    }\n\n    /**\n     * @returns {ContractFunctionSelector}\n     */\n    addInt32Array() {\n        return this._addParam({ ty: ArgumentType.int32, array: true });\n    }\n\n    /**\n     * @returns {ContractFunctionSelector}\n     */\n    addInt64Array() {\n        return this._addParam({ ty: ArgumentType.int64, array: true });\n    }\n\n    /**\n     * @returns {ContractFunctionSelector}\n     */\n    addInt256Array() {\n        return this._addParam({ ty: ArgumentType.int256, array: true });\n    }\n\n    /**\n     * @returns {ContractFunctionSelector}\n     */\n    addUint8() {\n        return this._addParam({ ty: ArgumentType.uint8, array: false });\n    }\n\n    /**\n     * @returns {ContractFunctionSelector}\n     */\n    addUint32() {\n        return this._addParam({ ty: ArgumentType.uint32, array: false });\n    }\n\n    /**\n     * @returns {ContractFunctionSelector}\n     */\n    addUint64() {\n        return this._addParam({ ty: ArgumentType.uint64, array: false });\n    }\n\n    /**\n     * @returns {ContractFunctionSelector}\n     */\n    addUint256() {\n        return this._addParam({ ty: ArgumentType.uint256, array: false });\n    }\n\n    /**\n     * @returns {ContractFunctionSelector}\n     */\n    addUint8Array() {\n        return this._addParam({ ty: ArgumentType.uint8, array: true });\n    }\n\n    /**\n     * @returns {ContractFunctionSelector}\n     */\n    addUint32Array() {\n        return this._addParam({ ty: ArgumentType.uint32, array: true });\n    }\n\n    /**\n     * @returns {ContractFunctionSelector}\n     */\n    addUint64Array() {\n        return this._addParam({ ty: ArgumentType.uint64, array: true });\n    }\n\n    /**\n     * @returns {ContractFunctionSelector}\n     */\n    addUint256Array() {\n        return this._addParam({ ty: ArgumentType.uint256, array: true });\n    }\n\n    /**\n     * @returns {ContractFunctionSelector}\n     */\n    addBool() {\n        return this._addParam({ ty: ArgumentType.bool, array: false });\n    }\n\n    /**\n     * @returns {ContractFunctionSelector}\n     */\n    addAddress() {\n        return this._addParam({ ty: ArgumentType.address, array: false });\n    }\n\n    /**\n     * @returns {ContractFunctionSelector}\n     */\n    addAddressArray() {\n        return this._addParam({ ty: ArgumentType.address, array: true });\n    }\n\n    /**\n     * @returns {ContractFunctionSelector}\n     */\n    addFunction() {\n        return this._addParam({ ty: ArgumentType.func, array: false });\n    }\n\n    /**\n     * @param {SolidityType} ty\n     * @returns {ContractFunctionSelector}\n     */\n    _addParam(ty) {\n        if (this._paramTypes.length > 0) {\n            this._params += \",\";\n        }\n\n        this._params += solidityTypeToString(ty);\n        this._paramTypes.push(ty);\n\n        return this;\n    }\n\n    /**\n     * @param {string} [name]\n     * @returns {Uint8Array}\n     */\n    _build(name) {\n        if (name != null) {\n            this._name = name;\n        } else if (this._name == null) {\n            throw new Error(\"`name` required for ContractFunctionSelector\");\n        }\n\n        return new Uint8Array(keccak256(this.toString()).slice(0, 4));\n    }\n\n    /**\n     * @returns {string}\n     */\n    toString() {\n        return `${this._name != null ? this._name.toString() : \"\"}(${\n            this._params\n        })`;\n    }\n}\n\n/**\n * @param {SolidityType} ty\n * @returns {string}\n */\nfunction solidityTypeToString(ty) {\n    let s = \"\";\n    switch (ty.ty) {\n        case ArgumentType.uint8:\n            s = \"uint8\";\n            break;\n        case ArgumentType.int8:\n            s = \"int8\";\n            break;\n        case ArgumentType.uint16:\n            s = \"uint16\";\n            break;\n        case ArgumentType.int16:\n            s = \"int16\";\n            break;\n        case ArgumentType.uint32:\n            s = \"uint32\";\n            break;\n        case ArgumentType.int32:\n            s = \"int32\";\n            break;\n        case ArgumentType.uint64:\n            s = \"uint64\";\n            break;\n        case ArgumentType.int64:\n            s = \"int64\";\n            break;\n        case ArgumentType.uint256:\n            s = \"uint256\";\n            break;\n        case ArgumentType.int256:\n            s = \"int256\";\n            break;\n        case ArgumentType.string:\n            s = \"string\";\n            break;\n        case ArgumentType.bool:\n            s = \"bool\";\n            break;\n        case ArgumentType.bytes:\n            s = \"bytes\";\n            break;\n        case ArgumentType.bytes32:\n            s = \"bytes32\";\n            break;\n        case ArgumentType.address:\n            s = \"address\";\n            break;\n        case ArgumentType.func:\n            s = \"function\";\n            break;\n        default:\n            s = \"\";\n            break;\n    }\n\n    if (ty.array) {\n        s += \"[]\";\n    }\n\n    return s;\n}\n", "import ContractFunctionSelector, {\n    ArgumentType,\n} from \"./ContractFunctionSelector.js\";\nimport * as utf8 from \"../encoding/utf8.js\";\nimport * as hex from \"../encoding/hex.js\";\nimport BigNumber from \"bignumber.js\";\nimport * as util from \"../util.js\";\n\nexport default class ContractFunctionParameters {\n    constructor() {\n        /**\n         * @type {ContractFunctionSelector}\n         */\n        this._selector = new ContractFunctionSelector();\n\n        /**\n         * @type {import(\"./ContractFunctionSelector.js\").Argument[]}\n         */\n        this._arguments = [];\n    }\n\n    /**\n     * @param {string} value\n     * @returns {ContractFunctionParameters}\n     */\n    addString(value) {\n        this._selector.addString();\n\n        return this._addParam(value, true);\n    }\n\n    /**\n     * @param {string[]} value\n     * @returns {ContractFunctionParameters}\n     */\n    addStringArray(value) {\n        this._selector.addStringArray();\n\n        return this._addParam(value, true);\n    }\n\n    /**\n     * @param {Uint8Array} value\n     * @returns {ContractFunctionParameters}\n     */\n    addBytes(value) {\n        this._selector.addBytes();\n\n        return this._addParam(value, true);\n    }\n\n    /**\n     * @param {Uint8Array} value\n     * @returns {ContractFunctionParameters}\n     */\n    addBytes32(value) {\n        if (value.length !== 32) {\n            throw new Error(\n                `addBytes32 expected array to be of length 32, but received ${value.length}`\n            );\n        }\n\n        this._selector.addBytes32();\n        return this._addParam(value, false);\n    }\n\n    /**\n     * @param {Uint8Array[]} value\n     * @returns {ContractFunctionParameters}\n     */\n    addBytesArray(value) {\n        this._selector.addBytesArray();\n\n        return this._addParam(value, true);\n    }\n\n    /**\n     * @param {Uint8Array[]} value\n     * @returns {ContractFunctionParameters}\n     */\n    addBytes32Array(value) {\n        // eslint-disable-next-line @typescript-eslint/no-unused-vars\n        for (const [_, entry] of value.entries()) {\n            if (entry.length !== 32) {\n                throw new Error(\n                    `addBytes32 expected array to be of length 32, but received ${entry.length}`\n                );\n            }\n        }\n\n        this._selector.addBytes32Array();\n\n        return this._addParam(value, true);\n    }\n\n    /**\n     * @param {boolean} value\n     * @returns {ContractFunctionParameters}\n     */\n    addBool(value) {\n        this._selector.addBool();\n\n        return this._addParam(value, false);\n    }\n\n    /**\n     * @param {number} value\n     * @returns {ContractFunctionParameters}\n     */\n    addInt8(value) {\n        this._selector.addInt8();\n\n        return this._addParam(util.convertToBigNumber(value), false);\n    }\n\n    /**\n     * @param {number} value\n     * @returns {ContractFunctionParameters}\n     */\n    addInt32(value) {\n        this._selector.addInt32();\n\n        return this._addParam(util.convertToBigNumber(value), false);\n    }\n\n    /**\n     * @param {BigNumber} value\n     * @returns {ContractFunctionParameters}\n     */\n    addInt64(value) {\n        this._selector.addInt64();\n\n        return this._addParam(util.convertToBigNumber(value), false);\n    }\n\n    /**\n     * @param {BigNumber} value\n     * @returns {ContractFunctionParameters}\n     */\n    addInt256(value) {\n        this._selector.addInt256();\n\n        return this._addParam(util.convertToBigNumber(value), false);\n    }\n\n    /**\n     * @param {number[]} value\n     * @returns {ContractFunctionParameters}\n     */\n    addInt8Array(value) {\n        this._selector.addInt8Array();\n\n        return this._addParam(util.convertToBigNumberArray(value), true);\n    }\n\n    /**\n     * @param {number[]} value\n     * @returns {ContractFunctionParameters}\n     */\n    addInt32Array(value) {\n        this._selector.addInt32Array();\n\n        return this._addParam(util.convertToBigNumberArray(value), true);\n    }\n\n    /**\n     * @param {BigNumber[]} value\n     * @returns {ContractFunctionParameters}\n     */\n    addInt64Array(value) {\n        this._selector.addInt64Array();\n\n        return this._addParam(util.convertToBigNumberArray(value), true);\n    }\n\n    /**\n     * @param {BigNumber[]} value\n     * @returns {ContractFunctionParameters}\n     */\n    addInt256Array(value) {\n        this._selector.addInt256Array();\n        console.log(\"asdf\");\n        return this._addParam(util.convertToBigNumberArray(value), true);\n    }\n\n    /**\n     * @param {number} value\n     * @returns {ContractFunctionParameters}\n     */\n    addUint8(value) {\n        this._selector.addUint8();\n\n        return this._addParam(util.convertToBigNumber(value), false);\n    }\n\n    /**\n     * @param {number} value\n     * @returns {ContractFunctionParameters}\n     */\n    addUint32(value) {\n        this._selector.addUint32();\n\n        return this._addParam(util.convertToBigNumber(value), false);\n    }\n\n    /**\n     * @param {BigNumber} value\n     * @returns {ContractFunctionParameters}\n     */\n    addUint64(value) {\n        this._selector.addUint64();\n\n        return this._addParam(util.convertToBigNumber(value), false);\n    }\n\n    /**\n     * @param {BigNumber | number} value\n     * @returns {ContractFunctionParameters}\n     */\n    addUint256(value) {\n        this._selector.addUint256();\n\n        return this._addParam(util.convertToBigNumber(value), false);\n    }\n\n    /**\n     * @param {number[]} value\n     * @returns {ContractFunctionParameters}\n     */\n    addUint8Array(value) {\n        this._selector.addUint8Array();\n\n        return this._addParam(util.convertToBigNumberArray(value), true);\n    }\n\n    /**\n     * @param {number[]} value\n     * @returns {ContractFunctionParameters}\n     */\n    addUint32Array(value) {\n        this._selector.addUint32Array();\n\n        return this._addParam(util.convertToBigNumberArray(value), true);\n    }\n\n    /**\n     * @param {BigNumber[]} value\n     * @returns {ContractFunctionParameters}\n     */\n    addUint64Array(value) {\n        this._selector.addUint64Array();\n\n        return this._addParam(util.convertToBigNumberArray(value), true);\n    }\n\n    /**\n     * @param {BigNumber[]} value\n     * @returns {ContractFunctionParameters}\n     */\n    addUint256Array(value) {\n        this._selector.addUint256Array();\n\n        return this._addParam(util.convertToBigNumberArray(value), true);\n    }\n\n    /**\n     * @param {string} value\n     * @returns {ContractFunctionParameters}\n     */\n    addAddress(value) {\n        // Allow `0x` prefix\n        if (value.length !== 40 && value.length !== 42) {\n            throw new Error(\n                \"`address` type requires parameter to be 40 or 42 characters\"\n            );\n        }\n\n        const par =\n            value.length === 40\n                ? hex.decode(value)\n                : hex.decode(value.substring(2));\n\n        this._selector.addAddress();\n\n        return this._addParam(par, false);\n    }\n\n    /**\n     * @param {string[]} value\n     * @returns {ContractFunctionParameters}\n     */\n    addAddressArray(value) {\n        /**\n         * @type {Uint8Array[]}\n         */\n        const par = [];\n\n        // eslint-disable-next-line @typescript-eslint/no-unused-vars\n        for (const [_, entry] of value.entries()) {\n            if (entry.length !== 40 && entry.length !== 42) {\n                throw new Error(\n                    \"`address` type requires parameter to be 40 or 42 characters\"\n                );\n            }\n\n            const buf =\n                entry.length === 40\n                    ? hex.decode(entry)\n                    : hex.decode(entry.substring(2));\n\n            par.push(buf);\n        }\n\n        this._selector.addAddressArray();\n\n        return this._addParam(par, true);\n    }\n\n    /**\n     * @param {string} address\n     * @param {ContractFunctionSelector} selector\n     * @returns {ContractFunctionParameters}\n     */\n    addFunction(address, selector) {\n        const addressParam = hex.decode(address);\n        const functionSelector = selector._build();\n\n        if (addressParam.length !== 20) {\n            throw new Error(\n                \"`function` type requires parameter `address` to be exactly 20 bytes\"\n            );\n        }\n\n        this._selector.addFunction();\n\n        const proto = new Uint8Array(24);\n        proto.set(addressParam, 0);\n        proto.set(functionSelector, 20);\n\n        return this._addParam(proto, false);\n    }\n\n    /**\n     * @internal\n     * @param {string | boolean | number | Uint8Array | BigNumber | string[] | boolean[] | number[] | Uint8Array[] | BigNumber[]} param\n     * @param {boolean} dynamic\n     * @returns {ContractFunctionParameters}\n     */\n    _addParam(param, dynamic) {\n        const index = this._selector._paramTypes.length - 1;\n        const value = argumentToBytes(param, this._selector._paramTypes[index]);\n\n        this._arguments.push({ dynamic, value });\n\n        return this;\n    }\n\n    /**\n     * @internal\n     * @param {string=} name\n     * @returns {Uint8Array}\n     */\n    _build(name) {\n        const includeId = name != null;\n        const nameOffset = includeId ? 4 : 0;\n\n        const length =\n            this._arguments.length === 0\n                ? nameOffset\n                : this._arguments.length * 32 +\n                  this._arguments\n                      .map((arg) => (arg.dynamic ? arg.value.length : 0))\n                      .reduce((sum, value) => sum + value) +\n                  nameOffset;\n\n        const func = new Uint8Array(length);\n\n        if (includeId) {\n            func.set(this._selector._build(name), 0);\n        }\n\n        let offset = 32 * this._arguments.length;\n\n        for (const [i, { dynamic, value }] of this._arguments.entries()) {\n            if (dynamic) {\n                const view = util.safeView(func, nameOffset + i * 32 + 28);\n                view.setUint32(0, offset);\n                func.set(value, view.getUint32(0) + nameOffset);\n                offset += value.length;\n            } else {\n                func.set(value, nameOffset + i * 32);\n            }\n        }\n\n        return func;\n    }\n}\n\n/**\n * @param {string | boolean | number | Uint8Array | BigNumber | string[] | boolean[] | number[] | Uint8Array[] | BigNumber[]} param\n * @param {import(\"./ContractFunctionSelector.js\").SolidityType} ty\n * @returns {Uint8Array}\n */\nfunction argumentToBytes(param, ty) {\n    let value = new Uint8Array(32);\n    let valueView = util.safeView(value);\n    /** @type {Uint8Array} */\n    let par;\n\n    if (ty.array) {\n        if (!Array.isArray(param)) {\n            throw new TypeError(\n                \"SolidityType indicates type is array, but parameter is not an array\"\n            );\n        }\n\n        /**\n         * @type {Uint8Array[]}\n         */\n        const values = [];\n\n        // Generic over any type of array\n        // Destructuring required so the first variable must be assigned\n        // eslint-disable-next-line @typescript-eslint/no-unused-vars\n        for (const [_, p] of param.entries()) {\n            const arg = argumentToBytes(p, { ty: ty.ty, array: false });\n            values.push(arg);\n        }\n\n        const totalLengthOfValues = values\n            .map((a) => a.length)\n            .reduce((total, current) => total + current);\n\n        switch (ty.ty) {\n            case ArgumentType.uint8:\n            case ArgumentType.int8:\n            case ArgumentType.uint16:\n            case ArgumentType.int16:\n            case ArgumentType.uint32:\n            case ArgumentType.int32:\n            case ArgumentType.uint64:\n            case ArgumentType.int64:\n            case ArgumentType.uint256:\n            case ArgumentType.int256:\n            case ArgumentType.bool:\n            case ArgumentType.bytes32:\n            case ArgumentType.address:\n            case ArgumentType.func:\n                value = new Uint8Array(totalLengthOfValues + 32);\n                break;\n            case ArgumentType.bytes:\n            case ArgumentType.string:\n                value = new Uint8Array(\n                    values.length * 32 + totalLengthOfValues + 32\n                );\n                break;\n            default:\n                throw new TypeError(\n                    `Expected param type to be ArgumentType, but received ${ty.ty}`\n                );\n        }\n\n        valueView = util.safeView(value, 28);\n        valueView.setUint32(0, values.length);\n\n        let offset = 32 * values.length;\n\n        for (const [i, e] of values.entries()) {\n            switch (ty.ty) {\n                case ArgumentType.uint8:\n                case ArgumentType.int8:\n                case ArgumentType.uint16:\n                case ArgumentType.int16:\n                case ArgumentType.uint32:\n                case ArgumentType.int32:\n                case ArgumentType.uint64:\n                case ArgumentType.int64:\n                case ArgumentType.uint256:\n                case ArgumentType.int256:\n                case ArgumentType.bool:\n                case ArgumentType.bytes32:\n                case ArgumentType.address:\n                case ArgumentType.func:\n                    value.set(e, i * 32 + 32);\n                    break;\n                case ArgumentType.bytes:\n                case ArgumentType.string:\n                    // eslint-disable-next-line no-case-declarations\n                    const view = util.safeView(value, (i + 1) * 32 + 28);\n                    view.setUint32(0, offset);\n                    value.set(e, view.getUint32(0) + 32);\n                    offset += e.length;\n                    break;\n                default:\n                    throw new TypeError(\n                        `Expected param type to be ArgumentType, but received ${ty.ty}`\n                    );\n            }\n        }\n\n        return value;\n    }\n\n    switch (ty.ty) {\n        case ArgumentType.uint8:\n            numberToBytes(\n                /** @type {number | BigNumber } */ (param),\n                31,\n                valueView.setUint8.bind(valueView)\n            );\n            return value;\n        case ArgumentType.int8:\n            numberToBytes(\n                /** @type {number | BigNumber } */ (param),\n                31,\n                valueView.setInt8.bind(valueView)\n            );\n            return value;\n        case ArgumentType.uint16:\n            numberToBytes(\n                /** @type {number | BigNumber } */ (param),\n                30,\n                valueView.setUint16.bind(valueView)\n            );\n            return value;\n        case ArgumentType.int16:\n            numberToBytes(\n                /** @type {number | BigNumber } */ (param),\n                30,\n                valueView.setInt16.bind(valueView)\n            );\n            return value;\n        case ArgumentType.uint32:\n            numberToBytes(\n                /** @type {number | BigNumber } */ (param),\n                28,\n                valueView.setUint32.bind(valueView)\n            );\n            return value;\n        case ArgumentType.int32:\n            numberToBytes(\n                /** @type {number | BigNumber } */ (param),\n                28,\n                valueView.setInt32.bind(valueView)\n            );\n            return value;\n        // int64, uint64, and int256 both expect the parameter to be an Uint8Array instead of number\n        case ArgumentType.uint64:\n        case ArgumentType.int64:\n            if (BigNumber.isBigNumber(param)) {\n                // eslint-disable-next-line no-case-declarations\n                let par = param.toString(16);\n                if (par.length > 16) {\n                    throw new TypeError(\n                        \"uint64/int64 requires BigNumber to be less than or equal to 8 bytes\"\n                    );\n                } else if (!param.isInteger()) {\n                    throw new TypeError(\n                        \"uint64/int64 requires BigNumber to be an integer\"\n                    );\n                }\n\n                if (par.length % 2 === 1) {\n                    par = `0${par}`;\n                }\n\n                // eslint-disable-next-line no-case-declarations\n                const buf = hex.decode(par);\n                value.set(buf, 32 - buf.length);\n            }\n            return value;\n        case ArgumentType.int256:\n        case ArgumentType.uint256:\n            if (BigNumber.isBigNumber(param)) {\n                let par = param.toString(16);\n                if (par.length % 2 === 1) {\n                    par = `0${par}`;\n                }\n\n                const buf = hex.decode(par);\n                value.set(buf, 32 - buf.length);\n            }\n            return value;\n        case ArgumentType.address:\n            value.set(/** @type {Uint8Array} */ (param), 32 - 20);\n            return value;\n        case ArgumentType.bool:\n            value[31] = /** @type {boolean} */ (param) ? 1 : 0;\n            return value;\n        case ArgumentType.func:\n            value.set(/** @type {Uint8Array} */ (param), 32 - 24);\n            return value;\n        case ArgumentType.bytes32:\n            value.set(/** @type {Uint8Array} */ (param), 0);\n            return value;\n        // Bytes should have not the length already encoded\n        // JS String type is encoded as UTF-16 whilst Solidity `string` type is UTF-8 encoded.\n        // So if will assume is already correctly updated to being a Uint8Array of UTF-8 string\n        case ArgumentType.bytes:\n        case ArgumentType.string:\n            // If value is of type string, encode it in UTF-8 format and conver it to Uint8Array\n            // Required because JS Strings are UTF-16\n            // eslint-disable-next-line no-case-declarations\n            par =\n                param instanceof Uint8Array\n                    ? param\n                    : utf8.encode(/** @type {string} */ (param));\n\n            // Resize value to a 32 byte boundary if needed\n            if (\n                Math.floor(par.length / 32) >= 0 &&\n                Math.floor(par.length % 32) !== 0\n            ) {\n                value = new Uint8Array(\n                    (Math.floor(par.length / 32) + 1) * 32 + 32\n                );\n            } else {\n                value = new Uint8Array(64);\n            }\n\n            value.set(par, 32);\n\n            valueView = util.safeView(value, 28);\n            valueView.setUint32(0, par.length);\n            return value;\n        default:\n            throw new Error(`Unsupported argument type: ${ty.toString()}`);\n    }\n}\n\n/**\n * @param {number | BigNumber} param\n * @param {number} byteoffset\n * @param {(byteOffset: number, value: number) => void} func\n * @returns {void}\n */\nfunction numberToBytes(param, byteoffset, func) {\n    const value = BigNumber.isBigNumber(param) ? param.toNumber() : param;\n\n    func(byteoffset, value);\n}\n", "import Query, { QUERY_REGISTRY } from \"../query/Query.js\";\nimport ContractId from \"./ContractId.js\";\nimport ContractFunctionParameters from \"./ContractFunctionParameters.js\";\nimport ContractFunctionResult from \"./ContractFunctionResult.js\";\nimport Long from \"long\";\n\n/**\n * @namespace proto\n * @typedef {import(\"@hashgraph/proto\").IQuery} proto.IQuery\n * @typedef {import(\"@hashgraph/proto\").IQueryHeader} proto.IQueryHeader\n * @typedef {import(\"@hashgraph/proto\").IResponse} proto.IResponse\n * @typedef {import(\"@hashgraph/proto\").IResponseHeader} proto.IResponseHeader\n * @typedef {import(\"@hashgraph/proto\").IContractCallLocalQuery} proto.IContractCallLocalQuery\n * @typedef {import(\"@hashgraph/proto\").IContractCallLocalResponse} proto.IContractCallLocalResponse\n * @typedef {import(\"@hashgraph/proto\").IContractFunctionResult} proto.IContractFunctionResult\n */\n\n/**\n * @typedef {import(\"../channel/Channel.js\").default} Channel\n * @typedef {import(\"../client/Client.js\").default<*, *>} Client\n * @typedef {import(\"../account/AccountId.js\").default} AccountId\n */\n\n/**\n * @typedef {object} FunctionParameters\n * @property {ContractFunctionParameters} parameters\n * @property {string} name\n */\n\n/**\n * @augments {Query<ContractFunctionResult>}\n */\nexport default class ContractCallQuery extends Query {\n    /**\n     * @param {object} [props]\n     * @param {ContractId | string} [props.contractId]\n     * @param {number | Long} [props.gas]\n     * @param {FunctionParameters | Uint8Array} [props.functionParameters]\n     * @param {number | Long} [props.maxResultSize]\n     */\n    constructor(props = {}) {\n        super();\n\n        /**\n         * @private\n         * @type {?ContractId}\n         */\n        this._contractId = null;\n        if (props.contractId != null) {\n            this.setContractId(props.contractId);\n        }\n\n        /**\n         * @private\n         * @type {?Long}\n         */\n        this._gas = null;\n        if (props.gas != null) {\n            this.setGas(props.gas);\n        }\n\n        /**\n         * @private\n         * @type {?Uint8Array}\n         */\n        this._functionParameters = null;\n        if (props.functionParameters != null) {\n            if (props.functionParameters instanceof Uint8Array) {\n                this.setFunctionParameters(props.functionParameters);\n            } else {\n                this.setFunction(\n                    props.functionParameters.name,\n                    props.functionParameters.parameters\n                );\n            }\n        }\n\n        /**\n         * @private\n         * @type {?Long}\n         */\n        this._maxResultSize = null;\n        if (props.maxResultSize != null) {\n            this.setMaxResultSize(props.maxResultSize);\n        }\n    }\n\n    /**\n     * @internal\n     * @param {proto.IQuery} query\n     * @returns {ContractCallQuery}\n     */\n    static _fromProtobuf(query) {\n        const call = /** @type {proto.IContractCallLocalQuery} */ (\n            query.contractCallLocal\n        );\n\n        return new ContractCallQuery({\n            contractId:\n                call.contractID != null\n                    ? ContractId._fromProtobuf(call.contractID)\n                    : undefined,\n            gas: call.gas != null ? call.gas : undefined,\n            functionParameters:\n                call.functionParameters != null\n                    ? call.functionParameters\n                    : undefined,\n            maxResultSize:\n                call.maxResultSize != null ? call.maxResultSize : undefined,\n        });\n    }\n\n    /**\n     * @returns {?ContractId}\n     */\n    get contractId() {\n        return this._contractId;\n    }\n\n    /**\n     * Set the contract ID for which the call is being requested.\n     *\n     * @param {ContractId | string} contractId\n     * @returns {ContractCallQuery}\n     */\n    setContractId(contractId) {\n        this._contractId =\n            typeof contractId === \"string\"\n                ? ContractId.fromString(contractId)\n                : contractId.clone();\n\n        return this;\n    }\n\n    /**\n     * @returns {?Long}\n     */\n    get gas() {\n        return this._gas;\n    }\n\n    /**\n     * @param {number | Long} gas\n     * @returns {ContractCallQuery}\n     */\n    setGas(gas) {\n        this._gas = gas instanceof Long ? gas : Long.fromValue(gas);\n        return this;\n    }\n\n    /**\n     * @returns {?Uint8Array}\n     */\n    get functionParameters() {\n        return this._functionParameters;\n    }\n\n    /**\n     * @param {Uint8Array} params\n     * @returns {ContractCallQuery}\n     */\n    setFunctionParameters(params) {\n        this._functionParameters = params;\n        return this;\n    }\n\n    /**\n     * @param {string} name\n     * @param {?ContractFunctionParameters} [params]\n     * @returns {ContractCallQuery}\n     */\n    setFunction(name, params) {\n        this._functionParameters = (\n            params != null ? params : new ContractFunctionParameters()\n        )._build(name);\n\n        return this;\n    }\n\n    /**\n     * @param {number | Long} size\n     * @returns {ContractCallQuery}\n     */\n    setMaxResultSize(size) {\n        this._maxResultSize =\n            size instanceof Long ? size : Long.fromValue(size);\n        return this;\n    }\n\n    /**\n     * @param {Client} client\n     */\n    _validateChecksums(client) {\n        if (this._contractId != null) {\n            this._contractId.validateChecksum(client);\n        }\n    }\n\n    /**\n     * @override\n     * @internal\n     * @param {Channel} channel\n     * @param {proto.IQuery} request\n     * @returns {Promise<proto.IResponse>}\n     */\n    _execute(channel, request) {\n        return channel.smartContract.contractCallLocalMethod(request);\n    }\n\n    /**\n     * @override\n     * @internal\n     * @param {proto.IResponse} response\n     * @returns {proto.IResponseHeader}\n     */\n    _mapResponseHeader(response) {\n        const contractCallLocal =\n            /** @type {proto.IContractCallLocalResponse} */ (\n                response.contractCallLocal\n            );\n        return /** @type {proto.IResponseHeader} */ (contractCallLocal.header);\n    }\n\n    /**\n     * @protected\n     * @override\n     * @param {proto.IResponse} response\n     * @returns {Promise<ContractFunctionResult>}\n     */\n    _mapResponse(response) {\n        const call =\n            /**\n             *@type {proto.IContractCallLocalResponse}\n             */\n            (response.contractCallLocal);\n\n        return Promise.resolve(\n            ContractFunctionResult._fromProtobuf(\n                /**\n                 * @type {proto.IContractFunctionResult}\n                 */\n                (call.functionResult)\n            )\n        );\n    }\n\n    /**\n     * @override\n     * @internal\n     * @param {proto.IQueryHeader} header\n     * @returns {proto.IQuery}\n     */\n    _onMakeRequest(header) {\n        return {\n            contractCallLocal: {\n                header,\n                contractID:\n                    this._contractId != null\n                        ? this._contractId._toProtobuf()\n                        : null,\n                gas: this._gas,\n                maxResultSize: this._maxResultSize,\n                functionParameters: this._functionParameters,\n            },\n        };\n    }\n}\n\n// eslint-disable-next-line @typescript-eslint/unbound-method\nQUERY_REGISTRY.set(\"contractCallLocal\", ContractCallQuery._fromProtobuf);\n", "import Hbar from \"../Hbar.js\";\nimport AccountId from \"../account/AccountId.js\";\nimport FileId from \"../file/FileId.js\";\nimport ContractFunctionParameters from \"./ContractFunctionParameters.js\";\nimport Transaction, {\n    DEFAULT_AUTO_RENEW_PERIOD,\n    TRANSACTION_REGISTRY,\n} from \"../transaction/Transaction.js\";\nimport Long from \"long\";\nimport Duration from \"../Duration.js\";\nimport Key from \"../Key.js\";\n\n/**\n * @namespace proto\n * @typedef {import(\"@hashgraph/proto\").ITransaction} proto.ITransaction\n * @typedef {import(\"@hashgraph/proto\").ISignedTransaction} proto.ISignedTransaction\n * @typedef {import(\"@hashgraph/proto\").TransactionBody} proto.TransactionBody\n * @typedef {import(\"@hashgraph/proto\").ITransactionBody} proto.ITransactionBody\n * @typedef {import(\"@hashgraph/proto\").ITransactionResponse} proto.ITransactionResponse\n * @typedef {import(\"@hashgraph/proto\").IContractCreateTransactionBody} proto.IContractCreateTransactionBody\n * @typedef {import(\"@hashgraph/proto\").IAccountID} proto.IAccountID\n * @typedef {import(\"@hashgraph/proto\").IFileID} proto.IFileID\n */\n\n/**\n * @typedef {import(\"bignumber.js\").default} BigNumber\n * @typedef {import(\"../channel/Channel.js\").default} Channel\n * @typedef {import(\"../client/Client.js\").default<*, *>} Client\n * @typedef {import(\"../transaction/TransactionId.js\").default} TransactionId\n */\n\nexport default class ContractCreateTransaction extends Transaction {\n    /**\n     * @param {object} [props]\n     * @param {FileId | string} [props.bytecodeFileId]\n     * @param {Key} [props.adminKey]\n     * @param {number | Long} [props.gas]\n     * @param {number | string | Long | BigNumber | Hbar} [props.initialBalance]\n     * @param {AccountId | string} [props.proxyAccountId]\n     * @param {Duration | Long | number} [props.autoRenewPeriod]\n     * @param {Uint8Array} [props.constructorParameters]\n     * @param {string} [props.contractMemo]\n     */\n    constructor(props = {}) {\n        super();\n\n        /**\n         * @private\n         * @type {?FileId}\n         */\n        this._bytecodeFileId = null;\n\n        /**\n         * @private\n         * @type {?Key}\n         */\n        this._adminKey = null;\n\n        /**\n         * @private\n         * @type {?Long}\n         */\n        this._gas = null;\n\n        /**\n         * @private\n         * @type {?Hbar}\n         */\n        this._initialBalance = null;\n\n        /**\n         * @private\n         * @type {?AccountId}\n         */\n        this._proxyAccountId = null;\n\n        /**\n         * @private\n         * @type {Duration}\n         */\n        this._autoRenewPeriod = new Duration(DEFAULT_AUTO_RENEW_PERIOD);\n\n        /**\n         * @private\n         * @type {?Uint8Array}\n         */\n        this._constructorParameters = null;\n\n        /**\n         * @private\n         * @type {?string}\n         */\n        this._contractMemo = null;\n\n        this.setMaxTransactionFee(new Hbar(20));\n\n        if (props.bytecodeFileId != null) {\n            this.setBytecodeFileId(props.bytecodeFileId);\n        }\n\n        if (props.adminKey != null) {\n            this.setAdminKey(props.adminKey);\n        }\n\n        if (props.gas != null) {\n            this.setGas(props.gas);\n        }\n\n        if (props.initialBalance != null) {\n            this.setInitialBalance(props.initialBalance);\n        }\n\n        if (props.proxyAccountId != null) {\n            this.setProxyAccountId(props.proxyAccountId);\n        }\n\n        if (props.autoRenewPeriod != null) {\n            this.setAutoRenewPeriod(props.autoRenewPeriod);\n        }\n\n        if (props.constructorParameters != null) {\n            this.setConstructorParameters(props.constructorParameters);\n        }\n\n        if (props.contractMemo != null) {\n            this.setContractMemo(props.contractMemo);\n        }\n    }\n\n    /**\n     * @internal\n     * @param {proto.ITransaction[]} transactions\n     * @param {proto.ISignedTransaction[]} signedTransactions\n     * @param {TransactionId[]} transactionIds\n     * @param {AccountId[]} nodeIds\n     * @param {proto.ITransactionBody[]} bodies\n     * @returns {ContractCreateTransaction}\n     */\n    static _fromProtobuf(\n        transactions,\n        signedTransactions,\n        transactionIds,\n        nodeIds,\n        bodies\n    ) {\n        const body = bodies[0];\n        const create = /** @type {proto.IContractCreateTransactionBody} */ (\n            body.contractCreateInstance\n        );\n\n        return Transaction._fromProtobufTransactions(\n            new ContractCreateTransaction({\n                bytecodeFileId:\n                    create.fileID != null\n                        ? FileId._fromProtobuf(\n                              /** @type {proto.IFileID} */ (create.fileID)\n                          )\n                        : undefined,\n                adminKey:\n                    create.adminKey != null\n                        ? Key._fromProtobufKey(create.adminKey)\n                        : undefined,\n                gas: create.gas != null ? create.gas : undefined,\n                initialBalance:\n                    create.initialBalance != null\n                        ? create.initialBalance\n                        : undefined,\n                proxyAccountId:\n                    create.proxyAccountID != null\n                        ? AccountId._fromProtobuf(\n                              /** @type {proto.IAccountID} */ (\n                                  create.proxyAccountID\n                              )\n                          )\n                        : undefined,\n                autoRenewPeriod:\n                    create.autoRenewPeriod != null\n                        ? create.autoRenewPeriod.seconds != null\n                            ? create.autoRenewPeriod.seconds\n                            : undefined\n                        : undefined,\n                constructorParameters:\n                    create.constructorParameters != null\n                        ? create.constructorParameters\n                        : undefined,\n                contractMemo: create.memo != null ? create.memo : undefined,\n            }),\n            transactions,\n            signedTransactions,\n            transactionIds,\n            nodeIds,\n            bodies\n        );\n    }\n\n    /**\n     * @returns {?FileId}\n     */\n    get bytecodeFileId() {\n        return this._bytecodeFileId;\n    }\n\n    /**\n     * @param {FileId | string} bytecodeFileId\n     * @returns {this}\n     */\n    setBytecodeFileId(bytecodeFileId) {\n        this._requireNotFrozen();\n        this._bytecodeFileId =\n            typeof bytecodeFileId === \"string\"\n                ? FileId.fromString(bytecodeFileId)\n                : bytecodeFileId.clone();\n\n        return this;\n    }\n\n    /**\n     * @returns {?Key}\n     */\n    get adminKey() {\n        return this._adminKey;\n    }\n\n    /**\n     * @param {Key} adminKey\n     * @returns {this}\n     */\n    setAdminKey(adminKey) {\n        this._requireNotFrozen();\n        this._adminKey = adminKey;\n\n        return this;\n    }\n\n    /**\n     * @returns {?Long}\n     */\n    get gas() {\n        return this._gas;\n    }\n\n    /**\n     * @param {number | Long} gas\n     * @returns {this}\n     */\n    setGas(gas) {\n        this._requireNotFrozen();\n        this._gas = gas instanceof Long ? gas : Long.fromValue(gas);\n\n        return this;\n    }\n\n    /**\n     * @returns {?Hbar}\n     */\n    get initialBalance() {\n        return this._initialBalance;\n    }\n\n    /**\n     * Set the initial amount to transfer into this contract.\n     *\n     * @param {number | string | Long | BigNumber | Hbar} initialBalance\n     * @returns {this}\n     */\n    setInitialBalance(initialBalance) {\n        this._requireNotFrozen();\n        this._initialBalance =\n            initialBalance instanceof Hbar\n                ? initialBalance\n                : new Hbar(initialBalance);\n\n        return this;\n    }\n\n    /**\n     * @returns {?AccountId}\n     */\n    get proxyAccountId() {\n        return this._proxyAccountId;\n    }\n\n    /**\n     * @param {AccountId | string} proxyAccountId\n     * @returns {this}\n     */\n    setProxyAccountId(proxyAccountId) {\n        this._requireNotFrozen();\n        this._proxyAccountId =\n            proxyAccountId instanceof AccountId\n                ? proxyAccountId\n                : AccountId.fromString(proxyAccountId);\n\n        return this;\n    }\n\n    /**\n     * @returns {Duration}\n     */\n    get autoRenewPeriod() {\n        return this._autoRenewPeriod;\n    }\n\n    /**\n     * @param {Duration | Long | number} autoRenewPeriod\n     * @returns {this}\n     */\n    setAutoRenewPeriod(autoRenewPeriod) {\n        this._requireNotFrozen();\n        this._autoRenewPeriod =\n            autoRenewPeriod instanceof Duration\n                ? autoRenewPeriod\n                : new Duration(autoRenewPeriod);\n\n        return this;\n    }\n\n    /**\n     * @returns {?Uint8Array}\n     */\n    get constructorParameters() {\n        return this._constructorParameters;\n    }\n\n    /**\n     * @param {Uint8Array | ContractFunctionParameters} constructorParameters\n     * @returns {this}\n     */\n    setConstructorParameters(constructorParameters) {\n        this._requireNotFrozen();\n        this._constructorParameters =\n            constructorParameters instanceof ContractFunctionParameters\n                ? constructorParameters._build()\n                : constructorParameters;\n\n        return this;\n    }\n\n    /**\n     * @returns {?string}\n     */\n    get contractMemo() {\n        return this._contractMemo;\n    }\n\n    /**\n     * @param {string} contractMemo\n     * @returns {this}\n     */\n    setContractMemo(contractMemo) {\n        this._requireNotFrozen();\n        this._contractMemo = contractMemo;\n\n        return this;\n    }\n\n    /**\n     * @param {Client} client\n     */\n    _validateChecksums(client) {\n        if (this._bytecodeFileId != null) {\n            this._bytecodeFileId.validateChecksum(client);\n        }\n\n        if (this._proxyAccountId != null) {\n            this._proxyAccountId.validateChecksum(client);\n        }\n    }\n\n    /**\n     * @override\n     * @internal\n     * @param {Channel} channel\n     * @param {proto.ITransaction} request\n     * @returns {Promise<proto.ITransactionResponse>}\n     */\n    _execute(channel, request) {\n        return channel.smartContract.createContract(request);\n    }\n\n    /**\n     * @override\n     * @protected\n     * @returns {NonNullable<proto.TransactionBody[\"data\"]>}\n     */\n    _getTransactionDataCase() {\n        return \"contractCreateInstance\";\n    }\n\n    /**\n     * @override\n     * @protected\n     * @returns {proto.IContractCreateTransactionBody}\n     */\n    _makeTransactionData() {\n        return {\n            fileID:\n                this._bytecodeFileId != null\n                    ? this._bytecodeFileId._toProtobuf()\n                    : null,\n            adminKey:\n                this._adminKey != null ? this._adminKey._toProtobufKey() : null,\n            gas: this._gas,\n            initialBalance:\n                this._initialBalance != null\n                    ? this._initialBalance.toTinybars()\n                    : null,\n            proxyAccountID:\n                this._proxyAccountId != null\n                    ? this._proxyAccountId._toProtobuf()\n                    : null,\n            autoRenewPeriod: this._autoRenewPeriod._toProtobuf(),\n            constructorParameters: this._constructorParameters,\n            memo: this._contractMemo,\n        };\n    }\n}\n\nTRANSACTION_REGISTRY.set(\n    \"contractCreateInstance\",\n    // eslint-disable-next-line @typescript-eslint/unbound-method\n    ContractCreateTransaction._fromProtobuf\n);\n", "import Transaction, {\n    TRANSACTION_REGISTRY,\n} from \"../transaction/Transaction.js\";\nimport ContractId from \"./ContractId.js\";\nimport AccountId from \"../account/AccountId.js\";\n\n/**\n * @namespace proto\n * @typedef {import(\"@hashgraph/proto\").ITransaction} proto.ITransaction\n * @typedef {import(\"@hashgraph/proto\").ISignedTransaction} proto.ISignedTransaction\n * @typedef {import(\"@hashgraph/proto\").TransactionBody} proto.TransactionBody\n * @typedef {import(\"@hashgraph/proto\").ITransactionBody} proto.ITransactionBody\n * @typedef {import(\"@hashgraph/proto\").ITransactionResponse} proto.ITransactionResponse\n * @typedef {import(\"@hashgraph/proto\").IContractDeleteTransactionBody} proto.IContractDeleteTransactionBody\n * @typedef {import(\"@hashgraph/proto\").IContractID} proto.IContractID\n * @typedef {import(\"@hashgraph/proto\").IAccountID} proto.IAccountID\n */\n\n/**\n * @typedef {import(\"../channel/Channel.js\").default} Channel\n * @typedef {import(\"../client/Client.js\").default<*, *>} Client\n * @typedef {import(\"../transaction/TransactionId.js\").default} TransactionId\n */\n\nexport default class ContractDeleteTransaction extends Transaction {\n    /**\n     * @param {object} [props]\n     * @param {ContractId | string} [props.contractId]\n     * @param {ContractId | string} [props.transferContractId]\n     * @param {AccountId | string} [props.transferAccountId]\n     */\n    constructor(props = {}) {\n        super();\n\n        /**\n         * @private\n         * @type {?ContractId}\n         */\n        this._contractId = null;\n\n        /**\n         * @private\n         * @type {?AccountId}\n         */\n        this._transferAccountId = null;\n\n        /**\n         * @private\n         * @type {?ContractId}\n         */\n        this._transferContractId = null;\n\n        if (props.contractId != null) {\n            this.setContractId(props.contractId);\n        }\n\n        if (props.transferAccountId != null) {\n            this.setTransferAccountId(props.transferAccountId);\n        }\n\n        if (props.transferContractId != null) {\n            this.setTransferContractId(props.transferContractId);\n        }\n    }\n\n    /**\n     * @internal\n     * @param {proto.ITransaction[]} transactions\n     * @param {proto.ISignedTransaction[]} signedTransactions\n     * @param {TransactionId[]} transactionIds\n     * @param {AccountId[]} nodeIds\n     * @param {proto.ITransactionBody[]} bodies\n     * @returns {ContractDeleteTransaction}\n     */\n    static _fromProtobuf(\n        transactions,\n        signedTransactions,\n        transactionIds,\n        nodeIds,\n        bodies\n    ) {\n        const body = bodies[0];\n        const contractDelete =\n            /** @type {proto.IContractDeleteTransactionBody} */ (\n                body.contractDeleteInstance\n            );\n\n        return Transaction._fromProtobufTransactions(\n            new ContractDeleteTransaction({\n                contractId:\n                    contractDelete.contractID != null\n                        ? ContractId._fromProtobuf(\n                              /** @type {proto.IContractID} */ (\n                                  contractDelete.contractID\n                              )\n                          )\n                        : undefined,\n                transferAccountId:\n                    contractDelete.transferAccountID != null\n                        ? AccountId._fromProtobuf(\n                              /** @type {proto.IAccountID} */ (\n                                  contractDelete.transferAccountID\n                              )\n                          )\n                        : undefined,\n                transferContractId:\n                    contractDelete.transferContractID != null\n                        ? ContractId._fromProtobuf(\n                              /** @type {proto.IContractID} */ (\n                                  contractDelete.transferContractID\n                              )\n                          )\n                        : undefined,\n            }),\n            transactions,\n            signedTransactions,\n            transactionIds,\n            nodeIds,\n            bodies\n        );\n    }\n\n    /**\n     * @returns {?ContractId}\n     */\n    get contractId() {\n        return this._contractId;\n    }\n\n    /**\n     * Sets the contract ID which is being deleted in this transaction.\n     *\n     * @param {ContractId | string} contractId\n     * @returns {ContractDeleteTransaction}\n     */\n    setContractId(contractId) {\n        this._requireNotFrozen();\n        this._contractId =\n            typeof contractId === \"string\"\n                ? ContractId.fromString(contractId)\n                : contractId.clone();\n\n        return this;\n    }\n\n    /**\n     * @returns {?ContractId}\n     */\n    get transferContractId() {\n        return this._transferContractId;\n    }\n\n    /**\n     * Sets the contract ID which will receive all remaining hbars.\n     *\n     * @param {ContractId | string} transferContractId\n     * @returns {ContractDeleteTransaction}\n     */\n    setTransferContractId(transferContractId) {\n        this._requireNotFrozen();\n        this._transferContractId =\n            transferContractId instanceof ContractId\n                ? transferContractId\n                : ContractId.fromString(transferContractId);\n\n        return this;\n    }\n\n    /**\n     * @returns {?AccountId}\n     */\n    get transferAccountId() {\n        return this._transferAccountId;\n    }\n\n    /**\n     * Sets the account ID which will receive all remaining hbars.\n     *\n     * @param {AccountId | string} transferAccountId\n     * @returns {ContractDeleteTransaction}\n     */\n    setTransferAccountId(transferAccountId) {\n        this._requireNotFrozen();\n        this._transferAccountId =\n            transferAccountId instanceof AccountId\n                ? transferAccountId\n                : AccountId.fromString(transferAccountId);\n\n        return this;\n    }\n\n    /**\n     * @param {Client} client\n     */\n    _validateChecksums(client) {\n        if (this._contractId != null) {\n            this._contractId.validateChecksum(client);\n        }\n\n        if (this._transferAccountId != null) {\n            this._transferAccountId.validateChecksum(client);\n        }\n\n        if (this._transferContractId != null) {\n            this._transferContractId.validateChecksum(client);\n        }\n    }\n\n    /**\n     * @override\n     * @internal\n     * @param {Channel} channel\n     * @param {proto.ITransaction} request\n     * @returns {Promise<proto.ITransactionResponse>}\n     */\n    _execute(channel, request) {\n        return channel.smartContract.deleteContract(request);\n    }\n\n    /**\n     * @override\n     * @protected\n     * @returns {NonNullable<proto.TransactionBody[\"data\"]>}\n     */\n    _getTransactionDataCase() {\n        return \"contractDeleteInstance\";\n    }\n\n    /**\n     * @override\n     * @protected\n     * @returns {proto.IContractDeleteTransactionBody}\n     */\n    _makeTransactionData() {\n        return {\n            contractID:\n                this._contractId != null\n                    ? this._contractId._toProtobuf()\n                    : null,\n            transferAccountID: this._transferAccountId\n                ? this._transferAccountId._toProtobuf()\n                : null,\n            transferContractID:\n                this._transferContractId != null\n                    ? this._transferContractId._toProtobuf()\n                    : null,\n        };\n    }\n}\n\nTRANSACTION_REGISTRY.set(\n    \"contractDeleteInstance\",\n    // eslint-disable-next-line @typescript-eslint/unbound-method\n    ContractDeleteTransaction._fromProtobuf\n);\n", "import Hbar from \"../Hbar.js\";\nimport Transaction, {\n    TRANSACTION_REGISTRY,\n} from \"../transaction/Transaction.js\";\nimport ContractId from \"./ContractId.js\";\nimport ContractFunctionParameters from \"./ContractFunctionParameters.js\";\nimport Long from \"long\";\n\n/**\n * @namespace proto\n * @typedef {import(\"@hashgraph/proto\").ITransaction} proto.ITransaction\n * @typedef {import(\"@hashgraph/proto\").ISignedTransaction} proto.ISignedTransaction\n * @typedef {import(\"@hashgraph/proto\").TransactionBody} proto.TransactionBody\n * @typedef {import(\"@hashgraph/proto\").ITransactionBody} proto.ITransactionBody\n * @typedef {import(\"@hashgraph/proto\").ITransactionResponse} proto.ITransactionResponse\n * @typedef {import(\"@hashgraph/proto\").IContractCallTransactionBody} proto.IContractCallTransactionBody\n * @typedef {import(\"@hashgraph/proto\").IAccountID} proto.IAccountID\n * @typedef {import(\"@hashgraph/proto\").IContractID} proto.IContractID\n * @typedef {import(\"@hashgraph/proto\").IFileID} proto.IFileID\n */\n\n/**\n * @typedef {import(\"bignumber.js\").default} BigNumber\n * @typedef {import(\"@hashgraph/cryptography\").Key} Key\n * @typedef {import(\"../channel/Channel.js\").default} Channel\n * @typedef {import(\"../client/Client.js\").default<*, *>} Client\n * @typedef {import(\"../account/AccountId.js\").default} AccountId\n * @typedef {import(\"../transaction/TransactionId.js\").default} TransactionId\n */\n\n/**\n * @typedef {object} FunctionParameters\n * @property {string} name\n * @property {ContractFunctionParameters} parameters\n */\n\nexport default class ContractExecuteTransaction extends Transaction {\n    /**\n     * @param {object} [props]\n     * @param {ContractId | string} [props.contractId]\n     * @param {number | Long} [props.gas]\n     * @param {number | string | Long | BigNumber | Hbar} [props.amount]\n     * @param {Uint8Array} [props.functionParameters]\n     * @param {FunctionParameters} [props.function]\n     */\n    constructor(props = {}) {\n        super();\n\n        /**\n         * @private\n         * @type {?ContractId}\n         */\n        this._contractId = null;\n\n        /**\n         * @private\n         * @type {?Long}\n         */\n        this._gas = null;\n\n        /**\n         * @private\n         * @type {?Hbar}\n         */\n        this._amount = null;\n\n        /**\n         * @private\n         * @type {?Uint8Array}\n         */\n        this._functionParameters = null;\n\n        if (props.contractId != null) {\n            this.setContractId(props.contractId);\n        }\n\n        if (props.gas != null) {\n            this.setGas(props.gas);\n        }\n\n        if (props.amount != null) {\n            this.setPayableAmount(props.amount);\n        }\n\n        if (props.functionParameters != null) {\n            this.setFunctionParameters(props.functionParameters);\n        } else if (props.function != null) {\n            this.setFunction(props.function.name, props.function.parameters);\n        }\n    }\n\n    /**\n     * @internal\n     * @param {proto.ITransaction[]} transactions\n     * @param {proto.ISignedTransaction[]} signedTransactions\n     * @param {TransactionId[]} transactionIds\n     * @param {AccountId[]} nodeIds\n     * @param {proto.ITransactionBody[]} bodies\n     * @returns {ContractExecuteTransaction}\n     */\n    static _fromProtobuf(\n        transactions,\n        signedTransactions,\n        transactionIds,\n        nodeIds,\n        bodies\n    ) {\n        const body = bodies[0];\n        const call = /** @type {proto.IContractCallTransactionBody} */ (\n            body.contractCall\n        );\n\n        return Transaction._fromProtobufTransactions(\n            new ContractExecuteTransaction({\n                contractId:\n                    call.contractID != null\n                        ? ContractId._fromProtobuf(\n                              /** @type {proto.IContractID} */ (call.contractID)\n                          )\n                        : undefined,\n                gas: call.gas != null ? call.gas : undefined,\n                amount: call.amount ? call.amount : undefined,\n                functionParameters:\n                    call.functionParameters != null\n                        ? call.functionParameters\n                        : undefined,\n            }),\n            transactions,\n            signedTransactions,\n            transactionIds,\n            nodeIds,\n            bodies\n        );\n    }\n\n    /**\n     * @returns {?ContractId}\n     */\n    get contractId() {\n        return this._contractId;\n    }\n\n    /**\n     * Sets the contract ID which is being executed in this transaction.\n     *\n     * @param {ContractId | string} contractId\n     * @returns {ContractExecuteTransaction}\n     */\n    setContractId(contractId) {\n        this._requireNotFrozen();\n        this._contractId =\n            typeof contractId === \"string\"\n                ? ContractId.fromString(contractId)\n                : contractId.clone();\n\n        return this;\n    }\n\n    /**\n     * @returns {?Long}\n     */\n    get gas() {\n        return this._gas;\n    }\n\n    /**\n     * Sets the contract ID which is being executed in this transaction.\n     *\n     * @param {number | Long} gas\n     * @returns {ContractExecuteTransaction}\n     */\n    setGas(gas) {\n        this._requireNotFrozen();\n        this._gas = gas instanceof Long ? gas : Long.fromValue(gas);\n\n        return this;\n    }\n\n    /**\n     * @returns {?Hbar}\n     */\n    get payableAmount() {\n        return this._amount;\n    }\n\n    /**\n     * Sets the contract ID which is being executed in this transaction.\n     *\n     * @param {number | string | Long | BigNumber | Hbar} amount\n     * @returns {ContractExecuteTransaction}\n     */\n    setPayableAmount(amount) {\n        this._requireNotFrozen();\n        this._amount = amount instanceof Hbar ? amount : new Hbar(amount);\n\n        return this;\n    }\n\n    /**\n     * @returns {?Uint8Array}\n     */\n    get functionParameters() {\n        return this._functionParameters;\n    }\n\n    /**\n     * @param {Uint8Array} functionParameters\n     * @returns {this}\n     */\n    setFunctionParameters(functionParameters) {\n        this._requireNotFrozen();\n        this._functionParameters = functionParameters;\n\n        return this;\n    }\n\n    /**\n     * @param {string} name\n     * @param {ContractFunctionParameters} [functionParameters]\n     * @returns {this}\n     */\n    setFunction(name, functionParameters) {\n        this._requireNotFrozen();\n        this._functionParameters =\n            functionParameters != null\n                ? functionParameters._build(name)\n                : new ContractFunctionParameters()._build(name);\n\n        return this;\n    }\n\n    /**\n     * @param {Client} client\n     */\n    _validateChecksums(client) {\n        if (this._contractId != null) {\n            this._contractId.validateChecksum(client);\n        }\n    }\n\n    /**\n     * @override\n     * @internal\n     * @param {Channel} channel\n     * @param {proto.ITransaction} request\n     * @returns {Promise<proto.ITransactionResponse>}\n     */\n    _execute(channel, request) {\n        return channel.smartContract.contractCallMethod(request);\n    }\n\n    /**\n     * @override\n     * @protected\n     * @returns {NonNullable<proto.TransactionBody[\"data\"]>}\n     */\n    _getTransactionDataCase() {\n        return \"contractCall\";\n    }\n\n    /**\n     * @override\n     * @protected\n     * @returns {proto.IContractCallTransactionBody}\n     */\n    _makeTransactionData() {\n        return {\n            contractID:\n                this._contractId != null\n                    ? this._contractId._toProtobuf()\n                    : null,\n            gas: this._gas,\n            amount: this._amount != null ? this._amount.toTinybars() : null,\n            functionParameters: this._functionParameters,\n        };\n    }\n}\n\nTRANSACTION_REGISTRY.set(\n    \"contractCall\",\n    // eslint-disable-next-line @typescript-eslint/unbound-method\n    ContractExecuteTransaction._fromProtobuf\n);\n", "import ContractId from \"./ContractId.js\";\nimport AccountId from \"../account/AccountId.js\";\nimport Timestamp from \"../Timestamp.js\";\nimport Duration from \"../Duration.js\";\nimport Hbar from \"../Hbar.js\";\nimport Long from \"long\";\nimport * as proto from \"@hashgraph/proto\";\nimport TokenRelationshipMap from \"../account/TokenRelationshipMap.js\";\nimport Key from \"../Key.js\";\n\n/**\n * Response when the client sends the node CryptoGetInfoQuery.\n */\nexport default class ContractInfo {\n    /**\n     * @private\n     * @param {object} props\n     * @param {ContractId} props.contractId\n     * @param {AccountId} props.accountId\n     * @param {string} props.contractAccountId\n     * @param {?Key} props.adminKey\n     * @param {Timestamp} props.expirationTime\n     * @param {Duration} props.autoRenewPeriod\n     * @param {Long} props.storage\n     * @param {string} props.contractMemo\n     * @param {Hbar} props.balance\n     * @param {boolean} props.isDeleted\n     * @param {TokenRelationshipMap} props.tokenRelationships\n     */\n    constructor(props) {\n        /**\n         * ID of the contract instance, in the format used in transactions.\n         *\n         * @readonly\n         */\n        this.contractId = props.contractId;\n\n        /**\n         * ID of the cryptocurrency account owned by the contract instance,\n         * in the format used in transactions.\n         *\n         * @readonly\n         */\n        this.accountId = props.accountId;\n\n        /**\n         * ID of both the contract instance and the cryptocurrency account owned by the contract\n         * instance, in the format used by Solidity.\n         *\n         * @readonly\n         */\n        this.contractAccountId = props.contractAccountId;\n\n        /**\n         * The state of the instance and its fields can be modified arbitrarily if this key signs a\n         * transaction to modify it. If this is null, then such modifications are not possible,\n         * and there is no administrator that can override the normal operation of this smart\n         * contract instance. Note that if it is created with no admin keys, then there is no\n         * administrator to authorize changing the admin keys, so there can never be any admin keys\n         * for that instance.\n         *\n         * @readonly\n         */\n        this.adminKey = props.adminKey != null ? props.adminKey : null;\n\n        /**\n         * The current time at which this contract instance (and its account) is set to expire.\n         *\n         * @readonly\n         */\n        this.expirationTime = props.expirationTime;\n\n        /**\n         * The expiration time will extend every this many seconds. If there are insufficient funds,\n         * then it extends as long as possible. If the account is empty when it expires,\n         * then it is deleted.\n         *\n         * @readonly\n         */\n        this.autoRenewPeriod = props.autoRenewPeriod;\n\n        /**\n         * Number of bytes of storage being used by this instance (which affects the cost to\n         * extend the expiration time).\n         *\n         * @readonly\n         */\n        this.storage = props.storage;\n\n        /**\n         * The memo associated with the contract (max 100 bytes).\n         *\n         * @readonly\n         */\n        this.contractMemo = props.contractMemo;\n\n        /**\n         * The current balance of the contract.\n         *\n         * @readonly\n         */\n        this.balance = props.balance;\n\n        /**\n         * Whether the contract has been deleted\n         *\n         * @readonly\n         */\n        this.isDeleted = props.isDeleted;\n\n        /**\n         * The tokens associated to the contract\n         *\n         * @readonly\n         */\n        this.tokenRelationships = props.tokenRelationships;\n\n        Object.freeze(this);\n    }\n\n    /**\n     * @internal\n     * @param {proto.IContractInfo} info\n     * @returns {ContractInfo}\n     */\n    static _fromProtobuf(info) {\n        const autoRenewPeriod = /** @type {Long | number} */ (\n            /** @type {proto.IDuration} */ (info.autoRenewPeriod).seconds\n        );\n\n        return new ContractInfo({\n            contractId: ContractId._fromProtobuf(\n                /** @type {proto.IContractID} */ (info.contractID)\n            ),\n            accountId: AccountId._fromProtobuf(\n                /** @type {proto.IAccountID} */ (info.accountID)\n            ),\n            contractAccountId:\n                info.contractAccountID != null ? info.contractAccountID : \"\",\n            adminKey:\n                info.adminKey != null\n                    ? Key._fromProtobufKey(info.adminKey)\n                    : null,\n            expirationTime: Timestamp._fromProtobuf(\n                /** @type {proto.ITimestamp} */ (info.expirationTime)\n            ),\n            autoRenewPeriod: new Duration(autoRenewPeriod),\n            storage:\n                info.storage != null\n                    ? info.storage instanceof Long\n                        ? info.storage\n                        : Long.fromValue(info.storage)\n                    : Long.ZERO,\n            contractMemo: info.memo != null ? info.memo : \"\",\n            balance: Hbar.fromTinybars(info.balance != null ? info.balance : 0),\n            isDeleted: /** @type {boolean} */ (info.deleted),\n            tokenRelationships: TokenRelationshipMap._fromProtobuf(\n                info.tokenRelationships != null ? info.tokenRelationships : []\n            ),\n        });\n    }\n\n    /**\n     * @internal\n     * @returns {proto.IContractInfo}\n     */\n    _toProtobuf() {\n        return {\n            contractID: this.contractId._toProtobuf(),\n            accountID: this.accountId._toProtobuf(),\n            contractAccountID: this.contractAccountId,\n            adminKey:\n                this.adminKey != null ? this.adminKey._toProtobufKey() : null,\n            expirationTime: this.expirationTime._toProtobuf(),\n            autoRenewPeriod:\n                this.autoRenewPeriod != null\n                    ? this.autoRenewPeriod._toProtobuf()\n                    : null,\n            storage: this.storage,\n            memo: this.contractMemo,\n            balance: this.balance.toTinybars(),\n            deleted: this.isDeleted,\n            tokenRelationships:\n                this.tokenRelationships != null\n                    ? this.tokenRelationships._toProtobuf()\n                    : null,\n        };\n    }\n\n    /**\n     * @param {Uint8Array} bytes\n     * @returns {ContractInfo}\n     */\n    static fromBytes(bytes) {\n        return ContractInfo._fromProtobuf(\n            proto.ContractGetInfoResponse.ContractInfo.decode(bytes)\n        );\n    }\n\n    /**\n     * @returns {Uint8Array}\n     */\n    toBytes() {\n        return proto.ContractGetInfoResponse.ContractInfo.encode(\n            this._toProtobuf()\n        ).finish();\n    }\n}\n", "import Query, { QUERY_REGISTRY } from \"../query/Query.js\";\nimport ContractId from \"./ContractId.js\";\nimport ContractInfo from \"./ContractInfo.js\";\nimport Hbar from \"../Hbar.js\";\n\n/**\n * @namespace proto\n * @typedef {import(\"@hashgraph/proto\").IQuery} proto.IQuery\n * @typedef {import(\"@hashgraph/proto\").IQueryHeader} proto.IQueryHeader\n * @typedef {import(\"@hashgraph/proto\").IResponse} proto.IResponse\n * @typedef {import(\"@hashgraph/proto\").IResponseHeader} proto.IResponseHeader\n * @typedef {import(\"@hashgraph/proto\").IContractGetInfoQuery} proto.IContractGetInfoQuery\n * @typedef {import(\"@hashgraph/proto\").IContractGetInfoResponse} proto.IContractGetInfoResponse\n * @typedef {import(\"@hashgraph/proto\").IContractInfo} proto.IContractInfo\n */\n\n/**\n * @typedef {import(\"../channel/Channel.js\").default} Channel\n * @typedef {import(\"../client/Client.js\").default<*, *>} Client\n * @typedef {import(\"../account/AccountId.js\").default} AccountId\n */\n\n/**\n * @augments {Query<ContractInfo>}\n */\nexport default class ContractInfoQuery extends Query {\n    /**\n     * @param {object} [props]\n     * @param {ContractId | string} [props.contractId]\n     */\n    constructor(props = {}) {\n        super();\n\n        /**\n         * @type {?ContractId}\n         * @private\n         */\n        this._contractId = null;\n        if (props.contractId != null) {\n            this.setContractId(props.contractId);\n        }\n    }\n\n    /**\n     * @internal\n     * @param {proto.IQuery} query\n     * @returns {ContractInfoQuery}\n     */\n    static _fromProtobuf(query) {\n        const info = /** @type {proto.IContractGetInfoQuery} */ (\n            query.contractGetInfo\n        );\n\n        return new ContractInfoQuery({\n            contractId:\n                info.contractID != null\n                    ? ContractId._fromProtobuf(info.contractID)\n                    : undefined,\n        });\n    }\n\n    /**\n     * @returns {?ContractId}\n     */\n    get contractId() {\n        return this._contractId;\n    }\n\n    /**\n     * Set the contract ID for which the info is being requested.\n     *\n     * @param {ContractId | string} contractId\n     * @returns {ContractInfoQuery}\n     */\n    setContractId(contractId) {\n        this._contractId =\n            typeof contractId === \"string\"\n                ? ContractId.fromString(contractId)\n                : contractId.clone();\n\n        return this;\n    }\n\n    /**\n     * @param {Client} client\n     */\n    _validateChecksums(client) {\n        if (this._contractId != null) {\n            this._contractId.validateChecksum(client);\n        }\n    }\n\n    /**\n     * @override\n     * @internal\n     * @param {Channel} channel\n     * @param {proto.IQuery} request\n     * @returns {Promise<proto.IResponse>}\n     */\n    _execute(channel, request) {\n        return channel.smartContract.getContractInfo(request);\n    }\n\n    /**\n     * @override\n     * @param {import(\"../client/Client.js\").default<Channel, *>} client\n     * @returns {Promise<Hbar>}\n     */\n    async getCost(client) {\n        let cost = await super.getCost(client);\n\n        if (cost.toTinybars().greaterThan(25)) {\n            return cost;\n        } else {\n            return Hbar.fromTinybars(25);\n        }\n    }\n\n    /**\n     * @override\n     * @internal\n     * @param {proto.IResponse} response\n     * @returns {proto.IResponseHeader}\n     */\n    _mapResponseHeader(response) {\n        const contractGetInfo = /** @type {proto.IContractGetInfoResponse} */ (\n            response.contractGetInfo\n        );\n        return /** @type {proto.IResponseHeader} */ (contractGetInfo.header);\n    }\n\n    /**\n     * @protected\n     * @override\n     * @param {proto.IResponse} response\n     * @param {AccountId} nodeAccountId\n     * @param {proto.IQuery} request\n     * @returns {Promise<ContractInfo>}\n     */\n    // eslint-disable-next-line @typescript-eslint/no-unused-vars\n    _mapResponse(response, nodeAccountId, request) {\n        const info = /** @type {proto.IContractGetInfoResponse} */ (\n            response.contractGetInfo\n        );\n\n        return Promise.resolve(\n            ContractInfo._fromProtobuf(\n                /** @type {proto.IContractInfo} */ (info.contractInfo)\n            )\n        );\n    }\n\n    /**\n     * @override\n     * @internal\n     * @param {proto.IQueryHeader} header\n     * @returns {proto.IQuery}\n     */\n    _onMakeRequest(header) {\n        return {\n            contractGetInfo: {\n                header,\n                contractID:\n                    this._contractId != null\n                        ? this._contractId._toProtobuf()\n                        : null,\n            },\n        };\n    }\n}\n\n// eslint-disable-next-line @typescript-eslint/unbound-method\nQUERY_REGISTRY.set(\"contractGetInfo\", ContractInfoQuery._fromProtobuf);\n", "import AccountId from \"../account/AccountId.js\";\nimport ContractId from \"./ContractId.js\";\nimport FileId from \"../file/FileId.js\";\nimport Transaction, {\n    TRANSACTION_REGISTRY,\n} from \"../transaction/Transaction.js\";\nimport Duration from \"../Duration.js\";\nimport Timestamp from \"../Timestamp.js\";\nimport Key from \"../Key.js\";\n\n/**\n * @namespace proto\n * @typedef {import(\"@hashgraph/proto\").ITransaction} proto.ITransaction\n * @typedef {import(\"@hashgraph/proto\").ISignedTransaction} proto.ISignedTransaction\n * @typedef {import(\"@hashgraph/proto\").TransactionBody} proto.TransactionBody\n * @typedef {import(\"@hashgraph/proto\").ITransactionBody} proto.ITransactionBody\n * @typedef {import(\"@hashgraph/proto\").ITransactionResponse} proto.ITransactionResponse\n * @typedef {import(\"@hashgraph/proto\").IContractUpdateTransactionBody} proto.IContractUpdateTransactionBody\n * @typedef {import(\"@hashgraph/proto\").IAccountID} proto.IAccountID\n * @typedef {import(\"@hashgraph/proto\").IContractID} proto.IContractID\n * @typedef {import(\"@hashgraph/proto\").IFileID} proto.IFileID\n */\n\n/**\n * @typedef {import(\"../channel/Channel.js\").default} Channel\n * @typedef {import(\"../client/Client.js\").default<*, *>} Client\n * @typedef {import(\"../transaction/TransactionId.js\").default} TransactionId\n */\n\nexport default class ContractUpdateTransaction extends Transaction {\n    /**\n     * @param {object} props\n     * @param {ContractId | string} [props.contractId]\n     * @param {FileId | string} [props.bytecodeFileId]\n     * @param {Timestamp | Date} [props.expirationTime]\n     * @param {Key} [props.adminKey]\n     * @param {AccountId | string} [props.proxyAccountId]\n     * @param {Duration | Long | number} [props.autoRenewPeriod]\n     * @param {string} [props.contractMemo]\n     */\n    constructor(props = {}) {\n        super();\n\n        /**\n         * @private\n         * @type {?ContractId}\n         */\n        this._contractId = null;\n\n        /**\n         * @private\n         * @type {?Timestamp}\n         */\n        this._expirationTime = null;\n\n        /**\n         * @private\n         * @type {?Key}\n         */\n        this._adminKey = null;\n\n        /**\n         * @private\n         * @type {?AccountId}\n         */\n        this._proxyAccountId = null;\n\n        /**\n         * @private\n         * @type {?Duration}\n         */\n        this._autoRenewPeriod = null;\n\n        /**\n         * @private\n         * @type {?FileId}\n         */\n        this._bytecodeFileId = null;\n\n        /**\n         * @private\n         * @type {?string}\n         */\n        this._contractMemo = null;\n\n        if (props.contractId != null) {\n            this.setContractId(props.contractId);\n        }\n\n        if (props.expirationTime != null) {\n            this.setExpirationTime(props.expirationTime);\n        }\n\n        if (props.adminKey != null) {\n            this.setAdminKey(props.adminKey);\n        }\n\n        if (props.proxyAccountId != null) {\n            this.setProxyAccountId(props.proxyAccountId);\n        }\n\n        if (props.autoRenewPeriod != null) {\n            this.setAutoRenewPeriod(props.autoRenewPeriod);\n        }\n\n        if (props.bytecodeFileId != null) {\n            this.setBytecodeFileId(props.bytecodeFileId);\n        }\n\n        if (props.contractMemo != null) {\n            this.setContractMemo(props.contractMemo);\n        }\n    }\n\n    /**\n     * @internal\n     * @param {proto.ITransaction[]} transactions\n     * @param {proto.ISignedTransaction[]} signedTransactions\n     * @param {TransactionId[]} transactionIds\n     * @param {AccountId[]} nodeIds\n     * @param {proto.ITransactionBody[]} bodies\n     * @returns {ContractUpdateTransaction}\n     */\n    static _fromProtobuf(\n        transactions,\n        signedTransactions,\n        transactionIds,\n        nodeIds,\n        bodies\n    ) {\n        const body = bodies[0];\n        const update = /** @type {proto.IContractUpdateTransactionBody} */ (\n            body.contractUpdateInstance\n        );\n\n        let autoRenewPeriod = undefined;\n        if (\n            update.autoRenewPeriod != null &&\n            update.autoRenewPeriod.seconds != null\n        ) {\n            autoRenewPeriod = update.autoRenewPeriod.seconds;\n        }\n\n        let contractMemo = undefined;\n        if (update.memoWrapper != null && update.memoWrapper.value != null) {\n            contractMemo = update.memoWrapper.value;\n        }\n\n        return Transaction._fromProtobufTransactions(\n            new ContractUpdateTransaction({\n                contractId:\n                    update.contractID != null\n                        ? ContractId._fromProtobuf(\n                              /** @type {proto.IContractID} */ (\n                                  update.contractID\n                              )\n                          )\n                        : undefined,\n                bytecodeFileId:\n                    update.fileID != null\n                        ? FileId._fromProtobuf(\n                              /** @type {proto.IFileID} */ (update.fileID)\n                          )\n                        : undefined,\n                expirationTime:\n                    update.expirationTime != null\n                        ? Timestamp._fromProtobuf(update.expirationTime)\n                        : undefined,\n                adminKey:\n                    update.adminKey != null\n                        ? Key._fromProtobufKey(update.adminKey)\n                        : undefined,\n                proxyAccountId:\n                    update.proxyAccountID != null\n                        ? AccountId._fromProtobuf(\n                              /** @type {proto.IAccountID} */ (\n                                  update.proxyAccountID\n                              )\n                          )\n                        : undefined,\n                autoRenewPeriod,\n                contractMemo,\n            }),\n            transactions,\n            signedTransactions,\n            transactionIds,\n            nodeIds,\n            bodies\n        );\n    }\n\n    /**\n     * @returns {?ContractId}\n     */\n    get contractId() {\n        return this._contractId;\n    }\n\n    /**\n     * Sets the contract ID which is being deleted in this transaction.\n     *\n     * @param {ContractId | string} contractId\n     * @returns {ContractUpdateTransaction}\n     */\n    setContractId(contractId) {\n        this._requireNotFrozen();\n        this._contractId =\n            typeof contractId === \"string\"\n                ? ContractId.fromString(contractId)\n                : contractId.clone();\n\n        return this;\n    }\n\n    /**\n     * @returns {?Timestamp}\n     */\n    get expirationTime() {\n        return this._expirationTime;\n    }\n\n    /**\n     * Sets the contract ID which is being deleted in this transaction.\n     *\n     * @param {Timestamp | Date} expirationTime\n     * @returns {ContractUpdateTransaction}\n     */\n    setExpirationTime(expirationTime) {\n        this._requireNotFrozen();\n        this._expirationTime =\n            expirationTime instanceof Timestamp\n                ? expirationTime\n                : Timestamp.fromDate(expirationTime);\n\n        return this;\n    }\n\n    /**\n     * @returns {?Key}\n     */\n    get adminKey() {\n        return this._adminKey;\n    }\n\n    /**\n     * @param {Key} adminKey\n     * @returns {this}\n     */\n    setAdminKey(adminKey) {\n        this._requireNotFrozen();\n        this._adminKey = adminKey;\n\n        return this;\n    }\n\n    /**\n     * @returns {?AccountId}\n     */\n    get proxyAccountId() {\n        return this._proxyAccountId;\n    }\n\n    /**\n     * @param {AccountId | string} proxyAccountId\n     * @returns {this}\n     */\n    setProxyAccountId(proxyAccountId) {\n        this._requireNotFrozen();\n        this._proxyAccountId =\n            typeof proxyAccountId === \"string\"\n                ? AccountId.fromString(proxyAccountId)\n                : proxyAccountId.clone();\n\n        return this;\n    }\n\n    /**\n     * @returns {?Duration}\n     */\n    get autoRenewPeriod() {\n        return this._autoRenewPeriod;\n    }\n\n    /**\n     * @param {Duration | Long | number} autoRenewPeriod\n     * @returns {this}\n     */\n    setAutoRenewPeriod(autoRenewPeriod) {\n        this._requireNotFrozen();\n        this._autoRenewPeriod =\n            autoRenewPeriod instanceof Duration\n                ? autoRenewPeriod\n                : new Duration(autoRenewPeriod);\n\n        return this;\n    }\n\n    /**\n     * @returns {?FileId}\n     */\n    get bytecodeFileId() {\n        return this._bytecodeFileId;\n    }\n\n    /**\n     * @param {FileId | string} bytecodeFileId\n     * @returns {this}\n     */\n    setBytecodeFileId(bytecodeFileId) {\n        console.warn(\"Deprecated: there is no replacement\");\n        this._requireNotFrozen();\n        this._bytecodeFileId =\n            typeof bytecodeFileId === \"string\"\n                ? FileId.fromString(bytecodeFileId)\n                : bytecodeFileId.clone();\n\n        return this;\n    }\n\n    /**\n     * @returns {?string}\n     */\n    get contractMemo() {\n        return this._contractMemo;\n    }\n\n    /**\n     * @param {string} contractMemo\n     * @returns {this}\n     */\n    setContractMemo(contractMemo) {\n        this._requireNotFrozen();\n        this._contractMemo = contractMemo;\n\n        return this;\n    }\n\n    /**\n     * @returns {this}\n     */\n    clearContractMemo() {\n        this._requireNotFrozen();\n        this._contractMemo = null;\n\n        return this;\n    }\n\n    /**\n     * @param {Client} client\n     */\n    _validateChecksums(client) {\n        if (this._contractId != null) {\n            this._contractId.validateChecksum(client);\n        }\n\n        if (this._bytecodeFileId != null) {\n            this._bytecodeFileId.validateChecksum(client);\n        }\n\n        if (this._proxyAccountId != null) {\n            this._proxyAccountId.validateChecksum(client);\n        }\n    }\n\n    /**\n     * @override\n     * @internal\n     * @param {Channel} channel\n     * @param {proto.ITransaction} request\n     * @returns {Promise<proto.ITransactionResponse>}\n     */\n    _execute(channel, request) {\n        return channel.smartContract.updateContract(request);\n    }\n\n    /**\n     * @override\n     * @protected\n     * @returns {NonNullable<proto.TransactionBody[\"data\"]>}\n     */\n    _getTransactionDataCase() {\n        return \"contractUpdateInstance\";\n    }\n\n    /**\n     * @override\n     * @protected\n     * @returns {proto.IContractUpdateTransactionBody}\n     */\n    _makeTransactionData() {\n        return {\n            contractID:\n                this._contractId != null\n                    ? this._contractId._toProtobuf()\n                    : null,\n            expirationTime:\n                this._expirationTime != null\n                    ? this._expirationTime._toProtobuf()\n                    : null,\n            adminKey:\n                this._adminKey != null ? this._adminKey._toProtobufKey() : null,\n            proxyAccountID:\n                this._proxyAccountId != null\n                    ? this._proxyAccountId._toProtobuf()\n                    : null,\n            autoRenewPeriod:\n                this._autoRenewPeriod != null\n                    ? this._autoRenewPeriod._toProtobuf()\n                    : null,\n            fileID: this._bytecodeFileId\n                ? this._bytecodeFileId._toProtobuf()\n                : null,\n            memoWrapper:\n                this._contractMemo != null\n                    ? {\n                          value: this._contractMemo,\n                      }\n                    : null,\n        };\n    }\n}\n\nTRANSACTION_REGISTRY.set(\n    \"contractUpdateInstance\",\n    // eslint-disable-next-line @typescript-eslint/unbound-method\n    ContractUpdateTransaction._fromProtobuf\n);\n", "import Hbar from \"../Hbar.js\";\nimport Transaction, {\n    TRANSACTION_REGISTRY,\n    CHUNK_SIZE,\n} from \"../transaction/Transaction.js\";\nimport * as utf8 from \"../encoding/utf8.js\";\nimport FileId from \"./FileId.js\";\nimport TransactionId from \"../transaction/TransactionId.js\";\nimport Timestamp from \"../Timestamp.js\";\n\n/**\n * @namespace proto\n * @typedef {import(\"@hashgraph/proto\").ITransaction} proto.ITransaction\n * @typedef {import(\"@hashgraph/proto\").ISignedTransaction} proto.ISignedTransaction\n * @typedef {import(\"@hashgraph/proto\").TransactionBody} proto.TransactionBody\n * @typedef {import(\"@hashgraph/proto\").ITransactionBody} proto.ITransactionBody\n * @typedef {import(\"@hashgraph/proto\").ITransactionResponse} proto.ITransactionResponse\n * @typedef {import(\"@hashgraph/proto\").IFileAppendTransactionBody} proto.IFileAppendTransactionBody\n * @typedef {import(\"@hashgraph/proto\").IFileID} proto.IFileID\n */\n\n/**\n * @typedef {import(\"../channel/Channel.js\").default} Channel\n * @typedef {import(\"../client/Client.js\").default<*, *>} Client\n * @typedef {import(\"../account/AccountId.js\").default} AccountId\n * @typedef {import(\"../transaction/TransactionResponse.js\").default} TransactionResponse\n * @typedef {import(\"../schedule/ScheduleCreateTransaction.js\").default} ScheduleCreateTransaction\n */\n\n/**\n * A transaction specifically to append data to a file on the network.\n *\n * If a file has multiple keys, all keys must sign to modify its contents.\n */\nexport default class FileAppendTransaction extends Transaction {\n    /**\n     * @param {object} [props]\n     * @param {FileId | string} [props.fileId]\n     * @param {Uint8Array | string} [props.contents]\n     * @param {number} [props.maxChunks]\n     */\n    constructor(props = {}) {\n        super();\n\n        /**\n         * @private\n         * @type {?FileId}\n         */\n        this._fileId = null;\n\n        /**\n         * @private\n         * @type {?Uint8Array}\n         */\n        this._contents = null;\n\n        /**\n         * @private\n         * @type {number}\n         */\n        this._maxChunks = 20;\n\n        this.setMaxTransactionFee(new Hbar(5));\n\n        if (props.fileId != null) {\n            this.setFileId(props.fileId);\n        }\n\n        if (props.contents != null) {\n            this.setContents(props.contents);\n        }\n\n        if (props.maxChunks != null) {\n            this.setMaxChunks(props.maxChunks);\n        }\n\n        /** @type {number} */\n        this._startIndex = 0;\n\n        /** @type {TransactionId[]} */\n        this._transactionIds = [];\n    }\n\n    /**\n     * @internal\n     * @param {proto.ITransaction[]} transactions\n     * @param {proto.ISignedTransaction[]} signedTransactions\n     * @param {TransactionId[]} transactionIds\n     * @param {AccountId[]} nodeIds\n     * @param {proto.ITransactionBody[]} bodies\n     * @returns {FileAppendTransaction}\n     */\n    static _fromProtobuf(\n        transactions,\n        signedTransactions,\n        transactionIds,\n        nodeIds,\n        bodies\n    ) {\n        const body = bodies[0];\n        const append = /** @type {proto.IFileAppendTransactionBody} */ (\n            body.fileAppend\n        );\n\n        let contents;\n        for (let i = 0; i < bodies.length; i += nodeIds.length) {\n            const fileAppend = /** @type {proto.IFileAppendTransactionBody} */ (\n                bodies[i].fileAppend\n            );\n            if (fileAppend.contents == null) {\n                break;\n            }\n\n            if (contents == null) {\n                contents = new Uint8Array(\n                    /** @type {Uint8Array} */ (fileAppend.contents)\n                );\n                continue;\n            }\n\n            /** @type {Uint8Array} */\n            const concat = new Uint8Array(\n                contents.length +\n                    /** @type {Uint8Array} */ (fileAppend.contents).length\n            );\n            concat.set(contents, 0);\n            concat.set(\n                /** @type {Uint8Array} */ (fileAppend.contents),\n                contents.length\n            );\n            contents = concat;\n        }\n\n        return Transaction._fromProtobufTransactions(\n            new FileAppendTransaction({\n                fileId:\n                    append.fileID != null\n                        ? FileId._fromProtobuf(\n                              /** @type {proto.IFileID} */ (append.fileID)\n                          )\n                        : undefined,\n                contents: contents,\n            }),\n            transactions,\n            signedTransactions,\n            transactionIds,\n            nodeIds,\n            bodies\n        );\n    }\n\n    /**\n     * @param {TransactionId} transactionId\n     * @returns {this}\n     */\n    setTransactionId(transactionId) {\n        this._requireNotFrozen();\n\n        if (\n            transactionId.accountId == null ||\n            transactionId.validStart == null\n        ) {\n            throw new Error(\n                \"`FileAppendTransaction` does not support `TransactionId` built from `nonce`\"\n            );\n        }\n\n        this._transactionIds = [transactionId];\n\n        return this;\n    }\n\n    /**\n     * @returns {?FileId}\n     */\n    get fileId() {\n        return this._fileId;\n    }\n\n    /**\n     * Set the keys which must sign any transactions modifying this file. Required.\n     *\n     * All keys must sign to modify the file's contents or keys. No key is required\n     * to sign for extending the expiration time (except the one for the operator account\n     * paying for the transaction). Only one key must sign to delete the file, however.\n     *\n     * To require more than one key to sign to delete a file, add them to a\n     * KeyList and pass that here.\n     *\n     * The network currently requires a file to have at least one key (or key list or threshold key)\n     * but this requirement may be lifted in the future.\n     *\n     * @param {FileId | string} fileId\n     * @returns {this}\n     */\n    setFileId(fileId) {\n        this._requireNotFrozen();\n        this._fileId =\n            typeof fileId === \"string\"\n                ? FileId.fromString(fileId)\n                : fileId.clone();\n\n        return this;\n    }\n\n    /**\n     * @returns {?Uint8Array}\n     */\n    get contents() {\n        return this._contents;\n    }\n\n    /**\n     * Set the given byte array as the file's contents.\n     *\n     * This may be omitted to append an empty file.\n     *\n     * Note that total size for a given transaction is limited to 6KiB (as of March 2020) by the\n     * network; if you exceed this you may receive a HederaPreCheckStatusException\n     * with Status#TransactionOversize.\n     *\n     * In this case, you will need to break the data into chunks of less than ~6KiB and execute this\n     * transaction with the first chunk and then use FileAppendTransaction with\n     * FileAppendTransaction#setContents(Uint8Array) for the remaining chunks.\n     *\n     * @param {Uint8Array | string} contents\n     * @returns {this}\n     */\n    setContents(contents) {\n        this._requireNotFrozen();\n        this._contents =\n            contents instanceof Uint8Array ? contents : utf8.encode(contents);\n\n        return this;\n    }\n\n    /**\n     * @returns {?number}\n     */\n    get maxChunks() {\n        return this._maxChunks;\n    }\n\n    /**\n     * @param {number} maxChunks\n     * @returns {this}\n     */\n    setMaxChunks(maxChunks) {\n        this._requireNotFrozen();\n        this._maxChunks = maxChunks;\n        return this;\n    }\n\n    /**\n     * Freeze this transaction from further modification to prepare for\n     * signing or serialization.\n     *\n     * Will use the `Client`, if available, to generate a default Transaction ID and select 1/3\n     * nodes to prepare this transaction for.\n     *\n     * @param {?import(\"../client/Client.js\").default<Channel, *>} client\n     * @returns {this}\n     */\n    freezeWith(client) {\n        super.freezeWith(client);\n\n        if (this._contents == null) {\n            return this;\n        }\n\n        const chunks = Math.floor(\n            (this._contents.length + (CHUNK_SIZE - 1)) / CHUNK_SIZE\n        );\n\n        if (chunks > this._maxChunks) {\n            throw new Error(\n                `Contents with size ${this._contents.length} too long for ${this._maxChunks} chunks`\n            );\n        }\n\n        let nextTransactionId = this.transactionId;\n\n        super._transactions = [];\n        super._transactionIds = [];\n        super._signedTransactions = [];\n        super._nextTransactionIndex = 0;\n\n        for (let chunk = 0; chunk < chunks; chunk++) {\n            this._startIndex = chunk * CHUNK_SIZE;\n\n            this._transactionIds.push(nextTransactionId);\n\n            for (const nodeAccountId of this._nodeIds) {\n                this._signedTransactions.push(\n                    this._makeSignedTransaction(nodeAccountId)\n                );\n            }\n\n            nextTransactionId = new TransactionId(\n                /** @type {AccountId} */ (nextTransactionId.accountId),\n                new Timestamp(\n                    /** @type {Timestamp} */ (\n                        nextTransactionId.validStart\n                    ).seconds,\n                    /** @type {Timestamp} */ (\n                        nextTransactionId.validStart\n                    ).nanos.add(1)\n                )\n            );\n\n            super._nextTransactionIndex = this._nextTransactionIndex + 1;\n        }\n\n        this._startIndex = 0;\n        super._nextTransactionIndex = 0;\n\n        return this;\n    }\n\n    /**\n     * @returns {ScheduleCreateTransaction}\n     */\n    schedule() {\n        this._requireNotFrozen();\n\n        if (this._contents != null && this._contents.length > CHUNK_SIZE) {\n            throw new Error(\n                `cannot scheduled \\`FileAppendTransaction\\` with message over ${CHUNK_SIZE} bytes`\n            );\n        }\n\n        return super.schedule();\n    }\n\n    /**\n     * @param {import(\"../client/Client.js\").default<*, *>} client\n     * @returns {Promise<TransactionResponse>}\n     */\n    async execute(client) {\n        return (await this.executeAll(client))[0];\n    }\n\n    /**\n     * @param {import(\"../client/Client.js\").default<*, *>} client\n     * @returns {Promise<TransactionResponse[]>}\n     */\n    async executeAll(client) {\n        if (!super._isFrozen()) {\n            this.freezeWith(client);\n        }\n\n        // on execute, sign each transaction with the operator, if present\n        // and we are signing a transaction that used the default transaction ID\n\n        const transactionId = this.transactionId;\n        const operatorAccountId = client.operatorAccountId;\n\n        if (\n            operatorAccountId != null &&\n            operatorAccountId.equals(\n                /** @type {AccountId} */ (transactionId.accountId)\n            )\n        ) {\n            await super.signWithOperator(client);\n        }\n\n        const responses = [];\n        for (let i = 0; i < this._transactionIds.length; i++) {\n            const response = await super.execute(client);\n            await response.getReceipt(client);\n            responses.push(response);\n        }\n\n        return responses;\n    }\n\n    /**\n     * @param {Client} client\n     */\n    _validateChecksums(client) {\n        if (this._fileId != null) {\n            this._fileId.validateChecksum(client);\n        }\n    }\n\n    /**\n     * @override\n     * @internal\n     * @param {Channel} channel\n     * @param {proto.ITransaction} request\n     * @returns {Promise<proto.ITransactionResponse>}\n     */\n    _execute(channel, request) {\n        return channel.file.appendContent(request);\n    }\n\n    /**\n     * @override\n     * @protected\n     * @returns {NonNullable<proto.TransactionBody[\"data\"]>}\n     */\n    _getTransactionDataCase() {\n        return \"fileAppend\";\n    }\n\n    /**\n     * @override\n     * @protected\n     * @returns {proto.IFileAppendTransactionBody}\n     */\n    _makeTransactionData() {\n        const length = this._contents != null ? this._contents.length : 0;\n        let endIndex = this._startIndex + CHUNK_SIZE;\n        if (endIndex > length) {\n            endIndex = length;\n        }\n\n        return {\n            fileID: this._fileId != null ? this._fileId._toProtobuf() : null,\n            contents:\n                this._contents != null\n                    ? this._contents.slice(this._startIndex, endIndex)\n                    : null,\n        };\n    }\n}\n\n// eslint-disable-next-line @typescript-eslint/unbound-method\nTRANSACTION_REGISTRY.set(\"fileAppend\", FileAppendTransaction._fromProtobuf);\n", "import Query, { QUERY_REGISTRY } from \"../query/Query.js\";\nimport FileId from \"./FileId.js\";\n\n/**\n * @namespace proto\n * @typedef {import(\"@hashgraph/proto\").IQuery} proto.IQuery\n * @typedef {import(\"@hashgraph/proto\").IQueryHeader} proto.IQueryHeader\n * @typedef {import(\"@hashgraph/proto\").IResponse} proto.IResponse\n * @typedef {import(\"@hashgraph/proto\").IResponseHeader} proto.IResponseHeader\n * @typedef {import(\"@hashgraph/proto\").IFileGetContentsQuery} proto.IFileGetContentsQuery\n * @typedef {import(\"@hashgraph/proto\").IFileGetContentsResponse} proto.IFileGetContentsResponse\n * @typedef {import(\"@hashgraph/proto\").IFileContents} proto.IFileContents\n */\n\n/**\n * @typedef {import(\"../channel/Channel.js\").default} Channel\n * @typedef {import(\"../client/Client.js\").default<*, *>} Client\n * @typedef {import(\"../account/AccountId.js\").default} AccountId\n */\n\n/**\n * @augments {Query<Uint8Array>}\n */\nexport default class FileContentsQuery extends Query {\n    /**\n     * @param {object} [props]\n     * @param {FileId | string} [props.fileId]\n     */\n    constructor(props = {}) {\n        super();\n\n        /**\n         * @type {?FileId}\n         * @private\n         */\n        this._fileId = null;\n        if (props.fileId != null) {\n            this.setFileId(props.fileId);\n        }\n    }\n\n    /**\n     * @internal\n     * @param {proto.IQuery} query\n     * @returns {FileContentsQuery}\n     */\n    static _fromProtobuf(query) {\n        const contents = /** @type {proto.IFileGetContentsQuery} */ (\n            query.fileGetContents\n        );\n\n        return new FileContentsQuery({\n            fileId:\n                contents.fileID != null\n                    ? FileId._fromProtobuf(contents.fileID)\n                    : undefined,\n        });\n    }\n\n    /**\n     * @param {Client} client\n     */\n    _validateChecksums(client) {\n        if (this._fileId != null) {\n            this._fileId.validateChecksum(client);\n        }\n    }\n\n    /**\n     * @override\n     * @internal\n     * @param {Channel} channel\n     * @param {proto.IQuery} request\n     * @returns {Promise<proto.IResponse>}\n     */\n    _execute(channel, request) {\n        return channel.file.getFileContent(request);\n    }\n\n    /**\n     * @returns {?FileId}\n     */\n    get fileId() {\n        return this._fileId;\n    }\n\n    /**\n     * Set the file ID for which the info is being requested.\n     *\n     * @param {FileId | string} fileId\n     * @returns {FileContentsQuery}\n     */\n    setFileId(fileId) {\n        this._fileId =\n            typeof fileId === \"string\"\n                ? FileId.fromString(fileId)\n                : fileId.clone();\n\n        return this;\n    }\n\n    /**\n     * @override\n     * @internal\n     * @param {proto.IResponse} response\n     * @returns {proto.IResponseHeader}\n     */\n    _mapResponseHeader(response) {\n        const fileGetContents = /** @type {proto.IFileGetContentsResponse} */ (\n            response.fileGetContents\n        );\n        return /** @type {proto.IResponseHeader} */ (fileGetContents.header);\n    }\n\n    /**\n     * @protected\n     * @override\n     * @param {proto.IResponse} response\n     * @returns {Promise<Uint8Array>}\n     */\n    _mapResponse(response) {\n        const fileContentsResponse =\n            /** @type {proto.IFileGetContentsResponse} */ (\n                response.fileGetContents\n            );\n        const fileConents = /** @type {proto.IFileContents} */ (\n            fileContentsResponse.fileContents\n        );\n        const contents = /** @type {Uint8Array} */ (fileConents.contents);\n\n        return Promise.resolve(contents);\n    }\n\n    /**\n     * @override\n     * @internal\n     * @param {proto.IQueryHeader} header\n     * @returns {proto.IQuery}\n     */\n    _onMakeRequest(header) {\n        return {\n            fileGetContents: {\n                header,\n                fileID:\n                    this._fileId != null ? this._fileId._toProtobuf() : null,\n            },\n        };\n    }\n}\n\n// eslint-disable-next-line @typescript-eslint/unbound-method\nQUERY_REGISTRY.set(\"fileGetContents\", FileContentsQuery._fromProtobuf);\n", "import Hbar from \"../Hbar.js\";\nimport Transaction, {\n    TRANSACTION_REGISTRY,\n    DEFAULT_AUTO_RENEW_PERIOD,\n} from \"../transaction/Transaction.js\";\nimport * as utf8 from \"../encoding/utf8.js\";\nimport Timestamp from \"../Timestamp.js\";\nimport Key from \"../Key.js\";\nimport KeyList from \"../KeyList.js\";\n\n/**\n * @namespace proto\n * @typedef {import(\"@hashgraph/proto\").ITransaction} proto.ITransaction\n * @typedef {import(\"@hashgraph/proto\").ISignedTransaction} proto.ISignedTransaction\n * @typedef {import(\"@hashgraph/proto\").TransactionBody} proto.TransactionBody\n * @typedef {import(\"@hashgraph/proto\").ITransactionBody} proto.ITransactionBody\n * @typedef {import(\"@hashgraph/proto\").ITransactionResponse} proto.ITransactionResponse\n * @typedef {import(\"@hashgraph/proto\").IFileCreateTransactionBody} proto.IFileCreateTransactionBody\n */\n\n/**\n * @typedef {import(\"../channel/Channel.js\").default} Channel\n * @typedef {import(\"../account/AccountId.js\").default} AccountId\n * @typedef {import(\"../transaction/TransactionId.js\").default} TransactionId\n */\n\n/**\n * Create a new Hedera\u2122 crypto-currency file.\n */\nexport default class FileCreateTransaction extends Transaction {\n    /**\n     * @param {object} [props]\n     * @param {Key[] | KeyList} [props.keys]\n     * @param {Timestamp | Date} [props.expirationTime]\n     * @param {Uint8Array | string} [props.contents]\n     * @param {string} [props.fileMemo]\n     */\n    constructor(props = {}) {\n        super();\n\n        /**\n         * @private\n         * @type {?Key[]}\n         */\n        this._keys = null;\n\n        /**\n         * @private\n         * @type {Timestamp}\n         */\n        this._expirationTime = Timestamp.fromDate(\n            Date.now() + DEFAULT_AUTO_RENEW_PERIOD.toInt() * 1000\n        );\n\n        /**\n         * @private\n         * @type {?Uint8Array}\n         */\n        this._contents = null;\n\n        /**\n         * @private\n         * @type {?string}\n         */\n        this._fileMemo = null;\n\n        this.setMaxTransactionFee(new Hbar(5));\n\n        if (props.keys != null) {\n            this.setKeys(props.keys);\n        }\n\n        if (props.expirationTime != null) {\n            this.setExpirationTime(props.expirationTime);\n        }\n\n        if (props.contents != null) {\n            this.setContents(props.contents);\n        }\n\n        if (props.fileMemo != null) {\n            this.setFileMemo(props.fileMemo);\n        }\n    }\n\n    /**\n     * @internal\n     * @param {proto.ITransaction[]} transactions\n     * @param {proto.ISignedTransaction[]} signedTransactions\n     * @param {TransactionId[]} transactionIds\n     * @param {AccountId[]} nodeIds\n     * @param {proto.ITransactionBody[]} bodies\n     * @returns {FileCreateTransaction}\n     */\n    static _fromProtobuf(\n        transactions,\n        signedTransactions,\n        transactionIds,\n        nodeIds,\n        bodies\n    ) {\n        const body = bodies[0];\n        const create = /** @type {proto.IFileCreateTransactionBody} */ (\n            body.fileCreate\n        );\n\n        return Transaction._fromProtobufTransactions(\n            new FileCreateTransaction({\n                keys:\n                    create.keys != null\n                        ? create.keys.keys != null\n                            ? create.keys.keys.map((key) =>\n                                  Key._fromProtobufKey(key)\n                              )\n                            : undefined\n                        : undefined,\n                expirationTime:\n                    create.expirationTime != null\n                        ? Timestamp._fromProtobuf(create.expirationTime)\n                        : undefined,\n                contents: create.contents != null ? create.contents : undefined,\n                fileMemo: create.memo != null ? create.memo : undefined,\n            }),\n            transactions,\n            signedTransactions,\n            transactionIds,\n            nodeIds,\n            bodies\n        );\n    }\n\n    /**\n     * @returns {?Key[]}\n     */\n    get keys() {\n        return this._keys;\n    }\n\n    /**\n     * Set the keys which must sign any transactions modifying this file. Required.\n     *\n     * All keys must sign to modify the file's contents or keys. No key is required\n     * to sign for extending the expiration time (except the one for the operator account\n     * paying for the transaction). Only one key must sign to delete the file, however.\n     *\n     * To require more than one key to sign to delete a file, add them to a\n     * KeyList and pass that here.\n     *\n     * The network currently requires a file to have at least one key (or key list or threshold key)\n     * but this requirement may be lifted in the future.\n     *\n     * @param {Key[] | KeyList} keys\n     * @returns {this}\n     */\n    setKeys(keys) {\n        this._requireNotFrozen();\n        if (keys instanceof KeyList && keys.threshold != null) {\n            throw new Error(\"Cannot set threshold key as file key\");\n        }\n\n        this._keys = keys instanceof KeyList ? keys.toArray() : keys;\n\n        return this;\n    }\n\n    /**\n     * @returns {Timestamp}\n     */\n    get expirationTime() {\n        return this._expirationTime;\n    }\n\n    /**\n     * Set the instant at which this file will expire, after which its contents will no longer be\n     * available.\n     *\n     * Defaults to 1/4 of a Julian year from the instant FileCreateTransaction\n     * was invoked.\n     *\n     * May be extended using FileUpdateTransaction#setExpirationTime(Timestamp).\n     *\n     * @param {Timestamp | Date} expirationTime\n     * @returns {this}\n     */\n    setExpirationTime(expirationTime) {\n        this._requireNotFrozen();\n        this._expirationTime =\n            expirationTime instanceof Timestamp\n                ? expirationTime\n                : Timestamp.fromDate(expirationTime);\n\n        return this;\n    }\n\n    /**\n     * @returns {?Uint8Array}\n     */\n    get contents() {\n        return this._contents;\n    }\n\n    /**\n     * Set the given byte array as the file's contents.\n     *\n     * This may be omitted to create an empty file.\n     *\n     * Note that total size for a given transaction is limited to 6KiB (as of March 2020) by the\n     * network; if you exceed this you may receive a HederaPreCheckStatusException\n     * with Status#TransactionOversize.\n     *\n     * In this case, you will need to break the data into chunks of less than ~6KiB and execute this\n     * transaction with the first chunk and then use FileAppendTransaction with\n     * FileAppendTransaction#setContents(Uint8Array) for the remaining chunks.\n     *\n     * @param {Uint8Array | string} contents\n     * @returns {this}\n     */\n    setContents(contents) {\n        this._requireNotFrozen();\n        this._contents =\n            contents instanceof Uint8Array ? contents : utf8.encode(contents);\n\n        return this;\n    }\n\n    /**\n     * @returns {?string}\n     */\n    get fileMemo() {\n        return this._fileMemo;\n    }\n\n    /**\n     * @param {string} memo\n     * @returns {this}\n     */\n    setFileMemo(memo) {\n        this._requireNotFrozen();\n        this._fileMemo = memo;\n\n        return this;\n    }\n\n    /**\n     * @override\n     * @internal\n     * @param {Channel} channel\n     * @param {proto.ITransaction} request\n     * @returns {Promise<proto.ITransactionResponse>}\n     */\n    _execute(channel, request) {\n        return channel.file.createFile(request);\n    }\n\n    /**\n     * @override\n     * @protected\n     * @returns {NonNullable<proto.TransactionBody[\"data\"]>}\n     */\n    _getTransactionDataCase() {\n        return \"fileCreate\";\n    }\n\n    /**\n     * @override\n     * @protected\n     * @returns {proto.IFileCreateTransactionBody}\n     */\n    _makeTransactionData() {\n        return {\n            keys:\n                this._keys != null\n                    ? {\n                          keys: this._keys.map((key) => key._toProtobufKey()),\n                      }\n                    : null,\n            expirationTime: this._expirationTime._toProtobuf(),\n            contents: this._contents,\n            memo: this._fileMemo,\n        };\n    }\n}\n\n// eslint-disable-next-line @typescript-eslint/unbound-method\nTRANSACTION_REGISTRY.set(\"fileCreate\", FileCreateTransaction._fromProtobuf);\n", "import Transaction, {\n    TRANSACTION_REGISTRY,\n} from \"../transaction/Transaction.js\";\nimport FileId from \"./FileId.js\";\n\n/**\n * @namespace proto\n * @typedef {import(\"@hashgraph/proto\").ITransaction} proto.ITransaction\n * @typedef {import(\"@hashgraph/proto\").ISignedTransaction} proto.ISignedTransaction\n * @typedef {import(\"@hashgraph/proto\").TransactionBody} proto.TransactionBody\n * @typedef {import(\"@hashgraph/proto\").ITransactionBody} proto.ITransactionBody\n * @typedef {import(\"@hashgraph/proto\").ITransactionResponse} proto.ITransactionResponse\n * @typedef {import(\"@hashgraph/proto\").IFileDeleteTransactionBody} proto.IFileDeleteTransactionBody\n */\n\n/**\n * @typedef {import(\"@hashgraph/cryptography\").Key} Key\n * @typedef {import(\"../channel/Channel.js\").default} Channel\n * @typedef {import(\"../client/Client.js\").default<*, *>} Client\n * @typedef {import(\"../account/AccountId.js\").default} AccountId\n * @typedef {import(\"../transaction/TransactionId.js\").default} TransactionId\n */\n\n/**\n * A transaction to delete a file on the Hedera network.\n *\n * When deleted, a file's contents are truncated to zero length and it can no longer be updated\n * or appended to, or its expiration time extended. FileContentsQuery and FileInfoQuery\n * will throw HederaPreCheckStatusException with a status of Status#FileDeleted.\n *\n * Only one of the file's keys needs to sign to delete the file, unless the key you have is part\n * of a KeyList.\n */\nexport default class FileDeleteTransaction extends Transaction {\n    /**\n     * @param {object} [props]\n     * @param {FileId | string} [props.fileId]\n     */\n    constructor(props = {}) {\n        super();\n\n        /**\n         * @private\n         * @type {?FileId}\n         */\n        this._fileId = null;\n\n        if (props.fileId != null) {\n            this.setFileId(props.fileId);\n        }\n    }\n\n    /**\n     * @internal\n     * @param {proto.ITransaction[]} transactions\n     * @param {proto.ISignedTransaction[]} signedTransactions\n     * @param {TransactionId[]} transactionIds\n     * @param {AccountId[]} nodeIds\n     * @param {proto.ITransactionBody[]} bodies\n     * @returns {FileDeleteTransaction}\n     */\n    static _fromProtobuf(\n        transactions,\n        signedTransactions,\n        transactionIds,\n        nodeIds,\n        bodies\n    ) {\n        const body = bodies[0];\n        const fileDelete = /** @type {proto.IFileDeleteTransactionBody} */ (\n            body.fileDelete\n        );\n\n        return Transaction._fromProtobufTransactions(\n            new FileDeleteTransaction({\n                fileId:\n                    fileDelete.fileID != null\n                        ? FileId._fromProtobuf(fileDelete.fileID)\n                        : undefined,\n            }),\n            transactions,\n            signedTransactions,\n            transactionIds,\n            nodeIds,\n            bodies\n        );\n    }\n\n    /**\n     * @returns {?FileId}\n     */\n    get fileId() {\n        return this._fileId;\n    }\n\n    /**\n     * Set the file ID which is being deleted in this transaction.\n     *\n     * @param {FileId | string} fileId\n     * @returns {FileDeleteTransaction}\n     */\n    setFileId(fileId) {\n        this._requireNotFrozen();\n        this._fileId =\n            typeof fileId === \"string\"\n                ? FileId.fromString(fileId)\n                : fileId.clone();\n\n        return this;\n    }\n\n    /**\n     * @param {Client} client\n     */\n    _validateChecksums(client) {\n        if (this._fileId != null) {\n            this._fileId.validateChecksum(client);\n        }\n    }\n\n    /**\n     * @override\n     * @internal\n     * @param {Channel} channel\n     * @param {proto.ITransaction} request\n     * @returns {Promise<proto.ITransactionResponse>}\n     */\n    _execute(channel, request) {\n        return channel.file.deleteFile(request);\n    }\n\n    /**\n     * @override\n     * @protected\n     * @returns {NonNullable<proto.TransactionBody[\"data\"]>}\n     */\n    _getTransactionDataCase() {\n        return \"fileDelete\";\n    }\n\n    /**\n     * @override\n     * @protected\n     * @returns {proto.IFileDeleteTransactionBody}\n     */\n    _makeTransactionData() {\n        return {\n            fileID: this._fileId != null ? this._fileId._toProtobuf() : null,\n        };\n    }\n}\n\n// eslint-disable-next-line @typescript-eslint/unbound-method\nTRANSACTION_REGISTRY.set(\"fileDelete\", FileDeleteTransaction._fromProtobuf);\n", "import FileId from \"./FileId.js\";\nimport Timestamp from \"../Timestamp.js\";\nimport Long from \"long\";\nimport * as proto from \"@hashgraph/proto\";\nimport KeyList from \"../KeyList.js\";\n\n/**\n * Response when the client sends the node CryptoGetInfoQuery.\n */\nexport default class FileInfo {\n    /**\n     * @private\n     * @param {object} props\n     * @param {FileId} props.fileId\n     * @param {Long} props.size\n     * @param {Timestamp} props.expirationTime\n     * @param {boolean} props.isDeleted\n     * @param {KeyList} props.keys\n     * @param {string} props.fileMemo\n     */\n    constructor(props) {\n        /**\n         * The ID of the file for which information is requested.\n         *\n         * @readonly\n         */\n        this.fileId = props.fileId;\n\n        /**\n         * Number of bytes in contents.\n         *\n         * @readonly\n         */\n        this.size = props.size;\n\n        /**\n         * The current time at which this account is set to expire.\n         *\n         * @readonly\n         */\n        this.expirationTime = props.expirationTime;\n\n        /**\n         * True if deleted but not yet expired.\n         *\n         * @readonly\n         */\n        this.isDeleted = props.isDeleted;\n\n        /**\n         * One of these keys must sign in order to delete the file.\n         * All of these keys must sign in order to update the file.\n         *\n         * @readonly\n         */\n        this.keys = props.keys;\n\n        this.fileMemo = props.fileMemo;\n\n        Object.freeze(this);\n    }\n\n    /**\n     * @internal\n     * @param {proto.IFileInfo} info\n     * @returns {FileInfo}\n     */\n    static _fromProtobuf(info) {\n        const size = /** @type {Long | number} */ (info.size);\n\n        return new FileInfo({\n            fileId: FileId._fromProtobuf(\n                /** @type {proto.IFileID} */ (info.fileID)\n            ),\n            size: size instanceof Long ? size : Long.fromValue(size),\n            expirationTime: Timestamp._fromProtobuf(\n                /** @type {proto.ITimestamp} */ (info.expirationTime)\n            ),\n            isDeleted: /** @type {boolean} */ (info.deleted),\n            keys:\n                info.keys != null\n                    ? KeyList.__fromProtobufKeyList(info.keys)\n                    : new KeyList(),\n            fileMemo: info.memo != null ? info.memo : \"\",\n        });\n    }\n\n    /**\n     * @internal\n     * @returns {proto.IFileInfo}\n     */\n    _toProtobuf() {\n        return {\n            fileID: this.fileId._toProtobuf(),\n            size: this.size,\n            expirationTime: this.expirationTime._toProtobuf(),\n            deleted: this.isDeleted,\n            keys: this.keys._toProtobufKey().keyList,\n            memo: this.fileMemo,\n        };\n    }\n\n    /**\n     * @param {Uint8Array} bytes\n     * @returns {FileInfo}\n     */\n    static fromBytes(bytes) {\n        return FileInfo._fromProtobuf(\n            proto.FileGetInfoResponse.FileInfo.decode(bytes)\n        );\n    }\n\n    /**\n     * @returns {Uint8Array}\n     */\n    toBytes() {\n        return proto.FileGetInfoResponse.FileInfo.encode(\n            this._toProtobuf()\n        ).finish();\n    }\n}\n", "import Query, { QUERY_REGISTRY } from \"../query/Query.js\";\nimport FileId from \"./FileId.js\";\nimport FileInfo from \"./FileInfo.js\";\nimport Hbar from \"../Hbar.js\";\n\n/**\n * @namespace proto\n * @typedef {import(\"@hashgraph/proto\").IQuery} proto.IQuery\n * @typedef {import(\"@hashgraph/proto\").IQueryHeader} proto.IQueryHeader\n * @typedef {import(\"@hashgraph/proto\").IResponse} proto.IResponse\n * @typedef {import(\"@hashgraph/proto\").IResponseHeader} proto.IResponseHeader\n * @typedef {import(\"@hashgraph/proto\").IFileGetInfoQuery} proto.IFileGetInfoQuery\n * @typedef {import(\"@hashgraph/proto\").IFileGetInfoResponse} proto.IFileGetInfoResponse\n * @typedef {import(\"@hashgraph/proto\").IFileInfo} proto.IFileInfo\n */\n\n/**\n * @typedef {import(\"../channel/Channel.js\").default} Channel\n * @typedef {import(\"../client/Client.js\").default<*, *>} Client\n * @typedef {import(\"../account/AccountId.js\").default} AccountId\n */\n\n/**\n * @augments {Query<FileInfo>}\n */\nexport default class FileInfoQuery extends Query {\n    /**\n     * @param {object} [props]\n     * @param {FileId | string} [props.fileId]\n     */\n    constructor(props = {}) {\n        super();\n\n        /**\n         * @type {?FileId}\n         * @private\n         */\n        this._fileId = null;\n        if (props.fileId != null) {\n            this.setFileId(props.fileId);\n        }\n    }\n\n    /**\n     * @internal\n     * @param {proto.IQuery} query\n     * @returns {FileInfoQuery}\n     */\n    static _fromProtobuf(query) {\n        const info = /** @type {proto.IFileGetInfoQuery} */ (query.fileGetInfo);\n\n        return new FileInfoQuery({\n            fileId:\n                info.fileID != null\n                    ? FileId._fromProtobuf(info.fileID)\n                    : undefined,\n        });\n    }\n\n    /**\n     * @returns {?FileId}\n     */\n    get fileId() {\n        return this._fileId;\n    }\n\n    /**\n     * Set the file ID for which the info is being requested.\n     *\n     * @param {FileId | string} fileId\n     * @returns {FileInfoQuery}\n     */\n    setFileId(fileId) {\n        this._fileId =\n            typeof fileId === \"string\"\n                ? FileId.fromString(fileId)\n                : fileId.clone();\n\n        return this;\n    }\n\n    /**\n     * @override\n     * @param {import(\"../client/Client.js\").default<Channel, *>} client\n     * @returns {Promise<Hbar>}\n     */\n    async getCost(client) {\n        let cost = await super.getCost(client);\n\n        if (cost.toTinybars().greaterThan(25)) {\n            return cost;\n        } else {\n            return Hbar.fromTinybars(25);\n        }\n    }\n\n    /**\n     * @param {Client} client\n     */\n    _validateChecksums(client) {\n        if (this._fileId != null) {\n            this._fileId.validateChecksum(client);\n        }\n    }\n\n    /**\n     * @override\n     * @internal\n     * @param {Channel} channel\n     * @param {proto.IQuery} request\n     * @returns {Promise<proto.IResponse>}\n     */\n    _execute(channel, request) {\n        return channel.file.getFileInfo(request);\n    }\n\n    /**\n     * @override\n     * @internal\n     * @param {proto.IResponse} response\n     * @returns {proto.IResponseHeader}\n     */\n    _mapResponseHeader(response) {\n        const fileGetInfo = /** @type {proto.IFileGetInfoResponse} */ (\n            response.fileGetInfo\n        );\n        return /** @type {proto.IResponseHeader} */ (fileGetInfo.header);\n    }\n\n    /**\n     * @protected\n     * @override\n     * @param {proto.IResponse} response\n     * @param {AccountId} nodeAccountId\n     * @param {proto.IQuery} request\n     * @returns {Promise<FileInfo>}\n     */\n    // eslint-disable-next-line @typescript-eslint/no-unused-vars\n    _mapResponse(response, nodeAccountId, request) {\n        const info = /** @type {proto.IFileGetInfoResponse} */ (\n            response.fileGetInfo\n        );\n\n        return Promise.resolve(\n            FileInfo._fromProtobuf(\n                /** @type {proto.IFileInfo} */ (info.fileInfo)\n            )\n        );\n    }\n\n    /**\n     * @override\n     * @internal\n     * @param {proto.IQueryHeader} header\n     * @returns {proto.IQuery}\n     */\n    _onMakeRequest(header) {\n        return {\n            fileGetInfo: {\n                header,\n                fileID:\n                    this._fileId != null ? this._fileId._toProtobuf() : null,\n            },\n        };\n    }\n}\n\n// eslint-disable-next-line @typescript-eslint/unbound-method\nQUERY_REGISTRY.set(\"fileGetInfo\", FileInfoQuery._fromProtobuf);\n", "import Transaction, {\n    TRANSACTION_REGISTRY,\n} from \"../transaction/Transaction.js\";\nimport Timestamp from \"../Timestamp.js\";\nimport * as utf8 from \"../encoding/utf8.js\";\nimport FileId from \"./FileId.js\";\nimport Key from \"../Key.js\";\nimport KeyList from \"../KeyList.js\";\n\n/**\n * @namespace proto\n * @typedef {import(\"@hashgraph/proto\").ITransaction} proto.ITransaction\n * @typedef {import(\"@hashgraph/proto\").ISignedTransaction} proto.ISignedTransaction\n * @typedef {import(\"@hashgraph/proto\").TransactionBody} proto.TransactionBody\n * @typedef {import(\"@hashgraph/proto\").ITransactionBody} proto.ITransactionBody\n * @typedef {import(\"@hashgraph/proto\").ITransactionResponse} proto.ITransactionResponse\n * @typedef {import(\"@hashgraph/proto\").IFileUpdateTransactionBody} proto.IFileUpdateTransactionBody\n */\n\n/**\n * @typedef {import(\"../channel/Channel.js\").default} Channel\n * @typedef {import(\"../client/Client.js\").default<*, *>} Client\n * @typedef {import(\"../account/AccountId.js\").default} AccountId\n * @typedef {import(\"../transaction/TransactionId.js\").default} TransactionId\n */\n\n/**\n * Update a new Hedera\u2122 crypto-currency file.\n */\nexport default class FileUpdateTransaction extends Transaction {\n    /**\n     * @param {object} props\n     * @param {FileId | string} [props.fileId]\n     * @param {Key[] | KeyList} [props.keys]\n     * @param {Timestamp | Date} [props.expirationTime]\n     * @param {Uint8Array | string} [props.contents]\n     * @param {string} [props.fileMemo]\n     */\n    constructor(props = {}) {\n        super();\n\n        /**\n         * @private\n         * @type {?FileId}\n         */\n        this._fileId = null;\n\n        /**\n         * @private\n         * @type {?Key[]}\n         */\n        this._keys = null;\n\n        /**\n         * @private\n         * @type {?Timestamp}\n         */\n        this._expirationTime = null;\n\n        /**\n         * @private\n         * @type {?Uint8Array}\n         */\n        this._contents = null;\n\n        /**\n         * @private\n         * @type {?string}\n         */\n        this._fileMemo = null;\n\n        if (props.fileId != null) {\n            this.setFileId(props.fileId);\n        }\n\n        if (props.keys != null) {\n            this.setKeys(props.keys);\n        }\n\n        if (props.expirationTime != null) {\n            this.setExpirationTime(props.expirationTime);\n        }\n\n        if (props.contents != null) {\n            this.setContents(props.contents);\n        }\n\n        if (props.fileMemo != null) {\n            this.setFileMemo(props.fileMemo);\n        }\n    }\n\n    /**\n     * @internal\n     * @param {proto.ITransaction[]} transactions\n     * @param {proto.ISignedTransaction[]} signedTransactions\n     * @param {TransactionId[]} transactionIds\n     * @param {AccountId[]} nodeIds\n     * @param {proto.ITransactionBody[]} bodies\n     * @returns {FileUpdateTransaction}\n     */\n    static _fromProtobuf(\n        transactions,\n        signedTransactions,\n        transactionIds,\n        nodeIds,\n        bodies\n    ) {\n        const body = bodies[0];\n        const update = /** @type {proto.IFileUpdateTransactionBody} */ (\n            body.fileUpdate\n        );\n\n        return Transaction._fromProtobufTransactions(\n            new FileUpdateTransaction({\n                fileId:\n                    update.fileID != null\n                        ? FileId._fromProtobuf(update.fileID)\n                        : undefined,\n                keys:\n                    update.keys != null\n                        ? update.keys.keys != null\n                            ? update.keys.keys.map((key) =>\n                                  Key._fromProtobufKey(key)\n                              )\n                            : undefined\n                        : undefined,\n                expirationTime:\n                    update.expirationTime != null\n                        ? Timestamp._fromProtobuf(update.expirationTime)\n                        : undefined,\n                contents: update.contents != null ? update.contents : undefined,\n                fileMemo:\n                    update.memo != null\n                        ? update.memo.value != null\n                            ? update.memo.value\n                            : undefined\n                        : undefined,\n            }),\n            transactions,\n            signedTransactions,\n            transactionIds,\n            nodeIds,\n            bodies\n        );\n    }\n\n    /**\n     * @returns {?FileId}\n     */\n    get fileId() {\n        return this._fileId;\n    }\n\n    /**\n     * Set the keys which must sign any transactions modifying this file. Required.\n     *\n     * All keys must sign to modify the file's contents or keys. No key is required\n     * to sign for extending the expiration time (except the one for the operator account\n     * paying for the transaction). Only one key must sign to delete the file, however.\n     *\n     * To require more than one key to sign to delete a file, add them to a\n     * KeyList and pass that here.\n     *\n     * The network currently requires a file to have at least one key (or key list or threshold key)\n     * but this requirement may be lifted in the future.\n     *\n     * @param {FileId | string} fileId\n     * @returns {this}\n     */\n    setFileId(fileId) {\n        this._requireNotFrozen();\n        this._fileId =\n            typeof fileId === \"string\"\n                ? FileId.fromString(fileId)\n                : fileId.clone();\n\n        return this;\n    }\n\n    /**\n     * @returns {?Key[]}\n     */\n    get keys() {\n        return this._keys;\n    }\n\n    /**\n     * Set the keys which must sign any transactions modifying this file. Required.\n     *\n     * All keys must sign to modify the file's contents or keys. No key is required\n     * to sign for extending the expiration time (except the one for the operator account\n     * paying for the transaction). Only one key must sign to delete the file, however.\n     *\n     * To require more than one key to sign to delete a file, add them to a\n     * KeyList and pass that here.\n     *\n     * The network currently requires a file to have at least one key (or key list or threshold key)\n     * but this requirement may be lifted in the future.\n     *\n     * @param {Key[] | KeyList} keys\n     * @returns {this}\n     */\n    setKeys(keys) {\n        this._requireNotFrozen();\n        if (keys instanceof KeyList && keys.threshold != null) {\n            throw new Error(\"Cannot set threshold key as file key\");\n        }\n\n        this._keys = keys instanceof KeyList ? keys.toArray() : keys;\n\n        return this;\n    }\n\n    /**\n     * @returns {?Timestamp}\n     */\n    get expirationTime() {\n        return this._expirationTime;\n    }\n\n    /**\n     * Set the instant at which this file will expire, after which its contents will no longer be\n     * available.\n     *\n     * Defaults to 1/4 of a Julian year from the instant FileUpdateTransaction\n     * was invoked.\n     *\n     * May be extended using FileUpdateTransaction#setExpirationTime(Timestamp).\n     *\n     * @param {Timestamp | Date} expirationTime\n     * @returns {this}\n     */\n    setExpirationTime(expirationTime) {\n        this._requireNotFrozen();\n        this._expirationTime =\n            expirationTime instanceof Timestamp\n                ? expirationTime\n                : Timestamp.fromDate(expirationTime);\n\n        return this;\n    }\n\n    /**\n     * @returns {?Uint8Array}\n     */\n    get contents() {\n        return this._contents;\n    }\n\n    /**\n     * Set the given byte array as the file's contents.\n     *\n     * This may be omitted to update an empty file.\n     *\n     * Note that total size for a given transaction is limited to 6KiB (as of March 2020) by the\n     * network; if you exceed this you may receive a HederaPreCheckStatusException\n     * with Status#TransactionOversize.\n     *\n     * In this case, you will need to break the data into chunks of less than ~6KiB and execute this\n     * transaction with the first chunk and then use FileAppendTransaction with\n     * FileAppendTransaction#setContents(Uint8Array) for the remaining chunks.\n     *\n     * @param {Uint8Array | string} contents\n     * @returns {this}\n     */\n    setContents(contents) {\n        this._requireNotFrozen();\n        this._contents =\n            contents instanceof Uint8Array ? contents : utf8.encode(contents);\n\n        return this;\n    }\n\n    /**\n     * @returns {?string}\n     */\n    get fileMemo() {\n        return this._fileMemo;\n    }\n\n    /**\n     * @param {string} memo\n     * @returns {this}\n     */\n    setFileMemo(memo) {\n        this._requireNotFrozen();\n        this._fileMemo = memo;\n\n        return this;\n    }\n\n    /**\n     * @returns {this}\n     */\n    clearFileMemo() {\n        this._requireNotFrozen();\n        this._fileMemo = null;\n\n        return this;\n    }\n\n    /**\n     * @param {Client} client\n     */\n    _validateChecksums(client) {\n        if (this._fileId != null) {\n            this._fileId.validateChecksum(client);\n        }\n    }\n\n    /**\n     * @override\n     * @internal\n     * @param {Channel} channel\n     * @param {proto.ITransaction} request\n     * @returns {Promise<proto.ITransactionResponse>}\n     */\n    _execute(channel, request) {\n        return channel.file.updateFile(request);\n    }\n\n    /**\n     * @override\n     * @protected\n     * @returns {NonNullable<proto.TransactionBody[\"data\"]>}\n     */\n    _getTransactionDataCase() {\n        return \"fileUpdate\";\n    }\n\n    /**\n     * @override\n     * @protected\n     * @returns {proto.IFileUpdateTransactionBody}\n     */\n    _makeTransactionData() {\n        return {\n            fileID: this._fileId != null ? this._fileId._toProtobuf() : null,\n            keys:\n                this._keys != null\n                    ? {\n                          keys: this._keys.map((key) => key._toProtobufKey()),\n                      }\n                    : null,\n            expirationTime:\n                this._expirationTime != null\n                    ? this._expirationTime._toProtobuf()\n                    : null,\n            contents: this._contents,\n            memo:\n                this._fileMemo != null\n                    ? {\n                          value: this._fileMemo,\n                      }\n                    : null,\n        };\n    }\n}\n\n// eslint-disable-next-line @typescript-eslint/unbound-method\nTRANSACTION_REGISTRY.set(\"fileUpdate\", FileUpdateTransaction._fromProtobuf);\n", "/**\n * @namespace proto\n * @typedef {import(\"@hashgraph/proto\").FreezeType} proto.FreezeType\n */\n\nexport default class FreezeType {\n    /**\n     * @hideconstructor\n     * @internal\n     * @param {number} code\n     */\n    constructor(code) {\n        /** @readonly */\n        this._code = code;\n\n        Object.freeze(this);\n    }\n\n    /**\n     * @returns {string}\n     */\n    toString() {\n        switch (this) {\n            case FreezeType.UnknownFreezeType:\n                return \"UNKNOWN_FREEZE_TYPE\";\n            case FreezeType.FreezeOnly:\n                return \"FREEZE_ONLY\";\n            case FreezeType.PrepareUpgrade:\n                return \"PREPARE_UPGRADE\";\n            case FreezeType.FreezeUpgrade:\n                return \"FREEZE_UPGRADE\";\n            case FreezeType.FreezeAbort:\n                return \"FREEZE_ABORT\";\n            case FreezeType.TelemetryUpgrade:\n                return \"TELEMETRY_UPGRADE\";\n            default:\n                return `UNKNOWN (${this._code})`;\n        }\n    }\n\n    /**\n     * @internal\n     * @param {number} code\n     * @returns {FreezeType}\n     */\n    static _fromCode(code) {\n        switch (code) {\n            case 0:\n                return FreezeType.UnknownFreezeType;\n            case 1:\n                return FreezeType.FreezeOnly;\n            case 2:\n                return FreezeType.PrepareUpgrade;\n            case 3:\n                return FreezeType.FreezeUpgrade;\n            case 4:\n                return FreezeType.FreezeAbort;\n            case 5:\n                return FreezeType.TelemetryUpgrade;\n            default:\n                throw new Error(\n                    `(BUG) Status.fromCode() does not handle code: ${code}`\n                );\n        }\n    }\n\n    /**\n     * @returns {proto.FreezeType}\n     */\n    valueOf() {\n        return this._code;\n    }\n}\n\n/**\n * An (invalid) default value for this enum, to ensure the client explicitly sets\n * the intended type of freeze transaction.\n */\nFreezeType.UnknownFreezeType = new FreezeType(0);\n\n/**\n * Freezes the network at the specified time. The start_time field must be provided and\n * must reference a future time. Any values specified for the update_file and file_hash\n * fields will be ignored. This transaction does not perform any network changes or\n * upgrades and requires manual intervention to restart the network.\n */\nFreezeType.FreezeOnly = new FreezeType(1);\n\n/**\n * A non-freezing operation that initiates network wide preparation in advance of a\n * scheduled freeze upgrade. The update_file and file_hash fields must be provided and\n * valid. The start_time field may be omitted and any value present will be ignored.\n */\nFreezeType.PrepareUpgrade = new FreezeType(2);\n\n/**\n * Freezes the network at the specified time and performs the previously prepared\n * automatic upgrade across the entire network.\n */\nFreezeType.FreezeUpgrade = new FreezeType(3);\n\n/**\n * Aborts a pending network freeze operation.\n */\nFreezeType.FreezeAbort = new FreezeType(4);\n\n/**\n * Performs an immediate upgrade on auxilary services and containers providing\n * telemetry/metrics. Does not impact network operations.\n */\nFreezeType.TelemetryUpgrade = new FreezeType(5);\n", "import Transaction, {\n    TRANSACTION_REGISTRY,\n} from \"../transaction/Transaction.js\";\nimport Timestamp from \"../Timestamp.js\";\nimport FileId from \"../file/FileId.js\";\nimport * as hex from \"../encoding/hex.js\";\nimport FreezeType from \"../FreezeType.js\";\n\n/**\n * @namespace proto\n * @typedef {import(\"@hashgraph/proto\").ITransaction} proto.ITransaction\n * @typedef {import(\"@hashgraph/proto\").ISignedTransaction} proto.ISignedTransaction\n * @typedef {import(\"@hashgraph/proto\").TransactionBody} proto.TransactionBody\n * @typedef {import(\"@hashgraph/proto\").ITransactionBody} proto.ITransactionBody\n * @typedef {import(\"@hashgraph/proto\").ITransactionResponse} proto.ITransactionResponse\n * @typedef {import(\"@hashgraph/proto\").IFreezeTransactionBody} proto.IFreezeTransactionBody\n */\n\n/**\n * @typedef {import(\"../channel/Channel.js\").default} Channel\n * @typedef {import(\"../account/AccountId.js\").default} AccountId\n * @typedef {import(\"../transaction/TransactionId.js\").default} TransactionId\n */\n\n/**\n * @typedef {object} HourMinute\n * @property {number} hour\n * @property {number} minute\n */\n\nexport default class FreezeTransaction extends Transaction {\n    /**\n     * @param {Object} [props]\n     * @param {HourMinute} [props.startTime]\n     * @param {HourMinute} [props.endTime]\n     * @param {Timestamp} [props.startTimestamp]\n     * @param {FileId} [props.updateFileId]\n     * @param {FileId} [props.fileId]\n     * @param {Uint8Array | string} [props.fileHash]\n     * @param { FreezeType } [props.freezeType]\n     */\n    constructor(props = {}) {\n        super();\n\n        /**\n         * @private\n         * @type {?HourMinute}\n         */\n        this._startTime = null;\n\n        /**\n         * @private\n         * @type {?Timestamp}\n         */\n        this._startTimestamp = null;\n\n        /**\n         * @private\n         * @type {?HourMinute}\n         */\n        this._endTime = null;\n\n        /**\n         * @private\n         * @type {?FileId}\n         */\n        this._fileId = null;\n\n        /**\n         * @private\n         * @type {?Uint8Array}\n         */\n        this._fileHash = null;\n\n        /**\n         * @private\n         * @type {?FreezeType}\n         */\n        this._freezeType = null;\n\n        if (props.startTime != null) {\n            // eslint-disable-next-line deprecation/deprecation\n            this.setStartTime(props.startTime.hour, props.startTime.minute);\n        }\n\n        if (props.endTime != null) {\n            // eslint-disable-next-line deprecation/deprecation\n            this.setEndTime(props.endTime.hour, props.endTime.minute);\n        }\n\n        if (props.startTimestamp != null) {\n            this.setStartTimestamp(props.startTimestamp);\n        }\n\n        if (props.updateFileId != null) {\n            // eslint-disable-next-line deprecation/deprecation\n            this.setUpdateFileId(props.updateFileId);\n        }\n\n        if (props.fileId != null) {\n            this.setFileId(props.fileId);\n        }\n\n        if (props.fileHash != null) {\n            this.setFileHash(props.fileHash);\n        }\n\n        if (props.freezeType != null) {\n            this.setFreezeType(props.freezeType);\n        }\n    }\n\n    /**\n     * @internal\n     * @param {proto.ITransaction[]} transactions\n     * @param {proto.ISignedTransaction[]} signedTransactions\n     * @param {TransactionId[]} transactionIds\n     * @param {AccountId[]} nodeIds\n     * @param {proto.ITransactionBody[]} bodies\n     * @returns {FreezeTransaction}\n     */\n    static _fromProtobuf(\n        transactions,\n        signedTransactions,\n        transactionIds,\n        nodeIds,\n        bodies\n    ) {\n        const body = bodies[0];\n        const freeze = /** @type {proto.IFreezeTransactionBody} */ (\n            body.freeze\n        );\n\n        return Transaction._fromProtobufTransactions(\n            new FreezeTransaction({\n                startTime:\n                    freeze.startHour != null && freeze.startMin != null\n                        ? {\n                              hour: freeze.startHour,\n                              minute: freeze.startMin,\n                          }\n                        : undefined,\n                endTime:\n                    freeze.endHour != null && freeze.endMin != null\n                        ? {\n                              hour: freeze.endHour,\n                              minute: freeze.endMin,\n                          }\n                        : undefined,\n                startTimestamp:\n                    freeze.startTime != null\n                        ? Timestamp._fromProtobuf(freeze.startTime)\n                        : undefined,\n                updateFileId:\n                    freeze.updateFile != null\n                        ? FileId._fromProtobuf(freeze.updateFile)\n                        : undefined,\n                fileHash: freeze.fileHash != null ? freeze.fileHash : undefined,\n                freezeType:\n                    freeze.freezeType != null\n                        ? FreezeType._fromCode(freeze.freezeType)\n                        : undefined,\n            }),\n            transactions,\n            signedTransactions,\n            transactionIds,\n            nodeIds,\n            bodies\n        );\n    }\n\n    /**\n     * @deprecated - Use `startTimestamp` instead\n     * @returns {?HourMinute}\n     */\n    get startTime() {\n        return null;\n    }\n\n    /**\n     * @deprecated - Use `startTimestamp` instead\n     * @param {number | string} startHourOrString\n     * @param {?number} startMinute\n     * @returns {FreezeTransaction}\n     */\n    setStartTime(startHourOrString, startMinute) {\n        this._requireNotFrozen();\n        if (typeof startHourOrString === \"string\") {\n            const split = startHourOrString.split(\":\");\n            this._startTime = {\n                hour: Number(split[0]),\n                minute: Number(split[1]),\n            };\n        } else {\n            this._startTime = {\n                hour: startHourOrString,\n                minute: /** @type {number} */ (startMinute),\n            };\n        }\n\n        return this;\n    }\n\n    /**\n     * @returns {?Timestamp}\n     */\n    get startTimestamp() {\n        return this._startTimestamp;\n    }\n\n    /**\n     * @param {Timestamp} startTimestamp\n     * @returns {FreezeTransaction}\n     */\n    setStartTimestamp(startTimestamp) {\n        this._requireNotFrozen();\n        this._startTimestamp = startTimestamp;\n\n        return this;\n    }\n\n    /**\n     * @deprecated\n     * @returns {?HourMinute}\n     */\n    get endTime() {\n        console.warn(\"`FreezeTransaction.endTime` is deprecated\");\n        return this._endTime;\n    }\n\n    /**\n     * @deprecated\n     * @param {number | string} endHourOrString\n     * @param {?number} endMinute\n     * @returns {FreezeTransaction}\n     */\n    setEndTime(endHourOrString, endMinute) {\n        console.warn(\"`FreezeTransaction.endTime` is deprecated\");\n        this._requireNotFrozen();\n        if (typeof endHourOrString === \"string\") {\n            const split = endHourOrString.split(\":\");\n            this._endTime = {\n                hour: Number(split[0]),\n                minute: Number(split[1]),\n            };\n        } else {\n            this._endTime = {\n                hour: endHourOrString,\n                minute: /** @type {number} */ (endMinute),\n            };\n        }\n\n        return this;\n    }\n\n    /**\n     * @deprecated - Use `fileId` instead\n     * @returns {?FileId}\n     */\n    get updateFileId() {\n        return this.fileId;\n    }\n\n    /**\n     * @deprecated - Use `setFileId()` instead\n     * @param {FileId} updateFileId\n     * @returns {FreezeTransaction}\n     */\n    setUpdateFileId(updateFileId) {\n        return this.setFileId(updateFileId);\n    }\n\n    /**\n     * @returns {?FileId}\n     */\n    get fileId() {\n        return this._fileId;\n    }\n\n    /**\n     * @param {FileId} fileId\n     * @returns {FreezeTransaction}\n     */\n    setFileId(fileId) {\n        this._requireNotFrozen();\n        this._fileId = fileId;\n\n        return this;\n    }\n\n    /**\n     * @returns {?Uint8Array}\n     */\n    get fileHash() {\n        return this._fileHash;\n    }\n\n    /**\n     * @param {Uint8Array | string} fileHash\n     * @returns {FreezeTransaction}\n     */\n    setFileHash(fileHash) {\n        this._requireNotFrozen();\n        this._fileHash =\n            typeof fileHash === \"string\" ? hex.decode(fileHash) : fileHash;\n\n        return this;\n    }\n\n    /**\n     * @returns {?FreezeType}\n     */\n    get freezeType() {\n        return this._freezeType;\n    }\n\n    /**\n     * @param {FreezeType} freezeType\n     * @returns {FreezeTransaction}\n     */\n    setFreezeType(freezeType) {\n        this._requireNotFrozen();\n        this._freezeType = freezeType;\n        return this;\n    }\n\n    /**\n     * @override\n     * @protected\n     * @returns {NonNullable<proto.TransactionBody[\"data\"]>}\n     */\n    _getTransactionDataCase() {\n        return \"freeze\";\n    }\n\n    /**\n     * @override\n     * @protected\n     * @returns {proto.IFreezeTransactionBody}\n     */\n    _makeTransactionData() {\n        return {\n            startTime:\n                this._startTimestamp != null\n                    ? this._startTimestamp._toProtobuf()\n                    : null,\n            updateFile:\n                this._fileId != null ? this._fileId._toProtobuf() : null,\n            fileHash: this._fileHash,\n            freezeType:\n                this._freezeType != null ? this._freezeType.valueOf() : null,\n        };\n    }\n}\n\n// eslint-disable-next-line @typescript-eslint/unbound-method\nTRANSACTION_REGISTRY.set(\"freeze\", FreezeTransaction._fromProtobuf);\n", "import Transaction, {\n    TRANSACTION_REGISTRY,\n} from \"../transaction/Transaction.js\";\nimport AccountId from \"./AccountId.js\";\nimport Duration from \"../Duration.js\";\nimport Key from \"../Key.js\";\nimport KeyList from \"../KeyList.js\";\n\n/**\n * @namespace proto\n * @typedef {import(\"@hashgraph/proto\").ITransaction} proto.ITransaction\n * @typedef {import(\"@hashgraph/proto\").ISignedTransaction} proto.ISignedTransaction\n * @typedef {import(\"@hashgraph/proto\").TransactionBody} proto.TransactionBody\n * @typedef {import(\"@hashgraph/proto\").ITransactionBody} proto.ITransactionBody\n * @typedef {import(\"@hashgraph/proto\").ITransactionResponse} proto.ITransactionResponse\n * @typedef {import(\"@hashgraph/proto\").ICryptoAddLiveHashTransactionBody} proto.ICryptoAddLiveHashTransactionBody\n * @typedef {import(\"@hashgraph/proto\").ILiveHash} proto.ILiveHash\n */\n\n/**\n * @typedef {import(\"../channel/Channel.js\").default} Channel\n * @typedef {import(\"../client/Client.js\").default<*, *>} Client\n * @typedef {import(\"../transaction/TransactionId.js\").default} TransactionId\n */\n\nexport default class LiveHashAddTransaction extends Transaction {\n    /**\n     * @param {object} [props]\n     * @param {Uint8Array} [props.hash]\n     * @param {Key[]} [props.keys]\n     * @param {Duration | Long | number} [props.duration]\n     * @param {AccountId | string} [props.accountId]\n     */\n    constructor(props = {}) {\n        super();\n\n        /**\n         * @private\n         * @type {?Uint8Array}\n         */\n        this._hash = null;\n\n        /**\n         * @private\n         * @type {?Key[]}\n         */\n        this._keys = null;\n\n        /**\n         * @private\n         * @type {?Duration}\n         */\n        this._duration = null;\n\n        /**\n         * @private\n         * @type {?AccountId}\n         */\n        this._accountId = null;\n\n        if (props.hash != null) {\n            this.setHash(props.hash);\n        }\n\n        if (props.keys != null) {\n            this.setKeys(props.keys);\n        }\n\n        if (props.duration != null) {\n            this.setDuration(props.duration);\n        }\n\n        if (props.accountId != null) {\n            this.setAccountId(props.accountId);\n        }\n    }\n\n    /**\n     * @internal\n     * @param {proto.ITransaction[]} transactions\n     * @param {proto.ISignedTransaction[]} signedTransactions\n     * @param {TransactionId[]} transactionIds\n     * @param {AccountId[]} nodeIds\n     * @param {proto.ITransactionBody[]} bodies\n     * @returns {LiveHashAddTransaction}\n     */\n    static _fromProtobuf(\n        transactions,\n        signedTransactions,\n        transactionIds,\n        nodeIds,\n        bodies\n    ) {\n        const body = bodies[0];\n        const hashes = /** @type {proto.ICryptoAddLiveHashTransactionBody} */ (\n            body.cryptoAddLiveHash\n        );\n        const liveHash_ = /** @type {proto.ILiveHash} */ (hashes.liveHash);\n\n        return Transaction._fromProtobufTransactions(\n            new LiveHashAddTransaction({\n                hash: liveHash_.hash != null ? liveHash_.hash : undefined,\n                keys:\n                    liveHash_.keys != null\n                        ? liveHash_.keys.keys != null\n                            ? liveHash_.keys.keys.map((key) =>\n                                  Key._fromProtobufKey(key)\n                              )\n                            : undefined\n                        : undefined,\n                duration:\n                    liveHash_.duration != null\n                        ? liveHash_.duration.seconds != null\n                            ? liveHash_.duration.seconds\n                            : undefined\n                        : undefined,\n                accountId:\n                    liveHash_.accountId != null\n                        ? AccountId._fromProtobuf(liveHash_.accountId)\n                        : undefined,\n            }),\n            transactions,\n            signedTransactions,\n            transactionIds,\n            nodeIds,\n            bodies\n        );\n    }\n\n    /**\n     * @returns {?Uint8Array}\n     */\n    get hash() {\n        return this._hash;\n    }\n\n    /**\n     * @param {Uint8Array} hash\n     * @returns {LiveHashAddTransaction}\n     */\n    setHash(hash) {\n        this._requireNotFrozen();\n        this._hash = hash;\n\n        return this;\n    }\n\n    /**\n     * @returns {?Key[]}\n     */\n    get keys() {\n        return this._keys;\n    }\n\n    /**\n     * @param {Key[] | KeyList} keys\n     * @returns {LiveHashAddTransaction}\n     */\n    setKeys(keys) {\n        this._requireNotFrozen();\n        this._keys = keys instanceof KeyList ? keys.toArray() : keys;\n\n        return this;\n    }\n\n    /**\n     * @returns {?Duration}\n     */\n    get duration() {\n        return this._duration;\n    }\n\n    /**\n     * @param {Duration | Long | number} duration\n     * @returns {LiveHashAddTransaction}\n     */\n    setDuration(duration) {\n        this._requireNotFrozen();\n        this._duration =\n            duration instanceof Duration ? duration : new Duration(duration);\n\n        return this;\n    }\n\n    /**\n     * @returns {?AccountId}\n     */\n    get accountId() {\n        return this._accountId;\n    }\n\n    /**\n     * @param {AccountId | string} accountId\n     * @returns {LiveHashAddTransaction}\n     */\n    setAccountId(accountId) {\n        this._requireNotFrozen();\n        this._accountId =\n            typeof accountId === \"string\"\n                ? AccountId.fromString(accountId)\n                : accountId.clone();\n\n        return this;\n    }\n\n    /**\n     * @param {Client} client\n     */\n    _validateChecksums(client) {\n        if (this._accountId != null) {\n            this._accountId.validateChecksum(client);\n        }\n    }\n\n    /**\n     * @override\n     * @internal\n     * @param {Channel} channel\n     * @param {proto.ITransaction} request\n     * @returns {Promise<proto.ITransactionResponse>}\n     */\n    _execute(channel, request) {\n        return channel.crypto.addLiveHash(request);\n    }\n\n    /**\n     * @override\n     * @protected\n     * @returns {NonNullable<proto.TransactionBody[\"data\"]>}\n     */\n    _getTransactionDataCase() {\n        return \"cryptoAddLiveHash\";\n    }\n\n    /**\n     * @override\n     * @protected\n     * @returns {proto.ICryptoAddLiveHashTransactionBody}\n     */\n    _makeTransactionData() {\n        return {\n            liveHash: {\n                hash: this._hash,\n                keys:\n                    this._keys != null\n                        ? {\n                              keys: this._keys.map((key) =>\n                                  key._toProtobufKey()\n                              ),\n                          }\n                        : undefined,\n                duration:\n                    this._duration != null\n                        ? this._duration._toProtobuf()\n                        : null,\n                accountId:\n                    this._accountId != null\n                        ? this._accountId._toProtobuf()\n                        : null,\n            },\n        };\n    }\n}\n\nTRANSACTION_REGISTRY.set(\n    \"cryptoAddLiveHash\",\n    // eslint-disable-next-line @typescript-eslint/unbound-method\n    LiveHashAddTransaction._fromProtobuf\n);\n", "import Transaction, {\n    TRANSACTION_REGISTRY,\n} from \"../transaction/Transaction.js\";\nimport AccountId from \"./AccountId.js\";\n\n/**\n * @namespace proto\n * @typedef {import(\"@hashgraph/proto\").ITransaction} proto.ITransaction\n * @typedef {import(\"@hashgraph/proto\").ISignedTransaction} proto.ISignedTransaction\n * @typedef {import(\"@hashgraph/proto\").TransactionBody} proto.TransactionBody\n * @typedef {import(\"@hashgraph/proto\").ITransactionBody} proto.ITransactionBody\n * @typedef {import(\"@hashgraph/proto\").ITransactionResponse} proto.ITransactionResponse\n * @typedef {import(\"@hashgraph/proto\").ICryptoDeleteLiveHashTransactionBody} proto.ICryptoDeleteLiveHashTransactionBody\n */\n\n/**\n * @typedef {import(\"@hashgraph/cryptography\").Key} Key\n * @typedef {import(\"../channel/Channel.js\").default} Channel\n * @typedef {import(\"../client/Client.js\").default<*, *>} Client\n * @typedef {import(\"../transaction/TransactionId.js\").default} TransactionId\n */\n\nexport default class LiveHashDeleteTransaction extends Transaction {\n    /**\n     * @param {object} [props]\n     * @param {Uint8Array} [props.hash]\n     * @param {AccountId | string} [props.accountId]\n     */\n    constructor(props = {}) {\n        super();\n\n        /**\n         * @private\n         * @type {?Uint8Array}\n         */\n        this._hash = null;\n\n        /**\n         * @private\n         * @type {?AccountId}\n         */\n        this._accountId = null;\n\n        if (props.hash != null) {\n            this.setHash(props.hash);\n        }\n\n        if (props.accountId != null) {\n            this.setAccountId(props.accountId);\n        }\n    }\n\n    /**\n     * @internal\n     * @param {proto.ITransaction[]} transactions\n     * @param {proto.ISignedTransaction[]} signedTransactions\n     * @param {TransactionId[]} transactionIds\n     * @param {AccountId[]} nodeIds\n     * @param {proto.ITransactionBody[]} bodies\n     * @returns {LiveHashDeleteTransaction}\n     */\n    static _fromProtobuf(\n        transactions,\n        signedTransactions,\n        transactionIds,\n        nodeIds,\n        bodies\n    ) {\n        const body = bodies[0];\n        const hashes =\n            /** @type {proto.ICryptoDeleteLiveHashTransactionBody} */ (\n                body.cryptoDeleteLiveHash\n            );\n\n        return Transaction._fromProtobufTransactions(\n            new LiveHashDeleteTransaction({\n                hash:\n                    hashes.liveHashToDelete != null\n                        ? hashes.liveHashToDelete\n                        : undefined,\n                accountId:\n                    hashes.accountOfLiveHash != null\n                        ? AccountId._fromProtobuf(hashes.accountOfLiveHash)\n                        : undefined,\n            }),\n            transactions,\n            signedTransactions,\n            transactionIds,\n            nodeIds,\n            bodies\n        );\n    }\n\n    /**\n     * @returns {?Uint8Array}\n     */\n    get hash() {\n        return this._hash;\n    }\n\n    /**\n     * @param {Uint8Array} hash\n     * @returns {LiveHashDeleteTransaction}\n     */\n    setHash(hash) {\n        this._requireNotFrozen();\n        this._hash = hash;\n\n        return this;\n    }\n\n    /**\n     * @returns {?AccountId}\n     */\n    get accountId() {\n        return this._accountId;\n    }\n\n    /**\n     * @param {AccountId | string} accountId\n     * @returns {LiveHashDeleteTransaction}\n     */\n    setAccountId(accountId) {\n        this._requireNotFrozen();\n        this._accountId =\n            typeof accountId === \"string\"\n                ? AccountId.fromString(accountId)\n                : accountId.clone();\n\n        return this;\n    }\n\n    /**\n     * @param {Client} client\n     */\n    _validateChecksums(client) {\n        if (this._accountId != null) {\n            this._accountId.validateChecksum(client);\n        }\n    }\n\n    /**\n     * @override\n     * @internal\n     * @param {Channel} channel\n     * @param {proto.ITransaction} request\n     * @returns {Promise<proto.ITransactionResponse>}\n     */\n    _execute(channel, request) {\n        return channel.crypto.deleteLiveHash(request);\n    }\n\n    /**\n     * @override\n     * @protected\n     * @returns {NonNullable<proto.TransactionBody[\"data\"]>}\n     */\n    _getTransactionDataCase() {\n        return \"cryptoDeleteLiveHash\";\n    }\n\n    /**\n     * @override\n     * @protected\n     * @returns {proto.ICryptoDeleteLiveHashTransactionBody}\n     */\n    _makeTransactionData() {\n        return {\n            liveHashToDelete: this._hash,\n            accountOfLiveHash:\n                this._accountId != null ? this._accountId._toProtobuf() : null,\n        };\n    }\n}\n\nTRANSACTION_REGISTRY.set(\n    \"cryptoDeleteLiveHash\",\n    // eslint-disable-next-line @typescript-eslint/unbound-method\n    LiveHashDeleteTransaction._fromProtobuf\n);\n", "import Query, { QUERY_REGISTRY } from \"../query/Query.js\";\nimport AccountId from \"./AccountId.js\";\nimport LiveHash from \"./LiveHash.js\";\n\n/**\n * @namespace proto\n * @typedef {import(\"@hashgraph/proto\").IQuery} proto.IQuery\n * @typedef {import(\"@hashgraph/proto\").IQueryHeader} proto.IQueryHeader\n * @typedef {import(\"@hashgraph/proto\").IResponse} proto.IResponse\n * @typedef {import(\"@hashgraph/proto\").IResponseHeader} proto.IResponseHeader\n * @typedef {import(\"@hashgraph/proto\").ICryptoGetLiveHashQuery} proto.ICryptoGetLiveHashQuery\n * @typedef {import(\"@hashgraph/proto\").ICryptoGetLiveHashResponse} proto.ICryptoGetLiveHashResponse\n * @typedef {import(\"@hashgraph/proto\").ILiveHash} proto.ILiveHash\n */\n\n/**\n * @typedef {import(\"../channel/Channel.js\").default} Channel\n * @typedef {import(\"../client/Client.js\").default<*, *>} Client\n */\n\n/**\n * @augments {Query<LiveHash>}\n */\nexport default class LiveHashQuery extends Query {\n    /**\n     * @param {object} [props]\n     * @param {AccountId | string} [props.accountId]\n     * @param {Uint8Array} [props.hash]\n     */\n    constructor(props = {}) {\n        super();\n\n        /**\n         * @type {?AccountId}\n         * @private\n         */\n        this._accountId = null;\n\n        if (props.accountId != null) {\n            this.setAccountId(props.accountId);\n        }\n\n        /**\n         * @type {?Uint8Array}\n         * @private\n         */\n        this._hash = null;\n\n        if (props.hash != null) {\n            this.setHash(props.hash);\n        }\n    }\n\n    /**\n     * @internal\n     * @param {proto.IQuery} query\n     * @returns {LiveHashQuery}\n     */\n    static _fromProtobuf(query) {\n        const hash = /** @type {proto.ICryptoGetLiveHashQuery} */ (\n            query.cryptoGetLiveHash\n        );\n\n        return new LiveHashQuery({\n            accountId:\n                hash.accountID != null\n                    ? AccountId._fromProtobuf(hash.accountID)\n                    : undefined,\n            hash: hash.hash != null ? hash.hash : undefined,\n        });\n    }\n\n    /**\n     * @returns {?AccountId}\n     */\n    get accountId() {\n        return this._accountId;\n    }\n\n    /**\n     * Set the account to which the livehash is associated.\n     *\n     * @param {AccountId | string} accountId\n     * @returns {this}\n     */\n    setAccountId(accountId) {\n        this._accountId =\n            accountId instanceof AccountId\n                ? accountId\n                : AccountId.fromString(accountId);\n\n        return this;\n    }\n\n    /**\n     * @returns {?Uint8Array}\n     */\n    get liveHash() {\n        return this._hash;\n    }\n\n    /**\n     * Set the SHA-384 data in the livehash.\n     *\n     * @param {Uint8Array} hash\n     * @returns {this}\n     */\n    setHash(hash) {\n        this._hash = hash;\n\n        return this;\n    }\n\n    /**\n     * @param {Client} client\n     */\n    _validateChecksums(client) {\n        if (this._accountId != null) {\n            this._accountId.validateChecksum(client);\n        }\n    }\n\n    /**\n     * @override\n     * @internal\n     * @param {Channel} channel\n     * @param {proto.IQuery} request\n     * @returns {Promise<proto.IResponse>}\n     */\n    _execute(channel, request) {\n        return channel.crypto.getLiveHash(request);\n    }\n\n    /**\n     * @override\n     * @internal\n     * @param {proto.IResponse} response\n     * @returns {proto.IResponseHeader}\n     */\n    _mapResponseHeader(response) {\n        const cryptoGetLiveHash =\n            /** @type {proto.ICryptoGetLiveHashResponse} */ (\n                response.cryptoGetLiveHash\n            );\n        return /** @type {proto.IResponseHeader} */ (cryptoGetLiveHash.header);\n    }\n\n    /**\n     * @protected\n     * @override\n     * @param {proto.IResponse} response\n     * @returns {Promise<LiveHash>}\n     */\n    _mapResponse(response) {\n        const hashes = /** @type {proto.ICryptoGetLiveHashResponse} */ (\n            response.cryptoGetLiveHash\n        );\n\n        return Promise.resolve(\n            LiveHash._fromProtobuf(\n                /** @type {proto.ILiveHash} */ (hashes.liveHash)\n            )\n        );\n    }\n\n    /**\n     * @override\n     * @internal\n     * @param {proto.IQueryHeader} header\n     * @returns {proto.IQuery}\n     */\n    _onMakeRequest(header) {\n        return {\n            cryptoGetLiveHash: {\n                header,\n                accountID:\n                    this._accountId != null\n                        ? this._accountId._toProtobuf()\n                        : null,\n                hash: this._hash,\n            },\n        };\n    }\n}\n\n// @ts-ignore\n// eslint-disable-next-line @typescript-eslint/unbound-method\nQUERY_REGISTRY.set(\"cryptoGetLiveHash\", LiveHashQuery._fromProtobuf);\n", "/**\n * @typedef {import(\"./client/Client.js\").NetworkName} ClientNetworkName\n */\n\n/**\n * @typedef {object} NetworkNameType\n * @property {ClientNetworkName} Mainnet\n * @property {ClientNetworkName} Testnet\n * @property {ClientNetworkName} Previewnet\n */\n\n/**\n * @type {NetworkNameType}\n */\nconst NetworkName = {\n    Mainnet: \"mainnet\",\n    Testnet: \"testnet\",\n    Previewnet: \"previewnet\",\n};\n\n/** @type {[string, string, string]} */\nexport const _networkIds = [\"0\", \"1\", \"2\"];\n\n/**\n * @param {string} networkName\n * @returns {string}\n */\nexport function _ledgerIdToLedgerId(networkName) {\n    switch (networkName) {\n        case NetworkName.Mainnet:\n            return _networkIds[0];\n        case NetworkName.Testnet:\n            return _networkIds[1];\n        case NetworkName.Previewnet:\n            return _networkIds[2];\n        default:\n            throw new Error(\n                `unrecognized network name, expected \"mainnet\", \"testnet\", or \"previewnet\"`\n            );\n    }\n}\n\n/**\n * @param {string} ledgerId\n * @returns {string}\n */\nexport function _ledgerIdToNetworkName(ledgerId) {\n    switch (ledgerId) {\n        case \"0\":\n            return NetworkName.Mainnet;\n        case \"1\":\n            return NetworkName.Testnet;\n        case \"2\":\n            return NetworkName.Previewnet;\n        default:\n            throw new Error(`unrecognized ledgerId, expected \"0\", \"1\", or \"2\"`);\n    }\n}\n\nexport default NetworkName;\n", "import * as proto from \"@hashgraph/proto\";\n\nexport default class SemanticVersion {\n    /**\n     * @private\n     * @param {object} props\n     * @param {number} props.major\n     * @param {number} props.minor\n     * @param {number} props.patch\n     */\n    constructor(props) {\n        /** @readonly */\n        this.major = props.major;\n        /** @readonly */\n        this.minor = props.minor;\n        /** @readonly */\n        this.patch = props.patch;\n\n        Object.freeze(this);\n    }\n\n    /**\n     * @internal\n     * @param {proto.ISemanticVersion} version\n     * @returns {SemanticVersion}\n     */\n    static _fromProtobuf(version) {\n        return new SemanticVersion({\n            major: /** @type {number} */ (version.major),\n            minor: /** @type {number} */ (version.minor),\n            patch: /** @type {number} */ (version.patch),\n        });\n    }\n\n    /**\n     * @internal\n     * @returns {proto.ISemanticVersion}\n     */\n    _toProtobuf() {\n        return {\n            major: this.major,\n            minor: this.minor,\n            patch: this.patch,\n        };\n    }\n\n    /**\n     * @param {Uint8Array} bytes\n     * @returns {SemanticVersion}\n     */\n    static fromBytes(bytes) {\n        return SemanticVersion._fromProtobuf(\n            proto.SemanticVersion.decode(bytes)\n        );\n    }\n\n    /**\n     * @returns {Uint8Array}\n     */\n    toBytes() {\n        return proto.SemanticVersion.encode(this._toProtobuf()).finish();\n    }\n}\n", "import SemanticVersion from \"./SemanticVersion.js\";\nimport * as proto from \"@hashgraph/proto\";\n\n/**\n * Response when the client sends the node CryptoGetVersionInfoQuery.\n */\nexport default class NetworkVersionInfo {\n    /**\n     * @private\n     * @param {object} props\n     * @param {SemanticVersion} props.protobufVersion\n     * @param {SemanticVersion} props.servicesVesion\n     */\n    constructor(props) {\n        /**\n         * The account ID for which this information applies.\n         *\n         * @readonly\n         */\n        this.protobufVersion = props.protobufVersion;\n\n        /**\n         * The account ID for which this information applies.\n         *\n         * @readonly\n         */\n        this.servicesVesion = props.servicesVesion;\n\n        Object.freeze(this);\n    }\n\n    /**\n     * @internal\n     * @param {proto.INetworkGetVersionInfoResponse} info\n     * @returns {NetworkVersionInfo}\n     */\n    static _fromProtobuf(info) {\n        return new NetworkVersionInfo({\n            protobufVersion: SemanticVersion._fromProtobuf(\n                /** @type {proto.ISemanticVersion} */\n                (info.hapiProtoVersion)\n            ),\n            servicesVesion: SemanticVersion._fromProtobuf(\n                /** @type {proto.ISemanticVersion} */\n                (info.hederaServicesVersion)\n            ),\n        });\n    }\n\n    /**\n     * @internal\n     * @returns {proto.INetworkGetVersionInfoResponse}\n     */\n    _toProtobuf() {\n        return {\n            hapiProtoVersion: this.protobufVersion._toProtobuf(),\n            hederaServicesVersion: this.servicesVesion._toProtobuf(),\n        };\n    }\n\n    /**\n     * @param {Uint8Array} bytes\n     * @returns {NetworkVersionInfo}\n     */\n    static fromBytes(bytes) {\n        return NetworkVersionInfo._fromProtobuf(\n            proto.NetworkGetVersionInfoResponse.decode(bytes)\n        );\n    }\n\n    /**\n     * @returns {Uint8Array}\n     */\n    toBytes() {\n        return proto.NetworkGetVersionInfoResponse.encode(\n            this._toProtobuf()\n        ).finish();\n    }\n}\n", "import Query, { QUERY_REGISTRY } from \"../query/Query.js\";\nimport NetworkVersionInfo from \"./NetworkVersionInfo.js\";\n\n/**\n * @namespace proto\n * @typedef {import(\"@hashgraph/proto\").IQuery} proto.IQuery\n * @typedef {import(\"@hashgraph/proto\").IQueryHeader} proto.IQueryHeader\n * @typedef {import(\"@hashgraph/proto\").IResponse} proto.IResponse\n * @typedef {import(\"@hashgraph/proto\").IResponseHeader} proto.IResponseHeader\n * @typedef {import(\"@hashgraph/proto\").INetworkGetVersionInfoQuery} proto.INetworkGetVersionInfoQuery\n * @typedef {import(\"@hashgraph/proto\").INetworkGetVersionInfoResponse} proto.INetworkGetVersionInfoResponse\n */\n\n/**\n * @typedef {import(\"../channel/Channel.js\").default} Channel\n */\n\n/**\n * @augments {Query<NetworkVersionInfo>}\n */\nexport default class NetworkVersionInfoQuery extends Query {\n    constructor() {\n        super();\n    }\n\n    /**\n     * @param {proto.IQuery} query\n     * @returns {NetworkVersionInfoQuery}\n     */\n    // eslint-disable-next-line @typescript-eslint/no-unused-vars\n    static _fromProtobuf(query) {\n        return new NetworkVersionInfoQuery();\n    }\n\n    /**\n     * @override\n     * @internal\n     * @param {Channel} channel\n     * @param {proto.IQuery} request\n     * @returns {Promise<proto.IResponse>}\n     */\n    _execute(channel, request) {\n        return channel.network.getVersionInfo(request);\n    }\n\n    /**\n     * @override\n     * @internal\n     * @param {proto.IResponse} response\n     * @returns {proto.IResponseHeader}\n     */\n    _mapResponseHeader(response) {\n        const networkGetVersionInfo =\n            /** @type {proto.INetworkGetVersionInfoResponse} */ (\n                response.networkGetVersionInfo\n            );\n        return /** @type {proto.IResponseHeader} */ (\n            networkGetVersionInfo.header\n        );\n    }\n\n    /**\n     * @protected\n     * @override\n     * @param {proto.IResponse} response\n     * @returns {Promise<NetworkVersionInfo>}\n     */\n    _mapResponse(response) {\n        const info = /** @type {proto.INetworkGetVersionInfoResponse} */ (\n            response.networkGetVersionInfo\n        );\n        return Promise.resolve(NetworkVersionInfo._fromProtobuf(info));\n    }\n\n    /**\n     * @override\n     * @internal\n     * @param {proto.IQueryHeader} header\n     * @returns {proto.IQuery}\n     */\n    _onMakeRequest(header) {\n        return {\n            networkGetVersionInfo: {\n                header,\n            },\n        };\n    }\n}\n\nQUERY_REGISTRY.set(\n    \"networkGetVersionInfo\",\n    // eslint-disable-next-line @typescript-eslint/unbound-method\n    NetworkVersionInfoQuery._fromProtobuf\n);\n", "import AccountId from \"../account/AccountId.js\";\nimport Transaction, {\n    TRANSACTION_REGISTRY,\n    SCHEDULE_CREATE_TRANSACTION,\n} from \"../transaction/Transaction.js\";\nimport Key from \"../Key.js\";\n\n/**\n * @namespace proto\n * @typedef {import(\"@hashgraph/proto\").ITransaction} proto.ITransaction\n * @typedef {import(\"@hashgraph/proto\").ISignedTransaction} proto.ISignedTransaction\n * @typedef {import(\"@hashgraph/proto\").TransactionBody} proto.TransactionBody\n * @typedef {import(\"@hashgraph/proto\").ITransactionBody} proto.ITransactionBody\n * @typedef {import(\"@hashgraph/proto\").ITransactionResponse} proto.ITransactionResponse\n * @typedef {import(\"@hashgraph/proto\").IScheduleCreateTransactionBody} proto.IScheduleCreateTransactionBody\n * @typedef {import(\"@hashgraph/proto\").IAccountID} proto.IAccountID\n * @typedef {import(\"@hashgraph/proto\").ISignatureMap} proto.ISignatureMap\n */\n\n/**\n * @typedef {import(\"bignumber.js\").default} BigNumber\n * @typedef {import(\"../channel/Channel.js\").default} Channel\n * @typedef {import(\"../client/Client.js\").default<*, *>} Client\n * @typedef {import(\"../Timestamp.js\").default} Timestamp\n * @typedef {import(\"../transaction/TransactionId.js\").default} TransactionId\n * @typedef {import(\"../PublicKey.js\").default} PublicKey\n * @typedef {import(\"../PrivateKey.js\").default} PrivateKey\n */\n\n/**\n * Create a new Hedera\u2122 crypto-currency account.\n */\nexport default class ScheduleCreateTransaction extends Transaction {\n    /**\n     * @param {object} [props]\n     * @param {Key} [props.adminKey]\n     * @param {AccountId} [props.payerAccountID]\n     * @param {string} [props.scheduleMemo]\n     */\n    constructor(props = {}) {\n        super();\n\n        /**\n         * @private\n         * @type {?Key}\n         */\n        this._adminKey = null;\n\n        /**\n         * @private\n         * @type {?Transaction}\n         */\n        this._scheduledTransaction = null;\n\n        /**\n         * @private\n         * @type {?AccountId}\n         */\n        this._payerAccountId = null;\n\n        /**\n         * @private\n         * @type {?string}\n         */\n        this._scheduleMemo = null;\n\n        /**\n         * @private\n         * @type {Set<string>}\n         */\n        this._scheduledSignerPublicKeys = new Set();\n\n        if (props.adminKey != null) {\n            this.setAdminKey(props.adminKey);\n        }\n\n        if (props.payerAccountID != null) {\n            this.setPayerAccountId(props.payerAccountID);\n        }\n\n        if (props.scheduleMemo != null) {\n            this.setScheduleMemo(props.scheduleMemo);\n        }\n    }\n\n    /**\n     * @internal\n     * @param {proto.ITransaction[]} transactions\n     * @param {proto.ISignedTransaction[]} signedTransactions\n     * @param {TransactionId[]} transactionIds\n     * @param {AccountId[]} nodeIds\n     * @param {proto.ITransactionBody[]} bodies\n     * @returns {ScheduleCreateTransaction}\n     */\n    static _fromProtobuf(\n        transactions,\n        signedTransactions,\n        transactionIds,\n        nodeIds,\n        bodies\n    ) {\n        const body = bodies[0];\n        const create = /** @type {proto.IScheduleCreateTransactionBody} */ (\n            body.scheduleCreate\n        );\n\n        return Transaction._fromProtobufTransactions(\n            new ScheduleCreateTransaction({\n                adminKey:\n                    create.adminKey != null\n                        ? Key._fromProtobufKey(create.adminKey)\n                        : undefined,\n                payerAccountID:\n                    create.payerAccountID != null\n                        ? AccountId._fromProtobuf(\n                              /** @type {proto.IAccountID} */ (\n                                  create.payerAccountID\n                              )\n                          )\n                        : undefined,\n                scheduleMemo: create.memo != null ? create.memo : undefined,\n            }),\n            transactions,\n            signedTransactions,\n            transactionIds,\n            nodeIds,\n            bodies\n        );\n    }\n\n    /**\n     * @internal\n     * @param {Transaction} tx\n     * @returns {this}\n     */\n    _setScheduledTransaction(tx) {\n        this._scheduledTransaction = tx;\n\n        return this;\n    }\n\n    /**\n     * @returns {?Key}\n     */\n    get adminKey() {\n        return this._adminKey;\n    }\n\n    /**\n     * Set the key for this account.\n     *\n     * This is the key that must sign each transfer out of the account.\n     *\n     * If `receiverSignatureRequired` is true, then the key must also sign\n     * any transfer into the account.\n     *\n     * @param {Key} key\n     * @returns {this}\n     */\n    setAdminKey(key) {\n        this._requireNotFrozen();\n        this._adminKey = key;\n\n        return this;\n    }\n\n    /**\n     * @returns {?AccountId}\n     */\n    get payerAccountId() {\n        return this._payerAccountId;\n    }\n\n    /**\n     * @param {AccountId} account\n     * @returns {this}\n     */\n    setPayerAccountId(account) {\n        this._requireNotFrozen();\n        this._payerAccountId = account;\n\n        return this;\n    }\n\n    /**\n     * @param {string} memo\n     * @returns {this}\n     */\n    setScheduleMemo(memo) {\n        this._requireNotFrozen();\n        this._scheduleMemo = memo;\n\n        return this;\n    }\n\n    /**\n     * @returns {?string}\n     */\n    get getScheduleMemo() {\n        this._requireNotFrozen();\n        return this._scheduleMemo;\n    }\n\n    /**\n     * @param {Transaction} transaction\n     * @returns {this}\n     */\n    setScheduledTransaction(transaction) {\n        this._requireNotFrozen();\n        transaction._requireNotFrozen();\n\n        this._scheduledTransaction =\n            transaction.schedule()._scheduledTransaction;\n\n        return this;\n    }\n\n    /**\n     * @param {Client} client\n     */\n    _validateChecksums(client) {\n        if (this._payerAccountId != null) {\n            this._payerAccountId.validateChecksum(client);\n        }\n    }\n\n    /**\n     * @override\n     * @internal\n     * @param {Channel} channel\n     * @param {proto.ITransaction} request\n     * @returns {Promise<proto.ITransactionResponse>}\n     */\n    _execute(channel, request) {\n        return channel.schedule.createSchedule(request);\n    }\n\n    /**\n     * @override\n     * @protected\n     * @returns {NonNullable<proto.TransactionBody[\"data\"]>}\n     */\n    _getTransactionDataCase() {\n        return \"scheduleCreate\";\n    }\n\n    /**\n     * @override\n     * @protected\n     * @returns {proto.IScheduleCreateTransactionBody}\n     */\n    _makeTransactionData() {\n        return {\n            adminKey:\n                this._adminKey != null ? this._adminKey._toProtobufKey() : null,\n            payerAccountID:\n                this._payerAccountId != null\n                    ? this._payerAccountId._toProtobuf()\n                    : null,\n            scheduledTransactionBody:\n                this._scheduledTransaction != null\n                    ? this._scheduledTransaction._getScheduledTransactionBody()\n                    : null,\n            memo: this._scheduleMemo,\n        };\n    }\n}\n\nTRANSACTION_REGISTRY.set(\n    \"scheduleCreate\",\n    // eslint-disable-next-line @typescript-eslint/unbound-method\n    ScheduleCreateTransaction._fromProtobuf\n);\n\nSCHEDULE_CREATE_TRANSACTION.push(() => new ScheduleCreateTransaction());\n", "import ScheduleId from \"./ScheduleId.js\";\nimport Transaction, {\n    TRANSACTION_REGISTRY,\n} from \"../transaction/Transaction.js\";\n\n/**\n * @namespace proto\n * @typedef {import(\"@hashgraph/proto\").ITransaction} proto.ITransaction\n * @typedef {import(\"@hashgraph/proto\").ISignedTransaction} proto.ISignedTransaction\n * @typedef {import(\"@hashgraph/proto\").TransactionBody} proto.TransactionBody\n * @typedef {import(\"@hashgraph/proto\").ITransactionBody} proto.ITransactionBody\n * @typedef {import(\"@hashgraph/proto\").ITransactionResponse} proto.ITransactionResponse\n * @typedef {import(\"@hashgraph/proto\").IScheduleDeleteTransactionBody} proto.IScheduleDeleteTransactionBody\n * @typedef {import(\"@hashgraph/proto\").IScheduleID} proto.IScheduleID\n */\n\n/**\n * @typedef {import(\"bignumber.js\").default} BigNumber\n * @typedef {import(\"@hashgraph/cryptography\").Key} Key\n * @typedef {import(\"../channel/Channel.js\").default} Channel\n * @typedef {import(\"../client/Client.js\").default<*, *>} Client\n * @typedef {import(\"../Timestamp.js\").default} Timestamp\n * @typedef {import(\"../transaction/TransactionId.js\").default} TransactionId\n * @typedef {import(\"../account/AccountId.js\").default} AccountId\n */\n\n/**\n * Create a new Hedera\u2122 crypto-currency account.\n */\nexport default class ScheduleDeleteTransaction extends Transaction {\n    /**\n     * @param {object} [props]\n     * @param {ScheduleId | string} [props.scheduleId]\n     */\n    constructor(props = {}) {\n        super();\n\n        /**\n         * @private\n         * @type {?ScheduleId}\n         */\n        this._scheduleId = null;\n\n        if (props.scheduleId != null) {\n            this.setScheduleId(props.scheduleId);\n        }\n    }\n\n    /**\n     * @internal\n     * @param {proto.ITransaction[]} transactions\n     * @param {proto.ISignedTransaction[]} signedTransactions\n     * @param {TransactionId[]} transactionIds\n     * @param {AccountId[]} nodeIds\n     * @param {proto.ITransactionBody[]} bodies\n     * @returns {ScheduleDeleteTransaction}\n     */\n    static _fromProtobuf(\n        transactions,\n        signedTransactions,\n        transactionIds,\n        nodeIds,\n        bodies\n    ) {\n        const body = bodies[0];\n        const scheduleDelete =\n            /** @type {proto.IScheduleDeleteTransactionBody} */ (\n                body.scheduleDelete\n            );\n\n        return Transaction._fromProtobufTransactions(\n            new ScheduleDeleteTransaction({\n                scheduleId:\n                    scheduleDelete.scheduleID != null\n                        ? ScheduleId._fromProtobuf(\n                              /** @type {proto.IScheduleID} */ (\n                                  scheduleDelete.scheduleID\n                              )\n                          )\n                        : undefined,\n            }),\n            transactions,\n            signedTransactions,\n            transactionIds,\n            nodeIds,\n            bodies\n        );\n    }\n\n    /**\n     * @returns {?ScheduleId}\n     */\n    get scheduleId() {\n        return this._scheduleId;\n    }\n\n    /**\n     * @param {ScheduleId | string} scheduleId\n     * @returns {this}\n     */\n    setScheduleId(scheduleId) {\n        this._requireNotFrozen();\n        this._scheduleId =\n            typeof scheduleId === \"string\"\n                ? ScheduleId.fromString(scheduleId)\n                : scheduleId.clone();\n\n        return this;\n    }\n\n    /**\n     * @param {Client} client\n     */\n    _validateChecksums(client) {\n        if (this._scheduleId != null) {\n            this._scheduleId.validateChecksum(client);\n        }\n    }\n\n    /**\n     * @override\n     * @internal\n     * @param {Channel} channel\n     * @param {proto.ITransaction} request\n     * @returns {Promise<proto.ITransactionResponse>}\n     */\n    _execute(channel, request) {\n        return channel.schedule.deleteSchedule(request);\n    }\n\n    /**\n     * @override\n     * @protected\n     * @returns {NonNullable<proto.TransactionBody[\"data\"]>}\n     */\n    _getTransactionDataCase() {\n        return \"scheduleDelete\";\n    }\n\n    /**\n     * @override\n     * @protected\n     * @returns {proto.IScheduleDeleteTransactionBody}\n     */\n    _makeTransactionData() {\n        return {\n            scheduleID:\n                this._scheduleId != null\n                    ? this._scheduleId._toProtobuf()\n                    : null,\n        };\n    }\n}\n\nTRANSACTION_REGISTRY.set(\n    \"scheduleDelete\",\n    // eslint-disable-next-line @typescript-eslint/unbound-method\n    ScheduleDeleteTransaction._fromProtobuf\n);\n", "import ScheduleId from \"./ScheduleId.js\";\nimport AccountId from \"../account/AccountId.js\";\nimport Timestamp from \"../Timestamp.js\";\nimport Transaction from \"../transaction/Transaction.js\";\nimport {\n    TransactionList as ProtoTransactionList,\n    TransactionBody as ProtoTransactionBody,\n    SignedTransaction as ProtoSignedTransaction,\n    SchedulableTransactionBody as ProtoSchedulableTransactionBody,\n} from \"@hashgraph/proto\";\nimport TransactionId from \"../transaction/TransactionId.js\";\nimport Key from \"../Key.js\";\nimport KeyList from \"../KeyList.js\";\n\n/**\n * @namespace proto\n * @typedef {import(\"@hashgraph/proto\").IScheduleInfo} proto.IScheduleInfo\n * @typedef {import(\"@hashgraph/proto\").IScheduleID} proto.IScheduleID\n * @typedef {import(\"@hashgraph/proto\").ITimestamp} proto.ITimestamp\n * @typedef {import(\"@hashgraph/proto\").IAccountID} proto.IAccountID\n * @typedef {import(\"@hashgraph/proto\").IScheduleID} proto.IScheduledID\n * @typedef {import(\"@hashgraph/proto\").IFileID} proto.IFileID\n * @typedef {import(\"@hashgraph/proto\").IContractID} proto.IContractID\n * @typedef {import(\"@hashgraph/proto\").ITokenID} proto.ITokenID\n * @typedef {import(\"@hashgraph/proto\").IKey} proto.IKey\n * @typedef {import(\"@hashgraph/proto\").IDuration} proto.IDuration\n * @typedef {import(\"@hashgraph/proto\").ISchedulableTransactionBody} proto.ISchedulableTransactionBody\n * @typedef {import(\"@hashgraph/proto\").ITransactionBody} proto.ITransactionBody\n */\n\n/**\n * Response when the client sends the node ScheduleGetInfoQuery.\n */\nexport default class ScheduleInfo {\n    /**\n     * @private\n     * @param {object} props\n     * @param {ScheduleId} props.scheduleId;\n     * @param {?AccountId} props.creatorAccountID;\n     * @param {?AccountId} props.payerAccountID;\n     * @param {?proto.ISchedulableTransactionBody} props.schedulableTransactionBody;\n     * @param {?Key} props.adminKey\n     * @param {?KeyList} props.signers;\n     * @param {?string} props.scheduleMemo;\n     * @param {?Timestamp} props.expirationTime;\n     * @param {?Timestamp} props.executed;\n     * @param {?Timestamp} props.deleted;\n     * @param {?TransactionId} props.scheduledTransactionId;\n     */\n    constructor(props) {\n        /**\n         *\n         * @readonly\n         */\n        this.scheduleId = props.scheduleId;\n\n        /**\n         *\n         * @readonly\n         */\n        this.creatorAccountId = props.creatorAccountID;\n\n        /**\n         *\n         * @readonly\n         */\n        this.payerAccountId = props.payerAccountID;\n\n        /**\n         *\n         * @readonly\n         */\n        this.schedulableTransactionBody = props.schedulableTransactionBody;\n\n        /**\n         *\n         * @readonly\n         */\n        this.signers = props.signers;\n\n        /**\n         *\n         * @readonly\n         */\n        this.scheduleMemo = props.scheduleMemo;\n\n        /**\n         *\n         * @readonly\n         */\n        this.adminKey = props.adminKey != null ? props.adminKey : null;\n\n        /**\n         *\n         * @readonly\n         */\n        this.expirationTime = props.expirationTime;\n\n        /**\n         *\n         * @readonly\n         */\n        this.executed = props.executed;\n\n        /**\n         *\n         * @readonly\n         */\n        this.deleted = props.deleted;\n\n        this.scheduledTransactionId = props.scheduledTransactionId;\n\n        Object.freeze(this);\n    }\n\n    /**\n     * @internal\n     * @param {proto.IScheduleInfo} info\n     * @returns {ScheduleInfo}\n     */\n    static _fromProtobuf(info) {\n        return new ScheduleInfo({\n            scheduleId: ScheduleId._fromProtobuf(\n                /** @type {proto.IScheduleID} */ (info.scheduleID)\n            ),\n            creatorAccountID:\n                info.creatorAccountID != null\n                    ? AccountId._fromProtobuf(\n                          /** @type {proto.IAccountID} */ (\n                              info.creatorAccountID\n                          )\n                      )\n                    : null,\n            payerAccountID:\n                info.payerAccountID != null\n                    ? AccountId._fromProtobuf(\n                          /** @type {proto.IAccountID} */ (info.payerAccountID)\n                      )\n                    : null,\n            schedulableTransactionBody:\n                info.scheduledTransactionBody != null\n                    ? info.scheduledTransactionBody\n                    : null,\n            adminKey:\n                info.adminKey != null\n                    ? Key._fromProtobufKey(info.adminKey)\n                    : null,\n            signers:\n                info.signers != null\n                    ? KeyList.__fromProtobufKeyList(info.signers)\n                    : null,\n            scheduleMemo: info.memo != null ? info.memo : null,\n            expirationTime:\n                info.expirationTime != null\n                    ? Timestamp._fromProtobuf(\n                          /** @type {proto.ITimestamp} */ (info.expirationTime)\n                      )\n                    : null,\n            executed:\n                info.executionTime != null\n                    ? Timestamp._fromProtobuf(\n                          /** @type {proto.ITimestamp} */ (info.executionTime)\n                      )\n                    : null,\n            deleted:\n                info.deletionTime != null\n                    ? Timestamp._fromProtobuf(\n                          /** @type {proto.ITimestamp} */ (info.deletionTime)\n                      )\n                    : null,\n            scheduledTransactionId:\n                info.scheduledTransactionID != null\n                    ? TransactionId._fromProtobuf(info.scheduledTransactionID)\n                    : null,\n        });\n    }\n\n    /**\n     * @returns {proto.IScheduleInfo}\n     */\n    _toProtobuf() {\n        return {\n            scheduleID:\n                this.scheduleId != null ? this.scheduleId._toProtobuf() : null,\n            creatorAccountID:\n                this.creatorAccountId != null\n                    ? this.creatorAccountId._toProtobuf()\n                    : null,\n            payerAccountID:\n                this.payerAccountId != null\n                    ? this.payerAccountId._toProtobuf()\n                    : null,\n            scheduledTransactionBody:\n                this.schedulableTransactionBody != null\n                    ? this.schedulableTransactionBody\n                    : null,\n            adminKey:\n                this.adminKey != null ? this.adminKey._toProtobufKey() : null,\n            signers:\n                this.signers != null\n                    ? this.signers._toProtobufKey().keyList\n                    : null,\n            memo: this.scheduleMemo != null ? this.scheduleMemo : \"\",\n            expirationTime:\n                this.expirationTime != null\n                    ? this.expirationTime._toProtobuf()\n                    : null,\n            scheduledTransactionID:\n                this.scheduledTransactionId != null\n                    ? this.scheduledTransactionId._toProtobuf()\n                    : null,\n        };\n    }\n\n    /**\n     * @returns {Transaction}\n     */\n    get scheduledTransaction() {\n        if (this.schedulableTransactionBody == null) {\n            throw new Error(\"Scheduled transaction body is empty\");\n        }\n\n        const scheduled = new ProtoSchedulableTransactionBody(\n            this.schedulableTransactionBody\n        );\n        const data =\n            /** @type {NonNullable<ProtoSchedulableTransactionBody[\"data\"]>} */ (\n                scheduled.data\n            );\n\n        return Transaction.fromBytes(\n            ProtoTransactionList.encode({\n                transactionList: [\n                    {\n                        signedTransactionBytes: ProtoSignedTransaction.encode({\n                            bodyBytes: ProtoTransactionBody.encode({\n                                transactionFee:\n                                    this.schedulableTransactionBody\n                                        .transactionFee,\n                                memo: this.schedulableTransactionBody.memo,\n                                [data]: scheduled[data],\n                            }).finish(),\n                        }).finish(),\n                    },\n                ],\n            }).finish()\n        );\n    }\n}\n", "import Query, { QUERY_REGISTRY } from \"../query/Query.js\";\nimport ScheduleId from \"./ScheduleId.js\";\nimport ScheduleInfo from \"./ScheduleInfo.js\";\nimport Hbar from \"../Hbar.js\";\n\n/**\n * @namespace proto\n * @typedef {import(\"@hashgraph/proto\").IQuery} proto.IQuery\n * @typedef {import(\"@hashgraph/proto\").IQueryHeader} proto.IQueryHeader\n * @typedef {import(\"@hashgraph/proto\").IResponse} proto.IResponse\n * @typedef {import(\"@hashgraph/proto\").IResponseHeader} proto.IResponseHeader\n * @typedef {import(\"@hashgraph/proto\").IScheduleInfo} proto.IScheduleInfo\n * @typedef {import(\"@hashgraph/proto\").IScheduleGetInfoQuery} proto.IScheduleGetInfoQuery\n * @typedef {import(\"@hashgraph/proto\").IScheduleGetInfoResponse} proto.IScheduleGetInfoResponse\n */\n\n/**\n * @typedef {import(\"../channel/Channel.js\").default} Channel\n * @typedef {import(\"../client/Client.js\").default<*, *>} Client\n * @typedef {import(\"../account/AccountId.js\").default} AccountId\n */\n\n/**\n * @augments {Query<ScheduleInfo>}\n */\nexport default class ScheduleInfoQuery extends Query {\n    /**\n     * @param {object} properties\n     * @param {ScheduleId | string} [properties.scheduleId]\n     */\n    constructor(properties = {}) {\n        super();\n\n        /**\n         * @private\n         * @type {?ScheduleId}\n         */\n        this._scheduleId = null;\n\n        if (properties.scheduleId != null) {\n            this.setScheduleId(properties.scheduleId);\n        }\n    }\n\n    /**\n     * @internal\n     * @param {proto.IQuery} query\n     * @returns {ScheduleInfoQuery}\n     */\n    static _fromProtobuf(query) {\n        const info = /** @type {proto.IScheduleGetInfoQuery} */ (\n            query.scheduleGetInfo\n        );\n\n        return new ScheduleInfoQuery({\n            scheduleId:\n                info.scheduleID != null\n                    ? ScheduleId._fromProtobuf(info.scheduleID)\n                    : undefined,\n        });\n    }\n\n    /**\n     * @returns {?ScheduleId}\n     */\n    get scheduleId() {\n        return this._scheduleId;\n    }\n\n    /**\n     *\n     * @param {ScheduleId | string} scheduleId\n     * @returns {ScheduleInfoQuery}\n     */\n    setScheduleId(scheduleId) {\n        this._scheduleId =\n            typeof scheduleId === \"string\"\n                ? ScheduleId.fromString(scheduleId)\n                : scheduleId.clone();\n\n        return this;\n    }\n\n    /**\n     * @override\n     * @param {import(\"../client/Client.js\").default<Channel, *>} client\n     * @returns {Promise<Hbar>}\n     */\n    async getCost(client) {\n        let cost = await super.getCost(client);\n\n        if (cost.toTinybars().greaterThan(25)) {\n            return cost;\n        } else {\n            return Hbar.fromTinybars(25);\n        }\n    }\n\n    /**\n     * @param {Client} client\n     */\n    _validateChecksums(client) {\n        if (this._scheduleId != null) {\n            this._scheduleId.validateChecksum(client);\n        }\n    }\n\n    /**\n     * @override\n     * @internal\n     * @param {Channel} channel\n     * @param {proto.IQuery} request\n     * @returns {Promise<proto.IResponse>}\n     */\n    _execute(channel, request) {\n        return channel.schedule.getScheduleInfo(request);\n    }\n\n    /**\n     * @override\n     * @internal\n     * @param {proto.IResponse} response\n     * @returns {proto.IResponseHeader}\n     */\n    _mapResponseHeader(response) {\n        const scheduleGetInfo = /** @type {proto.IScheduleGetInfoResponse} */ (\n            response.scheduleGetInfo\n        );\n        return /** @type {proto.IResponseHeader} */ (scheduleGetInfo.header);\n    }\n\n    /**\n     * @override\n     * @internal\n     * @param {proto.IResponse} response\n     * @param {AccountId} nodeAccountId\n     * @param {proto.IQuery} request\n     * @returns {Promise<ScheduleInfo>}\n     */\n    // eslint-disable-next-line @typescript-eslint/no-unused-vars\n    _mapResponse(response, nodeAccountId, request) {\n        const info = /** @type {proto.IScheduleGetInfoResponse} */ (\n            response.scheduleGetInfo\n        );\n\n        return Promise.resolve(\n            ScheduleInfo._fromProtobuf(\n                /** @type {proto.IScheduleInfo} */ (info.scheduleInfo)\n            )\n        );\n    }\n\n    /**\n     * @override\n     * @internal\n     * @param {proto.IQueryHeader} header\n     * @returns {proto.IQuery}\n     */\n    _onMakeRequest(header) {\n        return {\n            scheduleGetInfo: {\n                header,\n                scheduleID:\n                    this._scheduleId != null\n                        ? this._scheduleId._toProtobuf()\n                        : null,\n            },\n        };\n    }\n}\n\n// eslint-disable-next-line @typescript-eslint/unbound-method\nQUERY_REGISTRY.set(\"scheduleGetInfo\", ScheduleInfoQuery._fromProtobuf);\n", "import ScheduleId from \"./ScheduleId.js\";\nimport Transaction, {\n    TRANSACTION_REGISTRY,\n} from \"../transaction/Transaction.js\";\n\n/**\n * @typedef {object} ProtoSignaturePair\n * @property {(Uint8Array | null)=} pubKeyPrefix\n * @property {(Uint8Array | null)=} ed25519\n */\n\n/**\n * @typedef {object} ProtoSigMap\n * @property {(ProtoSignaturePair[] | null)=} sigPair\n */\n\n/**\n * @typedef {object} ProtoSignedTransaction\n * @property {(Uint8Array | null)=} bodyBytes\n * @property {(ProtoSigMap | null)=} sigMap\n */\n\n/**\n * @namespace proto\n * @typedef {import(\"@hashgraph/proto\").ITransaction} proto.ITransaction\n * @typedef {import(\"@hashgraph/proto\").ISignedTransaction} proto.ISignedTransaction\n * @typedef {import(\"@hashgraph/proto\").TransactionBody} proto.TransactionBody\n * @typedef {import(\"@hashgraph/proto\").ITransactionBody} proto.ITransactionBody\n * @typedef {import(\"@hashgraph/proto\").ITransactionResponse} proto.ITransactionResponse\n * @typedef {import(\"@hashgraph/proto\").IScheduleSignTransactionBody} proto.IScheduleSignTransactionBody\n * @typedef {import(\"@hashgraph/proto\").IAccountID} proto.IAccountID\n * @typedef {import(\"@hashgraph/proto\").ISignatureMap} proto.ISignatureMap\n */\n\n/**\n * @typedef {import(\"bignumber.js\").default} BigNumber\n * @typedef {import(\"@hashgraph/cryptography\").Key} Key\n * @typedef {import(\"../channel/Channel.js\").default} Channel\n * @typedef {import(\"../client/Client.js\").default<*, *>} Client\n * @typedef {import(\"../Timestamp.js\").default} Timestamp\n * @typedef {import(\"../transaction/TransactionId.js\").default} TransactionId\n * @typedef {import(\"../account/AccountId.js\").default} AccountId\n * @typedef {import(\"@hashgraph/cryptography\").PublicKey} PublicKey\n */\n\n/**\n * Create a new Hedera\u2122 crypto-currency account.\n */\nexport default class ScheduleSignTransaction extends Transaction {\n    /**\n     * @param {object} [props]\n     * @param {ScheduleId | string} [props.scheduleId]\n     */\n    constructor(props = {}) {\n        super();\n\n        /**\n         * @private\n         * @type {?ScheduleId}\n         */\n        this._scheduleId = null;\n\n        if (props.scheduleId != null) {\n            this.setScheduleId(props.scheduleId);\n        }\n    }\n\n    /**\n     * @internal\n     * @param {proto.ITransaction[]} transactions\n     * @param {proto.ISignedTransaction[]} signedTransactions\n     * @param {TransactionId[]} transactionIds\n     * @param {AccountId[]} nodeIds\n     * @param {proto.ITransactionBody[]} bodies\n     * @returns {ScheduleSignTransaction}\n     */\n    static _fromProtobuf(\n        transactions,\n        signedTransactions,\n        transactionIds,\n        nodeIds,\n        bodies\n    ) {\n        const body = bodies[0];\n        const sign = /** @type {proto.IScheduleSignTransactionBody} */ (\n            body.scheduleSign\n        );\n\n        return Transaction._fromProtobufTransactions(\n            new ScheduleSignTransaction({\n                scheduleId:\n                    sign.scheduleID != null\n                        ? ScheduleId._fromProtobuf(sign.scheduleID)\n                        : undefined,\n            }),\n            transactions,\n            signedTransactions,\n            transactionIds,\n            nodeIds,\n            bodies\n        );\n    }\n\n    /**\n     * @returns {?ScheduleId}\n     */\n    get scheduleId() {\n        return this._scheduleId;\n    }\n\n    /**\n     * @param {ScheduleId | string} scheduleId\n     * @returns {this}\n     */\n    setScheduleId(scheduleId) {\n        this._requireNotFrozen();\n        this._scheduleId =\n            typeof scheduleId === \"string\"\n                ? ScheduleId.fromString(scheduleId)\n                : scheduleId.clone();\n\n        return this;\n    }\n\n    /**\n     * @param {Client} client\n     */\n    _validateChecksums(client) {\n        if (this._scheduleId != null) {\n            this._scheduleId.validateChecksum(client);\n        }\n    }\n\n    /**\n     * @override\n     * @internal\n     * @param {Channel} channel\n     * @param {proto.ITransaction} request\n     * @returns {Promise<proto.ITransactionResponse>}\n     */\n    _execute(channel, request) {\n        return channel.schedule.signSchedule(request);\n    }\n\n    /**\n     * @override\n     * @protected\n     * @returns {NonNullable<proto.TransactionBody[\"data\"]>}\n     */\n    _getTransactionDataCase() {\n        return \"scheduleSign\";\n    }\n\n    /**\n     * @override\n     * @protected\n     * @returns {proto.IScheduleSignTransactionBody}\n     */\n    _makeTransactionData() {\n        return {\n            scheduleID:\n                this._scheduleId != null\n                    ? this._scheduleId._toProtobuf()\n                    : null,\n        };\n    }\n}\n\nTRANSACTION_REGISTRY.set(\n    \"scheduleSign\",\n    // eslint-disable-next-line @typescript-eslint/unbound-method\n    ScheduleSignTransaction._fromProtobuf\n);\n", "import Transaction, {\n    TRANSACTION_REGISTRY,\n} from \"../transaction/Transaction.js\";\nimport FileId from \"../file/FileId.js\";\nimport ContractId from \"../contract/ContractId.js\";\nimport Timestamp from \"../Timestamp.js\";\n\n/**\n * @namespace proto\n * @typedef {import(\"@hashgraph/proto\").ITransaction} proto.ITransaction\n * @typedef {import(\"@hashgraph/proto\").ISignedTransaction} proto.ISignedTransaction\n * @typedef {import(\"@hashgraph/proto\").TransactionBody} proto.TransactionBody\n * @typedef {import(\"@hashgraph/proto\").ITransactionBody} proto.ITransactionBody\n * @typedef {import(\"@hashgraph/proto\").ITransactionResponse} proto.ITransactionResponse\n * @typedef {import(\"@hashgraph/proto\").ISystemDeleteTransactionBody} proto.ISystemDeleteTransactionBody\n * @typedef {import(\"@hashgraph/proto\").IContractID} proto.IContractID\n * @typedef {import(\"@hashgraph/proto\").IFileID} proto.IFileID\n */\n\n/**\n * @typedef {import(\"../channel/Channel.js\").default} Channel\n * @typedef {import(\"../account/AccountId.js\").default} AccountId\n * @typedef {import(\"../transaction/TransactionId.js\").default} TransactionId\n */\n\nexport default class SystemDeleteTransaction extends Transaction {\n    /**\n     * @param {object} [props]\n     * @param {FileId | string} [props.fileId]\n     * @param {ContractId | string} [props.contractId]\n     * @param {Timestamp} [props.expirationTime]\n     */\n    constructor(props = {}) {\n        super();\n\n        /**\n         * @private\n         * @type {?FileId}\n         */\n        this._fileId = null;\n\n        /**\n         * @private\n         * @type {?ContractId}\n         */\n        this._contractId = null;\n\n        /**\n         * @private\n         * @type {?Timestamp}\n         */\n        this._expirationTime = null;\n\n        if (props.fileId != null) {\n            this.setFileId(props.fileId);\n        }\n\n        if (props.contractId != null) {\n            this.setContractId(props.contractId);\n        }\n\n        if (props.expirationTime != null) {\n            this.setExpirationTime(props.expirationTime);\n        }\n    }\n\n    /**\n     * @internal\n     * @param {proto.ITransaction[]} transactions\n     * @param {proto.ISignedTransaction[]} signedTransactions\n     * @param {TransactionId[]} transactionIds\n     * @param {AccountId[]} nodeIds\n     * @param {proto.ITransactionBody[]} bodies\n     * @returns {SystemDeleteTransaction}\n     */\n    static _fromProtobuf(\n        transactions,\n        signedTransactions,\n        transactionIds,\n        nodeIds,\n        bodies\n    ) {\n        const body = bodies[0];\n        const systemDelete = /** @type {proto.ISystemDeleteTransactionBody} */ (\n            body.systemDelete\n        );\n\n        return Transaction._fromProtobufTransactions(\n            new SystemDeleteTransaction({\n                fileId:\n                    systemDelete.fileID != null\n                        ? FileId._fromProtobuf(\n                              /** @type {proto.IFileID} */ (systemDelete.fileID)\n                          )\n                        : undefined,\n                contractId:\n                    systemDelete.contractID != null\n                        ? ContractId._fromProtobuf(\n                              /** @type {proto.IContractID} */ (\n                                  systemDelete.contractID\n                              )\n                          )\n                        : undefined,\n                expirationTime:\n                    systemDelete.expirationTime != null\n                        ? Timestamp._fromProtobuf(systemDelete.expirationTime)\n                        : undefined,\n            }),\n            transactions,\n            signedTransactions,\n            transactionIds,\n            nodeIds,\n            bodies\n        );\n    }\n\n    /**\n     * @returns {?FileId}\n     */\n    get fileId() {\n        return this._fileId;\n    }\n\n    /**\n     * @param {FileId | string} fileId\n     * @returns {this}\n     */\n    setFileId(fileId) {\n        this._requireNotFrozen();\n        this._fileId =\n            fileId instanceof FileId ? fileId : FileId.fromString(fileId);\n\n        return this;\n    }\n\n    /**\n     * @returns {?ContractId}\n     */\n    get contractId() {\n        return this._contractId;\n    }\n\n    /**\n     * @param {ContractId | string} contractId\n     * @returns {this}\n     */\n    setContractId(contractId) {\n        this._requireNotFrozen();\n        this._contractId =\n            contractId instanceof ContractId\n                ? contractId\n                : ContractId.fromString(contractId);\n\n        return this;\n    }\n\n    /**\n     * @returns {?Timestamp}\n     */\n    get expirationTime() {\n        return this._expirationTime;\n    }\n\n    /**\n     * @param {Timestamp} expirationTime\n     * @returns {SystemDeleteTransaction}\n     */\n    setExpirationTime(expirationTime) {\n        this._requireNotFrozen();\n        this._expirationTime = expirationTime;\n        return this;\n    }\n\n    /**\n     * @override\n     * @internal\n     * @param {Channel} channel\n     * @param {proto.ITransaction} request\n     * @returns {Promise<proto.ITransactionResponse>}\n     */\n    _execute(channel, request) {\n        if (this._fileId != null) {\n            return channel.file.systemDelete(request);\n        } else {\n            return channel.smartContract.systemDelete(request);\n        }\n    }\n\n    /**\n     * @override\n     * @protected\n     * @returns {NonNullable<proto.TransactionBody[\"data\"]>}\n     */\n    _getTransactionDataCase() {\n        return \"systemDelete\";\n    }\n\n    /**\n     * @override\n     * @protected\n     * @returns {proto.ISystemDeleteTransactionBody}\n     */\n    _makeTransactionData() {\n        return {\n            fileID: this._fileId != null ? this._fileId._toProtobuf() : null,\n            contractID:\n                this._contractId != null\n                    ? this._contractId._toProtobuf()\n                    : null,\n            expirationTime:\n                this._expirationTime != null\n                    ? this._expirationTime._toProtobuf()\n                    : null,\n        };\n    }\n}\n\n// eslint-disable-next-line @typescript-eslint/unbound-method\nTRANSACTION_REGISTRY.set(\"systemDelete\", SystemDeleteTransaction._fromProtobuf);\n", "import Transaction, {\n    TRANSACTION_REGISTRY,\n} from \"../transaction/Transaction.js\";\nimport FileId from \"../file/FileId.js\";\nimport ContractId from \"../contract/ContractId.js\";\n\n/**\n * @namespace proto\n * @typedef {import(\"@hashgraph/proto\").ITransaction} proto.ITransaction\n * @typedef {import(\"@hashgraph/proto\").ISignedTransaction} proto.ISignedTransaction\n * @typedef {import(\"@hashgraph/proto\").TransactionBody} proto.TransactionBody\n * @typedef {import(\"@hashgraph/proto\").ITransactionBody} proto.ITransactionBody\n * @typedef {import(\"@hashgraph/proto\").ITransactionResponse} proto.ITransactionResponse\n * @typedef {import(\"@hashgraph/proto\").ISystemUndeleteTransactionBody} proto.ISystemUndeleteTransactionBody\n * @typedef {import(\"@hashgraph/proto\").IContractID} proto.IContractID\n * @typedef {import(\"@hashgraph/proto\").IFileID} proto.IFileID\n */\n\n/**\n * @typedef {import(\"../channel/Channel.js\").default} Channel\n * @typedef {import(\"../Timestamp.js\").default} Timestamp\n * @typedef {import(\"../account/AccountId.js\").default} AccountId\n * @typedef {import(\"../transaction/TransactionId.js\").default} TransactionId\n */\n\nexport default class SystemUndeleteTransaction extends Transaction {\n    /**\n     * @param {object} [props]\n     * @param {FileId | string} [props.fileId]\n     * @param {ContractId | string} [props.contractId]\n     * @param {Timestamp} [props.expirationTime]\n     */\n    constructor(props = {}) {\n        super();\n\n        /**\n         * @private\n         * @type {?FileId}\n         */\n        this._fileId = null;\n\n        /**\n         * @private\n         * @type {?ContractId}\n         */\n        this._contractId = null;\n\n        if (props.fileId != null) {\n            this.setFileId(props.fileId);\n        }\n\n        if (props.contractId != null) {\n            this.setContractId(props.contractId);\n        }\n    }\n\n    /**\n     * @internal\n     * @param {proto.ITransaction[]} transactions\n     * @param {proto.ISignedTransaction[]} signedTransactions\n     * @param {TransactionId[]} transactionIds\n     * @param {AccountId[]} nodeIds\n     * @param {proto.ITransactionBody[]} bodies\n     * @returns {SystemUndeleteTransaction}\n     */\n    static _fromProtobuf(\n        transactions,\n        signedTransactions,\n        transactionIds,\n        nodeIds,\n        bodies\n    ) {\n        const body = bodies[0];\n        const systemUndelete =\n            /** @type {proto.ISystemUndeleteTransactionBody} */ (\n                body.systemUndelete\n            );\n\n        return Transaction._fromProtobufTransactions(\n            new SystemUndeleteTransaction({\n                fileId:\n                    systemUndelete.fileID != null\n                        ? FileId._fromProtobuf(\n                              /** @type {proto.IFileID} */ (\n                                  systemUndelete.fileID\n                              )\n                          )\n                        : undefined,\n                contractId:\n                    systemUndelete.contractID != null\n                        ? ContractId._fromProtobuf(\n                              /** @type {proto.IContractID} */ (\n                                  systemUndelete.contractID\n                              )\n                          )\n                        : undefined,\n            }),\n            transactions,\n            signedTransactions,\n            transactionIds,\n            nodeIds,\n            bodies\n        );\n    }\n\n    /**\n     * @returns {?FileId}\n     */\n    get fileId() {\n        return this._fileId;\n    }\n\n    /**\n     * @param {FileId | string} fileId\n     * @returns {this}\n     */\n    setFileId(fileId) {\n        this._requireNotFrozen();\n        this._fileId =\n            fileId instanceof FileId ? fileId : FileId.fromString(fileId);\n\n        return this;\n    }\n\n    /**\n     * @returns {?ContractId}\n     */\n    get contractId() {\n        return this._contractId;\n    }\n\n    /**\n     * @param {ContractId | string} contractId\n     * @returns {this}\n     */\n    setContractId(contractId) {\n        this._requireNotFrozen();\n        this._contractId =\n            contractId instanceof ContractId\n                ? contractId\n                : ContractId.fromString(contractId);\n\n        return this;\n    }\n\n    /**\n     * @override\n     * @internal\n     * @param {Channel} channel\n     * @param {proto.ITransaction} request\n     * @returns {Promise<proto.ITransactionResponse>}\n     */\n    _execute(channel, request) {\n        if (this._fileId != null) {\n            return channel.file.systemUndelete(request);\n        } else {\n            return channel.smartContract.systemUndelete(request);\n        }\n    }\n\n    /**\n     * @override\n     * @protected\n     * @returns {NonNullable<proto.TransactionBody[\"data\"]>}\n     */\n    _getTransactionDataCase() {\n        return \"systemUndelete\";\n    }\n\n    /**\n     * @override\n     * @protected\n     * @returns {proto.ISystemUndeleteTransactionBody}\n     */\n    _makeTransactionData() {\n        return {\n            fileID: this._fileId != null ? this._fileId._toProtobuf() : null,\n            contractID:\n                this._contractId != null\n                    ? this._contractId._toProtobuf()\n                    : null,\n        };\n    }\n}\n\nTRANSACTION_REGISTRY.set(\n    \"systemUndelete\",\n    // eslint-disable-next-line @typescript-eslint/unbound-method\n    SystemUndeleteTransaction._fromProtobuf\n);\n", "import AccountId from \"../account/AccountId.js\";\n\n/**\n * @namespace proto\n * @typedef {import(\"@hashgraph/proto\").ICustomFee} proto.ICustomFee\n */\n\nexport default class CustomFee {\n    /**\n     * @param {object} props\n     * @param {AccountId | string} [props.feeCollectorAccountId]\n     */\n    constructor(props = {}) {\n        /**\n         * @type {?AccountId}\n         */\n        this._feeCollectorAccountId;\n\n        if (props.feeCollectorAccountId != null) {\n            this.setFeeCollectorAccountId(props.feeCollectorAccountId);\n        }\n    }\n\n    /**\n     * @returns {?AccountId}\n     */\n    get feeCollectorAccountId() {\n        return this._feeCollectorAccountId;\n    }\n\n    /**\n     * @param {AccountId | string} feeCollectorAccountId\n     * @returns {this}\n     */\n    setFeeCollectorAccountId(feeCollectorAccountId) {\n        this._feeCollectorAccountId =\n            typeof feeCollectorAccountId === \"string\"\n                ? AccountId.fromString(feeCollectorAccountId)\n                : feeCollectorAccountId;\n        return this;\n    }\n\n    /**\n     * @internal\n     * @abstract\n     * @param {proto.ICustomFee} info\n     * @returns {CustomFee}\n     */\n    // eslint-disable-next-line @typescript-eslint/no-unused-vars\n    static _fromProtobuf(info) {\n        throw new Error(\"not implemented\");\n    }\n\n    /**\n     * @internal\n     * @abstract\n     * @returns {proto.ICustomFee}\n     */\n    _toProtobuf() {\n        throw new Error(\"not implemented\");\n    }\n}\n", "import TokenId from \"./TokenId.js\";\nimport CustomFee from \"./CustomFee.js\";\nimport AccountId from \"../account/AccountId.js\";\nimport Long from \"long\";\nimport Hbar from \"../Hbar.js\";\n\n/**\n * @namespace proto\n * @typedef {import(\"@hashgraph/proto\").ICustomFee} proto.ICustomFee\n * @typedef {import(\"@hashgraph/proto\").IFixedFee} proto.IFixedFee\n */\n\nexport default class CustomFixedFee extends CustomFee {\n    /**\n     * @param {object} props\n     * @param {AccountId | string} [props.feeCollectorAccountId]\n     * @param {TokenId | string} [props.denominatingTokenId]\n     * @param {Long | number} [props.amount]\n     */\n    constructor(props = {}) {\n        super(props);\n\n        /**\n         * @type {?TokenId}\n         */\n        this._denominatingTokenId;\n\n        if (props.denominatingTokenId != null) {\n            this.setDenominatingTokenId(props.denominatingTokenId);\n        }\n\n        /**\n         * @type {?Long}\n         */\n        this._amount;\n\n        if (props.amount != null) {\n            this.setAmount(props.amount);\n        }\n    }\n\n    /**\n     * @param {Hbar} amount\n     * @returns {CustomFixedFee}\n     */\n    setHbarAmount(amount) {\n        this._amount = amount.toTinybars();\n        this._denominatingTokenId = null;\n        return this;\n    }\n\n    /**\n     * @returns {TokenId | Hbar | null}\n     */\n    get hbarAmount() {\n        return this._denominatingTokenId != null\n            ? null\n            : Hbar.fromTinybars(this._amount != null ? this._amount : 0);\n    }\n\n    /**\n     * @returns {CustomFixedFee}\n     */\n    setDenominatingTokenToSameToken() {\n        this._denominatingTokenId = new TokenId(0, 0, 0);\n        return this;\n    }\n\n    /**\n     * @returns {?TokenId}\n     */\n    get denominatingTokenId() {\n        return this._denominatingTokenId;\n    }\n\n    /**\n     * @param {TokenId | string} denominatingTokenId\n     * @returns {CustomFixedFee}\n     */\n    setDenominatingTokenId(denominatingTokenId) {\n        this._denominatingTokenId =\n            typeof denominatingTokenId === \"string\"\n                ? TokenId.fromString(denominatingTokenId)\n                : denominatingTokenId;\n        return this;\n    }\n\n    /**\n     * @returns {?Long}\n     */\n    get amount() {\n        return this._amount;\n    }\n\n    /**\n     * @param {Long | number} amount\n     * @returns {CustomFixedFee}\n     */\n    setAmount(amount) {\n        this._amount =\n            typeof amount === \"number\" ? Long.fromNumber(amount) : amount;\n        return this;\n    }\n\n    /**\n     * @internal\n     * @override\n     * @param {proto.ICustomFee} info\n     * @returns {CustomFee}\n     */\n    // eslint-disable-next-line @typescript-eslint/no-unused-vars\n    static _fromProtobuf(info) {\n        const fee = /** @type {proto.IFixedFee} */ (info.fixedFee);\n\n        return new CustomFixedFee({\n            feeCollectorAccountId:\n                info.feeCollectorAccountId != null\n                    ? AccountId._fromProtobuf(info.feeCollectorAccountId)\n                    : undefined,\n            denominatingTokenId:\n                fee.denominatingTokenId != null\n                    ? TokenId._fromProtobuf(fee.denominatingTokenId)\n                    : undefined,\n            amount: fee.amount != null ? fee.amount : undefined,\n        });\n    }\n\n    /**\n     * @internal\n     * @abstract\n     * @returns {proto.ICustomFee}\n     */\n    _toProtobuf() {\n        return {\n            feeCollectorAccountId:\n                this.feeCollectorAccountId != null\n                    ? this.feeCollectorAccountId._toProtobuf()\n                    : null,\n            fixedFee: {\n                denominatingTokenId:\n                    this._denominatingTokenId != null\n                        ? this._denominatingTokenId._toProtobuf()\n                        : null,\n                amount: this._amount,\n            },\n        };\n    }\n}\n", "import CustomFee from \"./CustomFee.js\";\nimport AccountId from \"../account/AccountId.js\";\nimport Long from \"long\";\nimport CustomFixedFee from \"./CustomFixedFee.js\";\n\n/**\n * @namespace proto\n * @typedef {import(\"@hashgraph/proto\").IFraction} proto.IFraction\n * @typedef {import(\"@hashgraph/proto\").IRoyaltyFee} proto.IRoyaltyFee\n * @typedef {import(\"@hashgraph/proto\").ICustomFee} proto.ICustomFee\n * @typedef {import(\"@hashgraph/proto\").IFixedFee} proto.IFixedFee\n */\n\nexport default class CustomRoyalyFee extends CustomFee {\n    /**\n     * @param {object} props\n     * @param {AccountId | string} [props.feeCollectorAccountId]\n     * @param {Long | number} [props.numerator]\n     * @param {Long | number} [props.denominator]\n     * @param {CustomFixedFee} [props.fallbackFee]\n     */\n    constructor(props = {}) {\n        super(props);\n\n        /**\n         * @type {?CustomFixedFee}\n         */\n        this._fallbackFee;\n\n        if (props.fallbackFee != null) {\n            this.setFallbackFee(props.fallbackFee);\n        }\n\n        /**\n         * @type {?Long}\n         */\n        this._numerator;\n\n        if (props.numerator != null) {\n            this.setNumerator(props.numerator);\n        }\n\n        /**\n         * @type {?Long}\n         */\n        this._denominator;\n\n        if (props.denominator != null) {\n            this.setDenominator(props.denominator);\n        }\n    }\n\n    /**\n     * @returns {?CustomFixedFee}\n     */\n    get fallbackFee() {\n        return this._fallbackFee;\n    }\n\n    /**\n     * @param {CustomFixedFee} fallbackFee\n     * @returns {CustomRoyalyFee}\n     */\n    setFallbackFee(fallbackFee) {\n        this._fallbackFee = fallbackFee;\n        return this;\n    }\n\n    /**\n     * @returns {?Long}\n     */\n    get numerator() {\n        return this._numerator;\n    }\n\n    /**\n     * @param {Long | number} numerator\n     * @returns {CustomRoyalyFee}\n     */\n    setNumerator(numerator) {\n        this._numerator =\n            typeof numerator === \"number\"\n                ? Long.fromNumber(numerator)\n                : numerator;\n        return this;\n    }\n\n    /**\n     * @returns {?Long}\n     */\n    get denominator() {\n        return this._denominator;\n    }\n\n    /**\n     * @param {Long | number} denominator\n     * @returns {CustomRoyalyFee}\n     */\n    setDenominator(denominator) {\n        this._denominator =\n            typeof denominator === \"number\"\n                ? Long.fromNumber(denominator)\n                : denominator;\n        return this;\n    }\n\n    /**\n     * @internal\n     * @override\n     * @param {proto.ICustomFee} info\n     * @returns {CustomFee}\n     */\n    // eslint-disable-next-line @typescript-eslint/no-unused-vars\n    static _fromProtobuf(info) {\n        const fee = /** @type {proto.IRoyaltyFee} */ (info.royaltyFee);\n        const fraction = /** @type {proto.IFraction} */ (\n            fee.exchangeValueFraction\n        );\n\n        return new CustomRoyalyFee({\n            feeCollectorAccountId:\n                info.feeCollectorAccountId != null\n                    ? AccountId._fromProtobuf(info.feeCollectorAccountId)\n                    : undefined,\n            fallbackFee:\n                fee.fallbackFee != null\n                    ? /** @type {CustomFixedFee} */ (\n                          CustomFixedFee._fromProtobuf({\n                              fixedFee: fee.fallbackFee,\n                          })\n                      )\n                    : undefined,\n            numerator:\n                fraction.numerator != null ? fraction.numerator : undefined,\n            denominator:\n                fraction.denominator != null ? fraction.denominator : undefined,\n        });\n    }\n\n    /**\n     * @internal\n     * @abstract\n     * @returns {proto.ICustomFee}\n     */\n    _toProtobuf() {\n        return {\n            feeCollectorAccountId:\n                this.feeCollectorAccountId != null\n                    ? this.feeCollectorAccountId._toProtobuf()\n                    : null,\n            royaltyFee: {\n                exchangeValueFraction: {\n                    numerator: this._numerator,\n                    denominator: this._denominator,\n                },\n                fallbackFee:\n                    this._fallbackFee != null\n                        ? this._fallbackFee._toProtobuf().fixedFee\n                        : null,\n            },\n        };\n    }\n}\n", "import CustomFee from \"./CustomFee.js\";\nimport AccountId from \"../account/AccountId.js\";\nimport Long from \"long\";\n\n/**\n * @typedef {import(\"./FeeAssessmentMethod.js\").default} FeeAssessmentMethod\n */\n\n/**\n * @namespace proto\n * @typedef {import(\"@hashgraph/proto\").ICustomFee} proto.ICustomFee\n * @typedef {import(\"@hashgraph/proto\").IFractionalFee} proto.IFractionalFee\n * @typedef {import(\"@hashgraph/proto\").IFraction} proto.IFraction\n */\n\nexport default class CustomFractionalFee extends CustomFee {\n    /**\n     * @param {object} props\n     * @param {AccountId | string} [props.feeCollectorAccountId]\n     * @param {Long | number} [props.numerator]\n     * @param {Long | number} [props.denominator]\n     * @param {Long | number} [props.min]\n     * @param {Long | number} [props.max]\n     * @param {FeeAssessmentMethod} [props.assessmentMethod]\n     */\n    constructor(props = {}) {\n        super(props);\n\n        /**\n         * @type {?Long}\n         */\n        this._numerator;\n\n        if (props.numerator != null) {\n            this.setNumerator(props.numerator);\n        }\n\n        /**\n         * @type {?Long}\n         */\n        this._denominator;\n\n        if (props.denominator != null) {\n            this.setDenominator(props.denominator);\n        }\n\n        /**\n         * @type {?Long}\n         */\n        this._min;\n\n        if (props.min != null) {\n            this.setMin(props.min);\n        }\n\n        /**\n         * @type {?Long}\n         */\n        this._max;\n\n        if (props.max != null) {\n            this.setMax(props.max);\n        }\n\n        /**\n         * @type {?FeeAssessmentMethod}\n         */\n        this._assessmentMethod;\n\n        if (props.assessmentMethod != null) {\n            this.setAssessmentMethod(props.assessmentMethod);\n        }\n    }\n\n    /**\n     * @returns {?Long}\n     */\n    get numerator() {\n        return this._numerator;\n    }\n\n    /**\n     * @param {Long | number} numerator\n     * @returns {CustomFractionalFee}\n     */\n    setNumerator(numerator) {\n        this._numerator =\n            typeof numerator === \"number\"\n                ? Long.fromNumber(numerator)\n                : numerator;\n        return this;\n    }\n\n    /**\n     * @returns {?Long}\n     */\n    get denominator() {\n        return this._denominator;\n    }\n\n    /**\n     * @param {Long | number} denominator\n     * @returns {CustomFractionalFee}\n     */\n    setDenominator(denominator) {\n        this._denominator =\n            typeof denominator === \"number\"\n                ? Long.fromNumber(denominator)\n                : denominator;\n        return this;\n    }\n\n    /**\n     * @returns {?Long}\n     */\n    get min() {\n        return this._min;\n    }\n\n    /**\n     * @param {Long | number} min\n     * @returns {CustomFractionalFee}\n     */\n    setMin(min) {\n        this._min = typeof min === \"number\" ? Long.fromNumber(min) : min;\n        return this;\n    }\n\n    /**\n     * @returns {?Long}\n     */\n    get max() {\n        return this._max;\n    }\n\n    /**\n     * @param {Long | number} max\n     * @returns {CustomFractionalFee}\n     */\n    setMax(max) {\n        this._max = typeof max === \"number\" ? Long.fromNumber(max) : max;\n        return this;\n    }\n\n    /**\n     * @returns {?FeeAssessmentMethod}\n     */\n    get assessmentMethod() {\n        return this._assessmentMethod;\n    }\n\n    /**\n     * @param {FeeAssessmentMethod} assessmentMethod\n     * @returns {CustomFractionalFee}\n     */\n    setAssessmentMethod(assessmentMethod) {\n        this._assessmentMethod = assessmentMethod;\n        return this;\n    }\n\n    /**\n     * @internal\n     * @override\n     * @param {proto.ICustomFee} info\n     * @returns {CustomFee}\n     */\n    // eslint-disable-next-line @typescript-eslint/no-unused-vars\n    static _fromProtobuf(info) {\n        const fee = /** @type {proto.IFractionalFee} */ (info.fractionalFee);\n        const fractional = /** @type {proto.IFraction} */ (\n            fee.fractionalAmount\n        );\n\n        return new CustomFractionalFee({\n            feeCollectorAccountId:\n                info.feeCollectorAccountId != null\n                    ? AccountId._fromProtobuf(info.feeCollectorAccountId)\n                    : undefined,\n            numerator:\n                fractional.numerator != null ? fractional.numerator : undefined,\n            denominator:\n                fractional.denominator != null\n                    ? fractional.denominator\n                    : undefined,\n            min: fee.minimumAmount != null ? fee.minimumAmount : undefined,\n            max: fee.maximumAmount != null ? fee.maximumAmount : undefined,\n        });\n    }\n\n    /**\n     * @internal\n     * @abstract\n     * @returns {proto.ICustomFee}\n     */\n    _toProtobuf() {\n        return {\n            feeCollectorAccountId:\n                this.feeCollectorAccountId != null\n                    ? this.feeCollectorAccountId._toProtobuf()\n                    : null,\n            fractionalFee: {\n                fractionalAmount: {\n                    numerator: this._numerator,\n                    denominator: this._denominator,\n                },\n                minimumAmount: this._min,\n                maximumAmount: this._max,\n            },\n        };\n    }\n}\n", "import * as proto from \"@hashgraph/proto\";\nimport TokenId from \"../token/TokenId.js\";\nimport Long from \"long\";\n\n/**\n * The ID for a crypto-currency token on Hedera.\n *\n * @augments {EntityId<proto.INftID>}\n */\nexport default class NftId {\n    /**\n     * @param {TokenId} token\n     * @param {number | Long} serial\n     */\n    constructor(token, serial) {\n        this.tokenId = token;\n        this.serial =\n            typeof serial === \"number\" ? Long.fromNumber(serial) : serial;\n\n        Object.freeze(this);\n    }\n\n    /**\n     * @param {string} text\n     * @returns {NftId}\n     */\n    static fromString(text) {\n        const strings =\n            text.split(\"/\").length > 1 ? text.split(\"/\") : text.split(\"@\");\n\n        for (const string of strings) {\n            if (string === \"\") {\n                throw new Error(\n                    \"invalid format for NftId: use [token]/[serial] or [token]@[serial]\"\n                );\n            }\n        }\n\n        const token = TokenId.fromString(strings[0]);\n        const serial = Long.fromString(strings[1]);\n\n        return new NftId(token, serial);\n    }\n\n    /**\n     * @internal\n     * @param {proto.INftID} id\n     * @returns {NftId}\n     */\n    static _fromProtobuf(id) {\n        return new NftId(\n            TokenId._fromProtobuf(/** @type {proto.ITokenID} */ (id.tokenID)),\n            id.serialNumber != null ? id.serialNumber : Long.ZERO\n        );\n    }\n\n    /**\n     * @param {Uint8Array} bytes\n     * @returns {NftId}\n     */\n    static fromBytes(bytes) {\n        return NftId._fromProtobuf(proto.NftID.decode(bytes));\n    }\n\n    /**\n     * @internal\n     * @returns {proto.INftID}\n     */\n    _toProtobuf() {\n        return {\n            tokenID: this.tokenId._toProtobuf(),\n            serialNumber: Long.fromValue(\n                this.serial !== undefined ? this.serial : 0\n            ),\n        };\n    }\n\n    /**\n     * @returns {string}\n     */\n    toString() {\n        return `${this.serial.toString()}@${this.tokenId.toString()}`;\n    }\n\n    /**\n     * @returns {Uint8Array}\n     */\n    toBytes() {\n        return proto.NftID.encode(this._toProtobuf()).finish();\n    }\n}\n", "import Hbar from \"../Hbar.js\";\nimport TokenId from \"./TokenId.js\";\nimport AccountId from \"../account/AccountId.js\";\nimport Transaction, {\n    TRANSACTION_REGISTRY,\n} from \"../transaction/Transaction.js\";\n\n/**\n * @namespace proto\n * @typedef {import(\"@hashgraph/proto\").ITransaction} proto.ITransaction\n * @typedef {import(\"@hashgraph/proto\").ISignedTransaction} proto.ISignedTransaction\n * @typedef {import(\"@hashgraph/proto\").TransactionBody} proto.TransactionBody\n * @typedef {import(\"@hashgraph/proto\").ITransactionBody} proto.ITransactionBody\n * @typedef {import(\"@hashgraph/proto\").ITransactionResponse} proto.ITransactionResponse\n * @typedef {import(\"@hashgraph/proto\").ITokenAssociateTransactionBody} proto.ITokenAssociateTransactionBody\n * @typedef {import(\"@hashgraph/proto\").ITokenID} proto.ITokenID\n */\n\n/**\n * @typedef {import(\"../channel/Channel.js\").default} Channel\n * @typedef {import(\"../client/Client.js\").default<*, *>} Client\n * @typedef {import(\"../transaction/TransactionId.js\").default} TransactionId\n */\n\n/**\n * Associate a new Hedera\u2122 crypto-currency token.\n */\nexport default class TokenAssociateTransaction extends Transaction {\n    /**\n     * @param {object} [props]\n     * @param {(TokenId | string)[]} [props.tokenIds]\n     * @param {AccountId | string} [props.accountId]\n     */\n    constructor(props = {}) {\n        super();\n\n        /**\n         * @private\n         * @type {?TokenId[]}\n         */\n        this._tokenIds = null;\n\n        /**\n         * @private\n         * @type {?AccountId}\n         */\n        this._accountId = null;\n\n        this.setMaxTransactionFee(new Hbar(5));\n\n        if (props.tokenIds != null) {\n            this.setTokenIds(props.tokenIds);\n        }\n\n        if (props.accountId != null) {\n            this.setAccountId(props.accountId);\n        }\n    }\n\n    /**\n     * @internal\n     * @param {proto.ITransaction[]} transactions\n     * @param {proto.ISignedTransaction[]} signedTransactions\n     * @param {TransactionId[]} transactionIds\n     * @param {AccountId[]} nodeIds\n     * @param {proto.ITransactionBody[]} bodies\n     * @returns {TokenAssociateTransaction}\n     */\n    static _fromProtobuf(\n        transactions,\n        signedTransactions,\n        transactionIds,\n        nodeIds,\n        bodies\n    ) {\n        const body = bodies[0];\n        const associateToken =\n            /** @type {proto.ITokenAssociateTransactionBody} */ (\n                body.tokenAssociate\n            );\n\n        return Transaction._fromProtobufTransactions(\n            new TokenAssociateTransaction({\n                tokenIds:\n                    associateToken.tokens != null\n                        ? associateToken.tokens.map((token) =>\n                              TokenId._fromProtobuf(token)\n                          )\n                        : undefined,\n                accountId:\n                    associateToken.account != null\n                        ? AccountId._fromProtobuf(associateToken.account)\n                        : undefined,\n            }),\n            transactions,\n            signedTransactions,\n            transactionIds,\n            nodeIds,\n            bodies\n        );\n    }\n\n    /**\n     * @returns {?TokenId[]}\n     */\n    get tokenIds() {\n        return this._tokenIds;\n    }\n\n    /**\n     * @param {(TokenId | string)[]} tokenIds\n     * @returns {this}\n     */\n    setTokenIds(tokenIds) {\n        this._requireNotFrozen();\n        this._tokenIds = tokenIds.map((tokenId) =>\n            typeof tokenId === \"string\"\n                ? TokenId.fromString(tokenId)\n                : tokenId.clone()\n        );\n\n        return this;\n    }\n\n    /**\n     * @returns {?AccountId}\n     */\n    get accountId() {\n        return this._accountId;\n    }\n\n    /**\n     * @param {AccountId | string} accountId\n     * @returns {this}\n     */\n    setAccountId(accountId) {\n        this._requireNotFrozen();\n        this._accountId =\n            typeof accountId === \"string\"\n                ? AccountId.fromString(accountId)\n                : accountId.clone();\n\n        return this;\n    }\n\n    /**\n     * @param {Client} client\n     */\n    _validateChecksums(client) {\n        if (this._accountId != null) {\n            this._accountId.validateChecksum(client);\n        }\n\n        for (const tokenId of this._tokenIds != null ? this._tokenIds : []) {\n            if (tokenId != null) {\n                tokenId.validateChecksum(client);\n            }\n        }\n    }\n\n    /**\n     * @override\n     * @internal\n     * @param {Channel} channel\n     * @param {proto.ITransaction} request\n     * @returns {Promise<proto.ITransactionResponse>}\n     */\n    _execute(channel, request) {\n        return channel.token.associateTokens(request);\n    }\n\n    /**\n     * @override\n     * @protected\n     * @returns {NonNullable<proto.TransactionBody[\"data\"]>}\n     */\n    _getTransactionDataCase() {\n        return \"tokenAssociate\";\n    }\n\n    /**\n     * @override\n     * @protected\n     * @returns {proto.ITokenAssociateTransactionBody}\n     */\n    _makeTransactionData() {\n        return {\n            tokens:\n                this._tokenIds != null\n                    ? this._tokenIds.map((tokenId) => tokenId._toProtobuf())\n                    : null,\n            account:\n                this._accountId != null ? this._accountId._toProtobuf() : null,\n        };\n    }\n}\n\nTRANSACTION_REGISTRY.set(\n    \"tokenAssociate\",\n    // eslint-disable-next-line @typescript-eslint/unbound-method\n    TokenAssociateTransaction._fromProtobuf\n);\n", "import TokenId from \"./TokenId.js\";\nimport Transaction, {\n    TRANSACTION_REGISTRY,\n} from \"../transaction/Transaction.js\";\nimport Long from \"long\";\n\n/**\n * @namespace proto\n * @typedef {import(\"@hashgraph/proto\").ITransaction} proto.ITransaction\n * @typedef {import(\"@hashgraph/proto\").ISignedTransaction} proto.ISignedTransaction\n * @typedef {import(\"@hashgraph/proto\").TransactionBody} proto.TransactionBody\n * @typedef {import(\"@hashgraph/proto\").ITransactionBody} proto.ITransactionBody\n * @typedef {import(\"@hashgraph/proto\").ITransactionResponse} proto.ITransactionResponse\n * @typedef {import(\"@hashgraph/proto\").ITokenBurnTransactionBody} proto.ITokenBurnTransactionBody\n * @typedef {import(\"@hashgraph/proto\").ITokenID} proto.ITokenID\n */\n\n/**\n * @typedef {import(\"../channel/Channel.js\").default} Channel\n * @typedef {import(\"../client/Client.js\").default<*, *>} Client\n * @typedef {import(\"../account/AccountId.js\").default} AccountId\n * @typedef {import(\"../transaction/TransactionId.js\").default} TransactionId\n */\n\n/**\n * Burn a new Hedera\u2122 crypto-currency token.\n */\nexport default class TokenBurnTransaction extends Transaction {\n    /**\n     * @param {object} [props]\n     * @param {TokenId | string} [props.tokenId]\n     * @param {Long | number} [props.amount]\n     * @param {(Long | number)[]} [props.serials]\n     */\n    constructor(props = {}) {\n        super();\n\n        /**\n         * @private\n         * @type {?TokenId}\n         */\n        this._tokenId = null;\n\n        /**\n         * @private\n         * @type {?Long}\n         */\n        this._amount = null;\n\n        /**\n         * @private\n         * @type {Long[]}\n         */\n        this._serials = [];\n\n        if (props.tokenId != null) {\n            this.setTokenId(props.tokenId);\n        }\n\n        if (props.amount != null) {\n            this.setAmount(props.amount);\n        }\n\n        if (props.serials != null) {\n            this.setSerials(props.serials);\n        }\n    }\n\n    /**\n     * @internal\n     * @param {proto.ITransaction[]} transactions\n     * @param {proto.ISignedTransaction[]} signedTransactions\n     * @param {TransactionId[]} transactionIds\n     * @param {AccountId[]} nodeIds\n     * @param {proto.ITransactionBody[]} bodies\n     * @returns {TokenBurnTransaction}\n     */\n    static _fromProtobuf(\n        transactions,\n        signedTransactions,\n        transactionIds,\n        nodeIds,\n        bodies\n    ) {\n        const body = bodies[0];\n        const burnToken = /** @type {proto.ITokenBurnTransactionBody} */ (\n            body.tokenBurn\n        );\n\n        return Transaction._fromProtobufTransactions(\n            new TokenBurnTransaction({\n                tokenId:\n                    burnToken.token != null\n                        ? TokenId._fromProtobuf(burnToken.token)\n                        : undefined,\n                amount: burnToken.amount != null ? burnToken.amount : undefined,\n                serials:\n                    burnToken.serialNumbers != null\n                        ? burnToken.serialNumbers\n                        : undefined,\n            }),\n            transactions,\n            signedTransactions,\n            transactionIds,\n            nodeIds,\n            bodies\n        );\n    }\n\n    /**\n     * @returns {?TokenId}\n     */\n    get tokenId() {\n        return this._tokenId;\n    }\n\n    /**\n     * @param {TokenId | string} tokenId\n     * @returns {this}\n     */\n    setTokenId(tokenId) {\n        this._requireNotFrozen();\n        this._tokenId =\n            typeof tokenId === \"string\"\n                ? TokenId.fromString(tokenId)\n                : tokenId.clone();\n\n        return this;\n    }\n\n    /**\n     * @returns {?Long}\n     */\n    get amount() {\n        return this._amount;\n    }\n\n    /**\n     * @param {Long | number} amount\n     * @returns {this}\n     */\n    setAmount(amount) {\n        this._requireNotFrozen();\n        this._amount = amount instanceof Long ? amount : Long.fromValue(amount);\n\n        return this;\n    }\n\n    /**\n     * @param {Client} client\n     */\n    _validateChecksums(client) {\n        if (this._tokenId != null) {\n            this._tokenId.validateChecksum(client);\n        }\n    }\n\n    /**\n     * @returns {Long[]}\n     */\n    get serials() {\n        return this._serials;\n    }\n\n    /**\n     * @param {(Long | number)[]} serials\n     * @returns {this}\n     */\n    setSerials(serials) {\n        this._requireNotFrozen();\n        this._serials = serials.map((serial) =>\n            serial instanceof Long ? serial : Long.fromValue(serial)\n        );\n\n        return this;\n    }\n\n    /**\n     * @override\n     * @internal\n     * @param {Channel} channel\n     * @param {proto.ITransaction} request\n     * @returns {Promise<proto.ITransactionResponse>}\n     */\n    _execute(channel, request) {\n        return channel.token.burnToken(request);\n    }\n\n    /**\n     * @override\n     * @protected\n     * @returns {NonNullable<proto.TransactionBody[\"data\"]>}\n     */\n    _getTransactionDataCase() {\n        return \"tokenBurn\";\n    }\n\n    /**\n     * @override\n     * @protected\n     * @returns {proto.ITokenBurnTransactionBody}\n     */\n    _makeTransactionData() {\n        return {\n            amount: this._amount,\n            serialNumbers: this._serials,\n            token: this._tokenId != null ? this._tokenId._toProtobuf() : null,\n        };\n    }\n}\n\nTRANSACTION_REGISTRY.set(\n    \"tokenBurn\",\n    // eslint-disable-next-line @typescript-eslint/unbound-method\n    TokenBurnTransaction._fromProtobuf\n);\n", "import Hbar from \"../Hbar.js\";\nimport Transaction, {\n    DEFAULT_AUTO_RENEW_PERIOD,\n    TRANSACTION_REGISTRY,\n} from \"../transaction/Transaction.js\";\nimport Long from \"long\";\nimport AccountId from \"../account/AccountId.js\";\nimport Timestamp from \"../Timestamp.js\";\nimport Duration from \"../Duration.js\";\nimport CustomFixedFee from \"./CustomFixedFee.js\";\nimport CustomFractionalFee from \"./CustomFractionalFee.js\";\nimport CustomRoyaltyFee from \"./CustomRoyaltyFee.js\";\nimport TokenType from \"./TokenType.js\";\nimport TokenSupplyType from \"./TokenSupplyType.js\";\nimport Key from \"../Key.js\";\n\n/**\n * @namespace proto\n * @typedef {import(\"@hashgraph/proto\").ITransaction} proto.ITransaction\n * @typedef {import(\"@hashgraph/proto\").ISignedTransaction} proto.ISignedTransaction\n * @typedef {import(\"@hashgraph/proto\").TransactionBody} proto.TransactionBody\n * @typedef {import(\"@hashgraph/proto\").ITransactionBody} proto.ITransactionBody\n * @typedef {import(\"@hashgraph/proto\").ITransactionResponse} proto.ITransactionResponse\n * @typedef {import(\"@hashgraph/proto\").ITokenCreateTransactionBody} proto.ITokenCreateTransactionBody\n * @typedef {import(\"@hashgraph/proto\").ITokenID} proto.ITokenID\n */\n\n/**\n * @typedef {import(\"bignumber.js\").default} BigNumber\n * @typedef {import(\"../channel/Channel.js\").default} Channel\n * @typedef {import(\"../client/Client.js\").default<*, *>} Client\n * @typedef {import(\"../transaction/TransactionId.js\").default} TransactionId\n * @typedef {import(\"./CustomFee.js\").default} CustomFee\n */\n\n/**\n * Create a new Hedera\u2122 crypto-currency token.\n */\nexport default class TokenCreateTransaction extends Transaction {\n    /**\n     * @param {object} [props]\n     * @param {string} [props.tokenName]\n     * @param {string} [props.tokenSymbol]\n     * @param {Long | number} [props.decimals]\n     * @param {Long | number} [props.initialSupply]\n     * @param {AccountId | string} [props.treasuryAccountId]\n     * @param {Key} [props.adminKey]\n     * @param {Key} [props.kycKey]\n     * @param {Key} [props.freezeKey]\n     * @param {Key} [props.pauseKey]\n     * @param {Key} [props.wipeKey]\n     * @param {Key} [props.supplyKey]\n     * @param {Key} [props.feeScheduleKey]\n     * @param {boolean} [props.freezeDefault]\n     * @param {AccountId | string} [props.autoRenewAccountId]\n     * @param {Timestamp | Date} [props.expirationTime]\n     * @param {Duration | Long | number} [props.autoRenewPeriod]\n     * @param {string} [props.tokenMemo]\n     * @param {CustomFee[]} [props.customFees]\n     * @param {TokenType} [props.tokenType]\n     * @param {TokenSupplyType} [props.supplyType]\n     * @param {Long | number} [props.maxSupply]\n     */\n    constructor(props = {}) {\n        super();\n\n        /**\n         * @private\n         * @type {?string}\n         */\n        this._tokenName = null;\n\n        /**\n         * @private\n         * @type {?string}\n         */\n        this._tokenSymbol = null;\n\n        /**\n         * @private\n         * @type {?Long}\n         */\n        this._decimals = null;\n\n        /**\n         * @private\n         * @type {?Long}\n         */\n        this._initialSupply = null;\n\n        /**\n         * @private\n         * @type {?AccountId}\n         */\n        this._treasuryAccountId = null;\n\n        /**\n         * @private\n         * @type {?Key}\n         */\n        this._adminKey = null;\n\n        /**\n         * @private\n         * @type {?Key}\n         */\n        this._kycKey = null;\n\n        /**\n         * @private\n         * @type {?Key}\n         */\n        this._freezeKey = null;\n\n        /**\n         * @private\n         * @type {?Key}\n         */\n        this._pauseKey = null;\n\n        /**\n         * @private\n         * @type {?Key}\n         */\n        this._wipeKey = null;\n\n        /**\n         * @private\n         * @type {?Key}\n         */\n        this._supplyKey = null;\n\n        /**\n         * @private\n         * @type {?Key}\n         */\n        this._feeScheduleKey = null;\n\n        /**\n         * @private\n         * @type {?boolean}\n         */\n        this._freezeDefault = null;\n\n        /**\n         * @private\n         * @type {?AccountId}\n         */\n        this._autoRenewAccountId = null;\n\n        /**\n         * @private\n         * @type {?Timestamp}\n         */\n        this._expirationTime = null;\n\n        /**\n         * @private\n         * @type {?Duration}\n         */\n        this._autoRenewPeriod = new Duration(DEFAULT_AUTO_RENEW_PERIOD);\n\n        /**\n         * @private\n         * @type {?string}\n         */\n        this._tokenMemo = null;\n\n        /**\n         * @private\n         * @type {CustomFee[]}\n         */\n        this._customFees = [];\n\n        /**\n         * @private\n         * @type {?TokenType}\n         */\n        this._tokenType = null;\n\n        /**\n         * @private\n         * @type {?TokenSupplyType}\n         */\n        this._supplyType = null;\n\n        /**\n         * @private\n         * @type {?Long}\n         */\n        this._maxSupply = null;\n\n        this.setMaxTransactionFee(new Hbar(30));\n\n        if (props.tokenName != null) {\n            this.setTokenName(props.tokenName);\n        }\n\n        if (props.tokenSymbol != null) {\n            this.setTokenSymbol(props.tokenSymbol);\n        }\n\n        if (props.decimals != null) {\n            this.setDecimals(props.decimals);\n        }\n\n        if (props.initialSupply != null) {\n            this.setInitialSupply(props.initialSupply);\n        }\n\n        if (props.treasuryAccountId != null) {\n            this.setTreasuryAccountId(props.treasuryAccountId);\n        }\n\n        if (props.adminKey != null) {\n            this.setAdminKey(props.adminKey);\n        }\n\n        if (props.kycKey != null) {\n            this.setKycKey(props.kycKey);\n        }\n\n        if (props.freezeKey != null) {\n            this.setFreezeKey(props.freezeKey);\n        }\n\n        if (props.pauseKey != null) {\n            this.setPauseKey(props.pauseKey);\n        }\n\n        if (props.wipeKey != null) {\n            this.setWipeKey(props.wipeKey);\n        }\n\n        if (props.supplyKey != null) {\n            this.setSupplyKey(props.supplyKey);\n        }\n\n        if (props.feeScheduleKey != null) {\n            this.setFeeScheduleKey(props.feeScheduleKey);\n        }\n\n        if (props.freezeDefault != null) {\n            this.setFreezeDefault(props.freezeDefault);\n        }\n\n        if (props.autoRenewAccountId != null) {\n            this.setAutoRenewAccountId(props.autoRenewAccountId);\n        }\n\n        if (props.expirationTime != null) {\n            this.setExpirationTime(props.expirationTime);\n        }\n\n        if (props.autoRenewPeriod != null) {\n            this.setAutoRenewPeriod(props.autoRenewPeriod);\n        }\n\n        if (props.tokenMemo != null) {\n            this.setTokenMemo(props.tokenMemo);\n        }\n\n        if (props.customFees != null) {\n            this.setCustomFees(props.customFees);\n        }\n\n        if (props.tokenType != null) {\n            this.setTokenType(props.tokenType);\n        }\n\n        if (props.supplyType != null) {\n            this.setSupplyType(props.supplyType);\n        }\n\n        if (props.maxSupply != null) {\n            this.setMaxSupply(props.maxSupply);\n        }\n    }\n\n    /**\n     * @internal\n     * @param {proto.ITransaction[]} transactions\n     * @param {proto.ISignedTransaction[]} signedTransactions\n     * @param {TransactionId[]} transactionIds\n     * @param {AccountId[]} nodeIds\n     * @param {proto.ITransactionBody[]} bodies\n     * @returns {TokenCreateTransaction}\n     */\n    static _fromProtobuf(\n        transactions,\n        signedTransactions,\n        transactionIds,\n        nodeIds,\n        bodies\n    ) {\n        const body = bodies[0];\n        const create = /** @type {proto.ITokenCreateTransactionBody} */ (\n            body.tokenCreation\n        );\n\n        return Transaction._fromProtobufTransactions(\n            new TokenCreateTransaction({\n                tokenName: create.name != null ? create.name : undefined,\n                tokenSymbol: create.symbol != null ? create.symbol : undefined,\n                decimals: create.decimals != null ? create.decimals : undefined,\n                initialSupply:\n                    create.initialSupply != null\n                        ? create.initialSupply\n                        : undefined,\n                treasuryAccountId:\n                    create.treasury != null\n                        ? AccountId._fromProtobuf(create.treasury)\n                        : undefined,\n                adminKey:\n                    create.adminKey != null\n                        ? Key._fromProtobufKey(create.adminKey)\n                        : undefined,\n                kycKey:\n                    create.kycKey != null\n                        ? Key._fromProtobufKey(create.kycKey)\n                        : undefined,\n                freezeKey:\n                    create.freezeKey != null\n                        ? Key._fromProtobufKey(create.freezeKey)\n                        : undefined,\n                pauseKey:\n                    create.pauseKey != null\n                        ? Key._fromProtobufKey(create.pauseKey)\n                        : undefined,\n                wipeKey:\n                    create.wipeKey != null\n                        ? Key._fromProtobufKey(create.wipeKey)\n                        : undefined,\n                supplyKey:\n                    create.supplyKey != null\n                        ? Key._fromProtobufKey(create.supplyKey)\n                        : undefined,\n                feeScheduleKey:\n                    create.feeScheduleKey != null\n                        ? Key._fromProtobufKey(create.feeScheduleKey)\n                        : undefined,\n                freezeDefault:\n                    create.freezeDefault != null\n                        ? create.freezeDefault\n                        : undefined,\n                autoRenewAccountId:\n                    create.autoRenewAccount != null\n                        ? AccountId._fromProtobuf(create.autoRenewAccount)\n                        : undefined,\n                expirationTime:\n                    create.expiry != null\n                        ? Timestamp._fromProtobuf(create.expiry)\n                        : undefined,\n                autoRenewPeriod:\n                    create.autoRenewPeriod != null\n                        ? Duration._fromProtobuf(create.autoRenewPeriod)\n                        : undefined,\n                tokenMemo: create.memo != null ? create.memo : undefined,\n                customFees:\n                    create.customFees != null\n                        ? create.customFees.map((fee) => {\n                              if (fee.fixedFee != null) {\n                                  return CustomFixedFee._fromProtobuf(fee);\n                              } else if (fee.fractionalFee != null) {\n                                  return CustomFractionalFee._fromProtobuf(fee);\n                              } else {\n                                  return CustomRoyaltyFee._fromProtobuf(fee);\n                              }\n                          })\n                        : undefined,\n                tokenType:\n                    create.tokenType != null\n                        ? TokenType._fromCode(create.tokenType)\n                        : undefined,\n                supplyType:\n                    create.supplyType != null\n                        ? TokenSupplyType._fromCode(create.supplyType)\n                        : undefined,\n                maxSupply:\n                    create.maxSupply != null ? create.maxSupply : undefined,\n            }),\n            transactions,\n            signedTransactions,\n            transactionIds,\n            nodeIds,\n            bodies\n        );\n    }\n\n    /**\n     * @returns {?string}\n     */\n    get tokenName() {\n        return this._tokenName;\n    }\n\n    /**\n     * @param {string} name\n     * @returns {this}\n     */\n    setTokenName(name) {\n        this._requireNotFrozen();\n        this._tokenName = name;\n\n        return this;\n    }\n\n    /**\n     * @returns {?string}\n     */\n    get tokenSymbol() {\n        return this._tokenSymbol;\n    }\n\n    /**\n     * @param {string} symbol\n     * @returns {this}\n     */\n    setTokenSymbol(symbol) {\n        this._requireNotFrozen();\n        this._tokenSymbol = symbol;\n\n        return this;\n    }\n\n    /**\n     * @returns {?Long}\n     */\n    get decimals() {\n        return this._decimals;\n    }\n\n    /**\n     * @param {Long | number} decimals\n     * @returns {this}\n     */\n    setDecimals(decimals) {\n        this._requireNotFrozen();\n        this._decimals =\n            decimals instanceof Long ? decimals : Long.fromValue(decimals);\n\n        return this;\n    }\n\n    /**\n     * @returns {?Long}\n     */\n    get initialSupply() {\n        return this._initialSupply;\n    }\n\n    /**\n     * @param {Long | number} initialSupply\n     * @returns {this}\n     */\n    setInitialSupply(initialSupply) {\n        this._requireNotFrozen();\n        this._initialSupply = Long.fromValue(initialSupply);\n\n        return this;\n    }\n\n    /**\n     * @returns {?AccountId}\n     */\n    get treasuryAccountId() {\n        return this._treasuryAccountId;\n    }\n\n    /**\n     * @param {AccountId | string} id\n     * @returns {this}\n     */\n    setTreasuryAccountId(id) {\n        this._requireNotFrozen();\n        this._treasuryAccountId =\n            typeof id === \"string\" ? AccountId.fromString(id) : id.clone();\n\n        return this;\n    }\n\n    /**\n     * @returns {?Key}\n     */\n    get adminKey() {\n        return this._adminKey;\n    }\n\n    /**\n     * @param {Key} key\n     * @returns {this}\n     */\n    setAdminKey(key) {\n        this._requireNotFrozen();\n        this._adminKey = key;\n\n        return this;\n    }\n\n    /**\n     * @returns {?Key}\n     */\n    get kycKey() {\n        return this._kycKey;\n    }\n\n    /**\n     * @param {Key} key\n     * @returns {this}\n     */\n    setKycKey(key) {\n        this._requireNotFrozen();\n        this._kycKey = key;\n\n        return this;\n    }\n\n    /**\n     * @returns {?Key}\n     */\n    get freezeKey() {\n        return this._freezeKey;\n    }\n\n    /**\n     * @param {Key} key\n     * @returns {this}\n     */\n    setFreezeKey(key) {\n        this._requireNotFrozen();\n        this._freezeKey = key;\n\n        return this;\n    }\n\n    /**\n     * @returns {?Key}\n     */\n    get pauseKey() {\n        return this._pauseKey;\n    }\n\n    /**\n     * @param {Key} key\n     * @returns {this}\n     */\n    setPauseKey(key) {\n        this._requireNotFrozen();\n        this._pauseKey = key;\n\n        return this;\n    }\n\n    /**\n     * @returns {?Key}\n     */\n    get wipeKey() {\n        return this._wipeKey;\n    }\n\n    /**\n     * @param {Key} key\n     * @returns {this}\n     */\n    setWipeKey(key) {\n        this._requireNotFrozen();\n        this._wipeKey = key;\n\n        return this;\n    }\n\n    /**\n     * @returns {?Key}\n     */\n    get supplyKey() {\n        return this._supplyKey;\n    }\n\n    /**\n     * @param {Key} key\n     * @returns {this}\n     */\n    setSupplyKey(key) {\n        this._requireNotFrozen();\n        this._supplyKey = key;\n\n        return this;\n    }\n\n    /**\n     * @returns {?Key}\n     */\n    get feeScheduleKey() {\n        return this._feeScheduleKey;\n    }\n\n    /**\n     * @param {Key} key\n     * @returns {this}\n     */\n    setFeeScheduleKey(key) {\n        this._requireNotFrozen();\n        this._feeScheduleKey = key;\n\n        return this;\n    }\n\n    /**\n     * @returns {?boolean}\n     */\n    get freezeDefault() {\n        return this._freezeDefault;\n    }\n\n    /**\n     * @param {boolean} freeze\n     * @returns {this}\n     */\n    setFreezeDefault(freeze) {\n        this._requireNotFrozen();\n        this._freezeDefault = freeze;\n\n        return this;\n    }\n\n    /**\n     * @returns {?Timestamp}\n     */\n    get expirationTime() {\n        return this._expirationTime;\n    }\n\n    /**\n     * @param {Timestamp | Date} time\n     * @returns {this}\n     */\n    setExpirationTime(time) {\n        this._requireNotFrozen();\n        this._autoRenewPeriod = null;\n        this._expirationTime =\n            time instanceof Timestamp ? time : Timestamp.fromDate(time);\n\n        return this;\n    }\n\n    /**\n     * @returns {?AccountId}\n     */\n    get autoRenewAccountId() {\n        return this._autoRenewAccountId;\n    }\n\n    /**\n     * @param {AccountId | string} id\n     * @returns {this}\n     */\n    setAutoRenewAccountId(id) {\n        this._requireNotFrozen();\n        this._autoRenewAccountId =\n            id instanceof AccountId ? id : AccountId.fromString(id);\n\n        return this;\n    }\n\n    /**\n     * @returns {?Duration}\n     */\n    get autoRenewPeriod() {\n        return this._autoRenewPeriod;\n    }\n\n    /**\n     * Set the auto renew period for this token.\n     *\n     * @param {Duration | Long | number} autoRenewPeriod\n     * @returns {this}\n     */\n    setAutoRenewPeriod(autoRenewPeriod) {\n        this._requireNotFrozen();\n        this._autoRenewPeriod =\n            autoRenewPeriod instanceof Duration\n                ? autoRenewPeriod\n                : new Duration(autoRenewPeriod);\n\n        return this;\n    }\n\n    /**\n     * @returns {?string}\n     */\n    get tokenMemo() {\n        return this._tokenMemo;\n    }\n\n    /**\n     * @param {string} memo\n     * @returns {this}\n     */\n    setTokenMemo(memo) {\n        this._requireNotFrozen();\n        this._tokenMemo = memo;\n\n        return this;\n    }\n\n    /**\n     * @returns {CustomFee[]}\n     */\n    get customFees() {\n        return this._customFees;\n    }\n\n    /**\n     * @param {CustomFee[]} customFees\n     * @returns {this}\n     */\n    setCustomFees(customFees) {\n        this._customFees = customFees;\n        return this;\n    }\n\n    /**\n     * @returns {?TokenType}\n     */\n    get tokenType() {\n        return this._tokenType;\n    }\n\n    /**\n     * @param {TokenType} tokenType\n     * @returns {this}\n     */\n    setTokenType(tokenType) {\n        this._tokenType = tokenType;\n        return this;\n    }\n\n    /**\n     * @returns {?TokenSupplyType}\n     */\n    get supplyType() {\n        return this._supplyType;\n    }\n\n    /**\n     * @param {TokenSupplyType} supplyType\n     * @returns {this}\n     */\n    setSupplyType(supplyType) {\n        this._supplyType = supplyType;\n        return this;\n    }\n\n    /**\n     * @returns {?Long}\n     */\n    get maxSupply() {\n        return this._maxSupply;\n    }\n\n    /**\n     * @param {Long | number} maxSupply\n     * @returns {this}\n     */\n    setMaxSupply(maxSupply) {\n        this._maxSupply =\n            typeof maxSupply === \"number\"\n                ? Long.fromNumber(maxSupply)\n                : maxSupply;\n        return this;\n    }\n\n    /**\n     * @param {?import(\"../client/Client.js\").default<Channel, *>} client\n     * @returns {this}\n     */\n    freezeWith(client) {\n        if (\n            this._autoRenewPeriod != null &&\n            client != null &&\n            client.operatorAccountId\n        ) {\n            this._autoRenewAccountId = client.operatorAccountId;\n        }\n\n        return super.freezeWith(client);\n    }\n\n    /**\n     * @param {Client} client\n     */\n    _validateChecksums(client) {\n        if (this._treasuryAccountId != null) {\n            this._treasuryAccountId.validateChecksum(client);\n        }\n\n        if (this._autoRenewAccountId != null) {\n            this._autoRenewAccountId.validateChecksum(client);\n        }\n    }\n\n    /**\n     * @override\n     * @internal\n     * @param {Channel} channel\n     * @param {proto.ITransaction} request\n     * @returns {Promise<proto.ITransactionResponse>}\n     */\n    _execute(channel, request) {\n        return channel.token.createToken(request);\n    }\n\n    /**\n     * @override\n     * @protected\n     * @returns {NonNullable<proto.TransactionBody[\"data\"]>}\n     */\n    _getTransactionDataCase() {\n        return \"tokenCreation\";\n    }\n\n    /**\n     * @override\n     * @protected\n     * @returns {proto.ITokenCreateTransactionBody}\n     */\n    _makeTransactionData() {\n        return {\n            name: this._tokenName,\n            symbol: this._tokenSymbol,\n            decimals: this._decimals != null ? this._decimals.toInt() : null,\n            initialSupply: this._initialSupply,\n            treasury:\n                this._treasuryAccountId != null\n                    ? this._treasuryAccountId._toProtobuf()\n                    : null,\n            adminKey:\n                this._adminKey != null ? this._adminKey._toProtobufKey() : null,\n            kycKey: this._kycKey != null ? this._kycKey._toProtobufKey() : null,\n            freezeKey:\n                this._freezeKey != null\n                    ? this._freezeKey._toProtobufKey()\n                    : null,\n            pauseKey:\n                this._pauseKey != null ? this._pauseKey._toProtobufKey() : null,\n            wipeKey:\n                this._wipeKey != null ? this._wipeKey._toProtobufKey() : null,\n            supplyKey:\n                this._supplyKey != null\n                    ? this._supplyKey._toProtobufKey()\n                    : null,\n            feeScheduleKey:\n                this._feeScheduleKey != null\n                    ? this._feeScheduleKey._toProtobufKey()\n                    : null,\n            freezeDefault: this._freezeDefault,\n            autoRenewAccount:\n                this._autoRenewAccountId != null\n                    ? this._autoRenewAccountId._toProtobuf()\n                    : null,\n            expiry:\n                this._expirationTime != null\n                    ? this._expirationTime._toProtobuf()\n                    : null,\n            autoRenewPeriod:\n                this._autoRenewPeriod != null\n                    ? this._autoRenewPeriod._toProtobuf()\n                    : null,\n            memo: this._tokenMemo,\n            customFees: this.customFees.map((fee) => fee._toProtobuf()),\n            tokenType: this._tokenType != null ? this._tokenType._code : null,\n            supplyType:\n                this._supplyType != null ? this._supplyType._code : null,\n            maxSupply: this.maxSupply,\n        };\n    }\n}\n\nTRANSACTION_REGISTRY.set(\n    \"tokenCreation\",\n    // eslint-disable-next-line @typescript-eslint/unbound-method\n    TokenCreateTransaction._fromProtobuf\n);\n", "/**\n * @namespace proto\n * @typedef {import(\"@hashgraph/proto\").TokenType} proto.TokenType\n */\n\nexport default class TokenType {\n    /**\n     * @hideconstructor\n     * @internal\n     * @param {number} code\n     */\n    constructor(code) {\n        /** @readonly */\n        this._code = code;\n\n        Object.freeze(this);\n    }\n\n    /**\n     * @returns {string}\n     */\n    toString() {\n        switch (this) {\n            case TokenType.FungibleCommon:\n                return \"FUNGIBLE_COMMON\";\n            case TokenType.NonFungibleUnique:\n                return \"NON_FUNGIBLE_UNIQUE\";\n            default:\n                return `UNKNOWN (${this._code})`;\n        }\n    }\n\n    /**\n     * @internal\n     * @param {number} code\n     * @returns {TokenType}\n     */\n    static _fromCode(code) {\n        switch (code) {\n            case 0:\n                return TokenType.FungibleCommon;\n            case 1:\n                return TokenType.NonFungibleUnique;\n        }\n\n        throw new Error(\n            `(BUG) TokenType.fromCode() does not handle code: ${code}`\n        );\n    }\n\n    /**\n     * @returns {proto.TokenType}\n     */\n    valueOf() {\n        return this._code;\n    }\n}\n\n/**\n * Interchangeable value with one another, where any quantity of them has the\n * same value as another equal quantity if they are in the same class. Share\n * a single set of properties, not distinct from one another. Simply represented\n * as a balance or quantity to a given Hedera account.\n */\nTokenType.FungibleCommon = new TokenType(0);\n\n/**\n * Unique, not interchangeable with other tokens of the same type as they\n * typically have different values. Individually traced and can carry unique\n * properties (e.g. serial number).\n */\nTokenType.NonFungibleUnique = new TokenType(1);\n", "/**\n * @namespace proto\n * @typedef {import(\"@hashgraph/proto\").TokenSupplyType} proto.TokenSupplyType\n */\n\nexport default class TokenSupplyType {\n    /**\n     * @hideconstructor\n     * @internal\n     * @param {number} code\n     */\n    constructor(code) {\n        /** @readonly */\n        this._code = code;\n\n        Object.freeze(this);\n    }\n\n    /**\n     * @returns {string}\n     */\n    toString() {\n        switch (this) {\n            case TokenSupplyType.Infinite:\n                return \"INFINITE\";\n            case TokenSupplyType.Finite:\n                return \"FINITE\";\n            default:\n                return `UNKNOWN (${this._code})`;\n        }\n    }\n\n    /**\n     * @internal\n     * @param {number} code\n     * @returns {TokenSupplyType}\n     */\n    static _fromCode(code) {\n        switch (code) {\n            case 0:\n                return TokenSupplyType.Infinite;\n            case 1:\n                return TokenSupplyType.Finite;\n        }\n\n        throw new Error(\n            `(BUG) TokenSupplyType.fromCode() does not handle code: ${code}`\n        );\n    }\n\n    /**\n     * @returns {proto.TokenSupplyType}\n     */\n    valueOf() {\n        return this._code;\n    }\n}\n\n/**\n * Interchangeable value with one another, where any quantity of them has the\n * same value as another equal quantity if they are in the same class. Share\n * a single set of properties, not distinct from one another. Simply represented\n * as a balance or quantity to a given Hedera account.\n */\nTokenSupplyType.Infinite = new TokenSupplyType(0);\n\n/**\n * Unique, not interchangeable with other tokens of the same type as they\n * typically have different values. Individually traced and can carry unique\n * properties (e.g. serial number).\n */\nTokenSupplyType.Finite = new TokenSupplyType(1);\n", "import TokenId from \"./TokenId.js\";\nimport Transaction, {\n    TRANSACTION_REGISTRY,\n} from \"../transaction/Transaction.js\";\n\n/**\n * @namespace proto\n * @typedef {import(\"@hashgraph/proto\").ITransaction} proto.ITransaction\n * @typedef {import(\"@hashgraph/proto\").ISignedTransaction} proto.ISignedTransaction\n * @typedef {import(\"@hashgraph/proto\").TransactionBody} proto.TransactionBody\n * @typedef {import(\"@hashgraph/proto\").ITransactionBody} proto.ITransactionBody\n * @typedef {import(\"@hashgraph/proto\").ITransactionResponse} proto.ITransactionResponse\n * @typedef {import(\"@hashgraph/proto\").ITokenDeleteTransactionBody} proto.ITokenDeleteTransactionBody\n * @typedef {import(\"@hashgraph/proto\").ITokenID} proto.ITokenID\n */\n\n/**\n * @typedef {import(\"../channel/Channel.js\").default} Channel\n * @typedef {import(\"../client/Client.js\").default<*, *>} Client\n * @typedef {import(\"../account/AccountId.js\").default} AccountId\n * @typedef {import(\"../transaction/TransactionId.js\").default} TransactionId\n */\n\n/**\n * Delete a new Hedera\u2122 crypto-currency token.\n */\nexport default class TokenDeleteTransaction extends Transaction {\n    /**\n     * @param {object} [props]\n     * @param {TokenId | string} [props.tokenId]\n     */\n    constructor(props = {}) {\n        super();\n\n        /**\n         * @private\n         * @type {?TokenId}\n         */\n        this._tokenId = null;\n\n        if (props.tokenId != null) {\n            this.setTokenId(props.tokenId);\n        }\n    }\n\n    /**\n     * @internal\n     * @param {proto.ITransaction[]} transactions\n     * @param {proto.ISignedTransaction[]} signedTransactions\n     * @param {TransactionId[]} transactionIds\n     * @param {AccountId[]} nodeIds\n     * @param {proto.ITransactionBody[]} bodies\n     * @returns {TokenDeleteTransaction}\n     */\n    static _fromProtobuf(\n        transactions,\n        signedTransactions,\n        transactionIds,\n        nodeIds,\n        bodies\n    ) {\n        const body = bodies[0];\n        const deleteToken = /** @type {proto.ITokenDeleteTransactionBody} */ (\n            body.tokenDeletion\n        );\n\n        return Transaction._fromProtobufTransactions(\n            new TokenDeleteTransaction({\n                tokenId:\n                    deleteToken.token != null\n                        ? TokenId._fromProtobuf(deleteToken.token)\n                        : undefined,\n            }),\n            transactions,\n            signedTransactions,\n            transactionIds,\n            nodeIds,\n            bodies\n        );\n    }\n\n    /**\n     * @returns {?TokenId}\n     */\n    get tokenId() {\n        return this._tokenId;\n    }\n\n    /**\n     * @param {TokenId | string} tokenId\n     * @returns {this}\n     */\n    setTokenId(tokenId) {\n        this._requireNotFrozen();\n        this._tokenId =\n            typeof tokenId === \"string\"\n                ? TokenId.fromString(tokenId)\n                : tokenId.clone();\n\n        return this;\n    }\n\n    /**\n     * @param {Client} client\n     */\n    _validateChecksums(client) {\n        if (this._tokenId != null) {\n            this._tokenId.validateChecksum(client);\n        }\n    }\n\n    /**\n     * @override\n     * @internal\n     * @param {Channel} channel\n     * @param {proto.ITransaction} request\n     * @returns {Promise<proto.ITransactionResponse>}\n     */\n    _execute(channel, request) {\n        return channel.token.deleteToken(request);\n    }\n\n    /**\n     * @override\n     * @protected\n     * @returns {NonNullable<proto.TransactionBody[\"data\"]>}\n     */\n    _getTransactionDataCase() {\n        return \"tokenDeletion\";\n    }\n\n    /**\n     * @override\n     * @protected\n     * @returns {proto.ITokenDeleteTransactionBody}\n     */\n    _makeTransactionData() {\n        return {\n            token: this._tokenId != null ? this._tokenId._toProtobuf() : null,\n        };\n    }\n}\n\nTRANSACTION_REGISTRY.set(\n    \"tokenDeletion\",\n    // eslint-disable-next-line @typescript-eslint/unbound-method\n    TokenDeleteTransaction._fromProtobuf\n);\n", "import Hbar from \"../Hbar.js\";\nimport TokenId from \"./TokenId.js\";\nimport AccountId from \"../account/AccountId.js\";\nimport Transaction, {\n    TRANSACTION_REGISTRY,\n} from \"../transaction/Transaction.js\";\n\n/**\n * @namespace proto\n * @typedef {import(\"@hashgraph/proto\").ITransaction} proto.ITransaction\n * @typedef {import(\"@hashgraph/proto\").ISignedTransaction} proto.ISignedTransaction\n * @typedef {import(\"@hashgraph/proto\").TransactionBody} proto.TransactionBody\n * @typedef {import(\"@hashgraph/proto\").ITransactionBody} proto.ITransactionBody\n * @typedef {import(\"@hashgraph/proto\").ITransactionResponse} proto.ITransactionResponse\n * @typedef {import(\"@hashgraph/proto\").ITokenDissociateTransactionBody} proto.ITokenDissociateTransactionBody\n * @typedef {import(\"@hashgraph/proto\").ITokenID} proto.ITokenID\n */\n\n/**\n * @typedef {import(\"../channel/Channel.js\").default} Channel\n * @typedef {import(\"../client/Client.js\").default<*, *>} Client\n * @typedef {import(\"../transaction/TransactionId.js\").default} TransactionId\n */\n\n/**\n * Dissociate a new Hedera\u2122 crypto-currency token.\n */\nexport default class TokenDissociateTransaction extends Transaction {\n    /**\n     * @param {object} [props]\n     * @param {(TokenId | string)[]} [props.tokenIds]\n     * @param {AccountId | string} [props.accountId]\n     */\n    constructor(props = {}) {\n        super();\n\n        /**\n         * @private\n         * @type {?TokenId[]}\n         */\n        this._tokenIds = null;\n\n        /**\n         * @private\n         * @type {?AccountId}\n         */\n        this._accountId = null;\n\n        this.setMaxTransactionFee(new Hbar(5));\n\n        if (props.tokenIds != null) {\n            this.setTokenIds(props.tokenIds);\n        }\n\n        if (props.accountId != null) {\n            this.setAccountId(props.accountId);\n        }\n    }\n\n    /**\n     * @internal\n     * @param {proto.ITransaction[]} transactions\n     * @param {proto.ISignedTransaction[]} signedTransactions\n     * @param {TransactionId[]} transactionIds\n     * @param {AccountId[]} nodeIds\n     * @param {proto.ITransactionBody[]} bodies\n     * @returns {TokenDissociateTransaction}\n     */\n    static _fromProtobuf(\n        transactions,\n        signedTransactions,\n        transactionIds,\n        nodeIds,\n        bodies\n    ) {\n        const body = bodies[0];\n        const dissociateToken =\n            /** @type {proto.ITokenDissociateTransactionBody} */ (\n                body.tokenDissociate\n            );\n\n        return Transaction._fromProtobufTransactions(\n            new TokenDissociateTransaction({\n                tokenIds:\n                    dissociateToken.tokens != null\n                        ? dissociateToken.tokens.map((token) =>\n                              TokenId._fromProtobuf(token)\n                          )\n                        : undefined,\n                accountId:\n                    dissociateToken.account != null\n                        ? AccountId._fromProtobuf(dissociateToken.account)\n                        : undefined,\n            }),\n            transactions,\n            signedTransactions,\n            transactionIds,\n            nodeIds,\n            bodies\n        );\n    }\n\n    /**\n     * @returns {?TokenId[]}\n     */\n    get tokenIds() {\n        return this._tokenIds;\n    }\n\n    /**\n     * @param {(TokenId | string)[]} tokenIds\n     * @returns {this}\n     */\n    setTokenIds(tokenIds) {\n        this._requireNotFrozen();\n        this._tokenIds = tokenIds.map((tokenId) =>\n            typeof tokenId === \"string\"\n                ? TokenId.fromString(tokenId)\n                : tokenId.clone()\n        );\n\n        return this;\n    }\n\n    /**\n     * @returns {?AccountId}\n     */\n    get accountId() {\n        return this._accountId;\n    }\n\n    /**\n     * @param {AccountId | string} accountId\n     * @returns {this}\n     */\n    setAccountId(accountId) {\n        this._requireNotFrozen();\n        this._accountId =\n            typeof accountId === \"string\"\n                ? AccountId.fromString(accountId)\n                : accountId.clone();\n\n        return this;\n    }\n\n    /**\n     * @param {Client} client\n     */\n    _validateChecksums(client) {\n        if (this._accountId != null) {\n            this._accountId.validateChecksum(client);\n        }\n\n        for (const tokenId of this._tokenIds != null ? this._tokenIds : []) {\n            if (tokenId != null) {\n                tokenId.validateChecksum(client);\n            }\n        }\n    }\n\n    /**\n     * @override\n     * @internal\n     * @param {Channel} channel\n     * @param {proto.ITransaction} request\n     * @returns {Promise<proto.ITransactionResponse>}\n     */\n    _execute(channel, request) {\n        return channel.token.dissociateTokens(request);\n    }\n\n    /**\n     * @override\n     * @protected\n     * @returns {NonNullable<proto.TransactionBody[\"data\"]>}\n     */\n    _getTransactionDataCase() {\n        return \"tokenDissociate\";\n    }\n\n    /**\n     * @override\n     * @protected\n     * @returns {proto.ITokenDissociateTransactionBody}\n     */\n    _makeTransactionData() {\n        return {\n            tokens:\n                this._tokenIds != null\n                    ? this._tokenIds.map((tokenId) => tokenId._toProtobuf())\n                    : null,\n            account:\n                this._accountId != null ? this._accountId._toProtobuf() : null,\n        };\n    }\n}\n\nTRANSACTION_REGISTRY.set(\n    \"tokenDissociate\",\n    // eslint-disable-next-line @typescript-eslint/unbound-method\n    TokenDissociateTransaction._fromProtobuf\n);\n", "import TokenId from \"./TokenId.js\";\nimport Transaction, {\n    TRANSACTION_REGISTRY,\n} from \"../transaction/Transaction.js\";\nimport CustomFixedFee from \"./CustomFixedFee.js\";\nimport CustomFractionalFee from \"./CustomFractionalFee.js\";\nimport CustomRoyaltyFee from \"./CustomRoyaltyFee.js\";\n\n/**\n * @namespace proto\n * @typedef {import(\"@hashgraph/proto\").ITransaction} proto.ITransaction\n * @typedef {import(\"@hashgraph/proto\").ISignedTransaction} proto.ISignedTransaction\n * @typedef {import(\"@hashgraph/proto\").TransactionBody} proto.TransactionBody\n * @typedef {import(\"@hashgraph/proto\").ITransactionBody} proto.ITransactionBody\n * @typedef {import(\"@hashgraph/proto\").ITransactionResponse} proto.ITransactionResponse\n * @typedef {import(\"@hashgraph/proto\").ITokenFeeScheduleUpdateTransactionBody} proto.ITokenFeeScheduleUpdateTransactionBody\n * @typedef {import(\"@hashgraph/proto\").ITokenID} proto.ITokenID\n */\n\n/**\n * @typedef {import(\"bignumber.js\").default} BigNumber\n * @typedef {import(\"@hashgraph/cryptography\").Key} Key\n * @typedef {import(\"../channel/Channel.js\").default} Channel\n * @typedef {import(\"../transaction/TransactionId.js\").default} TransactionId\n * @typedef {import(\"./CustomFee.js\").default} CustomFee\n * @typedef {import(\"../account/AccountId.js\").default} AccountId\n */\n\n/**\n * FeeScheduleUpdate a new Hedera\u2122 crypto-currency token.\n */\nexport default class TokenFeeScheduleUpdateTransaction extends Transaction {\n    /**\n     * @param {object} [props]\n     * @param {TokenId | string} [props.tokenId]\n     * @param {CustomFee[]} [props.customFees]\n     */\n    constructor(props = {}) {\n        super();\n\n        /**\n         * @private\n         * @type {?TokenId}\n         */\n        this._tokenId = null;\n\n        /**\n         * @private\n         * @type {CustomFee[]}\n         */\n        this._customFees = [];\n\n        if (props.tokenId != null) {\n            this.setTokenId(props.tokenId);\n        }\n\n        if (props.customFees != null) {\n            this.setCustomFees(props.customFees);\n        }\n    }\n\n    /**\n     * @internal\n     * @param {proto.ITransaction[]} transactions\n     * @param {proto.ISignedTransaction[]} signedTransactions\n     * @param {TransactionId[]} transactionIds\n     * @param {AccountId[]} nodeIds\n     * @param {proto.ITransactionBody[]} bodies\n     * @returns {TokenFeeScheduleUpdateTransaction}\n     */\n    static _fromProtobuf(\n        transactions,\n        signedTransactions,\n        transactionIds,\n        nodeIds,\n        bodies\n    ) {\n        const body = bodies[0];\n        const feeScheduleUpdate =\n            /** @type {proto.ITokenFeeScheduleUpdateTransactionBody} */ (\n                body.tokenFeeScheduleUpdate\n            );\n\n        return Transaction._fromProtobufTransactions(\n            new TokenFeeScheduleUpdateTransaction({\n                tokenId:\n                    feeScheduleUpdate.tokenId != null\n                        ? TokenId._fromProtobuf(feeScheduleUpdate.tokenId)\n                        : undefined,\n                customFees:\n                    feeScheduleUpdate.customFees != null\n                        ? feeScheduleUpdate.customFees.map((fee) => {\n                              if (fee.fixedFee != null) {\n                                  return CustomFixedFee._fromProtobuf(fee);\n                              } else if (fee.fractionalFee != null) {\n                                  return CustomFractionalFee._fromProtobuf(fee);\n                              } else {\n                                  return CustomRoyaltyFee._fromProtobuf(fee);\n                              }\n                          })\n                        : undefined,\n            }),\n            transactions,\n            signedTransactions,\n            transactionIds,\n            nodeIds,\n            bodies\n        );\n    }\n\n    /**\n     * @returns {?TokenId}\n     */\n    get tokenId() {\n        return this._tokenId;\n    }\n\n    /**\n     * @param {TokenId | string} tokenId\n     * @returns {this}\n     */\n    setTokenId(tokenId) {\n        this._requireNotFrozen();\n        this._tokenId =\n            typeof tokenId === \"string\"\n                ? TokenId.fromString(tokenId)\n                : TokenId._fromProtobuf(tokenId._toProtobuf());\n\n        return this;\n    }\n\n    /**\n     * @returns {CustomFee[]}\n     */\n    get customFees() {\n        return this._customFees;\n    }\n\n    /**\n     * @param {CustomFee[]} fees\n     * @returns {this}\n     */\n    setCustomFees(fees) {\n        this._requireNotFrozen();\n        this._customFees = fees;\n\n        return this;\n    }\n\n    /**\n     * @override\n     * @internal\n     * @param {Channel} channel\n     * @param {proto.ITransaction} request\n     * @returns {Promise<proto.ITransactionResponse>}\n     */\n    _execute(channel, request) {\n        return channel.token.updateTokenFeeSchedule(request);\n    }\n\n    /**\n     * @override\n     * @protected\n     * @returns {NonNullable<proto.TransactionBody[\"data\"]>}\n     */\n    _getTransactionDataCase() {\n        return \"tokenFeeScheduleUpdate\";\n    }\n\n    /**\n     * @override\n     * @protected\n     * @returns {proto.ITokenFeeScheduleUpdateTransactionBody}\n     */\n    _makeTransactionData() {\n        return {\n            tokenId: this._tokenId != null ? this._tokenId._toProtobuf() : null,\n            customFees: this._customFees.map((fee) => fee._toProtobuf()),\n        };\n    }\n}\n\nTRANSACTION_REGISTRY.set(\n    \"tokenFeeScheduleUpdate\",\n    // eslint-disable-next-line @typescript-eslint/unbound-method\n    TokenFeeScheduleUpdateTransaction._fromProtobuf\n);\n", "import TokenId from \"./TokenId.js\";\nimport AccountId from \"../account/AccountId.js\";\nimport Transaction, {\n    TRANSACTION_REGISTRY,\n} from \"../transaction/Transaction.js\";\n\n/**\n * @namespace proto\n * @typedef {import(\"@hashgraph/proto\").ITransaction} proto.ITransaction\n * @typedef {import(\"@hashgraph/proto\").ISignedTransaction} proto.ISignedTransaction\n * @typedef {import(\"@hashgraph/proto\").TransactionBody} proto.TransactionBody\n * @typedef {import(\"@hashgraph/proto\").ITransactionBody} proto.ITransactionBody\n * @typedef {import(\"@hashgraph/proto\").ITransactionResponse} proto.ITransactionResponse\n * @typedef {import(\"@hashgraph/proto\").ITokenFreezeAccountTransactionBody} proto.ITokenFreezeAccountTransactionBody\n * @typedef {import(\"@hashgraph/proto\").ITokenID} proto.ITokenID\n */\n\n/**\n * @typedef {import(\"../channel/Channel.js\").default} Channel\n * @typedef {import(\"../client/Client.js\").default<*, *>} Client\n * @typedef {import(\"../transaction/TransactionId.js\").default} TransactionId\n */\n\n/**\n * Freeze a new Hedera\u2122 crypto-currency token.\n */\nexport default class TokenFreezeTransaction extends Transaction {\n    /**\n     * @param {object} [props]\n     * @param {TokenId | string} [props.tokenId]\n     * @param {AccountId | string} [props.accountId]\n     */\n    constructor(props = {}) {\n        super();\n\n        /**\n         * @private\n         * @type {?TokenId}\n         */\n        this._tokenId = null;\n\n        /**\n         * @private\n         * @type {?AccountId}\n         */\n        this._accountId = null;\n\n        if (props.tokenId != null) {\n            this.setTokenId(props.tokenId);\n        }\n\n        if (props.accountId != null) {\n            this.setAccountId(props.accountId);\n        }\n    }\n\n    /**\n     * @internal\n     * @param {proto.ITransaction[]} transactions\n     * @param {proto.ISignedTransaction[]} signedTransactions\n     * @param {TransactionId[]} transactionIds\n     * @param {AccountId[]} nodeIds\n     * @param {proto.ITransactionBody[]} bodies\n     * @returns {TokenFreezeTransaction}\n     */\n    static _fromProtobuf(\n        transactions,\n        signedTransactions,\n        transactionIds,\n        nodeIds,\n        bodies\n    ) {\n        const body = bodies[0];\n        const freezeToken =\n            /** @type {proto.ITokenFreezeAccountTransactionBody} */ (\n                body.tokenFreeze\n            );\n\n        return Transaction._fromProtobufTransactions(\n            new TokenFreezeTransaction({\n                tokenId:\n                    freezeToken.token != null\n                        ? TokenId._fromProtobuf(freezeToken.token)\n                        : undefined,\n                accountId:\n                    freezeToken.account != null\n                        ? AccountId._fromProtobuf(freezeToken.account)\n                        : undefined,\n            }),\n            transactions,\n            signedTransactions,\n            transactionIds,\n            nodeIds,\n            bodies\n        );\n    }\n\n    /**\n     * @returns {?TokenId}\n     */\n    get tokenId() {\n        return this._tokenId;\n    }\n\n    /**\n     * @param {TokenId | string} tokenId\n     * @returns {this}\n     */\n    setTokenId(tokenId) {\n        this._requireNotFrozen();\n        this._tokenId =\n            typeof tokenId === \"string\"\n                ? TokenId.fromString(tokenId)\n                : tokenId.clone();\n\n        return this;\n    }\n\n    /**\n     * @returns {?AccountId}\n     */\n    get accountId() {\n        return this._accountId;\n    }\n\n    /**\n     * @param {AccountId | string} accountId\n     * @returns {this}\n     */\n    setAccountId(accountId) {\n        this._requireNotFrozen();\n        this._accountId =\n            typeof accountId === \"string\"\n                ? AccountId.fromString(accountId)\n                : accountId.clone();\n\n        return this;\n    }\n\n    /**\n     * @param {Client} client\n     */\n    _validateChecksums(client) {\n        if (this._tokenId != null) {\n            this._tokenId.validateChecksum(client);\n        }\n\n        if (this._accountId != null) {\n            this._accountId.validateChecksum(client);\n        }\n    }\n\n    /**\n     * @override\n     * @internal\n     * @param {Channel} channel\n     * @param {proto.ITransaction} request\n     * @returns {Promise<proto.ITransactionResponse>}\n     */\n    _execute(channel, request) {\n        return channel.token.freezeTokenAccount(request);\n    }\n\n    /**\n     * @override\n     * @protected\n     * @returns {NonNullable<proto.TransactionBody[\"data\"]>}\n     */\n    _getTransactionDataCase() {\n        return \"tokenFreeze\";\n    }\n\n    /**\n     * @override\n     * @protected\n     * @returns {proto.ITokenFreezeAccountTransactionBody}\n     */\n    _makeTransactionData() {\n        return {\n            token: this._tokenId != null ? this._tokenId._toProtobuf() : null,\n            account:\n                this._accountId != null ? this._accountId._toProtobuf() : null,\n        };\n    }\n}\n\nTRANSACTION_REGISTRY.set(\n    \"tokenFreeze\",\n    // eslint-disable-next-line @typescript-eslint/unbound-method\n    TokenFreezeTransaction._fromProtobuf\n);\n", "import TokenId from \"./TokenId.js\";\nimport Transaction, {\n    TRANSACTION_REGISTRY,\n} from \"../transaction/Transaction.js\";\n\n/**\n * @namespace proto\n * @typedef {import(\"@hashgraph/proto\").ITransaction} proto.ITransaction\n * @typedef {import(\"@hashgraph/proto\").ISignedTransaction} proto.ISignedTransaction\n * @typedef {import(\"@hashgraph/proto\").TransactionBody} proto.TransactionBody\n * @typedef {import(\"@hashgraph/proto\").ITransactionBody} proto.ITransactionBody\n * @typedef {import(\"@hashgraph/proto\").ITransactionResponse} proto.ITransactionResponse\n * @typedef {import(\"@hashgraph/proto\").ITokenPauseTransactionBody} proto.ITokenPauseTransactionBody\n * @typedef {import(\"@hashgraph/proto\").ITokenID} proto.ITokenID\n */\n\n/**\n * @typedef {import(\"../channel/Channel.js\").default} Channel\n * @typedef {import(\"../client/Client.js\").default<*, *>} Client\n * @typedef {import(\"../transaction/TransactionId.js\").default} TransactionId\n * @typedef {import(\"../account/AccountId.js\").default} AccountId\n */\n\n/**\n * Pause a new Hedera\u2122 crypto-currency token.\n */\nexport default class TokenPauseTransaction extends Transaction {\n    /**\n     * @param {object} [props]\n     * @param {TokenId | string} [props.tokenId]\n     */\n    constructor(props = {}) {\n        super();\n\n        /**\n         * @private\n         * @type {?TokenId}\n         */\n        this._tokenId = null;\n\n        if (props.tokenId != null) {\n            this.setTokenId(props.tokenId);\n        }\n    }\n\n    /**\n     * @internal\n     * @param {proto.ITransaction[]} transactions\n     * @param {proto.ISignedTransaction[]} signedTransactions\n     * @param {TransactionId[]} transactionIds\n     * @param {AccountId[]} nodeIds\n     * @param {proto.ITransactionBody[]} bodies\n     * @returns {TokenPauseTransaction}\n     */\n    static _fromProtobuf(\n        transactions,\n        signedTransactions,\n        transactionIds,\n        nodeIds,\n        bodies\n    ) {\n        const body = bodies[0];\n        const pauseToken = /** @type {proto.ITokenPauseTransactionBody} */ (\n            body.tokenPause\n        );\n\n        return Transaction._fromProtobufTransactions(\n            new TokenPauseTransaction({\n                tokenId:\n                    pauseToken.token != null\n                        ? TokenId._fromProtobuf(pauseToken.token)\n                        : undefined,\n            }),\n            transactions,\n            signedTransactions,\n            transactionIds,\n            nodeIds,\n            bodies\n        );\n    }\n\n    /**\n     * @returns {?TokenId}\n     */\n    get tokenId() {\n        return this._tokenId;\n    }\n\n    /**\n     * @param {TokenId | string} tokenId\n     * @returns {this}\n     */\n    setTokenId(tokenId) {\n        this._requireNotFrozen();\n        this._tokenId =\n            typeof tokenId === \"string\"\n                ? TokenId.fromString(tokenId)\n                : tokenId.clone();\n\n        return this;\n    }\n\n    /**\n     * @param {Client} client\n     */\n    _validateChecksums(client) {\n        if (this._tokenId != null) {\n            this._tokenId.validateChecksum(client);\n        }\n    }\n\n    /**\n     * @override\n     * @internal\n     * @param {Channel} channel\n     * @param {proto.ITransaction} request\n     * @returns {Promise<proto.ITransactionResponse>}\n     */\n    _execute(channel, request) {\n        return channel.token.pauseToken(request);\n    }\n\n    /**\n     * @override\n     * @protected\n     * @returns {NonNullable<proto.TransactionBody[\"data\"]>}\n     */\n    _getTransactionDataCase() {\n        return \"tokenPause\";\n    }\n\n    /**\n     * @override\n     * @protected\n     * @returns {proto.ITokenPauseTransactionBody}\n     */\n    _makeTransactionData() {\n        return {\n            token: this._tokenId != null ? this._tokenId._toProtobuf() : null,\n        };\n    }\n}\n\nTRANSACTION_REGISTRY.set(\n    \"tokenPause\",\n    // eslint-disable-next-line @typescript-eslint/unbound-method\n    TokenPauseTransaction._fromProtobuf\n);\n", "import TokenId from \"./TokenId.js\";\nimport AccountId from \"../account/AccountId.js\";\nimport Transaction, {\n    TRANSACTION_REGISTRY,\n} from \"../transaction/Transaction.js\";\n\n/**\n * @namespace proto\n * @typedef {import(\"@hashgraph/proto\").ITransaction} proto.ITransaction\n * @typedef {import(\"@hashgraph/proto\").ISignedTransaction} proto.ISignedTransaction\n * @typedef {import(\"@hashgraph/proto\").TransactionBody} proto.TransactionBody\n * @typedef {import(\"@hashgraph/proto\").ITransactionBody} proto.ITransactionBody\n * @typedef {import(\"@hashgraph/proto\").ITransactionResponse} proto.ITransactionResponse\n * @typedef {import(\"@hashgraph/proto\").ITokenGrantKycTransactionBody} proto.ITokenGrantKycTransactionBody\n * @typedef {import(\"@hashgraph/proto\").ITokenID} proto.ITokenID\n */\n\n/**\n * @typedef {import(\"../channel/Channel.js\").default} Channel\n * @typedef {import(\"../client/Client.js\").default<*, *>} Client\n * @typedef {import(\"../transaction/TransactionId.js\").default} TransactionId\n */\n\n/**\n * GrantKyc a new Hedera\u2122 crypto-currency token.\n */\nexport default class TokenGrantKycTransaction extends Transaction {\n    /**\n     * @param {object} [props]\n     * @param {TokenId | string} [props.tokenId]\n     * @param {AccountId | string} [props.accountId]\n     */\n    constructor(props = {}) {\n        super();\n\n        /**\n         * @private\n         * @type {?TokenId}\n         */\n        this._tokenId = null;\n\n        /**\n         * @private\n         * @type {?AccountId}\n         */\n        this._accountId = null;\n\n        if (props.tokenId != null) {\n            this.setTokenId(props.tokenId);\n        }\n\n        if (props.accountId != null) {\n            this.setAccountId(props.accountId);\n        }\n    }\n\n    /**\n     * @internal\n     * @param {proto.ITransaction[]} transactions\n     * @param {proto.ISignedTransaction[]} signedTransactions\n     * @param {TransactionId[]} transactionIds\n     * @param {AccountId[]} nodeIds\n     * @param {proto.ITransactionBody[]} bodies\n     * @returns {TokenGrantKycTransaction}\n     */\n    static _fromProtobuf(\n        transactions,\n        signedTransactions,\n        transactionIds,\n        nodeIds,\n        bodies\n    ) {\n        const body = bodies[0];\n        const grantKycToken =\n            /** @type {proto.ITokenGrantKycTransactionBody} */ (\n                body.tokenGrantKyc\n            );\n\n        return Transaction._fromProtobufTransactions(\n            new TokenGrantKycTransaction({\n                tokenId:\n                    grantKycToken.token != null\n                        ? TokenId._fromProtobuf(grantKycToken.token)\n                        : undefined,\n                accountId:\n                    grantKycToken.account != null\n                        ? AccountId._fromProtobuf(grantKycToken.account)\n                        : undefined,\n            }),\n            transactions,\n            signedTransactions,\n            transactionIds,\n            nodeIds,\n            bodies\n        );\n    }\n\n    /**\n     * @returns {?TokenId}\n     */\n    get tokenId() {\n        return this._tokenId;\n    }\n\n    /**\n     * @param {TokenId | string} tokenId\n     * @returns {this}\n     */\n    setTokenId(tokenId) {\n        this._requireNotFrozen();\n        this._tokenId =\n            typeof tokenId === \"string\"\n                ? TokenId.fromString(tokenId)\n                : tokenId.clone();\n\n        return this;\n    }\n\n    /**\n     * @returns {?AccountId}\n     */\n    get accountId() {\n        return this._accountId;\n    }\n\n    /**\n     * @param {AccountId | string} accountId\n     * @returns {this}\n     */\n    setAccountId(accountId) {\n        this._requireNotFrozen();\n        this._accountId =\n            typeof accountId === \"string\"\n                ? AccountId.fromString(accountId)\n                : accountId.clone();\n\n        return this;\n    }\n\n    /**\n     * @param {Client} client\n     */\n    _validateChecksums(client) {\n        if (this._tokenId != null) {\n            this._tokenId.validateChecksum(client);\n        }\n\n        if (this._accountId != null) {\n            this._accountId.validateChecksum(client);\n        }\n    }\n\n    /**\n     * @override\n     * @internal\n     * @param {Channel} channel\n     * @param {proto.ITransaction} request\n     * @returns {Promise<proto.ITransactionResponse>}\n     */\n    _execute(channel, request) {\n        return channel.token.grantKycToTokenAccount(request);\n    }\n\n    /**\n     * @override\n     * @protected\n     * @returns {NonNullable<proto.TransactionBody[\"data\"]>}\n     */\n    _getTransactionDataCase() {\n        return \"tokenGrantKyc\";\n    }\n\n    /**\n     * @override\n     * @protected\n     * @returns {proto.ITokenGrantKycTransactionBody}\n     */\n    _makeTransactionData() {\n        return {\n            token: this._tokenId != null ? this._tokenId._toProtobuf() : null,\n            account:\n                this._accountId != null ? this._accountId._toProtobuf() : null,\n        };\n    }\n}\n\nTRANSACTION_REGISTRY.set(\n    \"tokenGrantKyc\",\n    // eslint-disable-next-line @typescript-eslint/unbound-method\n    TokenGrantKycTransaction._fromProtobuf\n);\n", "import TokenId from \"./TokenId.js\";\nimport AccountId from \"../account/AccountId.js\";\nimport Duration from \"../Duration.js\";\nimport Timestamp from \"../Timestamp.js\";\nimport Long from \"long\";\nimport * as proto from \"@hashgraph/proto\";\nimport TokenType from \"./TokenType.js\";\nimport TokenSupplyType from \"./TokenSupplyType.js\";\nimport CustomFixedFee from \"./CustomFixedFee.js\";\nimport CustomFractionalFee from \"./CustomFractionalFee.js\";\nimport CustomRoyaltyFee from \"./CustomRoyaltyFee.js\";\nimport Key from \"../Key.js\";\n\n/**\n * @typedef {import(\"./CustomFee.js\").default} CustomFee\n */\n\n/**\n * Response when the client sends the node TokenGetInfoQuery.\n */\nexport default class TokenInfo {\n    /**\n     * @private\n     * @param {object} props\n     * @param {TokenId} props.tokenId;\n     * @param {string} props.name;\n     * @param {string} props.symbol;\n     * @param {number} props.decimals;\n     * @param {Long} props.totalSupply;\n     * @param {AccountId | null} props.treasuryAccountId;\n     * @param {Key | null} props.adminKey;\n     * @param {Key | null} props.kycKey;\n     * @param {Key | null} props.freezeKey;\n     * @param {Key | null} props.pauseKey;\n     * @param {Key | null} props.wipeKey;\n     * @param {Key | null} props.supplyKey;\n     * @param {Key | null} props.feeScheduleKey;\n     * @param {boolean | null} props.defaultFreezeStatus;\n     * @param {boolean | null} props.defaultKycStatus;\n     * @param {boolean | null} props.pauseStatus;\n     * @param {boolean} props.isDeleted;\n     * @param {AccountId | null} props.autoRenewAccountId;\n     * @param {Duration | null} props.autoRenewPeriod;\n     * @param {Timestamp | null} props.expirationTime;\n     * @param {string} props.tokenMemo;\n     * @param {CustomFee[]} props.customFees;\n     * @param {TokenType | null} props.tokenType;\n     * @param {TokenSupplyType | null} props.supplyType;\n     * @param {Long | null} props.maxSupply;\n     */\n    constructor(props) {\n        /**\n         * ID of the token instance\n         *\n         * @readonly\n         */\n        this.tokenId = props.tokenId;\n\n        /**\n         * The name of the token. It is a string of ASCII only characters\n         *\n         * @readonly\n         */\n        this.name = props.name;\n\n        /**\n         * The symbol of the token. It is a UTF-8 capitalized alphabetical string\n         *\n         * @readonly\n         */\n        this.symbol = props.symbol;\n\n        /**\n         * The number of decimal places a token is divisible by\n         *\n         * @readonly\n         */\n        this.decimals = props.decimals;\n\n        /**\n         * The total supply of tokens that are currently in circulation\n         *\n         * @readonly\n         */\n        this.totalSupply = props.totalSupply;\n\n        /**\n         * The ID of the account which is set as treasuryAccountId\n         *\n         * @readonly\n         */\n        this.treasuryAccountId = props.treasuryAccountId;\n\n        /**\n         * The key which can perform update/delete operations on the token. If empty, the token can be perceived as\n         * immutable (not being able to be updated/deleted)\n         *\n         * @readonly\n         */\n        this.adminKey = props.adminKey;\n\n        /**\n         * The key which can grant or revoke KYC of an account for the token's transactions. If empty, KYC is not required,\n         * and KYC grant or revoke operations are not possible.\n         *\n         * @readonly\n         */\n        this.kycKey = props.kycKey;\n\n        /**\n         * The key which can freeze or unfreeze an account for token transactions. If empty, freezing is not possible\n         *\n         * @readonly\n         */\n        this.freezeKey = props.freezeKey;\n\n        /**\n         * The Key which can pause and unpause the Token.\n         *\n         * @readonly\n         */\n        this.pauseKey = props.pauseKey;\n\n        /**\n         * The key which can wipe token balance of an account. If empty, wipe is not possible\n         *\n         * @readonly\n         */\n        this.wipeKey = props.wipeKey;\n\n        /**\n         * The key which can change the supply of a token. The key is used to sign Token Mint/Burn operations\n         *\n         * @readonly\n         */\n        this.supplyKey = props.supplyKey;\n\n        this.feeScheduleKey = props.feeScheduleKey;\n\n        /**\n         * The default Freeze status (not applicable = null, frozen = false, or unfrozen = true) of Hedera accounts relative to this token.\n         * FreezeNotApplicable is returned if Token Freeze Key is empty. Frozen is returned if Token Freeze Key is set and\n         * defaultFreeze is set to true. Unfrozen is returned if Token Freeze Key is set and defaultFreeze is set to false\n         *      FreezeNotApplicable = null;\n         *      Frozen = true;\n         *      Unfrozen = false;\n         *\n         * @readonly\n         */\n        this.defaultFreezeStatus = props.defaultFreezeStatus;\n\n        /**\n         * The default KYC status (KycNotApplicable or Revoked) of Hedera accounts relative to this token. KycNotApplicable\n         * is returned if KYC key is not set, otherwise Revoked\n         *      KycNotApplicable = null;\n         *      Granted = true;\n         *      Revoked = false;\n         *\n         * @readonly\n         */\n        this.defaultKycStatus = props.defaultKycStatus;\n\n        /**\n         * The default pause status of Hedera accounts relative to this token.\n         * PauseNotApplicable is returned if pauseKey is not set\n         *      PauseNotApplicable = null;\n         *      Paused = true;\n         *      Unpaused = false;\n         *\n         * @readonly\n         */\n        this.pauseStatus = props.pauseStatus;\n\n        /**\n         * Specifies whether the token was deleted or not\n         *\n         * @readonly\n         */\n        this.isDeleted = props.isDeleted;\n\n        /**\n         * An account which will be automatically charged to renew the token's expiration, at autoRenewPeriod interval\n         *\n         * @readonly\n         */\n        this.autoRenewAccountId = props.autoRenewAccountId;\n\n        /**\n         * The interval at which the auto-renew account will be charged to extend the token's expiry\n         *\n         * @readonly\n         */\n        this.autoRenewPeriod = props.autoRenewPeriod;\n\n        /**\n         * The epoch second at which the token expire: will; if an auto-renew account and period are specified,\n         * this is coerced to the current epoch second plus the autoRenewPeriod\n         *\n         * @readonly\n         */\n        this.expirationTime = props.expirationTime;\n\n        /**\n         * The memo associated with the token.\n         *\n         * @readonly\n         */\n        this.tokenMemo = props.tokenMemo;\n\n        this.customFees = props.customFees;\n\n        this.tokenType = props.tokenType;\n\n        this.supplyType = props.supplyType;\n\n        this.maxSupply = props.maxSupply;\n    }\n\n    /**\n     * @internal\n     * @param {proto.ITokenInfo} info\n     * @returns {TokenInfo}\n     */\n    static _fromProtobuf(info) {\n        const defaultFreezeStatus = /** @type {proto.TokenFreezeStatus} */ (\n            info.defaultFreezeStatus\n        );\n        const defaultKycStatus = /** @type {proto.TokenKycStatus} */ (\n            info.defaultKycStatus\n        );\n        const pauseStatus = /**@type {proto.TokenPauseStatus} */ (\n            info.pauseStatus\n        );\n\n        const autoRenewAccountId =\n            info.autoRenewAccount != null\n                ? AccountId._fromProtobuf(info.autoRenewAccount)\n                : new AccountId(0);\n\n        return new TokenInfo({\n            tokenId: TokenId._fromProtobuf(\n                /** @type {proto.ITokenID} */ (info.tokenId)\n            ),\n            name: /** @type {string} */ (info.name),\n            symbol: /** @type {string} */ (info.symbol),\n            decimals: /** @type {number} */ (info.decimals),\n            totalSupply: Long.fromValue(/** @type {Long} */ (info.totalSupply)),\n            treasuryAccountId:\n                info.treasury != null\n                    ? AccountId._fromProtobuf(\n                          /** @type {proto.IAccountID} */ (info.treasury)\n                      )\n                    : null,\n            adminKey:\n                info.adminKey != null\n                    ? Key._fromProtobufKey(info.adminKey)\n                    : null,\n            kycKey:\n                info.kycKey != null ? Key._fromProtobufKey(info.kycKey) : null,\n            freezeKey:\n                info.freezeKey != null\n                    ? Key._fromProtobufKey(info.freezeKey)\n                    : null,\n            pauseKey:\n                info.pauseKey != null\n                    ? Key._fromProtobufKey(info.pauseKey)\n                    : null,\n            wipeKey:\n                info.wipeKey != null\n                    ? Key._fromProtobufKey(info.wipeKey)\n                    : null,\n            supplyKey:\n                info.supplyKey != null\n                    ? Key._fromProtobufKey(info.supplyKey)\n                    : null,\n            feeScheduleKey:\n                info.feeScheduleKey != null\n                    ? Key._fromProtobufKey(info.feeScheduleKey)\n                    : null,\n            defaultFreezeStatus:\n                defaultFreezeStatus === 0 ? null : defaultFreezeStatus == 1,\n            defaultKycStatus:\n                defaultKycStatus === 0 ? null : defaultKycStatus == 1,\n            pauseStatus: pauseStatus === 0 ? null : pauseStatus == 1,\n            isDeleted: /** @type {boolean} */ (info.deleted),\n            autoRenewAccountId: !(\n                autoRenewAccountId.shard.toInt() == 0 &&\n                autoRenewAccountId.realm.toInt() == 0 &&\n                autoRenewAccountId.num.toInt() == 0\n            )\n                ? autoRenewAccountId\n                : null,\n            autoRenewPeriod:\n                info.autoRenewPeriod != null\n                    ? Duration._fromProtobuf(\n                          /** @type {proto.IDuration} */ (info.autoRenewPeriod)\n                      )\n                    : null,\n            expirationTime:\n                info.expiry != null\n                    ? Timestamp._fromProtobuf(\n                          /** @type {proto.ITimestamp} */ (info.expiry)\n                      )\n                    : null,\n            tokenMemo: info.memo != null ? info.memo : \"\",\n            customFees:\n                info.customFees != null\n                    ? info.customFees.map((fee) => {\n                          if (fee.fixedFee != null) {\n                              return CustomFixedFee._fromProtobuf(fee);\n                          } else if (fee.fractionalFee != null) {\n                              return CustomFractionalFee._fromProtobuf(fee);\n                          } else {\n                              return CustomRoyaltyFee._fromProtobuf(fee);\n                          }\n                      })\n                    : [],\n            tokenType:\n                info.tokenType != null\n                    ? TokenType._fromCode(info.tokenType)\n                    : null,\n            supplyType:\n                info.supplyType != null\n                    ? TokenSupplyType._fromCode(info.supplyType)\n                    : null,\n            maxSupply: info.maxSupply != null ? info.maxSupply : null,\n        });\n    }\n\n    /**\n     * @returns {proto.ITokenInfo}\n     */\n    _toProtobuf() {\n        return {\n            tokenId: this.tokenId._toProtobuf(),\n            name: this.name,\n            symbol: this.symbol,\n            decimals: this.decimals,\n            totalSupply: this.totalSupply,\n            treasury:\n                this.treasuryAccountId != null\n                    ? this.treasuryAccountId._toProtobuf()\n                    : null,\n            adminKey:\n                this.adminKey != null ? this.adminKey._toProtobufKey() : null,\n            kycKey: this.kycKey != null ? this.kycKey._toProtobufKey() : null,\n            freezeKey:\n                this.freezeKey != null ? this.freezeKey._toProtobufKey() : null,\n            pauseKey:\n                this.pauseKey != null ? this.pauseKey._toProtobufKey() : null,\n            wipeKey:\n                this.wipeKey != null ? this.wipeKey._toProtobufKey() : null,\n            supplyKey:\n                this.supplyKey != null ? this.supplyKey._toProtobufKey() : null,\n            feeScheduleKey:\n                this.feeScheduleKey != null\n                    ? this.feeScheduleKey._toProtobufKey()\n                    : null,\n            defaultFreezeStatus:\n                this.defaultFreezeStatus == null\n                    ? 0\n                    : this.defaultFreezeStatus\n                    ? 1\n                    : 2,\n            defaultKycStatus:\n                this.defaultKycStatus == null\n                    ? 0\n                    : this.defaultKycStatus\n                    ? 1\n                    : 2,\n            pauseStatus:\n                this.pauseStatus == null ? 0 : this.pauseStatus ? 1 : 2,\n            deleted: this.isDeleted,\n            autoRenewAccount:\n                this.autoRenewAccountId != null\n                    ? this.autoRenewAccountId._toProtobuf()\n                    : undefined,\n            autoRenewPeriod:\n                this.autoRenewPeriod != null\n                    ? this.autoRenewPeriod._toProtobuf()\n                    : null,\n            expiry:\n                this.expirationTime != null\n                    ? this.expirationTime._toProtobuf()\n                    : null,\n            memo: this.tokenMemo,\n            customFees: this.customFees.map((fee) => fee._toProtobuf()),\n            tokenType: this.tokenType != null ? this.tokenType._code : null,\n            supplyType: this.supplyType != null ? this.supplyType._code : null,\n            maxSupply: this.maxSupply,\n        };\n    }\n\n    /**\n     * @param {Uint8Array} bytes\n     * @returns {TokenInfo}\n     */\n    static fromBytes(bytes) {\n        return TokenInfo._fromProtobuf(proto.TokenInfo.decode(bytes));\n    }\n\n    /**\n     * @returns {Uint8Array}\n     */\n    toBytes() {\n        return proto.TokenInfo.encode(this._toProtobuf()).finish();\n    }\n}\n", "import Query, { QUERY_REGISTRY } from \"../query/Query.js\";\nimport TokenId from \"./TokenId.js\";\nimport TokenInfo from \"./TokenInfo.js\";\nimport Hbar from \"../Hbar.js\";\n\n/**\n * @namespace proto\n * @typedef {import(\"@hashgraph/proto\").IQuery} proto.IQuery\n * @typedef {import(\"@hashgraph/proto\").IQueryHeader} proto.IQueryHeader\n * @typedef {import(\"@hashgraph/proto\").IResponse} proto.IResponse\n * @typedef {import(\"@hashgraph/proto\").IResponseHeader} proto.IResponseHeader\n * @typedef {import(\"@hashgraph/proto\").ITokenInfo} proto.ITokenInfo\n * @typedef {import(\"@hashgraph/proto\").ITokenGetInfoQuery} proto.ITokenGetInfoQuery\n * @typedef {import(\"@hashgraph/proto\").ITokenGetInfoResponse} proto.ITokenGetInfoResponse\n */\n\n/**\n * @typedef {import(\"../channel/Channel.js\").default} Channel\n * @typedef {import(\"../client/Client.js\").default<*, *>} Client\n * @typedef {import(\"../account/AccountId.js\").default} AccountId\n */\n\n/**\n * @augments {Query<TokenInfo>}\n */\nexport default class TokenInfoQuery extends Query {\n    /**\n     * @param {object} properties\n     * @param {TokenId | string} [properties.tokenId]\n     */\n    constructor(properties = {}) {\n        super();\n\n        /**\n         * @private\n         * @type {?TokenId}\n         */\n        this._tokenId = null;\n        if (properties.tokenId != null) {\n            this.setTokenId(properties.tokenId);\n        }\n    }\n\n    /**\n     * @internal\n     * @param {proto.IQuery} query\n     * @returns {TokenInfoQuery}\n     */\n    static _fromProtobuf(query) {\n        const info = /** @type {proto.ITokenGetInfoQuery} */ (\n            query.tokenGetInfo\n        );\n\n        return new TokenInfoQuery({\n            tokenId:\n                info.token != null\n                    ? TokenId._fromProtobuf(info.token)\n                    : undefined,\n        });\n    }\n\n    /**\n     * @returns {?TokenId}\n     */\n    get tokenId() {\n        return this._tokenId;\n    }\n\n    /**\n     * Set the token ID for which the info is being requested.\n     *\n     * @param {TokenId | string} tokenId\n     * @returns {TokenInfoQuery}\n     */\n    setTokenId(tokenId) {\n        this._tokenId =\n            typeof tokenId === \"string\"\n                ? TokenId.fromString(tokenId)\n                : tokenId.clone();\n\n        return this;\n    }\n\n    /**\n     * @override\n     * @param {import(\"../client/Client.js\").default<Channel, *>} client\n     * @returns {Promise<Hbar>}\n     */\n    async getCost(client) {\n        let cost = await super.getCost(client);\n\n        if (cost.toTinybars().greaterThan(25)) {\n            return cost;\n        } else {\n            return Hbar.fromTinybars(25);\n        }\n    }\n\n    /**\n     * @param {Client} client\n     */\n    _validateChecksums(client) {\n        if (this._tokenId != null) {\n            this._tokenId.validateChecksum(client);\n        }\n    }\n\n    /**\n     * @override\n     * @internal\n     * @param {Channel} channel\n     * @param {proto.IQuery} request\n     * @returns {Promise<proto.IResponse>}\n     */\n    _execute(channel, request) {\n        return channel.token.getTokenInfo(request);\n    }\n\n    /**\n     * @override\n     * @internal\n     * @param {proto.IResponse} response\n     * @returns {proto.IResponseHeader}\n     */\n    _mapResponseHeader(response) {\n        const tokenGetInfo = /** @type {proto.ITokenGetInfoResponse} */ (\n            response.tokenGetInfo\n        );\n        return /** @type {proto.IResponseHeader} */ (tokenGetInfo.header);\n    }\n\n    /**\n     * @override\n     * @internal\n     * @param {proto.IResponse} response\n     * @param {AccountId} nodeAccountId\n     * @param {proto.IQuery} request\n     * @returns {Promise<TokenInfo>}\n     */\n    // eslint-disable-next-line @typescript-eslint/no-unused-vars\n    _mapResponse(response, nodeAccountId, request) {\n        const info = /** @type {proto.ITokenGetInfoResponse} */ (\n            response.tokenGetInfo\n        );\n\n        return Promise.resolve(\n            TokenInfo._fromProtobuf(\n                /** @type {proto.ITokenInfo} */ (info.tokenInfo)\n            )\n        );\n    }\n\n    /**\n     * @override\n     * @internal\n     * @param {proto.IQueryHeader} header\n     * @returns {proto.IQuery}\n     */\n    _onMakeRequest(header) {\n        return {\n            tokenGetInfo: {\n                header,\n                token:\n                    this._tokenId != null ? this._tokenId._toProtobuf() : null,\n            },\n        };\n    }\n}\n\n// eslint-disable-next-line @typescript-eslint/unbound-method\nQUERY_REGISTRY.set(\"tokenGetInfo\", TokenInfoQuery._fromProtobuf);\n", "import TokenId from \"./TokenId.js\";\nimport Transaction, {\n    TRANSACTION_REGISTRY,\n} from \"../transaction/Transaction.js\";\nimport Long from \"long\";\nimport * as hex from \"../encoding/hex.js\";\n\n/**\n * @namespace proto\n * @typedef {import(\"@hashgraph/proto\").ITransaction} proto.ITransaction\n * @typedef {import(\"@hashgraph/proto\").ISignedTransaction} proto.ISignedTransaction\n * @typedef {import(\"@hashgraph/proto\").TransactionBody} proto.TransactionBody\n * @typedef {import(\"@hashgraph/proto\").ITransactionBody} proto.ITransactionBody\n * @typedef {import(\"@hashgraph/proto\").ITransactionResponse} proto.ITransactionResponse\n * @typedef {import(\"@hashgraph/proto\").ITokenMintTransactionBody} proto.ITokenMintTransactionBody\n * @typedef {import(\"@hashgraph/proto\").ITokenID} proto.ITokenID\n */\n\n/**\n * @typedef {import(\"../channel/Channel.js\").default} Channel\n * @typedef {import(\"../client/Client.js\").default<*, *>} Client\n * @typedef {import(\"../account/AccountId.js\").default} AccountId\n * @typedef {import(\"../transaction/TransactionId.js\").default} TransactionId\n */\n\n/**\n * Mint a new Hedera\u2122 crypto-currency token.\n */\nexport default class TokenMintTransaction extends Transaction {\n    /**\n     * @param {object} [props]\n     * @param {TokenId | string} [props.tokenId]\n     * @param {Long | number} [props.amount]\n     * @param {Uint8Array[]} [props.metadata]\n     */\n    constructor(props = {}) {\n        super();\n\n        /**\n         * @private\n         * @type {?TokenId}\n         */\n        this._tokenId = null;\n\n        /**\n         * @private\n         * @type {?Long}\n         */\n        this._amount = null;\n\n        /**\n         * @private\n         * @type {Uint8Array[]}\n         */\n        this._metadata = [];\n\n        if (props.tokenId != null) {\n            this.setTokenId(props.tokenId);\n        }\n\n        if (props.amount != null) {\n            this.setAmount(props.amount);\n        }\n\n        if (props.metadata != null) {\n            this.setMetadata(props.metadata);\n        }\n    }\n\n    /**\n     * @internal\n     * @param {proto.ITransaction[]} transactions\n     * @param {proto.ISignedTransaction[]} signedTransactions\n     * @param {TransactionId[]} transactionIds\n     * @param {AccountId[]} nodeIds\n     * @param {proto.ITransactionBody[]} bodies\n     * @returns {TokenMintTransaction}\n     */\n    static _fromProtobuf(\n        transactions,\n        signedTransactions,\n        transactionIds,\n        nodeIds,\n        bodies\n    ) {\n        const body = bodies[0];\n        const mintToken = /** @type {proto.ITokenMintTransactionBody} */ (\n            body.tokenMint\n        );\n\n        return Transaction._fromProtobufTransactions(\n            new TokenMintTransaction({\n                tokenId:\n                    mintToken.token != null\n                        ? TokenId._fromProtobuf(mintToken.token)\n                        : undefined,\n                amount: mintToken.amount != null ? mintToken.amount : undefined,\n                metadata:\n                    mintToken.metadata != null ? mintToken.metadata : undefined,\n            }),\n            transactions,\n            signedTransactions,\n            transactionIds,\n            nodeIds,\n            bodies\n        );\n    }\n\n    /**\n     * @returns {?TokenId}\n     */\n    get tokenId() {\n        return this._tokenId;\n    }\n\n    /**\n     * @param {TokenId | string} tokenId\n     * @returns {this}\n     */\n    setTokenId(tokenId) {\n        this._requireNotFrozen();\n        this._tokenId =\n            typeof tokenId === \"string\"\n                ? TokenId.fromString(tokenId)\n                : tokenId.clone();\n\n        return this;\n    }\n\n    /**\n     * @returns {?Long}\n     */\n    get amount() {\n        return this._amount;\n    }\n\n    /**\n     * @param {Long | number} amount\n     * @returns {this}\n     */\n    setAmount(amount) {\n        this._requireNotFrozen();\n        this._amount = amount instanceof Long ? amount : Long.fromValue(amount);\n\n        return this;\n    }\n\n    /**\n     * @param {Client} client\n     */\n    _validateChecksums(client) {\n        if (this._tokenId != null) {\n            this._tokenId.validateChecksum(client);\n        }\n    }\n\n    /**\n     * @returns {Uint8Array[]}\n     */\n    get metadata() {\n        return this._metadata;\n    }\n\n    /**\n     * @param {Uint8Array | string} metadata\n     * @returns {this}\n     */\n    addMetadata(metadata) {\n        this._requireNotFrozen();\n\n        if (typeof metadata === \"string\") {\n            console.warn(\n                \"Passing a `string` for token metadata is considered a bug, and has been removed. Please provide a `Uint8Array` instead.\"\n            );\n        }\n\n        this._metadata.push(\n            typeof metadata === \"string\" ? hex.decode(metadata) : metadata\n        );\n\n        return this;\n    }\n\n    /**\n     * @param {Uint8Array[]} metadata\n     * @returns {this}\n     */\n    setMetadata(metadata) {\n        this._requireNotFrozen();\n\n        for (const data of metadata) {\n            if (typeof data === \"string\") {\n                console.warn(\n                    \"Passing a `string` for token metadata is considered a bug, and has been removed. Please provide a `Uint8Array` instead.\"\n                );\n                break;\n            }\n        }\n\n        this._metadata = metadata.map((data) =>\n            typeof data === \"string\" ? hex.decode(data) : data\n        );\n\n        return this;\n    }\n\n    /**\n     * @override\n     * @internal\n     * @param {Channel} channel\n     * @param {proto.ITransaction} request\n     * @returns {Promise<proto.ITransactionResponse>}\n     */\n    _execute(channel, request) {\n        return channel.token.mintToken(request);\n    }\n\n    /**\n     * @override\n     * @protected\n     * @returns {NonNullable<proto.TransactionBody[\"data\"]>}\n     */\n    _getTransactionDataCase() {\n        return \"tokenMint\";\n    }\n\n    /**\n     * @override\n     * @protected\n     * @returns {proto.ITokenMintTransactionBody}\n     */\n    _makeTransactionData() {\n        return {\n            amount: this._amount,\n            token: this._tokenId != null ? this._tokenId._toProtobuf() : null,\n            metadata: this._metadata,\n        };\n    }\n}\n\nTRANSACTION_REGISTRY.set(\n    \"tokenMint\",\n    // eslint-disable-next-line @typescript-eslint/unbound-method\n    TokenMintTransaction._fromProtobuf\n);\n", "import NftId from \"./NftId.js\";\nimport AccountId from \"../account/AccountId.js\";\nimport Timestamp from \"../Timestamp.js\";\nimport * as hex from \"../encoding/hex.js\";\n\n/**\n * @namespace proto\n * @typedef {import(\"@hashgraph/proto\").TokenFreezeStatus} proto.TokenFreezeStatus\n * @typedef {import(\"@hashgraph/proto\").TokenKycStatus} proto.TokenKycStatus\n * @typedef {import(\"@hashgraph/proto\").TokenPauseStatus} proto.TokenPauseStatus\n * @typedef {import(\"@hashgraph/proto\").ITokenNftInfo} proto.ITokenNftInfo\n * @typedef {import(\"@hashgraph/proto\").INftID} proto.INftID\n * @typedef {import(\"@hashgraph/proto\").ITimestamp} proto.ITimestamp\n * @typedef {import(\"@hashgraph/proto\").ITokenID} proto.ITokenID\n * @typedef {import(\"@hashgraph/proto\").IAccountID} proto.IAccountID\n * @typedef {import(\"@hashgraph/proto\").IKey} proto.IKey\n * @typedef {import(\"@hashgraph/proto\").IDuration} proto.IDuration\n */\n\n/**\n * @typedef {import(\"@hashgraph/cryptography\").Key} Key\n */\nexport default class TokenNftInfo {\n    /**\n     * @private\n     * @param {object} props\n     * @param {NftId} props.nftId;\n     * @param {AccountId} props.accountId;\n     * @param {Timestamp} props.creationTime;\n     * @param {Uint8Array | null} props.metadata;\n     */\n    constructor(props) {\n        /**\n         * ID of the nft instance\n         *\n         * @readonly\n         */\n        this.nftId = props.nftId;\n\n        /**\n         * @readonly\n         */\n        this.accountId = props.accountId;\n\n        /**\n         * @readonly\n         */\n        this.creationTime = props.creationTime;\n\n        /**\n         * @readonly\n         */\n        this.metadata = props.metadata;\n\n        Object.freeze(this);\n    }\n\n    /**\n     * @internal\n     * @param {proto.ITokenNftInfo} info\n     * @returns {TokenNftInfo}\n     */\n    static _fromProtobuf(info) {\n        return new TokenNftInfo({\n            nftId: NftId._fromProtobuf(\n                /** @type {proto.INftID} */ (info.nftID)\n            ),\n            accountId: AccountId._fromProtobuf(\n                /** @type {proto.IAccountID} */ (info.accountID)\n            ),\n            creationTime: Timestamp._fromProtobuf(\n                /** @type {proto.ITimestamp} */ (info.creationTime)\n            ),\n            metadata: info.metadata !== undefined ? info.metadata : null,\n        });\n    }\n\n    /**\n     * @returns {proto.ITokenNftInfo}\n     */\n    _toProtobuf() {\n        return {\n            nftID: this.nftId._toProtobuf(),\n            accountID: this.accountId._toProtobuf(),\n            creationTime: this.creationTime._toProtobuf(),\n            metadata: this.metadata,\n        };\n    }\n\n    /**\n     * @typedef {object} TokenNftInfoJson\n     * @property {string} nftId\n     * @property {string} accountId\n     * @property {string} creationTime\n     * @property {string | null} metadata\n     * @returns {TokenNftInfoJson}\n     */\n    toJson() {\n        return {\n            nftId: this.nftId.toString(),\n            accountId: this.accountId.toString(),\n            creationTime: this.creationTime.toString(),\n            metadata: this.metadata != null ? hex.encode(this.metadata) : null,\n        };\n    }\n\n    /**\n     * @returns {string}\n     */\n    toString() {\n        return JSON.stringify(this.toJson());\n    }\n}\n", "import Query, { QUERY_REGISTRY } from \"../query/Query.js\";\nimport NftId from \"./NftId.js\";\nimport AccountId from \"../account/AccountId.js\";\nimport TokenId from \"../token/TokenId.js\";\nimport TokenNftInfo from \"./TokenNftInfo.js\";\nimport Hbar from \"../Hbar.js\";\nimport Long from \"long\";\n\n/**\n * @namespace proto\n * @typedef {import(\"@hashgraph/proto\").IQuery} proto.IQuery\n * @typedef {import(\"@hashgraph/proto\").IQueryHeader} proto.IQueryHeader\n * @typedef {import(\"@hashgraph/proto\").IResponse} proto.IResponse\n * @typedef {import(\"@hashgraph/proto\").ITokenNftInfo} proto.ITokenNftInfo\n * @typedef {import(\"@hashgraph/proto\").IResponseHeader} proto.IResponseHeader\n * @typedef {import(\"@hashgraph/proto\").ITokenGetNftInfoQuery} proto.ITokenGetNftInfoQuery\n * @typedef {import(\"@hashgraph/proto\").ITokenGetNftInfosQuery} proto.ITokenGetNftInfosQuery\n * @typedef {import(\"@hashgraph/proto\").ITokenGetAccountNftInfosQuery} proto.ITokenGetAccountNftInfosQuery\n * @typedef {import(\"@hashgraph/proto\").ITokenGetNftInfoResponse} proto.ITokenGetNftInfoResponse\n * @typedef {import(\"@hashgraph/proto\").ITokenGetNftInfosResponse} proto.ITokenGetNftInfosResponse\n * @typedef {import(\"@hashgraph/proto\").ITokenGetAccountNftInfosResponse} proto.ITokenGetAccountNftInfosResponse\n */\n\n/**\n * @typedef {import(\"../channel/Channel.js\").default} Channel\n */\n\n/**\n * @augments {Query<TokenNftInfo[]>}\n */\nexport default class TokenNftInfoQuery extends Query {\n    /**\n     * @param {object} properties\n     * @param {NftId | string} [properties.nftId]\n     * @param {AccountId | string} [properties.accountId]\n     * @param {TokenId | string} [properties.tokenId]\n     * @param {Long | number} [properties.start]\n     * @param {Long | number} [properties.end]\n     */\n    constructor(properties = {}) {\n        super();\n\n        /**\n         * @private\n         * @type {?NftId}\n         */\n        this._nftId = null;\n        if (properties.nftId != null) {\n            this.setNftId(properties.nftId);\n        }\n\n        /**\n         * @private\n         * @type {?AccountId}\n         */\n        this._accountId = null;\n        if (properties.accountId != null) {\n            // eslint-disable-next-line deprecation/deprecation\n            this.setAccountId(properties.accountId);\n        }\n\n        /**\n         * @private\n         * @type {?TokenId}\n         */\n        this._tokenId = null;\n        if (properties.tokenId != null) {\n            // eslint-disable-next-line deprecation/deprecation\n            this.setTokenId(properties.tokenId);\n        }\n\n        /**\n         * @private\n         * @type {?Long}\n         */\n        this._start = null;\n        if (properties.start != null) {\n            // eslint-disable-next-line deprecation/deprecation\n            this.setStart(properties.start);\n        }\n\n        /**\n         * @private\n         * @type {?Long}\n         */\n        this._end = null;\n        if (properties.end != null) {\n            // eslint-disable-next-line deprecation/deprecation\n            this.setEnd(properties.end);\n        }\n    }\n\n    /**\n     * @internal\n     * @param {proto.IQuery} query\n     * @returns {TokenNftInfoQuery}\n     */\n    static _fromProtobuf(query) {\n        if (query.tokenGetNftInfo != null) {\n            const info = /** @type {proto.ITokenGetNftInfoQuery} */ (\n                query.tokenGetNftInfo\n            );\n\n            return new TokenNftInfoQuery({\n                nftId:\n                    info.nftID != null\n                        ? NftId._fromProtobuf(info.nftID)\n                        : undefined,\n            });\n        } else if (query.tokenGetAccountNftInfos != null) {\n            const info = /** @type {proto.ITokenGetAccountNftInfosQuery} */ (\n                query.tokenGetAccountNftInfos\n            );\n\n            return new TokenNftInfoQuery({\n                accountId:\n                    info.accountID != null\n                        ? AccountId._fromProtobuf(info.accountID)\n                        : undefined,\n                start: info.start != null ? info.start : undefined,\n                end: info.end != null ? info.end : undefined,\n            });\n        } else {\n            const info = /** @type {proto.ITokenGetNftInfosQuery} */ (\n                query.tokenGetNftInfos\n            );\n\n            return new TokenNftInfoQuery({\n                tokenId:\n                    info.tokenID != null\n                        ? TokenId._fromProtobuf(info.tokenID)\n                        : undefined,\n                start: info.start != null ? info.start : undefined,\n                end: info.end != null ? info.end : undefined,\n            });\n        }\n    }\n\n    /**\n     * @returns {?NftId}\n     */\n    get nftId() {\n        return this._nftId;\n    }\n\n    /**\n     * Set the token ID for which the info is being requested.\n     *\n     * @param {NftId | string} nftId\n     * @returns {TokenNftInfoQuery}\n     */\n    setNftId(nftId) {\n        this._nftId =\n            typeof nftId === \"string\"\n                ? NftId.fromString(nftId)\n                : NftId._fromProtobuf(nftId._toProtobuf());\n\n        return this;\n    }\n\n    /**\n     * @deprecated with no replacement\n     * @returns {?AccountId}\n     */\n    get accountId() {\n        console.warn(\n            \"`TokenNftInfoQuery.accountId` is deprecated with no replacement\"\n        );\n        return this._accountId;\n    }\n\n    /**\n     * @deprecated with no replacement\n     * Set the token ID for which the info is being requested.\n     * @param {AccountId | string} accountId\n     * @returns {TokenNftInfoQuery}\n     */\n    setAccountId(accountId) {\n        console.warn(\n            \"`TokenNftInfoQuery.setAccountId()` is deprecated with no replacement\"\n        );\n        this._accountId =\n            typeof accountId === \"string\"\n                ? AccountId.fromString(accountId)\n                : AccountId._fromProtobuf(accountId._toProtobuf());\n\n        return this;\n    }\n\n    /**\n     * @deprecated with no replacement\n     * @returns {?TokenId}\n     */\n    get tokenId() {\n        console.warn(\n            \"`TokenNftInfoQuery.tokenId` is deprecated with no replacement\"\n        );\n        return this._tokenId;\n    }\n\n    /**\n     * @deprecated with no replacement\n     * Set the token ID for which the info is being requested.\n     * @param {TokenId | string} tokenId\n     * @returns {TokenNftInfoQuery}\n     */\n    setTokenId(tokenId) {\n        console.warn(\n            \"`TokenNftInfoQuery.setTokenId()` is deprecated with no replacement\"\n        );\n        this._tokenId =\n            typeof tokenId === \"string\"\n                ? TokenId.fromString(tokenId)\n                : TokenId._fromProtobuf(tokenId._toProtobuf());\n\n        return this;\n    }\n\n    /**\n     * @deprecated with no replacement\n     * @returns {?Long}\n     */\n    get start() {\n        console.warn(\n            \"`TokenNftInfoQuery.start` is deprecated with no replacement\"\n        );\n        return this._start;\n    }\n\n    /**\n     * @deprecated with no replacement\n     * Set the token ID for which the info is being requested.\n     * @param {Long | number} start\n     * @returns {TokenNftInfoQuery}\n     */\n    setStart(start) {\n        console.warn(\n            \"`TokenNftInfoQuery.setStart()` is deprecated with no replacement\"\n        );\n        this._start =\n            typeof start === \"number\" ? Long.fromNumber(start) : start;\n\n        return this;\n    }\n\n    /**\n     * @deprecated with no replacement\n     * @returns {?Long}\n     */\n    get end() {\n        console.warn(\n            \"`TokenNftInfoQuery.end` is deprecated with no replacement\"\n        );\n        return this._end;\n    }\n\n    /**\n     * @deprecated with no replacement\n     * Set the token ID for which the info is being requested.\n     * @param {Long | number} end\n     * @returns {TokenNftInfoQuery}\n     */\n    setEnd(end) {\n        console.warn(\n            \"`TokenNftInfoQuery.setEnd()` is deprecated with no replacement\"\n        );\n        this._end = typeof end === \"number\" ? Long.fromNumber(end) : end;\n\n        return this;\n    }\n\n    /**\n     * @override\n     * @param {import(\"../client/Client.js\").default<Channel, *>} client\n     * @returns {Promise<Hbar>}\n     */\n    async getCost(client) {\n        let cost = await super.getCost(client);\n\n        if (cost.toTinybars().greaterThan(25)) {\n            return cost;\n        } else {\n            return Hbar.fromTinybars(25);\n        }\n    }\n\n    /**\n     * @override\n     * @internal\n     * @param {Channel} channel\n     * @param {proto.IQuery} request\n     * @returns {Promise<proto.IResponse>}\n     */\n    _execute(channel, request) {\n        return channel.token.getTokenNftInfo(request);\n    }\n\n    /**\n     * @override\n     * @internal\n     * @param {proto.IResponse} response\n     * @returns {proto.IResponseHeader}\n     */\n    _mapResponseHeader(response) {\n        const infos = /** @type {proto.ITokenGetNftInfoResponse} */ (\n            response.tokenGetNftInfo\n        );\n\n        return /** @type {proto.IResponseHeader} */ (infos.header);\n    }\n\n    /**\n     * @override\n     * @internal\n     * @param {proto.IResponse} response\n     * @param {AccountId} nodeAccountId\n     * @param {proto.IQuery} request\n     * @returns {Promise<TokenNftInfo[]>}\n     */\n    // eslint-disable-next-line @typescript-eslint/no-unused-vars\n    _mapResponse(response, nodeAccountId, request) {\n        const nfts = [\n            /** @type {proto.ITokenNftInfo} */\n            (\n                /** @type {proto.ITokenGetNftInfoResponse} */ (\n                    response.tokenGetNftInfo\n                ).nft\n            ),\n        ];\n\n        return Promise.resolve(\n            nfts.map((nft) =>\n                TokenNftInfo._fromProtobuf(\n                    /** @type {proto.ITokenNftInfo} */ (nft)\n                )\n            )\n        );\n    }\n\n    /**\n     * @override\n     * @internal\n     * @param {proto.IQueryHeader} header\n     * @returns {proto.IQuery}\n     */\n    _onMakeRequest(header) {\n        return {\n            tokenGetNftInfo: {\n                header,\n                nftID: this._nftId != null ? this._nftId._toProtobuf() : null,\n            },\n        };\n    }\n}\n\n// eslint-disable-next-line @typescript-eslint/unbound-method\nQUERY_REGISTRY.set(\"tokenGetNftInfo\", TokenNftInfoQuery._fromProtobuf);\n", "import TokenId from \"./TokenId.js\";\nimport AccountId from \"../account/AccountId.js\";\nimport Transaction, {\n    TRANSACTION_REGISTRY,\n} from \"../transaction/Transaction.js\";\n\n/**\n * @namespace proto\n * @typedef {import(\"@hashgraph/proto\").ITransaction} proto.ITransaction\n * @typedef {import(\"@hashgraph/proto\").ISignedTransaction} proto.ISignedTransaction\n * @typedef {import(\"@hashgraph/proto\").TransactionBody} proto.TransactionBody\n * @typedef {import(\"@hashgraph/proto\").ITransactionBody} proto.ITransactionBody\n * @typedef {import(\"@hashgraph/proto\").ITransactionResponse} proto.ITransactionResponse\n * @typedef {import(\"@hashgraph/proto\").ITokenRevokeKycTransactionBody} proto.ITokenRevokeKycTransactionBody\n * @typedef {import(\"@hashgraph/proto\").ITokenID} proto.ITokenID\n */\n\n/**\n * @typedef {import(\"../channel/Channel.js\").default} Channel\n * @typedef {import(\"../client/Client.js\").default<*, *>} Client\n * @typedef {import(\"../transaction/TransactionId.js\").default} TransactionId\n */\n\n/**\n * RevokeKyc a new Hedera\u2122 crypto-currency token.\n */\nexport default class TokenRevokeKycTransaction extends Transaction {\n    /**\n     * @param {object} [props]\n     * @param {TokenId | string} [props.tokenId]\n     * @param {AccountId | string} [props.accountId]\n     */\n    constructor(props = {}) {\n        super();\n\n        /**\n         * @private\n         * @type {?TokenId}\n         */\n        this._tokenId = null;\n\n        /**\n         * @private\n         * @type {?AccountId}\n         */\n        this._accountId = null;\n\n        if (props.tokenId != null) {\n            this.setTokenId(props.tokenId);\n        }\n\n        if (props.accountId != null) {\n            this.setAccountId(props.accountId);\n        }\n    }\n\n    /**\n     * @internal\n     * @param {proto.ITransaction[]} transactions\n     * @param {proto.ISignedTransaction[]} signedTransactions\n     * @param {TransactionId[]} transactionIds\n     * @param {AccountId[]} nodeIds\n     * @param {proto.ITransactionBody[]} bodies\n     * @returns {TokenRevokeKycTransaction}\n     */\n    static _fromProtobuf(\n        transactions,\n        signedTransactions,\n        transactionIds,\n        nodeIds,\n        bodies\n    ) {\n        const body = bodies[0];\n        const revokeKycToken =\n            /** @type {proto.ITokenRevokeKycTransactionBody} */ (\n                body.tokenRevokeKyc\n            );\n\n        return Transaction._fromProtobufTransactions(\n            new TokenRevokeKycTransaction({\n                tokenId:\n                    revokeKycToken.token != null\n                        ? TokenId._fromProtobuf(revokeKycToken.token)\n                        : undefined,\n                accountId:\n                    revokeKycToken.account != null\n                        ? AccountId._fromProtobuf(revokeKycToken.account)\n                        : undefined,\n            }),\n            transactions,\n            signedTransactions,\n            transactionIds,\n            nodeIds,\n            bodies\n        );\n    }\n\n    /**\n     * @returns {?TokenId}\n     */\n    get tokenId() {\n        return this._tokenId;\n    }\n\n    /**\n     * @param {TokenId | string} tokenId\n     * @returns {this}\n     */\n    setTokenId(tokenId) {\n        this._requireNotFrozen();\n        this._tokenId =\n            typeof tokenId === \"string\"\n                ? TokenId.fromString(tokenId)\n                : tokenId.clone();\n\n        return this;\n    }\n\n    /**\n     * @returns {?AccountId}\n     */\n    get accountId() {\n        return this._accountId;\n    }\n\n    /**\n     * @param {AccountId | string} accountId\n     * @returns {this}\n     */\n    setAccountId(accountId) {\n        this._requireNotFrozen();\n        this._accountId =\n            typeof accountId === \"string\"\n                ? AccountId.fromString(accountId)\n                : accountId.clone();\n\n        return this;\n    }\n\n    /**\n     * @param {Client} client\n     */\n    _validateChecksums(client) {\n        if (this._tokenId != null) {\n            this._tokenId.validateChecksum(client);\n        }\n\n        if (this._accountId != null) {\n            this._accountId.validateChecksum(client);\n        }\n    }\n\n    /**\n     * @override\n     * @internal\n     * @param {Channel} channel\n     * @param {proto.ITransaction} request\n     * @returns {Promise<proto.ITransactionResponse>}\n     */\n    _execute(channel, request) {\n        return channel.token.revokeKycFromTokenAccount(request);\n    }\n\n    /**\n     * @override\n     * @protected\n     * @returns {NonNullable<proto.TransactionBody[\"data\"]>}\n     */\n    _getTransactionDataCase() {\n        return \"tokenRevokeKyc\";\n    }\n\n    /**\n     * @override\n     * @protected\n     * @returns {proto.ITokenRevokeKycTransactionBody}\n     */\n    _makeTransactionData() {\n        return {\n            token: this._tokenId != null ? this._tokenId._toProtobuf() : null,\n            account:\n                this._accountId != null ? this._accountId._toProtobuf() : null,\n        };\n    }\n}\n\nTRANSACTION_REGISTRY.set(\n    \"tokenRevokeKyc\",\n    // eslint-disable-next-line @typescript-eslint/unbound-method\n    TokenRevokeKycTransaction._fromProtobuf\n);\n", "import TokenId from \"./TokenId.js\";\nimport AccountId from \"../account/AccountId.js\";\nimport Transaction, {\n    TRANSACTION_REGISTRY,\n} from \"../transaction/Transaction.js\";\n\n/**\n * @namespace proto\n * @typedef {import(\"@hashgraph/proto\").ITransaction} proto.ITransaction\n * @typedef {import(\"@hashgraph/proto\").ISignedTransaction} proto.ISignedTransaction\n * @typedef {import(\"@hashgraph/proto\").TransactionBody} proto.TransactionBody\n * @typedef {import(\"@hashgraph/proto\").ITransactionBody} proto.ITransactionBody\n * @typedef {import(\"@hashgraph/proto\").ITransactionResponse} proto.ITransactionResponse\n * @typedef {import(\"@hashgraph/proto\").ITokenUnfreezeAccountTransactionBody} proto.ITokenUnfreezeAccountTransactionBody\n * @typedef {import(\"@hashgraph/proto\").ITokenID} proto.ITokenID\n */\n\n/**\n * @typedef {import(\"../channel/Channel.js\").default} Channel\n * @typedef {import(\"../client/Client.js\").default<*, *>} Client\n * @typedef {import(\"../transaction/TransactionId.js\").default} TransactionId\n */\n\n/**\n * Unfreeze a new Hedera\u2122 crypto-currency token.\n */\nexport default class TokenUnfreezeTransaction extends Transaction {\n    /**\n     * @param {object} [props]\n     * @param {TokenId | string} [props.tokenId]\n     * @param {AccountId | string} [props.accountId]\n     */\n    constructor(props = {}) {\n        super();\n\n        /**\n         * @private\n         * @type {?TokenId}\n         */\n        this._tokenId = null;\n\n        /**\n         * @private\n         * @type {?AccountId}\n         */\n        this._accountId = null;\n\n        if (props.tokenId != null) {\n            this.setTokenId(props.tokenId);\n        }\n\n        if (props.accountId != null) {\n            this.setAccountId(props.accountId);\n        }\n    }\n\n    /**\n     * @internal\n     * @param {proto.ITransaction[]} transactions\n     * @param {proto.ISignedTransaction[]} signedTransactions\n     * @param {TransactionId[]} transactionIds\n     * @param {AccountId[]} nodeIds\n     * @param {proto.ITransactionBody[]} bodies\n     * @returns {TokenUnfreezeTransaction}\n     */\n    static _fromProtobuf(\n        transactions,\n        signedTransactions,\n        transactionIds,\n        nodeIds,\n        bodies\n    ) {\n        const body = bodies[0];\n        const unfreezeToken =\n            /** @type {proto.ITokenUnfreezeAccountTransactionBody} */ (\n                body.tokenUnfreeze\n            );\n\n        return Transaction._fromProtobufTransactions(\n            new TokenUnfreezeTransaction({\n                tokenId:\n                    unfreezeToken.token != null\n                        ? TokenId._fromProtobuf(unfreezeToken.token)\n                        : undefined,\n                accountId:\n                    unfreezeToken.account != null\n                        ? AccountId._fromProtobuf(unfreezeToken.account)\n                        : undefined,\n            }),\n            transactions,\n            signedTransactions,\n            transactionIds,\n            nodeIds,\n            bodies\n        );\n    }\n\n    /**\n     * @returns {?TokenId}\n     */\n    get tokenId() {\n        return this._tokenId;\n    }\n\n    /**\n     * @param {TokenId | string} tokenId\n     * @returns {this}\n     */\n    setTokenId(tokenId) {\n        this._requireNotFrozen();\n        this._tokenId =\n            typeof tokenId === \"string\"\n                ? TokenId.fromString(tokenId)\n                : tokenId.clone();\n\n        return this;\n    }\n\n    /**\n     * @returns {?AccountId}\n     */\n    get accountId() {\n        return this._accountId;\n    }\n\n    /**\n     * @param {AccountId | string} accountId\n     * @returns {this}\n     */\n    setAccountId(accountId) {\n        this._requireNotFrozen();\n        this._accountId =\n            typeof accountId === \"string\"\n                ? AccountId.fromString(accountId)\n                : accountId.clone();\n\n        return this;\n    }\n\n    /**\n     * @param {Client} client\n     */\n    _validateChecksums(client) {\n        if (this._tokenId != null) {\n            this._tokenId.validateChecksum(client);\n        }\n\n        if (this._accountId != null) {\n            this._accountId.validateChecksum(client);\n        }\n    }\n\n    /**\n     * @override\n     * @internal\n     * @param {Channel} channel\n     * @param {proto.ITransaction} request\n     * @returns {Promise<proto.ITransactionResponse>}\n     */\n    _execute(channel, request) {\n        return channel.token.unfreezeTokenAccount(request);\n    }\n\n    /**\n     * @override\n     * @protected\n     * @returns {NonNullable<proto.TransactionBody[\"data\"]>}\n     */\n    _getTransactionDataCase() {\n        return \"tokenUnfreeze\";\n    }\n\n    /**\n     * @override\n     * @protected\n     * @returns {proto.ITokenUnfreezeAccountTransactionBody}\n     */\n    _makeTransactionData() {\n        return {\n            token: this._tokenId != null ? this._tokenId._toProtobuf() : null,\n            account:\n                this._accountId != null ? this._accountId._toProtobuf() : null,\n        };\n    }\n}\n\nTRANSACTION_REGISTRY.set(\n    \"tokenUnfreeze\",\n    // eslint-disable-next-line @typescript-eslint/unbound-method\n    TokenUnfreezeTransaction._fromProtobuf\n);\n", "import TokenId from \"./TokenId.js\";\nimport Transaction, {\n    TRANSACTION_REGISTRY,\n} from \"../transaction/Transaction.js\";\n\n/**\n * @namespace proto\n * @typedef {import(\"@hashgraph/proto\").ITransaction} proto.ITransaction\n * @typedef {import(\"@hashgraph/proto\").ISignedTransaction} proto.ISignedTransaction\n * @typedef {import(\"@hashgraph/proto\").TransactionBody} proto.TransactionBody\n * @typedef {import(\"@hashgraph/proto\").ITransactionBody} proto.ITransactionBody\n * @typedef {import(\"@hashgraph/proto\").ITransactionResponse} proto.ITransactionResponse\n * @typedef {import(\"@hashgraph/proto\").ITokenUnpauseTransactionBody} proto.ITokenUnpauseTransactionBody\n * @typedef {import(\"@hashgraph/proto\").ITokenID} proto.ITokenID\n */\n\n/**\n * @typedef {import(\"../channel/Channel.js\").default} Channel\n * @typedef {import(\"../client/Client.js\").default<*, *>} Client\n * @typedef {import(\"../transaction/TransactionId.js\").default} TransactionId\n * @typedef {import(\"../account/AccountId.js\").default} AccountId\n */\n\n/**\n * Unpause a new Hedera\u2122 crypto-currency token.\n */\nexport default class TokenUnpauseTransaction extends Transaction {\n    /**\n     * @param {object} [props]\n     * @param {TokenId | string} [props.tokenId]\n     */\n    constructor(props = {}) {\n        super();\n\n        /**\n         * @private\n         * @type {?TokenId}\n         */\n        this._tokenId = null;\n\n        if (props.tokenId != null) {\n            this.setTokenId(props.tokenId);\n        }\n    }\n\n    /**\n     * @internal\n     * @param {proto.ITransaction[]} transactions\n     * @param {proto.ISignedTransaction[]} signedTransactions\n     * @param {TransactionId[]} transactionIds\n     * @param {AccountId[]} nodeIds\n     * @param {proto.ITransactionBody[]} bodies\n     * @returns {TokenUnpauseTransaction}\n     */\n    static _fromProtobuf(\n        transactions,\n        signedTransactions,\n        transactionIds,\n        nodeIds,\n        bodies\n    ) {\n        const body = bodies[0];\n        const unpauseToken = /** @type {proto.ITokenUnpauseTransactionBody} */ (\n            body.tokenUnpause\n        );\n\n        return Transaction._fromProtobufTransactions(\n            new TokenUnpauseTransaction({\n                tokenId:\n                    unpauseToken.token != null\n                        ? TokenId._fromProtobuf(unpauseToken.token)\n                        : undefined,\n            }),\n            transactions,\n            signedTransactions,\n            transactionIds,\n            nodeIds,\n            bodies\n        );\n    }\n\n    /**\n     * @returns {?TokenId}\n     */\n    get tokenId() {\n        return this._tokenId;\n    }\n\n    /**\n     * @param {TokenId | string} tokenId\n     * @returns {this}\n     */\n    setTokenId(tokenId) {\n        this._requireNotFrozen();\n        this._tokenId =\n            typeof tokenId === \"string\"\n                ? TokenId.fromString(tokenId)\n                : tokenId.clone();\n\n        return this;\n    }\n\n    /**\n     * @param {Client} client\n     */\n    _validateChecksums(client) {\n        if (this._tokenId != null) {\n            this._tokenId.validateChecksum(client);\n        }\n    }\n\n    /**\n     * @override\n     * @internal\n     * @param {Channel} channel\n     * @param {proto.ITransaction} request\n     * @returns {Promise<proto.ITransactionResponse>}\n     */\n    _execute(channel, request) {\n        return channel.token.unpauseToken(request);\n    }\n\n    /**\n     * @override\n     * @protected\n     * @returns {NonNullable<proto.TransactionBody[\"data\"]>}\n     */\n    _getTransactionDataCase() {\n        return \"tokenUnpause\";\n    }\n\n    /**\n     * @override\n     * @protected\n     * @returns {proto.ITokenUnpauseTransactionBody}\n     */\n    _makeTransactionData() {\n        return {\n            token: this._tokenId != null ? this._tokenId._toProtobuf() : null,\n        };\n    }\n}\n\nTRANSACTION_REGISTRY.set(\n    \"tokenUnpause\",\n    // eslint-disable-next-line @typescript-eslint/unbound-method\n    TokenUnpauseTransaction._fromProtobuf\n);\n", "import TokenId from \"./TokenId.js\";\nimport Transaction, {\n    TRANSACTION_REGISTRY,\n} from \"../transaction/Transaction.js\";\nimport AccountId from \"../account/AccountId.js\";\nimport Timestamp from \"../Timestamp.js\";\nimport Duration from \"../Duration.js\";\nimport Key from \"../Key.js\";\n\n/**\n * @namespace proto\n * @typedef {import(\"@hashgraph/proto\").ITransaction} proto.ITransaction\n * @typedef {import(\"@hashgraph/proto\").ISignedTransaction} proto.ISignedTransaction\n * @typedef {import(\"@hashgraph/proto\").TransactionBody} proto.TransactionBody\n * @typedef {import(\"@hashgraph/proto\").ITransactionBody} proto.ITransactionBody\n * @typedef {import(\"@hashgraph/proto\").ITransactionResponse} proto.ITransactionResponse\n * @typedef {import(\"@hashgraph/proto\").ITokenUpdateTransactionBody} proto.ITokenUpdateTransactionBody\n * @typedef {import(\"@hashgraph/proto\").ITokenID} proto.ITokenID\n */\n\n/**\n * @typedef {import(\"bignumber.js\").default} BigNumber\n * @typedef {import(\"../channel/Channel.js\").default} Channel\n * @typedef {import(\"../client/Client.js\").default<*, *>} Client\n * @typedef {import(\"../transaction/TransactionId.js\").default} TransactionId\n */\n\n/**\n * Update a new Hedera\u2122 crypto-currency token.\n */\nexport default class TokenUpdateTransaction extends Transaction {\n    /**\n     * @param {object} [props]\n     * @param {TokenId | string} [props.tokenId]\n     * @param {string} [props.tokenName]\n     * @param {string} [props.tokenSymbol]\n     * @param {AccountId | string} [props.treasuryAccountId]\n     * @param {Key} [props.adminKey]\n     * @param {Key} [props.kycKey]\n     * @param {Key} [props.freezeKey]\n     * @param {Key} [props.wipeKey]\n     * @param {Key} [props.supplyKey]\n     * @param {AccountId | string} [props.autoRenewAccountId]\n     * @param {Timestamp | Date} [props.expirationTime]\n     * @param {Duration | Long | number} [props.autoRenewPeriod]\n     * @param {string} [props.tokenMemo]\n     * @param {Key} [props.feeScheduleKey]\n     */\n    constructor(props = {}) {\n        super();\n\n        /**\n         * @private\n         * @type {?TokenId}\n         */\n        this._tokenId = null;\n\n        /**\n         * @private\n         * @type {?string}\n         */\n        this._tokenName = null;\n\n        /**\n         * @private\n         * @type {?string}\n         */\n        this._tokenSymbol = null;\n\n        /**\n         * @private\n         * @type {?AccountId}\n         */\n        this._treasuryAccountId = null;\n\n        /**\n         * @private\n         * @type {?Key}\n         */\n        this._adminKey = null;\n\n        /**\n         * @private\n         * @type {?Key}\n         */\n        this._kycKey = null;\n\n        /**\n         * @private\n         * @type {?Key}\n         */\n        this._freezeKey = null;\n\n        /**\n         * @private\n         * @type {?Key}\n         */\n        this._wipeKey = null;\n\n        /**\n         * @private\n         * @type {?Key}\n         */\n        this._supplyKey = null;\n\n        /**\n         * @private\n         * @type {?AccountId}\n         */\n        this._autoRenewAccountId = null;\n\n        /**\n         * @private\n         * @type {?Timestamp}\n         */\n        this._expirationTime = null;\n\n        /**\n         * @private\n         * @type {?Duration}\n         */\n        this._autoRenewPeriod = null;\n\n        /**\n         * @private\n         * @type {?string}\n         */\n        this._tokenMemo = null;\n\n        /**\n         * @private\n         * @type {?Key}\n         */\n        this._feeScheduleKey = null;\n\n        if (props.tokenId != null) {\n            this.setTokenId(props.tokenId);\n        }\n\n        if (props.tokenName != null) {\n            this.setTokenName(props.tokenName);\n        }\n\n        if (props.tokenSymbol != null) {\n            this.setTokenSymbol(props.tokenSymbol);\n        }\n\n        if (props.treasuryAccountId != null) {\n            this.setTreasuryAccountId(props.treasuryAccountId);\n        }\n\n        if (props.adminKey != null) {\n            this.setAdminKey(props.adminKey);\n        }\n\n        if (props.kycKey != null) {\n            this.setKycKey(props.kycKey);\n        }\n\n        if (props.freezeKey != null) {\n            this.setFreezeKey(props.freezeKey);\n        }\n\n        if (props.wipeKey != null) {\n            this.setWipeKey(props.wipeKey);\n        }\n\n        if (props.supplyKey != null) {\n            this.setsupplyKey(props.supplyKey);\n        }\n\n        if (props.autoRenewAccountId != null) {\n            this.setAutoRenewAccountId(props.autoRenewAccountId);\n        }\n\n        if (props.expirationTime != null) {\n            this.setExpirationTime(props.expirationTime);\n        }\n\n        if (props.autoRenewPeriod != null) {\n            this.setAutoRenewPeriod(props.autoRenewPeriod);\n        }\n\n        if (props.tokenMemo != null) {\n            this.setTokenMemo(props.tokenMemo);\n        }\n\n        if (props.feeScheduleKey != null) {\n            this.setFeeScheduleKey(props.feeScheduleKey);\n        }\n    }\n\n    /**\n     * @internal\n     * @param {proto.ITransaction[]} transactions\n     * @param {proto.ISignedTransaction[]} signedTransactions\n     * @param {TransactionId[]} transactionIds\n     * @param {AccountId[]} nodeIds\n     * @param {proto.ITransactionBody[]} bodies\n     * @returns {TokenUpdateTransaction}\n     */\n    static _fromProtobuf(\n        transactions,\n        signedTransactions,\n        transactionIds,\n        nodeIds,\n        bodies\n    ) {\n        const body = bodies[0];\n        const update = /** @type {proto.ITokenUpdateTransactionBody} */ (\n            body.tokenUpdate\n        );\n\n        return Transaction._fromProtobufTransactions(\n            new TokenUpdateTransaction({\n                tokenId:\n                    update.token != null\n                        ? TokenId._fromProtobuf(update.token)\n                        : undefined,\n                tokenName: update.name != null ? update.name : undefined,\n                tokenSymbol: update.symbol != null ? update.symbol : undefined,\n                treasuryAccountId:\n                    update.treasury != null\n                        ? AccountId._fromProtobuf(update.treasury)\n                        : undefined,\n                adminKey:\n                    update.adminKey != null\n                        ? Key._fromProtobufKey(update.adminKey)\n                        : undefined,\n                kycKey:\n                    update.kycKey != null\n                        ? Key._fromProtobufKey(update.kycKey)\n                        : undefined,\n                freezeKey:\n                    update.freezeKey != null\n                        ? Key._fromProtobufKey(update.freezeKey)\n                        : undefined,\n                wipeKey:\n                    update.wipeKey != null\n                        ? Key._fromProtobufKey(update.wipeKey)\n                        : undefined,\n                supplyKey:\n                    update.supplyKey != null\n                        ? Key._fromProtobufKey(update.supplyKey)\n                        : undefined,\n                autoRenewAccountId:\n                    update.autoRenewAccount != null\n                        ? AccountId._fromProtobuf(update.autoRenewAccount)\n                        : undefined,\n                expirationTime:\n                    update.expiry != null\n                        ? Timestamp._fromProtobuf(update.expiry)\n                        : undefined,\n                autoRenewPeriod:\n                    update.autoRenewPeriod != null\n                        ? Duration._fromProtobuf(update.autoRenewPeriod)\n                        : undefined,\n                tokenMemo:\n                    update.memo != null\n                        ? update.memo.value != null\n                            ? update.memo.value\n                            : undefined\n                        : undefined,\n                feeScheduleKey:\n                    update.feeScheduleKey != null\n                        ? Key._fromProtobufKey(update.feeScheduleKey)\n                        : undefined,\n            }),\n            transactions,\n            signedTransactions,\n            transactionIds,\n            nodeIds,\n            bodies\n        );\n    }\n\n    /**\n     * @returns {?TokenId}\n     */\n    get tokenId() {\n        return this._tokenId;\n    }\n\n    /**\n     * @param {TokenId | string} tokenId\n     * @returns {this}\n     */\n    setTokenId(tokenId) {\n        this._requireNotFrozen();\n        this._tokenId =\n            typeof tokenId === \"string\"\n                ? TokenId.fromString(tokenId)\n                : tokenId.clone();\n\n        return this;\n    }\n\n    /**\n     * @returns {?string}\n     */\n    get tokenName() {\n        return this._tokenName;\n    }\n\n    /**\n     * @param {string} name\n     * @returns {this}\n     */\n    setTokenName(name) {\n        this._requireNotFrozen();\n        this._tokenName = name;\n\n        return this;\n    }\n\n    /**\n     * @returns {?string}\n     */\n    get tokenSymbol() {\n        return this._tokenSymbol;\n    }\n\n    /**\n     * @param {string} symbol\n     * @returns {this}\n     */\n    setTokenSymbol(symbol) {\n        this._requireNotFrozen();\n        this._tokenSymbol = symbol;\n\n        return this;\n    }\n\n    /**\n     * @returns {?AccountId}\n     */\n    get treasuryAccountId() {\n        return this._treasuryAccountId;\n    }\n\n    /**\n     * @param {AccountId | string} id\n     * @returns {this}\n     */\n    setTreasuryAccountId(id) {\n        this._requireNotFrozen();\n        this._treasuryAccountId =\n            typeof id === \"string\" ? AccountId.fromString(id) : id.clone();\n\n        return this;\n    }\n\n    /**\n     * @returns {?Key}\n     */\n    get adminKey() {\n        return this._adminKey;\n    }\n\n    /**\n     * @param {Key} key\n     * @returns {this}\n     */\n    setAdminKey(key) {\n        this._requireNotFrozen();\n        this._adminKey = key;\n\n        return this;\n    }\n\n    /**\n     * @returns {?Key}\n     */\n    get kycKey() {\n        return this._kycKey;\n    }\n\n    /**\n     * @param {Key} key\n     * @returns {this}\n     */\n    setKycKey(key) {\n        this._requireNotFrozen();\n        this._kycKey = key;\n\n        return this;\n    }\n\n    /**\n     * @returns {?Key}\n     */\n    get freezeKey() {\n        return this._freezeKey;\n    }\n\n    /**\n     * @param {Key} key\n     * @returns {this}\n     */\n    setFreezeKey(key) {\n        this._requireNotFrozen();\n        this._freezeKey = key;\n\n        return this;\n    }\n\n    /**\n     * @returns {?Key}\n     */\n    get wipeKey() {\n        return this._wipeKey;\n    }\n\n    /**\n     * @param {Key} key\n     * @returns {this}\n     */\n    setWipeKey(key) {\n        this._requireNotFrozen();\n        this._wipeKey = key;\n\n        return this;\n    }\n\n    /**\n     * @returns {?Key}\n     */\n    get supplyKey() {\n        return this._supplyKey;\n    }\n\n    /**\n     * @param {Key} key\n     * @returns {this}\n     */\n    setsupplyKey(key) {\n        this._requireNotFrozen();\n        this._supplyKey = key;\n\n        return this;\n    }\n\n    /**\n     * @returns {?Timestamp}\n     */\n    get expirationTime() {\n        return this._expirationTime;\n    }\n\n    /**\n     * @param {Timestamp | Date} time\n     * @returns {this}\n     */\n    setExpirationTime(time) {\n        this._requireNotFrozen();\n        this._expirationTime =\n            time instanceof Timestamp ? time : Timestamp.fromDate(time);\n\n        return this;\n    }\n\n    /**\n     * @returns {?AccountId}\n     */\n    get autoRenewAccountId() {\n        return this._autoRenewAccountId;\n    }\n\n    /**\n     * @param {AccountId | string} id\n     * @returns {this}\n     */\n    setAutoRenewAccountId(id) {\n        this._requireNotFrozen();\n        this._autoRenewAccountId =\n            id instanceof AccountId ? id : AccountId.fromString(id);\n\n        return this;\n    }\n\n    /**\n     * @returns {?Duration}\n     */\n    get autoRenewPeriod() {\n        return this._autoRenewPeriod;\n    }\n\n    /**\n     * Set the auto renew period for this token.\n     *\n     * @param {Duration | Long | number} autoRenewPeriod\n     * @returns {this}\n     */\n    setAutoRenewPeriod(autoRenewPeriod) {\n        this._requireNotFrozen();\n        this._autoRenewPeriod =\n            autoRenewPeriod instanceof Duration\n                ? autoRenewPeriod\n                : new Duration(autoRenewPeriod);\n\n        return this;\n    }\n\n    /**\n     * @returns {?string}\n     */\n    get tokenMemo() {\n        return this._tokenMemo;\n    }\n\n    /**\n     * @param {string} tokenMemo\n     * @returns {this}\n     */\n    setTokenMemo(tokenMemo) {\n        this._requireNotFrozen();\n        this._tokenMemo = tokenMemo;\n\n        return this;\n    }\n\n    /**\n     * @returns {?Key}\n     */\n    get feeScheduleKey() {\n        return this._feeScheduleKey;\n    }\n\n    /**\n     * @param {Key} feeScheduleKey\n     * @returns {this}\n     */\n    setFeeScheduleKey(feeScheduleKey) {\n        this._requireNotFrozen();\n        this._feeScheduleKey = feeScheduleKey;\n\n        return this;\n    }\n\n    /**\n     * @returns {this}\n     */\n    clearTokenMemo() {\n        this._requireNotFrozen();\n        this._tokenMemo = null;\n\n        return this;\n    }\n\n    /**\n     * @param {Client} client\n     */\n    _validateChecksums(client) {\n        if (this._tokenId != null) {\n            this._tokenId.validateChecksum(client);\n        }\n\n        if (this._treasuryAccountId != null) {\n            this._treasuryAccountId.validateChecksum(client);\n        }\n\n        if (this._autoRenewAccountId != null) {\n            this._autoRenewAccountId.validateChecksum(client);\n        }\n    }\n\n    /**\n     * @override\n     * @internal\n     * @param {Channel} channel\n     * @param {proto.ITransaction} request\n     * @returns {Promise<proto.ITransactionResponse>}\n     */\n    _execute(channel, request) {\n        return channel.token.updateToken(request);\n    }\n\n    /**\n     * @override\n     * @protected\n     * @returns {NonNullable<proto.TransactionBody[\"data\"]>}\n     */\n    _getTransactionDataCase() {\n        return \"tokenUpdate\";\n    }\n\n    /**\n     * @override\n     * @protected\n     * @returns {proto.ITokenUpdateTransactionBody}\n     */\n    _makeTransactionData() {\n        return {\n            token: this._tokenId != null ? this._tokenId._toProtobuf() : null,\n            name: this.tokenName,\n            symbol: this.tokenSymbol,\n            treasury:\n                this._treasuryAccountId != null\n                    ? this._treasuryAccountId._toProtobuf()\n                    : null,\n            adminKey:\n                this._adminKey != null ? this._adminKey._toProtobufKey() : null,\n            kycKey: this._kycKey != null ? this._kycKey._toProtobufKey() : null,\n            freezeKey:\n                this._freezeKey != null\n                    ? this._freezeKey._toProtobufKey()\n                    : null,\n            wipeKey:\n                this._wipeKey != null ? this._wipeKey._toProtobufKey() : null,\n            supplyKey:\n                this._supplyKey != null\n                    ? this._supplyKey._toProtobufKey()\n                    : null,\n            autoRenewAccount:\n                this._autoRenewAccountId != null\n                    ? this._autoRenewAccountId._toProtobuf()\n                    : null,\n            expiry:\n                this._expirationTime != null\n                    ? this._expirationTime._toProtobuf()\n                    : null,\n            autoRenewPeriod:\n                this._autoRenewPeriod != null\n                    ? this._autoRenewPeriod._toProtobuf()\n                    : null,\n            memo:\n                this._tokenMemo != null\n                    ? {\n                          value: this._tokenMemo,\n                      }\n                    : null,\n            feeScheduleKey:\n                this._feeScheduleKey != null\n                    ? this._feeScheduleKey._toProtobufKey()\n                    : null,\n        };\n    }\n}\n\nTRANSACTION_REGISTRY.set(\n    \"tokenUpdate\",\n    // eslint-disable-next-line @typescript-eslint/unbound-method\n    TokenUpdateTransaction._fromProtobuf\n);\n", "import TokenId from \"./TokenId.js\";\nimport AccountId from \"../account/AccountId.js\";\nimport Transaction, {\n    TRANSACTION_REGISTRY,\n} from \"../transaction/Transaction.js\";\nimport Long from \"long\";\n\n/**\n * @namespace proto\n * @typedef {import(\"@hashgraph/proto\").ITransaction} proto.ITransaction\n * @typedef {import(\"@hashgraph/proto\").ISignedTransaction} proto.ISignedTransaction\n * @typedef {import(\"@hashgraph/proto\").TransactionBody} proto.TransactionBody\n * @typedef {import(\"@hashgraph/proto\").ITransactionBody} proto.ITransactionBody\n * @typedef {import(\"@hashgraph/proto\").ITransactionResponse} proto.ITransactionResponse\n * @typedef {import(\"@hashgraph/proto\").ITokenWipeAccountTransactionBody} proto.ITokenWipeAccountTransactionBody\n * @typedef {import(\"@hashgraph/proto\").ITokenID} proto.ITokenID\n */\n\n/**\n * @typedef {import(\"../channel/Channel.js\").default} Channel\n * @typedef {import(\"../client/Client.js\").default<*, *>} Client\n * @typedef {import(\"../transaction/TransactionId.js\").default} TransactionId\n */\n\n/**\n * Wipe a new Hedera\u2122 crypto-currency token.\n */\nexport default class TokenWipeTransaction extends Transaction {\n    /**\n     * @param {object} [props]\n     * @param {TokenId | string} [props.tokenId]\n     * @param {AccountId | string} [props.accountId]\n     * @param {Long | number} [props.amount]\n     * @param {(Long | number)[]} [props.serials]\n     */\n    constructor(props = {}) {\n        super();\n\n        /**\n         * @private\n         * @type {?TokenId}\n         */\n        this._tokenId = null;\n\n        /**\n         * @private\n         * @type {?AccountId}\n         */\n        this._accountId = null;\n\n        /**\n         * @private\n         * @type {Long[]}\n         */\n        this._serials = [];\n\n        /**\n         * @private\n         * @type {?Long}\n         */\n        this._amount = null;\n\n        if (props.tokenId != null) {\n            this.setTokenId(props.tokenId);\n        }\n\n        if (props.accountId != null) {\n            this.setAccountId(props.accountId);\n        }\n\n        if (props.amount != null) {\n            this.setAmount(props.amount);\n        }\n\n        if (props.serials != null) {\n            this.setSerials(props.serials);\n        }\n    }\n\n    /**\n     * @internal\n     * @param {proto.ITransaction[]} transactions\n     * @param {proto.ISignedTransaction[]} signedTransactions\n     * @param {TransactionId[]} transactionIds\n     * @param {AccountId[]} nodeIds\n     * @param {proto.ITransactionBody[]} bodies\n     * @returns {TokenWipeTransaction}\n     */\n    static _fromProtobuf(\n        transactions,\n        signedTransactions,\n        transactionIds,\n        nodeIds,\n        bodies\n    ) {\n        const body = bodies[0];\n        const wipeToken =\n            /** @type {proto.ITokenWipeAccountTransactionBody} */ (\n                body.tokenWipe\n            );\n\n        return Transaction._fromProtobufTransactions(\n            new TokenWipeTransaction({\n                tokenId:\n                    wipeToken.token != null\n                        ? TokenId._fromProtobuf(wipeToken.token)\n                        : undefined,\n                accountId:\n                    wipeToken.account != null\n                        ? AccountId._fromProtobuf(wipeToken.account)\n                        : undefined,\n                amount: wipeToken.amount != null ? wipeToken.amount : undefined,\n            }),\n            transactions,\n            signedTransactions,\n            transactionIds,\n            nodeIds,\n            bodies\n        );\n    }\n\n    /**\n     * @returns {?TokenId}\n     */\n    get tokenId() {\n        return this._tokenId;\n    }\n\n    /**\n     * @param {TokenId | string} tokenId\n     * @returns {this}\n     */\n    setTokenId(tokenId) {\n        this._requireNotFrozen();\n        this._tokenId =\n            typeof tokenId === \"string\"\n                ? TokenId.fromString(tokenId)\n                : tokenId.clone();\n\n        return this;\n    }\n\n    /**\n     * @returns {?AccountId}\n     */\n    get accountId() {\n        return this._accountId;\n    }\n\n    /**\n     * @param {AccountId | string} accountId\n     * @returns {this}\n     */\n    setAccountId(accountId) {\n        this._requireNotFrozen();\n        this._accountId =\n            typeof accountId === \"string\"\n                ? AccountId.fromString(accountId)\n                : accountId.clone();\n\n        return this;\n    }\n\n    /**\n     * @returns {?Long}\n     */\n    get amount() {\n        return this._amount;\n    }\n\n    /**\n     * @param {Long | number} amount\n     * @returns {this}\n     */\n    setAmount(amount) {\n        this._requireNotFrozen();\n        this._amount = amount instanceof Long ? amount : Long.fromValue(amount);\n\n        return this;\n    }\n\n    /**\n     * @param {Client} client\n     */\n    _validateChecksums(client) {\n        if (this._tokenId != null) {\n            this._tokenId.validateChecksum(client);\n        }\n\n        if (this._accountId != null) {\n            this._accountId.validateChecksum(client);\n        }\n    }\n\n    /**\n     * @returns {Long[]}\n     */\n    get serials() {\n        return this._serials;\n    }\n\n    /**\n     * @param {(Long | number)[]} serials\n     * @returns {this}\n     */\n    setSerials(serials) {\n        this._requireNotFrozen();\n        this._serials = serials.map((serial) =>\n            typeof serial === \"number\" ? Long.fromNumber(serial) : serial\n        );\n\n        return this;\n    }\n\n    /**\n     * @override\n     * @internal\n     * @param {Channel} channel\n     * @param {proto.ITransaction} request\n     * @returns {Promise<proto.ITransactionResponse>}\n     */\n    _execute(channel, request) {\n        return channel.token.wipeTokenAccount(request);\n    }\n\n    /**\n     * @override\n     * @protected\n     * @returns {NonNullable<proto.TransactionBody[\"data\"]>}\n     */\n    _getTransactionDataCase() {\n        return \"tokenWipe\";\n    }\n\n    /**\n     * @override\n     * @protected\n     * @returns {proto.ITokenWipeAccountTransactionBody}\n     */\n    _makeTransactionData() {\n        return {\n            amount: this._amount,\n            token: this._tokenId != null ? this._tokenId._toProtobuf() : null,\n            account:\n                this._accountId != null ? this._accountId._toProtobuf() : null,\n            serialNumbers: this.serials,\n        };\n    }\n}\n\nTRANSACTION_REGISTRY.set(\n    \"tokenWipe\",\n    // eslint-disable-next-line @typescript-eslint/unbound-method\n    TokenWipeTransaction._fromProtobuf\n);\n", "import AccountId from \"../account/AccountId.js\";\nimport Transaction, {\n    DEFAULT_AUTO_RENEW_PERIOD,\n    TRANSACTION_REGISTRY,\n} from \"../transaction/Transaction.js\";\nimport Duration from \"../Duration.js\";\nimport Key from \"../Key.js\";\n\n/**\n * @namespace proto\n * @typedef {import(\"@hashgraph/proto\").IConsensusCreateTopicTransactionBody} proto.IConsensusCreateTopicTransactionBody\n * @typedef {import(\"@hashgraph/proto\").ITransaction} proto.ITransaction\n * @typedef {import(\"@hashgraph/proto\").ISignedTransaction} proto.ISignedTransaction\n * @typedef {import(\"@hashgraph/proto\").TransactionBody} proto.TransactionBody\n * @typedef {import(\"@hashgraph/proto\").ITransactionBody} proto.ITransactionBody\n * @typedef {import(\"@hashgraph/proto\").ITransactionResponse} proto.ITransactionResponse\n */\n\n/**\n * @typedef {import(\"../channel/Channel.js\").default} Channel\n * @typedef {import(\"../client/Client.js\").default<*, *>} Client\n * @typedef {import(\"../transaction/TransactionId.js\").default} TransactionId\n */\n\n/**\n * Create a topic to be used for consensus.\n */\nexport default class TopicCreateTransaction extends Transaction {\n    /**\n     * @param {object} props\n     * @param {Key} [props.adminKey]\n     * @param {Key} [props.submitKey]\n     * @param {Duration | Long | number} [props.autoRenewPeriod]\n     * @param {AccountId | string} [props.autoRenewAccountId]\n     * @param {string} [props.topicMemo]\n     */\n    constructor(props = {}) {\n        super();\n\n        /**\n         * @private\n         * @type {?Key}\n         */\n        this._adminKey = null;\n\n        /**\n         * @private\n         * @type {?Key}\n         */\n        this._submitKey = null;\n\n        /**\n         * @private\n         * @type {?AccountId}\n         */\n        this._autoRenewAccountId = null;\n\n        /**\n         * @private\n         * @type {Duration}\n         */\n        this._autoRenewPeriod = new Duration(DEFAULT_AUTO_RENEW_PERIOD);\n\n        /**\n         * @private\n         * @type {?string}\n         */\n        this._topicMemo = null;\n\n        if (props.adminKey != null) {\n            this.setAdminKey(props.adminKey);\n        }\n\n        if (props.submitKey != null) {\n            this.setSubmitKey(props.submitKey);\n        }\n\n        if (props.autoRenewAccountId != null) {\n            this.setAutoRenewAccountId(props.autoRenewAccountId);\n        }\n\n        if (props.autoRenewPeriod != null) {\n            this.setAutoRenewPeriod(props.autoRenewPeriod);\n        }\n\n        if (props.topicMemo != null) {\n            this.setTopicMemo(props.topicMemo);\n        }\n    }\n\n    /**\n     * @internal\n     * @param {proto.ITransaction[]} transactions\n     * @param {proto.ISignedTransaction[]} signedTransactions\n     * @param {TransactionId[]} transactionIds\n     * @param {AccountId[]} nodeIds\n     * @param {proto.ITransactionBody[]} bodies\n     * @returns {TopicCreateTransaction}\n     */\n    static _fromProtobuf(\n        transactions,\n        signedTransactions,\n        transactionIds,\n        nodeIds,\n        bodies\n    ) {\n        const body = bodies[0];\n        const create =\n            /** @type {proto.IConsensusCreateTopicTransactionBody} */ (\n                body.consensusCreateTopic\n            );\n\n        return Transaction._fromProtobufTransactions(\n            new TopicCreateTransaction({\n                adminKey:\n                    create.adminKey != null\n                        ? Key._fromProtobufKey(create.adminKey)\n                        : undefined,\n                submitKey:\n                    create.submitKey != null\n                        ? Key._fromProtobufKey(create.submitKey)\n                        : undefined,\n                autoRenewAccountId:\n                    create.autoRenewAccount != null\n                        ? AccountId._fromProtobuf(create.autoRenewAccount)\n                        : undefined,\n                autoRenewPeriod:\n                    create.autoRenewPeriod != null\n                        ? create.autoRenewPeriod.seconds != null\n                            ? create.autoRenewPeriod.seconds\n                            : undefined\n                        : undefined,\n                topicMemo: create.memo != null ? create.memo : undefined,\n            }),\n            transactions,\n            signedTransactions,\n            transactionIds,\n            nodeIds,\n            bodies\n        );\n    }\n\n    /**\n     * @returns {?string}\n     */\n    get topicMemo() {\n        return this._topicMemo;\n    }\n\n    /**\n     * @param {string} topicMemo\n     * @returns {this}\n     */\n    setTopicMemo(topicMemo) {\n        this._requireNotFrozen();\n        this._topicMemo = topicMemo;\n\n        return this;\n    }\n\n    /**\n     * @returns {?Key}\n     */\n    get adminKey() {\n        return this._adminKey;\n    }\n\n    /**\n     * @param {Key} adminKey\n     * @returns {this}\n     */\n    setAdminKey(adminKey) {\n        this._requireNotFrozen();\n        this._adminKey = adminKey;\n\n        return this;\n    }\n\n    /**\n     * @returns {?Key}\n     */\n    get submitKey() {\n        return this._submitKey;\n    }\n\n    /**\n     * @param {Key} submitKey\n     * @returns {this}\n     */\n    setSubmitKey(submitKey) {\n        this._requireNotFrozen();\n        this._submitKey = submitKey;\n\n        return this;\n    }\n\n    /**\n     * @returns {?AccountId}\n     */\n    get autoRenewAccountId() {\n        return this._autoRenewAccountId;\n    }\n\n    /**\n     * @param {AccountId | string} autoRenewAccountId\n     * @returns {this}\n     */\n    setAutoRenewAccountId(autoRenewAccountId) {\n        this._requireNotFrozen();\n        this._autoRenewAccountId =\n            autoRenewAccountId instanceof AccountId\n                ? autoRenewAccountId\n                : AccountId.fromString(autoRenewAccountId);\n\n        return this;\n    }\n\n    /**\n     * @returns {Duration}\n     */\n    get autoRenewPeriod() {\n        return this._autoRenewPeriod;\n    }\n\n    /**\n     * Set the auto renew period for this account.\n     *\n     * @param {Duration | Long | number} autoRenewPeriod\n     * @returns {this}\n     */\n    setAutoRenewPeriod(autoRenewPeriod) {\n        this._requireNotFrozen();\n        this._autoRenewPeriod =\n            autoRenewPeriod instanceof Duration\n                ? autoRenewPeriod\n                : new Duration(autoRenewPeriod);\n\n        return this;\n    }\n\n    /**\n     * @param {Client} client\n     */\n    _validateChecksums(client) {\n        if (this._autoRenewAccountId != null) {\n            this._autoRenewAccountId.validateChecksum(client);\n        }\n    }\n\n    /**\n     * @override\n     * @internal\n     * @param {Channel} channel\n     * @param {proto.ITransaction} request\n     * @returns {Promise<proto.ITransactionResponse>}\n     */\n    _execute(channel, request) {\n        return channel.consensus.createTopic(request);\n    }\n\n    /**\n     * @override\n     * @protected\n     * @returns {NonNullable<proto.TransactionBody[\"data\"]>}\n     */\n    _getTransactionDataCase() {\n        return \"consensusCreateTopic\";\n    }\n\n    /**\n     * @override\n     * @protected\n     * @returns {proto.IConsensusCreateTopicTransactionBody}\n     */\n    _makeTransactionData() {\n        return {\n            adminKey:\n                this._adminKey != null ? this._adminKey._toProtobufKey() : null,\n            submitKey:\n                this._submitKey != null\n                    ? this._submitKey._toProtobufKey()\n                    : null,\n            autoRenewAccount:\n                this._autoRenewAccountId != null\n                    ? this._autoRenewAccountId._toProtobuf()\n                    : null,\n            autoRenewPeriod: this._autoRenewPeriod._toProtobuf(),\n            memo: this._topicMemo,\n        };\n    }\n}\n\nTRANSACTION_REGISTRY.set(\n    \"consensusCreateTopic\",\n    // eslint-disable-next-line @typescript-eslint/unbound-method\n    TopicCreateTransaction._fromProtobuf\n);\n", "import Transaction, {\n    TRANSACTION_REGISTRY,\n} from \"../transaction/Transaction.js\";\nimport TopicId from \"./TopicId.js\";\n\n/**\n * @namespace proto\n * @typedef {import(\"@hashgraph/proto\").IConsensusDeleteTopicTransactionBody} proto.IConsensusDeleteTopicTransactionBody\n * @typedef {import(\"@hashgraph/proto\").ITransaction} proto.ITransaction\n * @typedef {import(\"@hashgraph/proto\").ISignedTransaction} proto.ISignedTransaction\n * @typedef {import(\"@hashgraph/proto\").TransactionBody} proto.TransactionBody\n * @typedef {import(\"@hashgraph/proto\").ITransactionBody} proto.ITransactionBody\n * @typedef {import(\"@hashgraph/proto\").ITransactionResponse} proto.ITransactionResponse\n */\n\n/**\n * @typedef {import(\"../channel/Channel.js\").default} Channel\n * @typedef {import(\"../client/Client.js\").default<*, *>} Client\n * @typedef {import(\"../account/AccountId.js\").default} AccountId\n * @typedef {import(\"../transaction/TransactionId.js\").default} TransactionId\n */\n\n/**\n * Delete a topic.\n *\n * No more transactions or queries on the topic will succeed.\n *\n * If an adminKey is set, this transaction must be signed by that key.\n * If there is no adminKey, this transaction will fail with Status#Unautorized.\n */\nexport default class TopicDeleteTransaction extends Transaction {\n    /**\n     * @param {object} props\n     * @param {TopicId | string} [props.topicId]\n     */\n    constructor(props = {}) {\n        super();\n\n        /**\n         * @private\n         * @type {?TopicId}\n         */\n        this._topicId = null;\n\n        if (props.topicId != null) {\n            this.setTopicId(props.topicId);\n        }\n    }\n\n    /**\n     * @internal\n     * @param {proto.ITransaction[]} transactions\n     * @param {proto.ISignedTransaction[]} signedTransactions\n     * @param {TransactionId[]} transactionIds\n     * @param {AccountId[]} nodeIds\n     * @param {proto.ITransactionBody[]} bodies\n     * @returns {TopicDeleteTransaction}\n     */\n    static _fromProtobuf(\n        transactions,\n        signedTransactions,\n        transactionIds,\n        nodeIds,\n        bodies\n    ) {\n        const body = bodies[0];\n        const topicDelete =\n            /** @type {proto.IConsensusDeleteTopicTransactionBody} */ (\n                body.consensusDeleteTopic\n            );\n\n        return Transaction._fromProtobufTransactions(\n            new TopicDeleteTransaction({\n                topicId:\n                    topicDelete.topicID != null\n                        ? TopicId._fromProtobuf(topicDelete.topicID)\n                        : undefined,\n            }),\n            transactions,\n            signedTransactions,\n            transactionIds,\n            nodeIds,\n            bodies\n        );\n    }\n\n    /**\n     * @returns {?TopicId}\n     */\n    get topicId() {\n        return this._topicId;\n    }\n\n    /**\n     * Set the topic ID which is being deleted in this transaction.\n     *\n     * @param {TopicId | string} topicId\n     * @returns {TopicDeleteTransaction}\n     */\n    setTopicId(topicId) {\n        this._requireNotFrozen();\n        this._topicId =\n            typeof topicId === \"string\"\n                ? TopicId.fromString(topicId)\n                : topicId.clone();\n\n        return this;\n    }\n\n    /**\n     * @param {Client} client\n     */\n    _validateChecksums(client) {\n        if (this._topicId != null) {\n            this._topicId.validateChecksum(client);\n        }\n    }\n\n    /**\n     * @override\n     * @internal\n     * @param {Channel} channel\n     * @param {proto.ITransaction} request\n     * @returns {Promise<proto.ITransactionResponse>}\n     */\n    _execute(channel, request) {\n        return channel.consensus.deleteTopic(request);\n    }\n\n    /**\n     * @override\n     * @protected\n     * @returns {NonNullable<proto.TransactionBody[\"data\"]>}\n     */\n    _getTransactionDataCase() {\n        return \"consensusDeleteTopic\";\n    }\n\n    /**\n     * @override\n     * @protected\n     * @returns {proto.IConsensusDeleteTopicTransactionBody}\n     */\n    _makeTransactionData() {\n        return {\n            topicID: this._topicId != null ? this._topicId._toProtobuf() : null,\n        };\n    }\n}\n\nTRANSACTION_REGISTRY.set(\n    \"consensusDeleteTopic\",\n    // eslint-disable-next-line @typescript-eslint/unbound-method\n    TopicDeleteTransaction._fromProtobuf\n);\n", "import TopicId from \"./TopicId.js\";\nimport AccountId from \"../account/AccountId.js\";\nimport Timestamp from \"../Timestamp.js\";\nimport Long from \"long\";\nimport Duration from \"../Duration.js\";\nimport * as proto from \"@hashgraph/proto\";\nimport Key from \"../Key.js\";\n\n/**\n * Current state of a topic.\n */\nexport default class TopicInfo {\n    /**\n     * @private\n     * @param {object} props\n     * @param {TopicId} props.topicId\n     * @param {string} props.topicMemo\n     * @param {Uint8Array} props.runningHash\n     * @param {Long} props.sequenceNumber\n     * @param {?Timestamp} props.expirationTime\n     * @param {?Key} props.adminKey\n     * @param {?Key} props.submitKey\n     * @param {?Duration} props.autoRenewPeriod\n     * @param {?AccountId} props.autoRenewAccountId\n     */\n    constructor(props) {\n        /**\n         * The ID of the topic for which information is requested.\n         *\n         * @readonly\n         */\n        this.topicId = props.topicId;\n\n        /**\n         * Short publicly visible memo about the topic. No guarantee of uniqueness.\n         *\n         * @readonly\n         */\n        this.topicMemo = props.topicMemo;\n\n        /**\n         * SHA-384 running hash of (previousRunningHash, topicId, consensusTimestamp, sequenceNumber, message).\n         *\n         * @readonly\n         */\n        this.runningHash = props.runningHash;\n\n        /**\n         * Sequence number (starting at 1 for the first submitMessage) of messages on the topic.\n         *\n         * @readonly\n         */\n        this.sequenceNumber = props.sequenceNumber;\n\n        /**\n         * Effective consensus timestamp at (and after) which submitMessage calls will no longer succeed on the topic.\n         *\n         * @readonly\n         */\n        this.expirationTime = props.expirationTime;\n\n        /**\n         * Access control for update/delete of the topic. Null if there is no key.\n         *\n         * @readonly\n         */\n        this.adminKey = props.adminKey;\n\n        /**\n         * Access control for ConsensusService.submitMessage. Null if there is no key.\n         *\n         * @readonly\n         */\n        this.submitKey = props.submitKey;\n\n        /**\n         * @readonly\n         */\n        this.autoRenewPeriod = props.autoRenewPeriod;\n\n        /**\n         * @readonly\n         */\n        this.autoRenewAccountId = props.autoRenewAccountId;\n\n        Object.freeze(this);\n    }\n\n    /**\n     * @internal\n     * @param {proto.IConsensusGetTopicInfoResponse} infoResponse\n     * @returns {TopicInfo}\n     */\n    static _fromProtobuf(infoResponse) {\n        const info = /** @type {proto.IConsensusTopicInfo} */ (\n            infoResponse.topicInfo\n        );\n\n        return new TopicInfo({\n            topicId: TopicId._fromProtobuf(\n                /** @type {proto.ITopicID} */ (infoResponse.topicID)\n            ),\n            topicMemo: info.memo != null ? info.memo : \"\",\n            runningHash:\n                info.runningHash != null ? info.runningHash : new Uint8Array(),\n            sequenceNumber:\n                info.sequenceNumber != null\n                    ? info.sequenceNumber instanceof Long\n                        ? info.sequenceNumber\n                        : Long.fromValue(info.sequenceNumber)\n                    : Long.ZERO,\n            expirationTime:\n                info.expirationTime != null\n                    ? Timestamp._fromProtobuf(info.expirationTime)\n                    : null,\n            adminKey:\n                info.adminKey != null\n                    ? Key._fromProtobufKey(info.adminKey)\n                    : null,\n            submitKey:\n                info.submitKey != null\n                    ? Key._fromProtobufKey(info.submitKey)\n                    : null,\n            autoRenewPeriod:\n                info.autoRenewPeriod != null\n                    ? new Duration(\n                          /** @type {Long} */ (info.autoRenewPeriod.seconds)\n                      )\n                    : null,\n            autoRenewAccountId:\n                info.autoRenewAccount != null\n                    ? AccountId._fromProtobuf(info.autoRenewAccount)\n                    : null,\n        });\n    }\n\n    /**\n     * @internal\n     * @returns {proto.IConsensusGetTopicInfoResponse}\n     */\n    _toProtobuf() {\n        return {\n            topicID: this.topicId._toProtobuf(),\n            topicInfo: {\n                memo: this.topicMemo,\n                runningHash: this.runningHash,\n                sequenceNumber: this.sequenceNumber,\n                expirationTime:\n                    this.expirationTime != null\n                        ? this.expirationTime._toProtobuf()\n                        : null,\n                adminKey:\n                    this.adminKey != null\n                        ? this.adminKey._toProtobufKey()\n                        : null,\n                submitKey:\n                    this.submitKey != null\n                        ? this.submitKey._toProtobufKey()\n                        : null,\n                autoRenewPeriod:\n                    this.autoRenewPeriod != null\n                        ? this.autoRenewPeriod._toProtobuf()\n                        : null,\n                autoRenewAccount:\n                    this.autoRenewAccountId != null\n                        ? this.autoRenewAccountId._toProtobuf()\n                        : null,\n            },\n        };\n    }\n\n    /**\n     * @param {Uint8Array} bytes\n     * @returns {TopicInfo}\n     */\n    static fromBytes(bytes) {\n        return TopicInfo._fromProtobuf({\n            topicInfo: proto.ConsensusTopicInfo.decode(bytes),\n        });\n    }\n\n    /**\n     * @returns {Uint8Array}\n     */\n    toBytes() {\n        return proto.ConsensusTopicInfo.encode(\n            /** @type {proto.IConsensusTopicInfo} */ (\n                this._toProtobuf().topicInfo\n            )\n        ).finish();\n    }\n}\n", "import Query, { QUERY_REGISTRY } from \"../query/Query.js\";\nimport TopicId from \"./TopicId.js\";\nimport TopicInfo from \"./TopicInfo.js\";\nimport Hbar from \"../Hbar.js\";\n\n/**\n * @namespace proto\n * @typedef {import(\"@hashgraph/proto\").IQuery} proto.IQuery\n * @typedef {import(\"@hashgraph/proto\").IQueryHeader} proto.IQueryHeader\n * @typedef {import(\"@hashgraph/proto\").IResponse} proto.IResponse\n * @typedef {import(\"@hashgraph/proto\").IResponseHeader} proto.IResponseHeader\n * @typedef {import(\"@hashgraph/proto\").IConsensusTopicQuery} proto.IConsensusTopicQuery\n * @typedef {import(\"@hashgraph/proto\").IConsensusGetTopicInfoResponse} proto.IConsensusGetTopicInfoResponse\n */\n\n/**\n * @typedef {import(\"../channel/Channel.js\").default} Channel\n * @typedef {import(\"../client/Client.js\").default<*, *>} Client\n * @typedef {import(\"../account/AccountId.js\").default} AccountId\n */\n\n/**\n * Retrieve the latest state of a topic.\n *\n * @augments {Query<TopicInfo>}\n */\nexport default class TopicInfoQuery extends Query {\n    /**\n     * @param {object} [props]\n     * @param {TopicId | string} [props.topicId]\n     */\n    constructor(props = {}) {\n        super();\n\n        /**\n         * @private\n         * @type {?TopicId}\n         */\n        this._topicId = null;\n\n        if (props.topicId != null) {\n            this.setTopicId(props.topicId);\n        }\n    }\n\n    /**\n     * @internal\n     * @param {proto.IQuery} query\n     * @returns {TopicInfoQuery}\n     */\n    static _fromProtobuf(query) {\n        const info = /** @type {proto.IConsensusTopicQuery} */ (\n            query.consensusGetTopicInfo\n        );\n\n        return new TopicInfoQuery({\n            topicId:\n                info.topicID != null\n                    ? TopicId._fromProtobuf(info.topicID)\n                    : undefined,\n        });\n    }\n\n    /**\n     * @returns {?TopicId}\n     */\n    get topicId() {\n        return this._topicId;\n    }\n\n    /**\n     * Set the topic ID for which the info is being requested.\n     *\n     * @param {TopicId | string} topicId\n     * @returns {TopicInfoQuery}\n     */\n    setTopicId(topicId) {\n        this._topicId =\n            typeof topicId === \"string\"\n                ? TopicId.fromString(topicId)\n                : topicId.clone();\n\n        return this;\n    }\n\n    /**\n     * @override\n     * @param {import(\"../client/Client.js\").default<Channel, *>} client\n     * @returns {Promise<Hbar>}\n     */\n    async getCost(client) {\n        let cost = await super.getCost(client);\n\n        if (cost.toTinybars().greaterThan(25)) {\n            return cost;\n        } else {\n            return Hbar.fromTinybars(25);\n        }\n    }\n\n    /**\n     * @param {Client} client\n     */\n    _validateChecksums(client) {\n        if (this._topicId != null) {\n            this._topicId.validateChecksum(client);\n        }\n    }\n\n    /**\n     * @override\n     * @internal\n     * @param {Channel} channel\n     * @param {proto.IQuery} request\n     * @returns {Promise<proto.IResponse>}\n     */\n    _execute(channel, request) {\n        return channel.consensus.getTopicInfo(request);\n    }\n\n    /**\n     * @override\n     * @internal\n     * @param {proto.IResponse} response\n     * @returns {proto.IResponseHeader}\n     */\n    _mapResponseHeader(response) {\n        const consensusGetTopicInfo =\n            /** @type {proto.IConsensusGetTopicInfoResponse} */ (\n                response.consensusGetTopicInfo\n            );\n        return /** @type {proto.IResponseHeader} */ (\n            consensusGetTopicInfo.header\n        );\n    }\n\n    /**\n     * @protected\n     * @override\n     * @param {proto.IResponse} response\n     * @param {AccountId} nodeAccountId\n     * @param {proto.IQuery} request\n     * @returns {Promise<TopicInfo>}\n     */\n    // eslint-disable-next-line @typescript-eslint/no-unused-vars\n    _mapResponse(response, nodeAccountId, request) {\n        return Promise.resolve(\n            TopicInfo._fromProtobuf(\n                /** @type {proto.IConsensusGetTopicInfoResponse} */ (\n                    response.consensusGetTopicInfo\n                )\n            )\n        );\n    }\n\n    /**\n     * @override\n     * @internal\n     * @param {proto.IQueryHeader} header\n     * @returns {proto.IQuery}\n     */\n    _onMakeRequest(header) {\n        return {\n            consensusGetTopicInfo: {\n                header,\n                topicID:\n                    this._topicId != null ? this._topicId._toProtobuf() : null,\n            },\n        };\n    }\n}\n\n// eslint-disable-next-line @typescript-eslint/unbound-method\nQUERY_REGISTRY.set(\"consensusGetTopicInfo\", TopicInfoQuery._fromProtobuf);\n", "import Timestamp from \"../Timestamp.js\";\nimport Long from \"long\";\n\n/**\n * @namespace proto\n * @typedef {import(\"@hashgraph/proto\").IConsensusTopicResponse} proto.IConsensusTopicResponse\n * @typedef {import(\"@hashgraph/proto\").ITimestamp} proto.ITimestamp\n */\n\nexport default class TopicMessageChunk {\n    /**\n     * @private\n     * @param {object} props\n     * @param {Timestamp} props.consensusTimestamp\n     * @param {Uint8Array} props.contents\n     * @param {Uint8Array} props.runningHash\n     * @param {Long} props.sequenceNumber\n     */\n    constructor(props) {\n        /** @readonly */\n        this.consensusTimestamp = props.consensusTimestamp;\n        /** @readonly */\n        this.contents = props.contents;\n        /** @readonly */\n        this.runningHash = props.runningHash;\n        /** @readonly */\n        this.sequenceNumber = props.sequenceNumber;\n\n        Object.freeze(this);\n    }\n\n    /**\n     * @internal\n     * @param {proto.IConsensusTopicResponse} response\n     * @returns {TopicMessageChunk}\n     */\n    static _fromProtobuf(response) {\n        return new TopicMessageChunk({\n            consensusTimestamp: Timestamp._fromProtobuf(\n                /** @type {proto.ITimestamp} */\n                (response.consensusTimestamp)\n            ),\n            contents:\n                response.message != null ? response.message : new Uint8Array(),\n            runningHash:\n                response.runningHash != null\n                    ? response.runningHash\n                    : new Uint8Array(),\n            sequenceNumber:\n                response.sequenceNumber != null\n                    ? response.sequenceNumber instanceof Long\n                        ? response.sequenceNumber\n                        : Long.fromValue(response.sequenceNumber)\n                    : Long.ZERO,\n        });\n    }\n\n    /**\n     * @internal\n     * @returns {proto.IConsensusTopicResponse}\n     */\n    _toProtobuf() {\n        return {\n            consensusTimestamp: this.consensusTimestamp._toProtobuf(),\n            message: this.contents,\n            runningHash: this.runningHash,\n            sequenceNumber: this.sequenceNumber,\n        };\n    }\n}\n", "import Timestamp from \"../Timestamp.js\";\nimport TopicMessageChunk from \"./TopicMessageChunk.js\";\nimport Long from \"long\";\n\n/**\n * @namespace proto\n * @typedef {import(\"@hashgraph/proto\").IConsensusTopicResponse} proto.IConsensusTopicResponse\n * @typedef {import(\"@hashgraph/proto\").ITimestamp} proto.ITimestamp\n */\n\nexport default class TopicMessage {\n    /**\n     * @private\n     * @param {object} props\n     * @param {Timestamp} props.consensusTimestamp\n     * @param {Uint8Array} props.contents\n     * @param {Uint8Array} props.runningHash\n     * @param {Long} props.sequenceNumber\n     * @param {TopicMessageChunk[]} props.chunks\n     */\n    constructor(props) {\n        /** @readonly */\n        this.consensusTimestamp = props.consensusTimestamp;\n        /** @readonly */\n        this.contents = props.contents;\n        /** @readonly */\n        this.runningHash = props.runningHash;\n        /** @readonly */\n        this.sequenceNumber = props.sequenceNumber;\n        /** @readonly */\n        this.chunks = props.chunks;\n\n        Object.freeze(this);\n    }\n\n    /**\n     * @internal\n     * @param {proto.IConsensusTopicResponse} response\n     * @returns {TopicMessage}\n     */\n    static _ofSingle(response) {\n        return new TopicMessage({\n            consensusTimestamp: Timestamp._fromProtobuf(\n                /** @type {proto.ITimestamp} */\n                (response.consensusTimestamp)\n            ),\n            contents:\n                response.message != null ? response.message : new Uint8Array(),\n            runningHash:\n                response.runningHash != null\n                    ? response.runningHash\n                    : new Uint8Array(),\n            sequenceNumber:\n                response.sequenceNumber != null\n                    ? response.sequenceNumber instanceof Long\n                        ? response.sequenceNumber\n                        : Long.fromNumber(response.sequenceNumber)\n                    : Long.ZERO,\n            chunks: [TopicMessageChunk._fromProtobuf(response)],\n        });\n    }\n\n    /**\n     * @internal\n     * @param {proto.IConsensusTopicResponse[]} responses\n     * @returns {TopicMessage}\n     */\n    static _ofMany(responses) {\n        const length = responses.length;\n\n        const last = /** @type {proto.IConsensusTopicResponse} */ (\n            responses[length - 1]\n        );\n\n        const consensusTimestamp = Timestamp._fromProtobuf(\n            /** @type {proto.ITimestamp} */\n            (last.consensusTimestamp)\n        );\n\n        const runningHash = /** @type {Uint8Array} */ (last.runningHash);\n\n        /**\n         * @type {Long}\n         */\n        const sequenceNumber =\n            last.sequenceNumber != null\n                ? last.sequenceNumber instanceof Long\n                    ? last.sequenceNumber\n                    : Long.fromValue(last.sequenceNumber)\n                : Long.ZERO;\n\n        responses.sort((a, b) =>\n            (a != null\n                ? a.chunkInfo != null\n                    ? a.chunkInfo.number != null\n                        ? a.chunkInfo.number\n                        : 0\n                    : 0\n                : 0) <\n            (b != null\n                ? b.chunkInfo != null\n                    ? b.chunkInfo.number != null\n                        ? b.chunkInfo.number\n                        : 0\n                    : 0\n                : 0)\n                ? -1\n                : 1\n        );\n\n        /**\n         * @type {TopicMessageChunk[]}\n         */\n        const chunks = responses.map(\n            /**\n             * @type {proto.IConsensusTopicResponse}\n             */ (m) => TopicMessageChunk._fromProtobuf(m)\n        );\n\n        const size = chunks\n            .map((chunk) => chunk.contents.length)\n            .reduce((sum, current) => sum + current, 0);\n\n        const contents = new Uint8Array(size);\n        let offset = 0;\n\n        responses.forEach((value) => {\n            contents.set(/** @type {Uint8Array} */ (value.message), offset);\n            offset += /** @type {Uint8Array} */ (value.message).length;\n        });\n\n        return new TopicMessage({\n            consensusTimestamp,\n            contents,\n            runningHash,\n            sequenceNumber,\n            chunks,\n        });\n    }\n}\n", "export default class SubscriptionHandle {\n    constructor() {\n        /** @type {{(): void} | null} */\n        this._call = null;\n    }\n\n    /**\n     * @param {() => void} call\n     * @returns {void}\n     */\n    _setCall(call) {\n        this._call = call;\n    }\n\n    unsubscribe() {\n        if (this._call != null) {\n            this._call();\n        }\n    }\n}\n", "import TransactionId from \"../transaction/TransactionId.js\";\nimport SubscriptionHandle from \"./SubscriptionHandle.js\";\nimport TopicMessage from \"./TopicMessage.js\";\nimport * as proto from \"@hashgraph/proto\";\nimport TopicId from \"./TopicId.js\";\nimport Long from \"long\";\nimport Timestamp from \"../Timestamp.js\";\nimport { RST_STREAM } from \"../Executable.js\";\n\n/**\n * @typedef {import(\"../channel/Channel.js\").default} Channel\n * @typedef {import(\"../channel/MirrorChannel.js\").default} MirrorChannel\n * @typedef {import(\"../channel/MirrorChannel.js\").MirrorError} MirrorError\n */\n\n/**\n * @template {Channel} ChannelT\n * @typedef {import(\"../client/Client.js\").default<ChannelT, MirrorChannel>} Client<ChannelT, MirrorChannel>\n */\n\nexport default class TopicMessageQuery {\n    /**\n     * @param {object} props\n     * @param {TopicId | string} [props.topicId]\n     * @param {Timestamp} [props.startTime]\n     * @param {Timestamp} [props.endTime]\n     * @param {(message: TopicMessage, error: Error)=> void} [props.errorHandler]\n     * @param {() => void} [props.completionHandler]\n     * @param {(error: MirrorError | Error | null) => boolean} [props.retryHandler]\n     * @param {Long | number} [props.limit]\n     */\n    constructor(props = {}) {\n        /**\n         * @private\n         * @type {?TopicId}\n         */\n        this._topicId = null;\n        if (props.topicId != null) {\n            this.setTopicId(props.topicId);\n        }\n\n        /**\n         * @private\n         * @type {?Timestamp}\n         */\n        this._startTime = null;\n        if (props.startTime != null) {\n            this.setStartTime(props.startTime);\n        }\n\n        /**\n         * @private\n         * @type {?Timestamp}\n         */\n        this._endTime = null;\n        if (props.endTime != null) {\n            this.setEndTime(props.endTime);\n        }\n\n        /**\n         * @private\n         * @type {?Long}\n         */\n        this._limit = null;\n        if (props.limit != null) {\n            this.setLimit(props.limit);\n        }\n\n        /**\n         * @private\n         * @type {(message: TopicMessage, error: Error) => void}\n         */\n        // eslint-disable-next-line @typescript-eslint/no-unused-vars\n        this._errorHandler = (message, error) => {\n            console.error(\n                `Error attempting to subscribe to topic: ${\n                    this._topicId != null ? this._topicId.toString() : \"\"\n                }`\n            );\n        };\n\n        if (props.errorHandler != null) {\n            this._errorHandler = props.errorHandler;\n        }\n\n        /*\n         * @private\n         * @type {((message: TopicMessage) => void) | null}\n         */\n        this._listener = null;\n\n        /**\n         * @private\n         * @type {() => void}\n         */\n        this._completionHandler = () => {\n            console.log(\n                `Subscription to topic ${\n                    this._topicId != null ? this._topicId.toString() : \"\"\n                } complete`\n            );\n        };\n\n        if (props.completionHandler != null) {\n            this._completionHandler = props.completionHandler;\n        }\n\n        /**\n         * @private\n         * @type {(error: MirrorError | Error | null) => boolean}\n         */\n        this._retryHandler = (error) => {\n            if (error != null) {\n                if (error instanceof Error) {\n                    // Retry on all errors which are not `MirrorError` because they're\n                    // likely lower level HTTP/2 errors\n                    return true;\n                } else {\n                    // Retry on `NOT_FOUND`, `RESOURCE_EXHAUSTED`, `UNAVAILABLE`, and conditionally on `INTERNAL`\n                    // if the messasge matches the right regex.\n                    switch (error.code) {\n                        // INTERNAL\n                        // eslint-disable-next-line no-fallthrough\n                        case 13:\n                            return RST_STREAM.test(error.details.toString());\n                        // NOT_FOUND\n                        // eslint-disable-next-line no-fallthrough\n                        case 5:\n                        // RESOURCE_EXHAUSTED\n                        // eslint-disable-next-line no-fallthrough\n                        case 8:\n                        // UNAVAILABLE\n                        // eslint-disable-next-line no-fallthrough\n                        case 14:\n                            return true;\n                        default:\n                            return false;\n                    }\n                }\n            }\n\n            return false;\n        };\n\n        if (props.retryHandler != null) {\n            this._retryHandler = props.retryHandler;\n        }\n\n        /**\n         * @private\n         * @type {number}\n         */\n        this._maxAttempts = 10;\n\n        /**\n         * @private\n         * @type {number}\n         */\n        this._maxBackoff = 8000;\n\n        /**\n         * @private\n         * @type {number}\n         */\n        this._attempt = 0;\n\n        /**\n         * @private\n         * @type {SubscriptionHandle | null}\n         */\n        this._handle = null;\n    }\n\n    /**\n     * @returns {?TopicId}\n     */\n    get topicId() {\n        return this._topicId;\n    }\n\n    /**\n     * @param {TopicId | string} topicId\n     * @returns {TopicMessageQuery}\n     */\n    setTopicId(topicId) {\n        this.requireNotSubscribed();\n\n        this._topicId =\n            typeof topicId === \"string\"\n                ? TopicId.fromString(topicId)\n                : topicId.clone();\n\n        return this;\n    }\n\n    /**\n     * @returns {?Timestamp}\n     */\n    get startTime() {\n        return this._startTime;\n    }\n\n    /**\n     * @param {Timestamp | Date | number} startTime\n     * @returns {TopicMessageQuery}\n     */\n    setStartTime(startTime) {\n        this.requireNotSubscribed();\n\n        this._startTime =\n            startTime instanceof Timestamp\n                ? startTime\n                : startTime instanceof Date\n                ? Timestamp.fromDate(startTime)\n                : new Timestamp(startTime, 0);\n        return this;\n    }\n\n    /**\n     * @returns {?Timestamp}\n     */\n    get endTime() {\n        return this._endTime;\n    }\n\n    /**\n     * @param {Timestamp | Date | number} endTime\n     * @returns {TopicMessageQuery}\n     */\n    setEndTime(endTime) {\n        this.requireNotSubscribed();\n\n        this._endTime =\n            endTime instanceof Timestamp\n                ? endTime\n                : endTime instanceof Date\n                ? Timestamp.fromDate(endTime)\n                : new Timestamp(endTime, 0);\n        return this;\n    }\n\n    /**\n     * @returns {?Long}\n     */\n    get limit() {\n        return this._limit;\n    }\n\n    /**\n     * @param {Long | number} limit\n     * @returns {TopicMessageQuery}\n     */\n    setLimit(limit) {\n        this.requireNotSubscribed();\n\n        this._limit = limit instanceof Long ? limit : Long.fromValue(limit);\n\n        return this;\n    }\n\n    /**\n     * @param {(message: TopicMessage, error: Error)=> void} errorHandler\n     * @returns {TopicMessageQuery}\n     */\n    setErrorHandler(errorHandler) {\n        this._errorHandler = errorHandler;\n\n        return this;\n    }\n\n    /**\n     * @param {() => void} completionHandler\n     * @returns {TopicMessageQuery}\n     */\n    setCompletionHandler(completionHandler) {\n        this.requireNotSubscribed();\n\n        this._completionHandler = completionHandler;\n\n        return this;\n    }\n\n    /**\n     * @param {number} attempts\n     */\n    setMaxAttempts(attempts) {\n        this.requireNotSubscribed();\n\n        this._maxAttempts = attempts;\n    }\n\n    /**\n     * @param {number} backoff\n     */\n    setMaxBackoff(backoff) {\n        this.requireNotSubscribed();\n\n        this._maxBackoff = backoff;\n    }\n\n    /**\n     * @param {Client<*>} client\n     * @param {((message: TopicMessage, error: Error) => void) | null} errorHandler\n     * @param {(message: TopicMessage) => void} listener\n     * @returns {SubscriptionHandle}\n     */\n    subscribe(client, errorHandler, listener) {\n        this._handle = new SubscriptionHandle();\n        this._listener = listener;\n\n        if (errorHandler != null) {\n            this._errorHandler = errorHandler;\n        }\n\n        this._makeServerStreamRequest(client);\n\n        return this._handle;\n    }\n\n    /**\n     * @private\n     * @param {import(\"../client/Client.js\").default<Channel, MirrorChannel>} client\n     * @returns {void}\n     */\n    _makeServerStreamRequest(client) {\n        /** @type {Map<string, proto.ConsensusTopicResponse[]>} */\n\n        // eslint-disable-next-line @typescript-eslint/no-unsafe-assignment\n        const list = new Map();\n\n        const request = proto.ConsensusTopicQuery.encode({\n            topicID: this._topicId != null ? this._topicId._toProtobuf() : null,\n            consensusStartTime:\n                this._startTime != null ? this._startTime._toProtobuf() : null,\n            consensusEndTime:\n                this._endTime != null ? this._endTime._toProtobuf() : null,\n            limit: this._limit,\n        }).finish();\n\n        const cancel = client._mirrorNetwork\n            .getNextMirrorNode()\n            .getChannel()\n            .makeServerStreamRequest(\n                request,\n                (data) => {\n                    const message = proto.ConsensusTopicResponse.decode(data);\n\n                    if (this._limit != null && this._limit.gt(0)) {\n                        this._limit = this._limit.sub(1);\n                    }\n\n                    this._startTime = Timestamp._fromProtobuf(\n                        /** @type {proto.ITimestamp} */ (\n                            message.consensusTimestamp\n                        )\n                    ).plusNanos(1);\n\n                    if (\n                        message.chunkInfo == null ||\n                        (message.chunkInfo != null &&\n                            message.chunkInfo.total === 1)\n                    ) {\n                        this._passTopicMessage(TopicMessage._ofSingle(message));\n                    } else {\n                        const chunkInfo =\n                            /** @type {proto.IConsensusMessageChunkInfo} */ (\n                                message.chunkInfo\n                            );\n                        const initialTransactionID =\n                            /** @type {proto.ITransactionID} */ (\n                                chunkInfo.initialTransactionID\n                            );\n                        const total = /** @type {number} */ (chunkInfo.total);\n                        const transactionId =\n                            TransactionId._fromProtobuf(\n                                initialTransactionID\n                            ).toString();\n\n                        /** @type {proto.ConsensusTopicResponse[]} */\n                        let responses = [];\n\n                        const temp = list.get(transactionId);\n                        if (temp == null) {\n                            list.set(transactionId, responses);\n                        } else {\n                            responses = temp;\n                        }\n\n                        responses.push(message);\n\n                        if (responses.length === total) {\n                            const topicMessage =\n                                TopicMessage._ofMany(responses);\n\n                            list.delete(transactionId);\n\n                            this._passTopicMessage(topicMessage);\n                        }\n                    }\n                },\n                (error) => {\n                    const message =\n                        error instanceof Error ? error.message : error.details;\n\n                    if (\n                        this._attempt < this._maxAttempts &&\n                        this._retryHandler(error)\n                    ) {\n                        const delay = Math.min(\n                            250 * 2 ** this._attempt,\n                            this._maxBackoff\n                        );\n                        console.warn(\n                            `Error subscribing to topic ${\n                                this._topicId != null\n                                    ? this._topicId.toString()\n                                    : \"UNKNOWN\"\n                            } during attempt ${\n                                this._attempt\n                            }. Waiting ${delay} ms before next attempt: ${message}`\n                        );\n\n                        this._attempt += 1;\n\n                        setTimeout(() => {\n                            this._makeServerStreamRequest(client);\n                        }, delay);\n                    }\n                },\n                this._completionHandler\n            );\n\n        if (this._handle != null) {\n            this._handle._setCall(() => cancel());\n        }\n    }\n\n    requireNotSubscribed() {\n        if (this._handle != null) {\n            throw new Error(\n                \"Cannot change fields on an already subscribed query\"\n            );\n        }\n    }\n\n    /**\n     * @private\n     * @param {TopicMessage} topicMessage\n     */\n    _passTopicMessage(topicMessage) {\n        try {\n            if (this._listener != null) {\n                this._listener(topicMessage);\n            } else {\n                throw new Error(\"(BUG) listener is unexpectedly not set\");\n            }\n        } catch (error) {\n            this._errorHandler(topicMessage, /** @type {Error} */ (error));\n        }\n    }\n}\n", "import Transaction, {\n    TRANSACTION_REGISTRY,\n    CHUNK_SIZE,\n} from \"../transaction/Transaction.js\";\nimport TopicId from \"./TopicId.js\";\nimport * as utf8 from \"../encoding/utf8.js\";\nimport TransactionId from \"../transaction/TransactionId.js\";\nimport Timestamp from \"../Timestamp.js\";\nimport * as util from \"../util.js\";\n\n/**\n * @namespace proto\n * @typedef {import(\"@hashgraph/proto\").IConsensusSubmitMessageTransactionBody} proto.IConsensusSubmitMessageTransactionBody\n * @typedef {import(\"@hashgraph/proto\").ITransaction} proto.ITransaction\n * @typedef {import(\"@hashgraph/proto\").ISignedTransaction} proto.ISignedTransaction\n * @typedef {import(\"@hashgraph/proto\").TransactionBody} proto.TransactionBody\n * @typedef {import(\"@hashgraph/proto\").ITransactionBody} proto.ITransactionBody\n * @typedef {import(\"@hashgraph/proto\").ITransactionResponse} proto.ITransactionResponse\n * @typedef {import(\"@hashgraph/proto\").IConsensusMessageChunkInfo} proto.IConsensusMessageChunkInfo\n */\n\n/**\n * @typedef {import(\"../channel/Channel.js\").default} Channel\n * @typedef {import(\"../account/AccountId.js\").default} AccountId\n * @typedef {import(\"../transaction/TransactionResponse.js\").default} TransactionResponse\n * @typedef {import(\"../schedule/ScheduleCreateTransaction.js\").default} ScheduleCreateTransaction\n */\n\nexport default class TopicMessageSubmitTransaction extends Transaction {\n    /**\n     * @param {object} props\n     * @param {TopicId | string} [props.topicId]\n     * @param {Uint8Array | string} [props.message]\n     * @param {number} [props.maxChunks]\n     */\n    constructor(props = {}) {\n        super();\n\n        /**\n         * @private\n         * @type {?TopicId}\n         */\n        this._topicId = null;\n\n        if (props.topicId != null) {\n            this.setTopicId(props.topicId);\n        }\n\n        /**\n         * @private\n         * @type {?Uint8Array}\n         */\n        this._message = null;\n\n        if (props.message != null) {\n            this.setMessage(props.message);\n        }\n\n        /**\n         * @private\n         * @type {number}\n         */\n        this._maxChunks = 20;\n\n        if (props.maxChunks != null) {\n            this.setMaxChunks(props.maxChunks);\n        }\n\n        /** @type {proto.IConsensusMessageChunkInfo | null} */\n        this._chunkInfo = null;\n    }\n\n    /**\n     * @internal\n     * @param {proto.ITransaction[]} transactions\n     * @param {proto.ISignedTransaction[]} signedTransactions\n     * @param {TransactionId[]} transactionIds\n     * @param {AccountId[]} nodeIds\n     * @param {proto.ITransactionBody[]} bodies\n     * @returns {TopicMessageSubmitTransaction}\n     */\n    static _fromProtobuf(\n        transactions,\n        signedTransactions,\n        transactionIds,\n        nodeIds,\n        bodies\n    ) {\n        const body = bodies[0];\n        const message =\n            /** @type {proto.IConsensusSubmitMessageTransactionBody} */ (\n                body.consensusSubmitMessage\n            );\n\n        return Transaction._fromProtobufTransactions(\n            new TopicMessageSubmitTransaction({\n                topicId:\n                    message.topicID != null\n                        ? TopicId._fromProtobuf(message.topicID)\n                        : undefined,\n                message: message.message != null ? message.message : undefined,\n            }),\n            transactions,\n            signedTransactions,\n            transactionIds,\n            nodeIds,\n            bodies\n        );\n    }\n\n    /**\n     * @param {TransactionId} transactionId\n     * @returns {this}\n     */\n    setTransactionId(transactionId) {\n        this._requireNotFrozen();\n\n        if (\n            transactionId.accountId == null ||\n            transactionId.validStart == null\n        ) {\n            throw new Error(\n                \"`TopicMessageSubmitTransaction` does not support `TransactionId` built from `nonce`\"\n            );\n        }\n\n        this._transactionIds = [transactionId];\n\n        return this;\n    }\n\n    /**\n     * @returns {?TopicId}\n     */\n    get topicId() {\n        return this._topicId;\n    }\n\n    /**\n     * @param {TopicId | string} topicId\n     * @returns {this}\n     */\n    setTopicId(topicId) {\n        this._requireNotFrozen();\n\n        this._topicId =\n            typeof topicId === \"string\"\n                ? TopicId.fromString(topicId)\n                : topicId.clone();\n\n        return this;\n    }\n\n    /**\n     * @returns {?Uint8Array}\n     */\n    get message() {\n        return this._message;\n    }\n\n    /**\n     * @param {string | Uint8Array} message\n     * @returns {this}\n     */\n    setMessage(message) {\n        this._requireNotFrozen();\n        message = util.requireStringOrUint8Array(message);\n        this._message =\n            typeof message === \"string\" ? utf8.encode(message) : message;\n        return this;\n    }\n\n    /**\n     * @returns {?number}\n     */\n    get maxChunks() {\n        return this._maxChunks;\n    }\n\n    /**\n     * @param {number} maxChunks\n     * @returns {this}\n     */\n    setMaxChunks(maxChunks) {\n        this._requireNotFrozen();\n        this._maxChunks = maxChunks;\n        return this;\n    }\n\n    /**\n     * Freeze this transaction from further modification to prepare for\n     * signing or serialization.\n     *\n     * Will use the `Client`, if available, to generate a default Transaction ID and select 1/3\n     * nodes to prepare this transaction for.\n     *\n     * @param {?import(\"../client/Client.js\").default<Channel, *>} client\n     * @returns {this}\n     */\n    freezeWith(client) {\n        super.freezeWith(client);\n\n        if (this._message == null) {\n            return this;\n        }\n\n        const chunks = Math.floor(\n            (this._message.length + (CHUNK_SIZE - 1)) / CHUNK_SIZE\n        );\n\n        if (chunks > this._maxChunks) {\n            throw new Error(\n                `Message with size ${this._message.length} too long for ${this._maxChunks} chunks`\n            );\n        }\n\n        const initialTransactionId = this.transactionId._toProtobuf();\n        let nextTransactionId = this.transactionId;\n\n        super._transactions = [];\n        super._transactionIds = [];\n        super._signedTransactions = [];\n        super._nextTransactionIndex = 0;\n\n        for (let chunk = 0; chunk < chunks; chunk++) {\n            this._chunkInfo = {\n                initialTransactionID: initialTransactionId,\n                total: chunks,\n                number: chunk + 1,\n            };\n\n            this._transactionIds.push(nextTransactionId);\n\n            for (const nodeAccountId of this._nodeIds) {\n                this._signedTransactions.push(\n                    this._makeSignedTransaction(nodeAccountId)\n                );\n            }\n\n            nextTransactionId = new TransactionId(\n                /** @type {AccountId} */ (nextTransactionId.accountId),\n                new Timestamp(\n                    /** @type {Timestamp} */ (\n                        nextTransactionId.validStart\n                    ).seconds,\n                    /** @type {Timestamp} */ (\n                        nextTransactionId.validStart\n                    ).nanos.add(1)\n                )\n            );\n\n            super._nextTransactionIndex = this._nextTransactionIndex + 1;\n        }\n\n        this._chunkInfo = null;\n        super._nextTransactionIndex = 0;\n\n        return this;\n    }\n\n    /**\n     * @returns {ScheduleCreateTransaction}\n     */\n    schedule() {\n        this._requireNotFrozen();\n\n        if (this._message != null && this._message.length > CHUNK_SIZE) {\n            throw new Error(\n                `cannot scheduled \\`TopicMessageSubmitTransaction\\` with message over ${CHUNK_SIZE} bytes`\n            );\n        }\n\n        return super.schedule();\n    }\n\n    /**\n     * @param {import(\"../client/Client.js\").default<*, *>} client\n     * @returns {Promise<TransactionResponse>}\n     */\n    async execute(client) {\n        return (await this.executeAll(client))[0];\n    }\n\n    /**\n     * @param {import(\"../client/Client.js\").default<*, *>} client\n     * @returns {Promise<TransactionResponse[]>}\n     */\n    async executeAll(client) {\n        if (!super._isFrozen()) {\n            this.freezeWith(client);\n        }\n\n        // on execute, sign each transaction with the operator, if present\n        // and we are signing a transaction that used the default transaction ID\n\n        const transactionId = this.transactionId;\n        const operatorAccountId = client.operatorAccountId;\n\n        if (\n            operatorAccountId != null &&\n            operatorAccountId.equals(\n                /** @type {AccountId} */ (transactionId.accountId)\n            )\n        ) {\n            await super.signWithOperator(client);\n        }\n\n        const responses = [];\n        for (let i = 0; i < this._transactionIds.length; i++) {\n            responses.push(await super.execute(client));\n        }\n\n        return responses;\n    }\n\n    /**\n     * @override\n     * @internal\n     * @param {Channel} channel\n     * @param {proto.ITransaction} request\n     * @returns {Promise<proto.ITransactionResponse>}\n     */\n    _execute(channel, request) {\n        return channel.consensus.submitMessage(request);\n    }\n\n    /**\n     * @override\n     * @protected\n     * @returns {NonNullable<proto.TransactionBody[\"data\"]>}\n     */\n    _getTransactionDataCase() {\n        return \"consensusSubmitMessage\";\n    }\n\n    /**\n     * @override\n     * @protected\n     * @returns {proto.IConsensusSubmitMessageTransactionBody}\n     */\n    _makeTransactionData() {\n        if (this._chunkInfo != null && this._message != null) {\n            const num = /** @type {number} */ (this._chunkInfo.number);\n            const startIndex = (num - 1) * CHUNK_SIZE;\n            let endIndex = startIndex + CHUNK_SIZE;\n\n            if (endIndex > this._message.length) {\n                endIndex = this._message.length;\n            }\n\n            return {\n                topicID:\n                    this._topicId != null ? this._topicId._toProtobuf() : null,\n                message: this._message.slice(startIndex, endIndex),\n                chunkInfo: this._chunkInfo,\n            };\n        } else {\n            return {\n                topicID:\n                    this._topicId != null ? this._topicId._toProtobuf() : null,\n                message: this._message,\n            };\n        }\n    }\n}\n\nTRANSACTION_REGISTRY.set(\n    \"consensusSubmitMessage\",\n    // eslint-disable-next-line @typescript-eslint/unbound-method\n    TopicMessageSubmitTransaction._fromProtobuf\n);\n", "import Transaction, {\n    TRANSACTION_REGISTRY,\n} from \"../transaction/Transaction.js\";\nimport AccountId from \"../account/AccountId.js\";\nimport TopicId from \"./TopicId.js\";\nimport Duration from \"../Duration.js\";\nimport Key from \"../Key.js\";\n\n/**\n * @namespace proto\n * @typedef {import(\"@hashgraph/proto\").IConsensusUpdateTopicTransactionBody} proto.IConsensusUpdateTopicTransactionBody\n * @typedef {import(\"@hashgraph/proto\").ITransaction} proto.ITransaction\n * @typedef {import(\"@hashgraph/proto\").ISignedTransaction} proto.ISignedTransaction\n * @typedef {import(\"@hashgraph/proto\").TransactionBody} proto.TransactionBody\n * @typedef {import(\"@hashgraph/proto\").ITransactionBody} proto.ITransactionBody\n * @typedef {import(\"@hashgraph/proto\").ITransactionResponse} proto.ITransactionResponse\n */\n\n/**\n * @typedef {import(\"../channel/Channel.js\").default} Channel\n * @typedef {import(\"../client/Client.js\").default<*, *>} Client\n * @typedef {import(\"../transaction/TransactionId.js\").default} TransactionId\n */\n\n/**\n * Update a topic.\n *\n * If there is no adminKey, the only authorized update (available to anyone) is to extend the expirationTime.\n * Otherwise transaction must be signed by the adminKey.\n *\n * If an adminKey is updated, the transaction must be signed by the pre-update adminKey and post-update adminKey.\n *\n * If a new autoRenewAccount is specified (not just being removed), that account must also sign the transaction.\n */\nexport default class TopicUpdateTransaction extends Transaction {\n    /**\n     * @param {object} props\n     * @param {TopicId | string} [props.topicId]\n     * @param {Key} [props.adminKey]\n     * @param {Key} [props.submitKey]\n     * @param {Duration | Long | number} [props.autoRenewPeriod]\n     * @param {AccountId | string} [props.autoRenewAccountId]\n     * @param {string} [props.topicMemo]\n     */\n    constructor(props = {}) {\n        super();\n\n        /**\n         * @private\n         * @type {?TopicId}\n         */\n        this._topicId = null;\n\n        if (props.topicId != null) {\n            this.setTopicId(props.topicId);\n        }\n\n        /**\n         * @private\n         * @type {?string}\n         */\n        this._topicMemo = null;\n\n        if (props.topicMemo != null) {\n            this.setTopicMemo(props.topicMemo);\n        }\n\n        /**\n         * @private\n         * @type {?Key}\n         */\n        this._submitKey = null;\n\n        if (props.submitKey != null) {\n            this.setSubmitKey(props.submitKey);\n        }\n\n        /**\n         * @private\n         * @type {?Key}\n         */\n        this._adminKey = null;\n\n        if (props.adminKey != null) {\n            this.setAdminKey(props.adminKey);\n        }\n\n        /**\n         * @private\n         * @type {?AccountId}\n         */\n        this._autoRenewAccountId = null;\n\n        if (props.autoRenewAccountId != null) {\n            this.setAutoRenewAccountId(props.autoRenewAccountId);\n        }\n\n        /**\n         * @private\n         * @type {?Duration}\n         */\n        this._autoRenewPeriod = null;\n\n        if (props.autoRenewPeriod != null) {\n            this.setAutoRenewPeriod(props.autoRenewPeriod);\n        }\n    }\n\n    /**\n     * @internal\n     * @param {proto.ITransaction[]} transactions\n     * @param {proto.ISignedTransaction[]} signedTransactions\n     * @param {TransactionId[]} transactionIds\n     * @param {AccountId[]} nodeIds\n     * @param {proto.ITransactionBody[]} bodies\n     * @returns {TopicUpdateTransaction}\n     */\n    static _fromProtobuf(\n        transactions,\n        signedTransactions,\n        transactionIds,\n        nodeIds,\n        bodies\n    ) {\n        const body = bodies[0];\n        const update =\n            /** @type {proto.IConsensusUpdateTopicTransactionBody} */ (\n                body.consensusUpdateTopic\n            );\n\n        return Transaction._fromProtobufTransactions(\n            new TopicUpdateTransaction({\n                topicId:\n                    update.topicID != null\n                        ? TopicId._fromProtobuf(update.topicID)\n                        : undefined,\n                adminKey:\n                    update.adminKey != null\n                        ? Key._fromProtobufKey(update.adminKey)\n                        : undefined,\n                submitKey:\n                    update.submitKey != null\n                        ? Key._fromProtobufKey(update.submitKey)\n                        : undefined,\n                autoRenewAccountId:\n                    update.autoRenewAccount != null\n                        ? AccountId._fromProtobuf(update.autoRenewAccount)\n                        : undefined,\n                autoRenewPeriod:\n                    update.autoRenewPeriod != null\n                        ? update.autoRenewPeriod.seconds != null\n                            ? update.autoRenewPeriod.seconds\n                            : undefined\n                        : undefined,\n                topicMemo:\n                    update.memo != null\n                        ? update.memo.value != null\n                            ? update.memo.value\n                            : undefined\n                        : undefined,\n            }),\n            transactions,\n            signedTransactions,\n            transactionIds,\n            nodeIds,\n            bodies\n        );\n    }\n\n    /**\n     * @returns {?TopicId}\n     */\n    get topicId() {\n        return this._topicId;\n    }\n\n    /**\n     * @param {TopicId | string} topicId\n     * @returns {TopicUpdateTransaction}\n     */\n    setTopicId(topicId) {\n        this._requireNotFrozen();\n        this._topicId =\n            typeof topicId === \"string\"\n                ? TopicId.fromString(topicId)\n                : topicId.clone();\n\n        return this;\n    }\n\n    /**\n     * @returns {TopicUpdateTransaction}\n     */\n    clearTopicId() {\n        this._requireNotFrozen();\n        this._topicId = null;\n\n        return this;\n    }\n\n    /**\n     * @returns {?string}\n     */\n    get topicMemo() {\n        return this._topicMemo;\n    }\n\n    /**\n     * @param {string} topicMemo\n     * @returns {TopicUpdateTransaction}\n     */\n    setTopicMemo(topicMemo) {\n        this._requireNotFrozen();\n        this._topicMemo = topicMemo;\n\n        return this;\n    }\n\n    /**\n     * @returns {TopicUpdateTransaction}\n     */\n    clearTopicMemo() {\n        this._requireNotFrozen();\n        this._topicMemo = null;\n\n        return this;\n    }\n\n    /**\n     * @returns {?Key}\n     */\n    get adminKey() {\n        return this._adminKey;\n    }\n\n    /**\n     * @param {Key} adminKey\n     * @returns {TopicUpdateTransaction}\n     */\n    setAdminKey(adminKey) {\n        this._requireNotFrozen();\n        this._adminKey = adminKey;\n\n        return this;\n    }\n\n    /**\n     * @returns {TopicUpdateTransaction}\n     */\n    clearAdminKey() {\n        this._requireNotFrozen();\n        this._adminKey = null;\n\n        return this;\n    }\n\n    /**\n     * @returns {?Key}\n     */\n    get submitKey() {\n        return this._submitKey;\n    }\n\n    /**\n     * @param {Key} submitKey\n     * @returns {TopicUpdateTransaction}\n     */\n    setSubmitKey(submitKey) {\n        this._requireNotFrozen();\n        this._submitKey = submitKey;\n\n        return this;\n    }\n\n    /**\n     * @returns {TopicUpdateTransaction}\n     */\n    clearSubmitKey() {\n        this._requireNotFrozen();\n        this._submitKey = null;\n\n        return this;\n    }\n\n    /**\n     * @returns {?AccountId}\n     */\n    get autoRenewAccountId() {\n        return this._autoRenewAccountId;\n    }\n\n    /**\n     * @param {AccountId | string} autoRenewAccountId\n     * @returns {TopicUpdateTransaction}\n     */\n    setAutoRenewAccountId(autoRenewAccountId) {\n        this._requireNotFrozen();\n        this._autoRenewAccountId =\n            autoRenewAccountId instanceof AccountId\n                ? autoRenewAccountId\n                : AccountId.fromString(autoRenewAccountId);\n\n        return this;\n    }\n\n    /**\n     * @returns {TopicUpdateTransaction}\n     */\n    clearAutoRenewAccountId() {\n        this._requireNotFrozen();\n        this._autoRenewAccountId = null;\n\n        return this;\n    }\n\n    /**\n     * @returns {?Duration}\n     */\n    get autoRenewPeriod() {\n        return this._autoRenewPeriod;\n    }\n\n    /**\n     * Set the auto renew period for this account.\n     *\n     * @param {Duration | Long | number} autoRenewPeriod\n     * @returns {TopicUpdateTransaction}\n     */\n    setAutoRenewPeriod(autoRenewPeriod) {\n        this._requireNotFrozen();\n        this._autoRenewPeriod =\n            autoRenewPeriod instanceof Duration\n                ? autoRenewPeriod\n                : new Duration(autoRenewPeriod);\n\n        return this;\n    }\n\n    /**\n     * @param {Client} client\n     */\n    _validateChecksums(client) {\n        if (this._topicId != null) {\n            this._topicId.validateChecksum(client);\n        }\n\n        if (this._autoRenewAccountId != null) {\n            this._autoRenewAccountId.validateChecksum(client);\n        }\n    }\n\n    /**\n     * @override\n     * @internal\n     * @param {Channel} channel\n     * @param {proto.ITransaction} request\n     * @returns {Promise<proto.ITransactionResponse>}\n     */\n    _execute(channel, request) {\n        return channel.consensus.updateTopic(request);\n    }\n\n    /**\n     * @override\n     * @protected\n     * @returns {NonNullable<proto.TransactionBody[\"data\"]>}\n     */\n    _getTransactionDataCase() {\n        return \"consensusUpdateTopic\";\n    }\n\n    /**\n     * @override\n     * @protected\n     * @returns {proto.IConsensusUpdateTopicTransactionBody}\n     */\n    _makeTransactionData() {\n        return {\n            topicID: this._topicId != null ? this._topicId._toProtobuf() : null,\n            adminKey:\n                this._adminKey != null ? this._adminKey._toProtobufKey() : null,\n            submitKey:\n                this._submitKey != null\n                    ? this._submitKey._toProtobufKey()\n                    : null,\n            memo:\n                this._topicMemo != null\n                    ? {\n                          value: this._topicMemo,\n                      }\n                    : null,\n            autoRenewAccount:\n                this._autoRenewAccountId != null\n                    ? this._autoRenewAccountId._toProtobuf()\n                    : null,\n            autoRenewPeriod:\n                this._autoRenewPeriod != null\n                    ? this._autoRenewPeriod._toProtobuf()\n                    : null,\n        };\n    }\n}\n\nTRANSACTION_REGISTRY.set(\n    \"consensusUpdateTopic\",\n    // eslint-disable-next-line @typescript-eslint/unbound-method\n    TopicUpdateTransaction._fromProtobuf\n);\n", "import Hbar from \"../Hbar.js\";\nimport TokenId from \"../token/TokenId.js\";\nimport AccountId from \"./AccountId.js\";\nimport Transaction, {\n    TRANSACTION_REGISTRY,\n} from \"../transaction/Transaction.js\";\nimport Long from \"long\";\nimport TokenTransferMap from \"./TokenTransferMap.js\";\nimport HbarTransferMap from \"./HbarTransferMap.js\";\nimport TokenNftTransferMap from \"./TokenNftTransferMap.js\";\nimport * as util from \"../util.js\";\nimport NftId from \"../token/NftId.js\";\n\n/**\n * @typedef {import(\"../long.js\").LongObject} LongObject\n * @typedef {import(\"bignumber.js\").default} BigNumber\n */\n\n/**\n * @namespace proto\n * @typedef {import(\"@hashgraph/proto\").ITransaction} proto.ITransaction\n * @typedef {import(\"@hashgraph/proto\").ISignedTransaction} proto.ISignedTransaction\n * @typedef {import(\"@hashgraph/proto\").TransactionBody} proto.TransactionBody\n * @typedef {import(\"@hashgraph/proto\").ITransactionBody} proto.ITransactionBody\n * @typedef {import(\"@hashgraph/proto\").ITransactionResponse} proto.ITransactionResponse\n * @typedef {import(\"@hashgraph/proto\").ICryptoTransferTransactionBody} proto.ICryptoTransferTransactionBody\n * @typedef {import(\"@hashgraph/proto\").ITokenID} proto.ITokenID\n * @typedef {import(\"@hashgraph/proto\").IAccountID} proto.IAccountID\n * @typedef {import(\"@hashgraph/proto\").IAccountAmount} proto.IAccountAmount\n * @typedef {import(\"@hashgraph/proto\").ITokenTransferList} proto.ITokenTransferList\n */\n\n/**\n * @typedef {import(\"../channel/Channel.js\").default} Channel\n * @typedef {import(\"../client/Client.js\").default<*, *>} Client\n * @typedef {import(\"../transaction/TransactionId.js\").default} TransactionId\n */\n\n/**\n * @typedef {object} TransferTokensInput\n * @property {TokenId | string} tokenId\n * @property {AccountId | string} accountId\n * @property {Long | number} amount\n */\n\n/**\n * @typedef {object} TransferTokenObject\n * @property {TokenId} tokenId\n * @property {AccountId} accountId\n * @property {Long} amount\n */\n\n/**\n * @typedef {object} TransferHbarInput\n * @property {AccountId | string} accountId\n * @property {number | string | Long | BigNumber | Hbar} amount\n */\n\n/**\n * @typedef {object} TransferNftInput\n * @property {TokenId | string} tokenId\n * @property {AccountId | string} sender\n * @property {AccountId | string} recipient\n * @property {Long | number} serial\n */\n\n/**\n * Transfers a new Hedera\u2122 crypto-currency token.\n */\nexport default class TransferTransaction extends Transaction {\n    /**\n     * @param {object} [props]\n     * @param {(TransferTokensInput)[]} [props.tokenTransfers]\n     * @param {(TransferHbarInput)[]} [props.hbarTransfers]\n     * @param {(TransferNftInput)[]} [props.nftTransfers]\n     */\n    constructor(props = {}) {\n        super();\n\n        /**\n         * @private\n         * @type {TokenTransferMap}\n         */\n        this._tokenTransfers = new TokenTransferMap();\n\n        /**\n         * @private\n         * @type {HbarTransferMap}\n         */\n        this._hbarTransfers = new HbarTransferMap();\n\n        /**\n         * @private\n         * @type {TokenNftTransferMap}\n         */\n        this._nftTransfers = new TokenNftTransferMap();\n\n        this.setMaxTransactionFee(new Hbar(1));\n\n        for (const transfer of props.tokenTransfers != null\n            ? props.tokenTransfers\n            : []) {\n            this.addTokenTransfer(\n                transfer.tokenId,\n                transfer.accountId,\n                transfer.amount\n            );\n        }\n\n        for (const transfer of props.hbarTransfers != null\n            ? props.hbarTransfers\n            : []) {\n            this.addHbarTransfer(transfer.accountId, transfer.amount);\n        }\n\n        for (const transfer of props.nftTransfers != null\n            ? props.nftTransfers\n            : []) {\n            this.addNftTransfer(\n                transfer.tokenId,\n                transfer.serial,\n                transfer.sender,\n                transfer.recipient\n            );\n        }\n    }\n\n    /**\n     * @internal\n     * @param {proto.ITransaction[]} transactions\n     * @param {proto.ISignedTransaction[]} signedTransactions\n     * @param {TransactionId[]} transactionIds\n     * @param {AccountId[]} nodeIds\n     * @param {proto.ITransactionBody[]} bodies\n     * @returns {TransferTransaction}\n     */\n    static _fromProtobuf(\n        transactions,\n        signedTransactions,\n        transactionIds,\n        nodeIds,\n        bodies\n    ) {\n        const body = bodies[0];\n        const cryptoTransfer =\n            /** @type {proto.ICryptoTransferTransactionBody} */ (\n                body.cryptoTransfer\n            );\n\n        const transfers = new TransferTransaction();\n        for (const list of cryptoTransfer.tokenTransfers != null\n            ? cryptoTransfer.tokenTransfers\n            : []) {\n            const tokenId = TokenId._fromProtobuf(\n                /** @type {proto.ITokenID} */ (list.token)\n            );\n\n            for (const transfer of list.transfers != null\n                ? list.transfers\n                : []) {\n                transfers.addTokenTransfer(\n                    tokenId,\n                    AccountId._fromProtobuf(\n                        /** @type {proto.IAccountID} */ (transfer.accountID)\n                    ),\n                    /** @type {Long} */ (transfer.amount)\n                );\n            }\n\n            for (const transfer of list.nftTransfers != null\n                ? list.nftTransfers\n                : []) {\n                transfers.addNftTransfer(\n                    tokenId,\n                    /** @type {Long} */ (transfer.serialNumber),\n                    AccountId._fromProtobuf(\n                        /** @type {proto.IAccountID} */ (\n                            transfer.senderAccountID\n                        )\n                    ),\n                    AccountId._fromProtobuf(\n                        /** @type {proto.IAccountID} */ (\n                            transfer.receiverAccountID\n                        )\n                    )\n                );\n            }\n        }\n\n        const accountAmounts =\n            cryptoTransfer.transfers != null\n                ? cryptoTransfer.transfers.accountAmounts != null\n                    ? cryptoTransfer.transfers.accountAmounts\n                    : []\n                : [];\n\n        for (const aa of accountAmounts) {\n            transfers.addHbarTransfer(\n                AccountId._fromProtobuf(\n                    /** @type {proto.IAccountID} */ (aa.accountID)\n                ),\n                Hbar.fromTinybars(/** @type {Long} */ (aa.amount))\n            );\n        }\n\n        return Transaction._fromProtobufTransactions(\n            transfers,\n            transactions,\n            signedTransactions,\n            transactionIds,\n            nodeIds,\n            bodies\n        );\n    }\n\n    /**\n     * @returns {TokenTransferMap}\n     */\n    get tokenTransfers() {\n        return this._tokenTransfers;\n    }\n\n    /**\n     * @param {TokenId | string} tokenId\n     * @param {AccountId | string} accountId\n     * @param {number | Long} amount\n     * @returns {this}\n     */\n    addTokenTransfer(tokenId, accountId, amount) {\n        this._requireNotFrozen();\n\n        this._tokenTransfers.__set(\n            tokenId instanceof TokenId ? tokenId : TokenId.fromString(tokenId),\n            accountId instanceof AccountId\n                ? accountId\n                : AccountId.fromString(accountId),\n            amount instanceof Long ? amount : Long.fromNumber(amount)\n        );\n\n        return this;\n    }\n\n    /**\n     * @returns {HbarTransferMap}\n     */\n    get hbarTransfers() {\n        return this._hbarTransfers;\n    }\n\n    /**\n     * @internal\n     * @param {AccountId | string} accountId\n     * @param {number | string | Long | LongObject | BigNumber | Hbar} amount\n     * @returns {TransferTransaction}\n     */\n    addHbarTransfer(accountId, amount) {\n        this._requireNotFrozen();\n\n        if (this.hbarTransfers.get(accountId) != null) {\n            amount = this._squashTransfers(accountId, amount);\n        }\n\n        this._hbarTransfers._set(\n            accountId instanceof AccountId\n                ? accountId\n                : AccountId.fromString(accountId),\n            amount instanceof Hbar ? amount : new Hbar(amount)\n        );\n\n        return this;\n    }\n\n    /**\n     * @internal\n     * @param {AccountId | string} accountId\n     * @param {number | string | Long | LongObject | BigNumber | Hbar} amount\n     * @returns {Hbar}\n     */\n    _squashTransfers(accountId, amount) {\n        let currentValue = this.hbarTransfers.get(accountId);\n        return Hbar.fromTinybars(\n            (currentValue == null ? Long.ZERO : currentValue.toTinybars()).add(\n                amount instanceof Hbar\n                    ? amount.toTinybars()\n                    : new Hbar(amount).toTinybars()\n            )\n        );\n    }\n\n    /**\n     * @param {Client} client\n     */\n    _validateChecksums(client) {\n        // eslint-disable-next-line @typescript-eslint/no-unused-vars\n        for (const [a, _] of this._hbarTransfers) {\n            if (a != null) {\n                a.validateChecksum(client);\n            }\n        }\n\n        for (const [tokenId, transfers] of this._tokenTransfers) {\n            if (tokenId != null) {\n                tokenId.validateChecksum(client);\n            }\n\n            // eslint-disable-next-line @typescript-eslint/no-unused-vars\n            for (const [a, _] of transfers) {\n                if (a != null) {\n                    a.validateChecksum(client);\n                }\n            }\n        }\n    }\n\n    /**\n     * @returns {TokenNftTransferMap}\n     */\n    get nftTransfers() {\n        return this._nftTransfers;\n    }\n\n    /**\n     * @internal\n     * @param {NftId | TokenId | string} tokenIdOrNftId\n     * @param {AccountId | string | Long | number} senderAccountIdOrSerialNumber\n     * @param {AccountId | string} recipientAccountIdOrSenderAccountId\n     * @param {(AccountId | string)=} recipient\n     * @returns {TransferTransaction}\n     */\n    addNftTransfer(\n        tokenIdOrNftId,\n        senderAccountIdOrSerialNumber,\n        recipientAccountIdOrSenderAccountId,\n        recipient\n    ) {\n        this._requireNotFrozen();\n\n        let tokenId;\n        let serial;\n        let senderId;\n        let recipientId;\n\n        if (typeof tokenIdOrNftId === \"string\") {\n            if (tokenIdOrNftId.includes(\"/\") || tokenIdOrNftId.includes(\"@\")) {\n                tokenIdOrNftId = NftId.fromString(tokenIdOrNftId);\n            } else {\n                tokenIdOrNftId = TokenId.fromString(tokenIdOrNftId);\n            }\n        }\n\n        if (tokenIdOrNftId instanceof NftId) {\n            tokenId = tokenIdOrNftId.tokenId;\n            serial = tokenIdOrNftId.serial;\n            senderId = /** @type {AccountId | string} */ (\n                senderAccountIdOrSerialNumber\n            );\n            recipientId = /** @type {AccountId | string} */ (\n                recipientAccountIdOrSenderAccountId\n            );\n        } else if (tokenIdOrNftId instanceof TokenId) {\n            tokenId = /** @type {TokenId} */ (tokenIdOrNftId);\n            serial = /** @type {Long|number} */ (senderAccountIdOrSerialNumber);\n            senderId = /** @type {AccountId | string} */ (\n                recipientAccountIdOrSenderAccountId\n            );\n            util.requireNonNull(recipient);\n            recipientId = /** @type {AccountId | string} */ (recipient);\n        } else {\n            throw new Error(\"unintended type for tokenIdOrNftId\");\n        }\n\n        this._nftTransfers.__set(\n            typeof tokenId === \"string\" ? TokenId.fromString(tokenId) : tokenId,\n            {\n                serial:\n                    typeof serial === \"number\"\n                        ? Long.fromNumber(serial)\n                        : serial,\n                sender:\n                    typeof senderId === \"string\"\n                        ? AccountId.fromString(senderId)\n                        : senderId,\n\n                recipient:\n                    typeof recipientId === \"string\"\n                        ? AccountId.fromString(recipientId)\n                        : recipientId,\n            }\n        );\n\n        return this;\n    }\n\n    /**\n     * @override\n     * @internal\n     * @param {Channel} channel\n     * @param {proto.ITransaction} request\n     * @returns {Promise<proto.ITransactionResponse>}\n     */\n    _execute(channel, request) {\n        return channel.crypto.cryptoTransfer(request);\n    }\n\n    /**\n     * @override\n     * @protected\n     * @returns {NonNullable<proto.TransactionBody[\"data\"]>}\n     */\n    _getTransactionDataCase() {\n        return \"cryptoTransfer\";\n    }\n\n    /**\n     * @override\n     * @protected\n     * @returns {proto.ICryptoTransferTransactionBody}\n     */\n    _makeTransactionData() {\n        /** @type {Set<string>} */\n        const tokenIds = new Set();\n\n        for (const tokenId of this._tokenTransfers.keys()) {\n            tokenIds.add(tokenId.toString());\n        }\n\n        for (const tokenId of this._nftTransfers.keys()) {\n            tokenIds.add(tokenId.toString());\n        }\n\n        const tokenTransfers = Array.from(tokenIds, (tokenId) => {\n            const thisTokenTransfers = this._tokenTransfers.get(tokenId);\n            const thisNftTransfers = this._nftTransfers.get(tokenId);\n\n            let transfers;\n            let nftTransfers;\n\n            if (thisTokenTransfers != null) {\n                transfers = Array.from(\n                    thisTokenTransfers,\n                    ([accountId, amount]) => {\n                        return {\n                            accountId,\n                            amount,\n                        };\n                    }\n                );\n\n                transfers.sort((a, b) => {\n                    const accountIdComparison = a.accountId.compare(\n                        b.accountId\n                    );\n                    if (accountIdComparison != 0) {\n                        return accountIdComparison;\n                    }\n\n                    return a.amount.compare(b.amount);\n                });\n            }\n\n            if (thisNftTransfers != null) {\n                // eslint-disable-next-line ie11/no-loop-func\n                nftTransfers = thisNftTransfers.map((transfer) => {\n                    return {\n                        sender: transfer.sender,\n                        recipient: transfer.recipient,\n                        serialNumber: transfer.serial,\n                    };\n                });\n\n                nftTransfers.sort((a, b) => {\n                    const senderComparision = a.sender.compare(b.sender);\n                    if (senderComparision != 0) {\n                        return senderComparision;\n                    }\n\n                    const recipientComparision = a.recipient.compare(\n                        b.recipient\n                    );\n                    if (recipientComparision != 0) {\n                        return recipientComparision;\n                    }\n\n                    return a.serialNumber.compare(b.serialNumber);\n                });\n            }\n\n            return {\n                token: TokenId.fromString(tokenId),\n                transfers,\n                nftTransfers,\n            };\n        });\n\n        const hbarTransfers = Array.from(\n            this._hbarTransfers,\n            ([accountId, amount]) => {\n                return {\n                    accountId,\n                    amount,\n                };\n            }\n        );\n\n        tokenTransfers.sort((a, b) => {\n            return a.token.compare(b.token);\n        });\n\n        hbarTransfers.sort((a, b) => {\n            const accountIdComparison = a.accountId.compare(b.accountId);\n            if (accountIdComparison != 0) {\n                return accountIdComparison;\n            }\n\n            return a.amount.toTinybars().compare(b.amount.toTinybars());\n        });\n\n        return {\n            transfers: {\n                accountAmounts: hbarTransfers.map((transfer) => {\n                    return {\n                        accountID: transfer.accountId._toProtobuf(),\n                        amount: transfer.amount.toTinybars(),\n                    };\n                }),\n            },\n            tokenTransfers: tokenTransfers.map((tokenTransfer) => {\n                return {\n                    token: tokenTransfer.token._toProtobuf(),\n                    transfers: (tokenTransfer.transfers != null\n                        ? tokenTransfer.transfers\n                        : []\n                    ).map((transfer) => {\n                        return {\n                            accountID: transfer.accountId._toProtobuf(),\n                            amount: transfer.amount,\n                        };\n                    }),\n                    nftTransfers: (tokenTransfer.nftTransfers != null\n                        ? tokenTransfer.nftTransfers\n                        : []\n                    ).map((nftTransfer) => {\n                        return {\n                            senderAccountID: nftTransfer.sender._toProtobuf(),\n                            receiverAccountID:\n                                nftTransfer.recipient._toProtobuf(),\n                            serialNumber: nftTransfer.serialNumber,\n                        };\n                    }),\n                };\n            }),\n        };\n    }\n}\n\nTRANSACTION_REGISTRY.set(\n    \"cryptoTransfer\",\n    // eslint-disable-next-line @typescript-eslint/unbound-method\n    TransferTransaction._fromProtobuf\n);\n", "import AccountId from \"./AccountId.js\";\nimport Hbar from \"../Hbar.js\";\nimport ObjectMap from \"../ObjectMap.js\";\n\n/**\n * @namespace proto\n * @typedef {import(\"@hashgraph/proto\").ITransferList} proto.ITransferList\n * @typedef {import(\"@hashgraph/proto\").IAccountID} proto.IAccountID\n */\n\n/**\n * @typedef {import(\"../long.js\").LongObject} LongObject\n * @typedef {import(\"bignumber.js\").default} BigNumber\n */\n\n/**\n * @augments {ObjectMap<AccountId, Hbar>}\n */\nexport default class HbarTransferMap extends ObjectMap {\n    constructor() {\n        super((s) => AccountId.fromString(s));\n    }\n\n    /**\n     * @param {proto.ITransferList} transfers\n     * @returns {HbarTransferMap}\n     */\n    static _fromProtobuf(transfers) {\n        const accountTransfers = new HbarTransferMap();\n\n        for (const transfer of transfers.accountAmounts != null\n            ? transfers.accountAmounts\n            : []) {\n            const account = AccountId._fromProtobuf(\n                /** @type {proto.IAccountID} */ (transfer.accountID)\n            );\n\n            accountTransfers._set(\n                account,\n                Hbar.fromTinybars(/** @type {Long} */ (transfer.amount))\n            );\n        }\n\n        return accountTransfers;\n    }\n}\n", "import TransactionId from \"../transaction/TransactionId.js\";\nimport Hbar from \"../Hbar.js\";\nimport Executable from \"../Executable.js\";\nimport AccountId from \"../account/AccountId.js\";\nimport { _makePaymentTransaction, COST_QUERY } from \"./Query.js\";\nimport { ResponseType as ProtoResponseType } from \"@hashgraph/proto\";\n\n/**\n * @namespace proto\n * @typedef {import(\"@hashgraph/proto\").IQuery} proto.IQuery\n * @typedef {import(\"@hashgraph/proto\").IResponse} proto.IResponse\n * @typedef {import(\"@hashgraph/proto\").IQueryHeader} proto.IQueryHeader\n */\n\n/**\n * @typedef {import(\"../channel/Channel.js\").default} Channel\n * @typedef {import(\"../Status.js\").default} Status\n * @typedef {import(\"../Executable.js\").ExecutionState} ExecutionState\n */\n\n/**\n * @template OutputT\n * @augments {Executable<proto.IQuery, proto.IResponse, Hbar>}\n */\nexport default class CostQuery extends Executable {\n    /**\n     * @param {import(\"./Query.js\").default<OutputT>} query\n     */\n    constructor(query) {\n        super();\n\n        this._query = query;\n        this._nodeIds = query._nodeIds;\n\n        /**\n         * @type {proto.IQueryHeader | null}\n         */\n        this._header = null;\n    }\n\n    /**\n     * @returns {TransactionId}\n     */\n    _getTransactionId() {\n        return this._query._getTransactionId();\n    }\n\n    /**\n     * @abstract\n     * @protected\n     * @param {import(\"../client/Client.js\").default<*, *>} client\n     * @returns {Promise<void>}\n     */\n    async _beforeExecute(client) {\n        if (client == null) {\n            throw new Error(\"Cannot do CostQuery without Client\");\n        }\n\n        const operator = client._operator;\n\n        if (operator == null) {\n            throw new Error(\n                \"`client` must have an `operator` or an explicit payment transaction must be provided\"\n            );\n        }\n\n        if (this._query._nodeIds.length == 0) {\n            this._query._nodeIds =\n                client._network.getNodeAccountIdsForExecute();\n        }\n\n        this._header = {\n            payment: await _makePaymentTransaction(\n                /** @type {import(\"../transaction/TransactionId.js\").default} */\n                (TransactionId.generate(new AccountId(0))),\n                new AccountId(0),\n                operator,\n                new Hbar(0)\n            ),\n            responseType: ProtoResponseType.COST_ANSWER,\n        };\n    }\n\n    /**\n     * @abstract\n     * @internal\n     * @returns {Promise<proto.IQuery>}\n     */\n    _makeRequestAsync() {\n        return Promise.resolve(\n            this._query._onMakeRequest(\n                /** @type {proto.IQueryHeader} */ (this._header)\n            )\n        );\n    }\n\n    /**\n     * @abstract\n     * @internal\n     * @param {proto.IQuery} request\n     * @param {proto.IResponse} response\n     * @returns {ExecutionState}\n     */\n    // eslint-disable-next-line @typescript-eslint/no-unused-vars\n    _shouldRetry(request, response) {\n        return this._query._shouldRetry(request, response);\n    }\n\n    /**\n     * @abstract\n     * @internal\n     * @param {proto.IQuery} request\n     * @param {proto.IResponse} response\n     * @returns {Error}\n     */\n    // eslint-disable-next-line @typescript-eslint/no-unused-vars\n    _mapStatusError(request, response) {\n        return this._query._mapStatusError(request, response);\n    }\n\n    /**\n     * @override\n     * @internal\n     * @param {proto.IResponse} response\n     * @param {AccountId} nodeAccountId\n     * @param {proto.IQuery} request\n     * @returns {Promise<Hbar>}\n     */\n    // eslint-disable-next-line @typescript-eslint/no-unused-vars\n    _mapResponse(response, nodeAccountId, request) {\n        const cost = this._query._mapResponseHeader(response).cost;\n        return Promise.resolve(\n            Hbar.fromTinybars(/** @type {Long | number} */ (cost))\n        );\n    }\n\n    /**\n     * @override\n     * @internal\n     * @param {Channel} channel\n     * @param {proto.IQuery} request\n     * @returns {Promise<proto.IResponse>}\n     */\n    _execute(channel, request) {\n        return this._query._execute(channel, request);\n    }\n\n    /**\n     * @override\n     * @returns {AccountId}\n     */\n    _getNodeAccountId() {\n        if (this._nodeIds.length > 0) {\n            // if there are payment transactions,\n            // we need to use the node of the current payment transaction\n            return this._nodeIds[this._nextNodeIndex];\n        } else {\n            throw new Error(\n                \"(BUG) nodeAccountIds were not set for query before executing\"\n            );\n        }\n    }\n}\n\nCOST_QUERY.push((query) => new CostQuery(query));\n", "/**\n * @typedef {import(\"./account/AccountId.js\").default} AccountId\n * @typedef {import(\"./channel/Channel.js\").default} Channel\n * @typedef {import(\"./channel/MirrorChannel.js\").default} MirrorChannel\n * @typedef {import(\"./address_book/NodeAddress.js\").default} NodeAddress\n */\n\nconst HOST_AND_PORT = /^(?<address>.*)(:(?<port>\\d+))?/;\n\nexport default class ManagedNodeAddress {\n    /**\n     * @param {object} props\n     * @param {string} [props.address]\n     * @param {string} [props.host]\n     * @param {number | null} [props.port]\n     */\n    constructor(props = {}) {\n        if (props.address != null) {\n            const hostAndPortResult = HOST_AND_PORT.exec(props.address);\n\n            if (hostAndPortResult == null || hostAndPortResult.groups == null) {\n                throw new Error(`failed to parse address: ${props.address}`);\n            }\n\n            /** @type {string} */\n            this._address = /** @type {string} */ (\n                hostAndPortResult.groups[\"address\"]\n            );\n\n            /** @type {number | null} */\n            this._port =\n                hostAndPortResult.groups[\"port\"] != null\n                    ? parseInt(\n                          /** @type {string }*/ (\n                              hostAndPortResult.groups[\"port\"]\n                          )\n                      )\n                    : null;\n        } else if (props.host != null && props.port != null) {\n            /** @type {string} */\n            this._address = props.host;\n\n            /** @type {number | null} */\n            this._port = props.port;\n        } else {\n            throw new Error(\n                `failed to create a managed node address: ${JSON.stringify(\n                    props\n                )}`\n            );\n        }\n\n        Object.freeze(this);\n    }\n\n    /**\n     * @param {string} address\n     * @returns {ManagedNodeAddress};\n     */\n    static fromString(address) {\n        return new ManagedNodeAddress({ address });\n    }\n\n    toInsecure() {\n        let port = this.port;\n\n        switch (this.port) {\n            case 50212:\n                port = 50211;\n                break;\n            case 433:\n                port = 5600;\n        }\n\n        return new ManagedNodeAddress({ host: this.address, port });\n    }\n\n    toSecure() {\n        let port = this.port;\n\n        switch (this.port) {\n            case 50211:\n                port = 50212;\n                break;\n            case 5600:\n                port = 433;\n        }\n\n        return new ManagedNodeAddress({ host: this.address, port });\n    }\n\n    /**\n     * @returns {string}\n     */\n    get address() {\n        return this._address;\n    }\n\n    /**\n     * @returns {number | null}\n     */\n    get port() {\n        return this._port;\n    }\n\n    /**\n     * @returns {boolean}\n     */\n    isTransportSecurity() {\n        return this._port == 50212 || this._port == 433;\n    }\n\n    /**\n     * @returns {string}\n     */\n    toString() {\n        if (this.port == null) {\n            return this.address;\n        } else {\n            return `${this.address}:${this.port}`;\n        }\n    }\n}\n", "import ManagedNodeAddress from \"./ManagedNodeAddress.js\";\n\n/**\n * @typedef {import(\"./account/AccountId.js\").default} AccountId\n * @typedef {import(\"./channel/Channel.js\").default} Channel\n * @typedef {import(\"./channel/MirrorChannel.js\").default} MirrorChannel\n * @typedef {import(\"./address_book/NodeAddress.js\").default} NodeAddress\n */\n\n/**\n * @template {Channel | MirrorChannel} ChannelT\n * @typedef {object} NewNode\n * @property {string | ManagedNodeAddress} address\n * @property {(address: string, cert?: string) => ChannelT} channelInitFunction\n */\n\n/**\n * @template {Channel | MirrorChannel} ChannelT\n * @typedef {object} CloneNode\n * @property {ManagedNode<ChannelT>} node\n * @property {ManagedNodeAddress} address\n */\n\n/**\n * @abstract\n * @template {Channel | MirrorChannel} ChannelT\n */\nexport default class ManagedNode {\n    /**\n     * @param {object} props\n     * @param {NewNode<ChannelT>=} [props.newNode]\n     * @param {CloneNode<ChannelT>=} [props.cloneNode]\n     */\n    constructor(props = {}) {\n        if (props.newNode != null) {\n            this._address =\n                typeof props.newNode.address === \"string\"\n                    ? ManagedNodeAddress.fromString(props.newNode.address)\n                    : props.newNode.address;\n\n            /** @type {string=} */\n            this._cert = undefined;\n\n            /** @type {ChannelT | null} */\n            this._channel = null;\n\n            /** @type {(address: string, cert?: string) => ChannelT} */\n            this._channelInitFunction = props.newNode.channelInitFunction;\n\n            this._currentBackoff = 250;\n            this._lastUsed = Date.now();\n            this._backoffUntil = Date.now();\n            this._useCount = 0;\n            this._attempts = 0;\n            this._minBackoff = 250;\n            this._maxBackoff = 8000;\n        } else if (props.cloneNode != null) {\n            /** @type {ManagedNodeAddress} */\n            this._address = props.cloneNode.address;\n\n            /** @type {string=} */\n            this._cert = props.cloneNode.node._cert;\n\n            /** @type {ChannelT | null} */\n            this._channel = props.cloneNode.node._channel;\n\n            /** @type {(address: string, cert?: string) => ChannelT} */\n            this._channelInitFunction =\n                props.cloneNode.node._channelInitFunction;\n\n            /** @type {number} */\n            this._currentBackoff = props.cloneNode.node._currentBackoff;\n\n            /** @type {number} */\n            this._lastUsed = props.cloneNode.node._lastUsed;\n\n            /** @type {number} */\n            this._backoffUntil = props.cloneNode.node._backoffUntil;\n\n            /** @type {number} */\n            this._useCount = props.cloneNode.node._useCount;\n\n            /** @type {number} */\n            this._attempts = props.cloneNode.node._attempts;\n\n            /** @type {number} */\n            this._minBackoff = props.cloneNode.node._minBackoff;\n\n            /** @type {number} */\n            this._maxBackoff = props.cloneNode.node._minBackoff;\n        } else {\n            throw new Error(\n                `failed to create ManagedNode: ${JSON.stringify(props)}`\n            );\n        }\n    }\n\n    /**\n     * @abstract\n     * @returns {string}\n     */\n    // eslint-disable-next-line jsdoc/require-returns-check\n    getKey() {\n        throw new Error(\"not implemented\");\n    }\n\n    /**\n     * @abstract\n     * @returns {ManagedNode<ChannelT>}\n     */\n    // eslint-disable-next-line jsdoc/require-returns-check\n    toInsecure() {\n        throw new Error(\"not implemented\");\n    }\n\n    /**\n     * @abstract\n     * @returns {ManagedNode<ChannelT>}\n     */\n    // eslint-disable-next-line jsdoc/require-returns-check\n    toSecure() {\n        throw new Error(\"not implemented\");\n    }\n\n    /**\n     * @param {string} ledgerId\n     * @returns {this}\n     */\n    // eslint-disable-next-line @typescript-eslint/no-unused-vars\n    setCert(ledgerId) {\n        return this;\n    }\n\n    /**\n     * @returns {ManagedNodeAddress}\n     */\n    get address() {\n        return this._address;\n    }\n\n    /**\n     * @returns {number}\n     */\n    get attempts() {\n        return this._attempts;\n    }\n\n    /**\n     * @returns {number}\n     */\n    get minBackoff() {\n        return this._minBackoff;\n    }\n\n    /**\n     * @param {number} minBackoff\n     * @returns {this}\n     */\n    setMinBackoff(minBackoff) {\n        if (this._currentBackoff <= minBackoff) {\n            this._currentBackoff = minBackoff;\n        }\n\n        this._minBackoff = minBackoff;\n        return this;\n    }\n\n    /**\n     * @returns {number}\n     */\n    get maxBackoff() {\n        return this._maxBackoff;\n    }\n\n    /**\n     * @param {number} maxBackoff\n     * @returns {this}\n     */\n    setmaxBackoff(maxBackoff) {\n        if (this._currentBackoff <= maxBackoff) {\n            this._currentBackoff = maxBackoff;\n        }\n\n        this._maxBackoff = maxBackoff;\n        return this;\n    }\n\n    getChannel() {\n        this._useCount++;\n        this.__lastUsed = Date.now();\n\n        if (this._channel != null) {\n            return this._channel;\n        }\n\n        this._channel = this._channelInitFunction(\n            this.address.toString(),\n            this._cert\n        );\n        return this._channel;\n    }\n\n    /**\n     * Determines if this node is healthy by checking if this node hasn't been\n     * in use for a the required `_currentBackoff` period. Since this looks at `this._lastUsed`\n     * and that value is only set in the `wait()` method, any node that has not\n     * returned a bad gRPC status will always be considered healthy.\n     *\n     * @returns {boolean}\n     */\n    isHealthy() {\n        return this._backoffUntil <= Date.now();\n    }\n\n    increaseDelay() {\n        this._currentBackoff = Math.min(\n            this._currentBackoff * 2,\n            this._maxBackoff\n        );\n        this._backoffUntil = Date.now() + this._currentBackoff;\n    }\n\n    decreaseDelay() {\n        this._currentBackoff = Math.max(\n            this._currentBackoff / 2,\n            this._minBackoff\n        );\n    }\n\n    /**\n     * This is only ever called if the node itself is down.\n     * A node returning a transaction with a bad status code does not indicate\n     * the node is down, and hence this method will not be called.\n     *\n     * @returns {Promise<void>}\n     */\n    wait() {\n        const _currentBackoff = this._backoffUntil - this._lastUsed;\n        return new Promise((resolve) => setTimeout(resolve, _currentBackoff));\n    }\n\n    /**\n     * @param {ManagedNode<*>} node\n     * @returns {number}\n     */\n    compare(node) {\n        if (this.isHealthy() && node.isHealthy()) {\n            if (this._useCount < node._useCount) {\n                return -1;\n            } else if (this._useCount > node._useCount) {\n                return 1;\n            } else {\n                if (this._lastUsed < node._lastUsed) {\n                    return -1;\n                } else if (this._lastUsed > node._lastUsed) {\n                    return 1;\n                } else {\n                    return 0;\n                }\n            }\n        } else if (this.isHealthy() && !node.isHealthy()) {\n            return -1;\n        } else if (!this.isHealthy() && node.isHealthy()) {\n            return 1;\n        } else {\n            if (this._useCount < node._useCount) {\n                return -1;\n            } else if (this._useCount > node._useCount) {\n                return 1;\n            } else {\n                if (this._lastUsed < node._lastUsed) {\n                    return -1;\n                } else if (this._lastUsed > node._lastUsed) {\n                    return 1;\n                } else {\n                    return 0;\n                }\n            }\n        }\n    }\n\n    close() {\n        if (this._channel != null) {\n            this._channel.close();\n        }\n\n        this._channel = null;\n    }\n}\n", "/** @type {{[key: string]: string}} */\nexport const PREVIEWNET_CERTS = {\n    \"0.0.3\": `-----BEGIN CERTIFICATE-----\nMIICnzCCAiWgAwIBAgIUenyqJ4UaFBbwokatcUqAwW3o3rswCgYIKoZIzj0EAwMw\ngYQxCzAJBgNVBAYTAlVTMQswCQYDVQQIDAJUWDETMBEGA1UEBwwKUmljaGFyZHNv\nbjEPMA0GA1UECgwGSGVkZXJhMQ8wDQYDVQQLDAZIZWRlcmExEDAOBgNVBAMMBzAw\nMDAwMDAxHzAdBgkqhkiG9w0BCQEWEGFkbWluQGhlZGVyYS5jb20wIBcNMjEwODIz\nMjIyMTU4WhgPMjI5NTA2MDcyMjIxNThaMIGEMQswCQYDVQQGEwJVUzELMAkGA1UE\nCAwCVFgxEzARBgNVBAcMClJpY2hhcmRzb24xDzANBgNVBAoMBkhlZGVyYTEPMA0G\nA1UECwwGSGVkZXJhMRAwDgYDVQQDDAcwMDAwMDAwMR8wHQYJKoZIhvcNAQkBFhBh\nZG1pbkBoZWRlcmEuY29tMHYwEAYHKoZIzj0CAQYFK4EEACIDYgAEm5b1+oG9R0qt\nzM7UZnS5l/xxUNHIHq5+NAvtlviCpJL19jrW9+/UOy00Qqc6vS6tS1hS+dNJmpiZ\nFN0EHew4VDR7ACnL4LDJKmIHWjQ0iwvZo5kCpO0r9BtPN5FvaSxyo1QwUjAPBgNV\nHREECDAGhwR/AAABMAsGA1UdDwQEAwIEsDATBgNVHSUEDDAKBggrBgEFBQcDATAd\nBgNVHQ4EFgQUeciBviJtjeuue0GPf1xllNw7qvYwCgYIKoZIzj0EAwMDaAAwZQIw\nJeG0H2HdsI1VhOYmJmYlNeKCNgAk+LMorzPmsIInVBO2HK2IrKfpReWDS/m5j51V\nAjEAxKBxDezJDqAZHTkTXCg+X9Q9V6J6M5yDy5IS90aCWEo+W8C1Hc6hkn2/NrvT\nPhwK\n-----END CERTIFICATE-----\n`,\n    \"0.0.4\": `-----BEGIN CERTIFICATE-----\nMIICnjCCAiWgAwIBAgIUUfjO8LyXBdzrzbAe1Yl+d34IDsIwCgYIKoZIzj0EAwMw\ngYQxCzAJBgNVBAYTAlVTMQswCQYDVQQIDAJUWDETMBEGA1UEBwwKUmljaGFyZHNv\nbjEPMA0GA1UECgwGSGVkZXJhMQ8wDQYDVQQLDAZIZWRlcmExEDAOBgNVBAMMBzAw\nMDAwMDExHzAdBgkqhkiG9w0BCQEWEGFkbWluQGhlZGVyYS5jb20wIBcNMjEwODIz\nMjIyMTU5WhgPMjI5NTA2MDcyMjIxNTlaMIGEMQswCQYDVQQGEwJVUzELMAkGA1UE\nCAwCVFgxEzARBgNVBAcMClJpY2hhcmRzb24xDzANBgNVBAoMBkhlZGVyYTEPMA0G\nA1UECwwGSGVkZXJhMRAwDgYDVQQDDAcwMDAwMDAxMR8wHQYJKoZIhvcNAQkBFhBh\nZG1pbkBoZWRlcmEuY29tMHYwEAYHKoZIzj0CAQYFK4EEACIDYgAERwfj4ZtD/wRb\nf8h9NEMu2sQoLFK9Gc4SQ8o6j4ccLYGdgOoVoq4zzy4Jr7ZtCTuACfCfhp7wy8ra\n+6cugccaSd6AzOKRSVZvQvkUTFKIoAOKwp6IhlU48rmi80MT07eyo1QwUjAPBgNV\nHREECDAGhwR/AAABMAsGA1UdDwQEAwIEsDATBgNVHSUEDDAKBggrBgEFBQcDATAd\nBgNVHQ4EFgQUCGhfVMP72Y0G5XUksE3dPgFHrzkwCgYIKoZIzj0EAwMDZwAwZAIw\ncpX7irZWyuujWRYUs9kLNgB2YLQK+n8r1fH+tJg3+zkcZ2pzhGWmpUUZWOzsDqGC\nAjBUbhlmrTc4LrEBN0EMiRYzfPD2kBZxusLBDIg/aDYERCMcsFvF1T9SsuasF/B+\ncI8=\n-----END CERTIFICATE-----\n`,\n    \"0.0.5\": `-----BEGIN CERTIFICATE-----\nMIICnjCCAiWgAwIBAgIUIo4L+7xe/mUmpKy4qOAQEIxz8UMwCgYIKoZIzj0EAwMw\ngYQxCzAJBgNVBAYTAlVTMQswCQYDVQQIDAJUWDETMBEGA1UEBwwKUmljaGFyZHNv\nbjEPMA0GA1UECgwGSGVkZXJhMQ8wDQYDVQQLDAZIZWRlcmExEDAOBgNVBAMMBzAw\nMDAwMDIxHzAdBgkqhkiG9w0BCQEWEGFkbWluQGhlZGVyYS5jb20wIBcNMjEwODIz\nMjIyMTU5WhgPMjI5NTA2MDcyMjIxNTlaMIGEMQswCQYDVQQGEwJVUzELMAkGA1UE\nCAwCVFgxEzARBgNVBAcMClJpY2hhcmRzb24xDzANBgNVBAoMBkhlZGVyYTEPMA0G\nA1UECwwGSGVkZXJhMRAwDgYDVQQDDAcwMDAwMDAyMR8wHQYJKoZIhvcNAQkBFhBh\nZG1pbkBoZWRlcmEuY29tMHYwEAYHKoZIzj0CAQYFK4EEACIDYgAEoFgCjb1/7BUJ\nEXKIPJLlsOSp/39G8l92wOSr7h+Py7iwVwu68H2ykftMOq3tRwDRXZHz7ViqcIZ9\nlfMcS8sbRtVm9tBbNciVUqTLWX9nHr/c4PhKEi+LdgtSUr2+hHiWo1QwUjAPBgNV\nHREECDAGhwR/AAABMAsGA1UdDwQEAwIEsDATBgNVHSUEDDAKBggrBgEFBQcDATAd\nBgNVHQ4EFgQUMR89BHC3yKC4YwUgyBVQUGBCprQwCgYIKoZIzj0EAwMDZwAwZAIw\nUs2BdslcScIwcmxoB60K7/1BPfQI8ccDZIMosas6U2zhinTnRKik1T0i+uHhLl8e\nAjA5apAwSPTnP7j3Bo/FOCkfjTqOjwp2lUqzDJYKolKsHX2sy8hX9MkYiY46SaJ1\nP+0=\n-----END CERTIFICATE-----\n`,\n    \"0.0.6\": `-----BEGIN CERTIFICATE-----\nMIICnzCCAiWgAwIBAgIUWpji03mJsR/16MP8BrOfpNz7aQMwCgYIKoZIzj0EAwMw\ngYQxCzAJBgNVBAYTAlVTMQswCQYDVQQIDAJUWDETMBEGA1UEBwwKUmljaGFyZHNv\nbjEPMA0GA1UECgwGSGVkZXJhMQ8wDQYDVQQLDAZIZWRlcmExEDAOBgNVBAMMBzAw\nMDAwMDMxHzAdBgkqhkiG9w0BCQEWEGFkbWluQGhlZGVyYS5jb20wIBcNMjEwODIz\nMjIyMTU5WhgPMjI5NTA2MDcyMjIxNTlaMIGEMQswCQYDVQQGEwJVUzELMAkGA1UE\nCAwCVFgxEzARBgNVBAcMClJpY2hhcmRzb24xDzANBgNVBAoMBkhlZGVyYTEPMA0G\nA1UECwwGSGVkZXJhMRAwDgYDVQQDDAcwMDAwMDAzMR8wHQYJKoZIhvcNAQkBFhBh\nZG1pbkBoZWRlcmEuY29tMHYwEAYHKoZIzj0CAQYFK4EEACIDYgAE+KDMC99Q1rWi\n+FwlytGMS5qzTDytCvk+PzdONnDZ/weNSv4j3BXSo588IwhIxLtfcBlyo/+PmE1c\n5qGFXuMoZjGr22VpvogkRgPejD+Gawb4A2XHkMCD8NmO66uPw97po1QwUjAPBgNV\nHREECDAGhwR/AAABMAsGA1UdDwQEAwIEsDATBgNVHSUEDDAKBggrBgEFBQcDATAd\nBgNVHQ4EFgQUN1qEI4eQ+WHavb9ypGV417NvhGowCgYIKoZIzj0EAwMDaAAwZQIw\nL0khkiDOiFRa3wx9l5JNjaSRePPc3ZaTaJQkPYeauMaLWEvmC/0e2/e9gPm5qJ8E\nAjEAgXQMko3vNB8VRN4XjyFJa8p/muZ/tLA15wPnb/boUmiZ+njDDSaiu8tIQrTB\ngHW6\n-----END CERTIFICATE-----\n`,\n    \"0.0.7\": `-----BEGIN CERTIFICATE-----\nMIICnjCCAiWgAwIBAgIUEJ7AJvrqDUBNKbssGoJtww3v+WowCgYIKoZIzj0EAwMw\ngYQxCzAJBgNVBAYTAlVTMQswCQYDVQQIDAJUWDETMBEGA1UEBwwKUmljaGFyZHNv\nbjEPMA0GA1UECgwGSGVkZXJhMQ8wDQYDVQQLDAZIZWRlcmExEDAOBgNVBAMMBzAw\nMDAwMDQxHzAdBgkqhkiG9w0BCQEWEGFkbWluQGhlZGVyYS5jb20wIBcNMjEwODIz\nMjIyMjAwWhgPMjI5NTA2MDcyMjIyMDBaMIGEMQswCQYDVQQGEwJVUzELMAkGA1UE\nCAwCVFgxEzARBgNVBAcMClJpY2hhcmRzb24xDzANBgNVBAoMBkhlZGVyYTEPMA0G\nA1UECwwGSGVkZXJhMRAwDgYDVQQDDAcwMDAwMDA0MR8wHQYJKoZIhvcNAQkBFhBh\nZG1pbkBoZWRlcmEuY29tMHYwEAYHKoZIzj0CAQYFK4EEACIDYgAEfgJ8w9GUWM3y\nyusedZOFQrgXFVsdtRsMSHbqyVCN6+Wow6SIjy29GRMSP5R2aswupFgh6lXJRqnr\ntY+hpRumFKsmSo+5+l8DBcql4rzs4utESTehM+Cq9LYc4A1z0UIRo1QwUjAPBgNV\nHREECDAGhwR/AAABMAsGA1UdDwQEAwIEsDATBgNVHSUEDDAKBggrBgEFBQcDATAd\nBgNVHQ4EFgQUMCm3UqSbT01Zr23hLzCGnXbDa+MwCgYIKoZIzj0EAwMDZwAwZAIw\nFNcN7mKJo/bwpRT+y/KbYkCJsvljdbXzJOXXQ3e6J6R+0vLqcT25J/ry6pBZMUwR\nAjAswu29z8KJCSxnWwnPpHDmkRT15zG/xS+pAmx3oeQSqp6ZD7qpdJE8zzhbfe5x\nwAc=\n-----END CERTIFICATE-----\n`,\n};\n\n/** @type {{[key: string]: string}} */\nexport const TESTNET_CERTS = {\n    \"0.0.3\": `-----BEGIN CERTIFICATE-----\nMIICoDCCAiWgAwIBAgIUMkNeM6Sbk9ZFYmRWZmSgTQHHWyUwCgYIKoZIzj0EAwMw\ngYQxCzAJBgNVBAYTAlVTMQswCQYDVQQIDAJUWDETMBEGA1UEBwwKUmljaGFyZHNv\nbjEPMA0GA1UECgwGSGVkZXJhMQ8wDQYDVQQLDAZIZWRlcmExEDAOBgNVBAMMBzAw\nMDAwMDAxHzAdBgkqhkiG9w0BCQEWEGFkbWluQGhlZGVyYS5jb20wIBcNMjEwODIz\nMjIyMjU4WhgPMjI5NTA2MDcyMjIyNThaMIGEMQswCQYDVQQGEwJVUzELMAkGA1UE\nCAwCVFgxEzARBgNVBAcMClJpY2hhcmRzb24xDzANBgNVBAoMBkhlZGVyYTEPMA0G\nA1UECwwGSGVkZXJhMRAwDgYDVQQDDAcwMDAwMDAwMR8wHQYJKoZIhvcNAQkBFhBh\nZG1pbkBoZWRlcmEuY29tMHYwEAYHKoZIzj0CAQYFK4EEACIDYgAETLLoIMZjEhDP\nKLHS7bJT4OTYGgR/8mB65yfx3KqMLYFF+q2SpWkIrYgUQLVEUEibVSnLlxRUzH7R\nszcKynpTwh0W0yfWanZKQg+RWoKkEYlu2GvkUtJb8cRVM9NLmJUeo1QwUjAPBgNV\nHREECDAGhwR/AAABMAsGA1UdDwQEAwIEsDATBgNVHSUEDDAKBggrBgEFBQcDATAd\nBgNVHQ4EFgQUSrIepwFx8gZ8/G+WGaxs6GgkMtQwCgYIKoZIzj0EAwMDaQAwZgIx\nAJxC0fjB1OrF9vkCKsfnPS3Z+1hscrZhEDG38NxdLEAfPQ5VmyrSBgJy11FBp8yB\n0QIxAKzbge3Lf7iBMwYwm+2M/GiVgmHNMLdtrYuerWpdbYOHgRNAkyt57JoThn0u\nTzkd5Q==\n-----END CERTIFICATE-----\n`,\n    \"0.0.4\": `-----BEGIN CERTIFICATE-----\nMIICnzCCAiWgAwIBAgIUGLriiLPacglp6U+BtJcF9TI7xEUwCgYIKoZIzj0EAwMw\ngYQxCzAJBgNVBAYTAlVTMQswCQYDVQQIDAJUWDETMBEGA1UEBwwKUmljaGFyZHNv\nbjEPMA0GA1UECgwGSGVkZXJhMQ8wDQYDVQQLDAZIZWRlcmExEDAOBgNVBAMMBzAw\nMDAwMDExHzAdBgkqhkiG9w0BCQEWEGFkbWluQGhlZGVyYS5jb20wIBcNMjEwODIz\nMjIyMjU4WhgPMjI5NTA2MDcyMjIyNThaMIGEMQswCQYDVQQGEwJVUzELMAkGA1UE\nCAwCVFgxEzARBgNVBAcMClJpY2hhcmRzb24xDzANBgNVBAoMBkhlZGVyYTEPMA0G\nA1UECwwGSGVkZXJhMRAwDgYDVQQDDAcwMDAwMDAxMR8wHQYJKoZIhvcNAQkBFhBh\nZG1pbkBoZWRlcmEuY29tMHYwEAYHKoZIzj0CAQYFK4EEACIDYgAEXhR9cb6mH9AE\nGNSGk3OkxN1C/JW49ddYZ/XWD4InjS8D1kXmB1Y39v1mF0L1loG6lDT8Zp46zrj7\n5zMONXZeD2b0mx5hHhtllPTpJ10Tlt9FDoyFbKwPRQ/SAPNADfuzo1QwUjAPBgNV\nHREECDAGhwR/AAABMAsGA1UdDwQEAwIEsDATBgNVHSUEDDAKBggrBgEFBQcDATAd\nBgNVHQ4EFgQUCaKtx8RZ1XJO9rmZMbIcFJZkcv4wCgYIKoZIzj0EAwMDaAAwZQIx\nAPhDW0VrNSmq8hODdhIVV4GyvpYhp3Fksg+sZr3DmUatwn+ptj+X+9IzgPl9QYE3\nkAIwcy2ixgNkjC/DYVmgT4MpUnLneLK0gA23Vj2QwACaTH99H/ybqUH7srj0POB9\n5wvV\n-----END CERTIFICATE-----\n`,\n    \"0.0.5\": `-----BEGIN CERTIFICATE-----\nMIICoDCCAiWgAwIBAgIUEMduome38hvAuIKoGjg/tHatQZMwCgYIKoZIzj0EAwMw\ngYQxCzAJBgNVBAYTAlVTMQswCQYDVQQIDAJUWDETMBEGA1UEBwwKUmljaGFyZHNv\nbjEPMA0GA1UECgwGSGVkZXJhMQ8wDQYDVQQLDAZIZWRlcmExEDAOBgNVBAMMBzAw\nMDAwMDIxHzAdBgkqhkiG9w0BCQEWEGFkbWluQGhlZGVyYS5jb20wIBcNMjEwODIz\nMjIyMjU4WhgPMjI5NTA2MDcyMjIyNThaMIGEMQswCQYDVQQGEwJVUzELMAkGA1UE\nCAwCVFgxEzARBgNVBAcMClJpY2hhcmRzb24xDzANBgNVBAoMBkhlZGVyYTEPMA0G\nA1UECwwGSGVkZXJhMRAwDgYDVQQDDAcwMDAwMDAyMR8wHQYJKoZIhvcNAQkBFhBh\nZG1pbkBoZWRlcmEuY29tMHYwEAYHKoZIzj0CAQYFK4EEACIDYgAEl1olzP1L4WgX\nd7aujOXmTQZt3tEOGzkMa3S6qJwISLBI7Tb9KaW8zYIe9xWBVAwphCbD0wn9xpPV\nwMr4uTn+JocugYBbe2YoUGzWTkxWnOEKXbh/nQJCe3XE/C0FY8fAo1QwUjAPBgNV\nHREECDAGhwR/AAABMAsGA1UdDwQEAwIEsDATBgNVHSUEDDAKBggrBgEFBQcDATAd\nBgNVHQ4EFgQULfw7LVtTiUDVIvZwhhWW0soQtSQwCgYIKoZIzj0EAwMDaQAwZgIx\nAID5v3Lo2zlnpFzTdJFqBpw6fV+vmpI+JBj61f264J/uHMbELiu2dwxhwWaMElX7\nwQIxAJxccFr7Bf1KjaMyT2dq75zQzFuKDMj9x92yAqM2Gas/Yay+Ccpm8FBn7BFl\nke1Qwg==\n-----END CERTIFICATE-----\n`,\n    \"0.0.6\": `-----BEGIN CERTIFICATE-----\nMIICnzCCAiWgAwIBAgIUcCg/gZGxk/UjYkhW1jg4Zki+jfwwCgYIKoZIzj0EAwMw\ngYQxCzAJBgNVBAYTAlVTMQswCQYDVQQIDAJUWDETMBEGA1UEBwwKUmljaGFyZHNv\nbjEPMA0GA1UECgwGSGVkZXJhMQ8wDQYDVQQLDAZIZWRlcmExEDAOBgNVBAMMBzAw\nMDAwMDMxHzAdBgkqhkiG9w0BCQEWEGFkbWluQGhlZGVyYS5jb20wIBcNMjEwODIz\nMjIyMjU5WhgPMjI5NTA2MDcyMjIyNTlaMIGEMQswCQYDVQQGEwJVUzELMAkGA1UE\nCAwCVFgxEzARBgNVBAcMClJpY2hhcmRzb24xDzANBgNVBAoMBkhlZGVyYTEPMA0G\nA1UECwwGSGVkZXJhMRAwDgYDVQQDDAcwMDAwMDAzMR8wHQYJKoZIhvcNAQkBFhBh\nZG1pbkBoZWRlcmEuY29tMHYwEAYHKoZIzj0CAQYFK4EEACIDYgAEOSsXBZicyrxy\ntHJHKh04Mvu6SKM49IC7rAXw5CjlOod5OTeHg0fa5vVoBME4mlWP+LsMMqf8welC\n20b4wMwUC1Hnd66v8crX8L1wvZ9EmKLTvhTd65bS5zloMiSbpdF2o1QwUjAPBgNV\nHREECDAGhwR/AAABMAsGA1UdDwQEAwIEsDATBgNVHSUEDDAKBggrBgEFBQcDATAd\nBgNVHQ4EFgQUgMMwqaGuUT6JCH0gsbqullaW6/QwCgYIKoZIzj0EAwMDaAAwZQIx\nAMggJ1eMmT7C14z7wHCsOdDOgmzg733+a5dsuAcxknoz/sQLN8wqy1JxShWgEIA/\nxwIweTDAX/4JZnr3mlSC57lYXbHk/c319VfN9Ybxg0FaDXa8tOqg7Ml6Uu3IGujQ\na3eY\n-----END CERTIFICATE-----\n`,\n    \"0.0.7\": `-----BEGIN CERTIFICATE-----\nMIICoDCCAiWgAwIBAgIUXADwhiD5acpA66GPoXuAevBfZBIwCgYIKoZIzj0EAwMw\ngYQxCzAJBgNVBAYTAlVTMQswCQYDVQQIDAJUWDETMBEGA1UEBwwKUmljaGFyZHNv\nbjEPMA0GA1UECgwGSGVkZXJhMQ8wDQYDVQQLDAZIZWRlcmExEDAOBgNVBAMMBzAw\nMDAwMDQxHzAdBgkqhkiG9w0BCQEWEGFkbWluQGhlZGVyYS5jb20wIBcNMjEwODIz\nMjIyMjU5WhgPMjI5NTA2MDcyMjIyNTlaMIGEMQswCQYDVQQGEwJVUzELMAkGA1UE\nCAwCVFgxEzARBgNVBAcMClJpY2hhcmRzb24xDzANBgNVBAoMBkhlZGVyYTEPMA0G\nA1UECwwGSGVkZXJhMRAwDgYDVQQDDAcwMDAwMDA0MR8wHQYJKoZIhvcNAQkBFhBh\nZG1pbkBoZWRlcmEuY29tMHYwEAYHKoZIzj0CAQYFK4EEACIDYgAEBgLhLiGz8qWu\n50vzxSyQkrmhpxuHBJhpGzA0WaUJdAUlaUOL1753ZxxA08wUmcozILNEnMaQ+ROn\n+fuGctv90ZcrSekODjxjbKH2ntVLP8xwkBRCTJ0WRBNenxxBD438o1QwUjAPBgNV\nHREECDAGhwR/AAABMAsGA1UdDwQEAwIEsDATBgNVHSUEDDAKBggrBgEFBQcDATAd\nBgNVHQ4EFgQUhYOOD/z3ty9O5GuSTXnyujIqBRgwCgYIKoZIzj0EAwMDaQAwZgIx\nAMxbZ4gvkXaORauQFUPRYwOJrihWIA+3ttGDua//YfEbshytQ8b4L65W/1Xs8eOd\nDwIxAImwTzRam8tScdOzmuGgPcML2lkETMpMA2rZYVyEL/VNktIxvB2oE+4M0v5l\nr8IbTA==\n-----END CERTIFICATE-----\n`,\n};\n\n/** @type {{[key: string]: string}} */\nexport const MAINNET_CERTS = {\n    \"0.0.3\": `-----BEGIN CERTIFICATE-----\nMIICnjCCAiWgAwIBAgIUZWoT9TlgbZy+syLbqZhO5++1cVgwCgYIKoZIzj0EAwMw\ngYQxCzAJBgNVBAYTAlVTMQswCQYDVQQIDAJUWDETMBEGA1UEBwwKUmljaGFyZHNv\nbjEPMA0GA1UECgwGSGVkZXJhMQ8wDQYDVQQLDAZIZWRlcmExEDAOBgNVBAMMBzAw\nMDAwMDAxHzAdBgkqhkiG9w0BCQEWEGFkbWluQGhlZGVyYS5jb20wIBcNMjEwODIz\nMjI0MjQ3WhgPMjI5NTA2MDcyMjQyNDdaMIGEMQswCQYDVQQGEwJVUzELMAkGA1UE\nCAwCVFgxEzARBgNVBAcMClJpY2hhcmRzb24xDzANBgNVBAoMBkhlZGVyYTEPMA0G\nA1UECwwGSGVkZXJhMRAwDgYDVQQDDAcwMDAwMDAwMR8wHQYJKoZIhvcNAQkBFhBh\nZG1pbkBoZWRlcmEuY29tMHYwEAYHKoZIzj0CAQYFK4EEACIDYgAE8NhDGK/dgWvD\nRHEJ8af7CBDdhvujH5XIrLen33GTLY8DbJwJW2jdsLGx3+DRVVmeNQZxCbcGj0e2\nIyypkG6s0mtnmeymD8mI3JU8m1aZiuIptZSH3Bw1BNn2hKU4x42co1QwUjAPBgNV\nHREECDAGhwR/AAABMAsGA1UdDwQEAwIEsDATBgNVHSUEDDAKBggrBgEFBQcDATAd\nBgNVHQ4EFgQUbYGliiNtMkGaroQxXWCl+kYHDBwwCgYIKoZIzj0EAwMDZwAwZAIw\nImTOEYu0y73Ggt4NAjFFsN2sV7CsEL3NoJqJ7MZ6U+b3Ax1hnc1eE0oei6xH4VNF\nAjBB4iZNvAn6Esiu4k+JPlYuMesplgMv33fU5GsfvLIovN8pOJDe0c+CUmsnfGbP\nOsQ=\n-----END CERTIFICATE-----\n`,\n    \"0.0.4\": `-----BEGIN CERTIFICATE-----\nMIICnjCCAiWgAwIBAgIUEGWU0F4aKffY+le55ahQaScDYDwwCgYIKoZIzj0EAwMw\ngYQxCzAJBgNVBAYTAlVTMQswCQYDVQQIDAJUWDETMBEGA1UEBwwKUmljaGFyZHNv\nbjEPMA0GA1UECgwGSGVkZXJhMQ8wDQYDVQQLDAZIZWRlcmExEDAOBgNVBAMMBzAw\nMDAwMDExHzAdBgkqhkiG9w0BCQEWEGFkbWluQGhlZGVyYS5jb20wIBcNMjEwODIz\nMjI0MjQ3WhgPMjI5NTA2MDcyMjQyNDdaMIGEMQswCQYDVQQGEwJVUzELMAkGA1UE\nCAwCVFgxEzARBgNVBAcMClJpY2hhcmRzb24xDzANBgNVBAoMBkhlZGVyYTEPMA0G\nA1UECwwGSGVkZXJhMRAwDgYDVQQDDAcwMDAwMDAxMR8wHQYJKoZIhvcNAQkBFhBh\nZG1pbkBoZWRlcmEuY29tMHYwEAYHKoZIzj0CAQYFK4EEACIDYgAEqW6TqxMmjL3h\n9AVBgfVaFRZlXUcyWa+QYhzxr8sksgJqfDbmGtdaHIdiL1qCPuC4v4G3qrAbXZRm\nTYNo5Lz0X2ic5pES6DbacdjOgHH7TAY4BVKkuVrydln2jjhh7SmBo1QwUjAPBgNV\nHREECDAGhwR/AAABMAsGA1UdDwQEAwIEsDATBgNVHSUEDDAKBggrBgEFBQcDATAd\nBgNVHQ4EFgQUcBlY5a1rV0H1iQuJMwWxrTEWQ6MwCgYIKoZIzj0EAwMDZwAwZAIw\nR+mY9B2U26yD44s03hjz4TlpkyXbVfmgL3Elqo3lrWDJtvT4zpjGjxg3Q1P3SpZQ\nAjAy9DRVrZPzq8iq5Ir7B8XgLQH5QL7SQ3tUL1HzXJYOukvn9Ofr+QADhpb0oJLB\nKug=\n-----END CERTIFICATE-----\n`,\n    \"0.0.5\": `-----BEGIN CERTIFICATE-----\nMIICnjCCAiWgAwIBAgIUbxzfD3ihIK5snumqqKtqtcBPSSQwCgYIKoZIzj0EAwMw\ngYQxCzAJBgNVBAYTAlVTMQswCQYDVQQIDAJUWDETMBEGA1UEBwwKUmljaGFyZHNv\nbjEPMA0GA1UECgwGSGVkZXJhMQ8wDQYDVQQLDAZIZWRlcmExEDAOBgNVBAMMBzAw\nMDAwMDIxHzAdBgkqhkiG9w0BCQEWEGFkbWluQGhlZGVyYS5jb20wIBcNMjEwODIz\nMjI0MjQ3WhgPMjI5NTA2MDcyMjQyNDdaMIGEMQswCQYDVQQGEwJVUzELMAkGA1UE\nCAwCVFgxEzARBgNVBAcMClJpY2hhcmRzb24xDzANBgNVBAoMBkhlZGVyYTEPMA0G\nA1UECwwGSGVkZXJhMRAwDgYDVQQDDAcwMDAwMDAyMR8wHQYJKoZIhvcNAQkBFhBh\nZG1pbkBoZWRlcmEuY29tMHYwEAYHKoZIzj0CAQYFK4EEACIDYgAEWoAjWmW7vpUr\nU69wRbK9Firons4kRoin6N8lMjCD+xzsrsT6/wycpzC0F8fxfIvOYSMWRtinhOKl\nZAxp60OWYP87iH7RqWBAnHIJZj/znKTGd+8Sqp/RVQmButFHg/+Go1QwUjAPBgNV\nHREECDAGhwR/AAABMAsGA1UdDwQEAwIEsDATBgNVHSUEDDAKBggrBgEFBQcDATAd\nBgNVHQ4EFgQUTMtwuDzI4Hun7SPp2Nb3scjUUXkwCgYIKoZIzj0EAwMDZwAwZAIw\nHKAgaX39Lgc+4/xHXzZR9mi2p3pf6CDO85Xm56UR/t48HnBkRorR3TFCBXACeIIs\nAjBtXglpDnRf6M+nVBlxLdwCQXiwr6vQJ9+dUo+suNkZ1JBmtHypyIqkG2yT4z9C\nLcs=\n-----END CERTIFICATE-----\n`,\n    \"0.0.6\": `-----BEGIN CERTIFICATE-----\nMIICoDCCAiWgAwIBAgIUPwXdJvpCJYO9lm6uQN3S1aBi3PswCgYIKoZIzj0EAwMw\ngYQxCzAJBgNVBAYTAlVTMQswCQYDVQQIDAJUWDETMBEGA1UEBwwKUmljaGFyZHNv\nbjEPMA0GA1UECgwGSGVkZXJhMQ8wDQYDVQQLDAZIZWRlcmExEDAOBgNVBAMMBzAw\nMDAwMDMxHzAdBgkqhkiG9w0BCQEWEGFkbWluQGhlZGVyYS5jb20wIBcNMjEwODIz\nMjI0MjQ4WhgPMjI5NTA2MDcyMjQyNDhaMIGEMQswCQYDVQQGEwJVUzELMAkGA1UE\nCAwCVFgxEzARBgNVBAcMClJpY2hhcmRzb24xDzANBgNVBAoMBkhlZGVyYTEPMA0G\nA1UECwwGSGVkZXJhMRAwDgYDVQQDDAcwMDAwMDAzMR8wHQYJKoZIhvcNAQkBFhBh\nZG1pbkBoZWRlcmEuY29tMHYwEAYHKoZIzj0CAQYFK4EEACIDYgAE8PwBQ0ywu+0t\neIYbaiKwzGEScQMOYFYAMw49++6bGRiH/XZjsypqlJWy3F/mB3+HNVZsqgB61Jpj\n2p98Afkl57MYWhWM29t/x5qAQ8LhKGu2k+BOnCcvHDU2pR+fmFSOo1QwUjAPBgNV\nHREECDAGhwR/AAABMAsGA1UdDwQEAwIEsDATBgNVHSUEDDAKBggrBgEFBQcDATAd\nBgNVHQ4EFgQUgI4r3/iwzFN2wh76y/4XDBk7wgkwCgYIKoZIzj0EAwMDaQAwZgIx\nANAjwHdTWYMCCjrtb2NWzDpsKjf3m6ZcaxbEcM1ta/Zji/4x0+VRZa917CkfaEsr\nLAIxAK/erPvIXRU9eNaK/TAQqppSRaF35G6iNnYjQZzfjTU2DczhT4oCjKzGoCHT\nkI1zOg==\n-----END CERTIFICATE-----\n`,\n    \"0.0.7\": `-----BEGIN CERTIFICATE-----\nMIICnzCCAiWgAwIBAgIUXUGzJj13Ck2Cp0BKauLOdzgCPwIwCgYIKoZIzj0EAwMw\ngYQxCzAJBgNVBAYTAlVTMQswCQYDVQQIDAJUWDETMBEGA1UEBwwKUmljaGFyZHNv\nbjEPMA0GA1UECgwGSGVkZXJhMQ8wDQYDVQQLDAZIZWRlcmExEDAOBgNVBAMMBzAw\nMDAwMDQxHzAdBgkqhkiG9w0BCQEWEGFkbWluQGhlZGVyYS5jb20wIBcNMjEwODIz\nMjI0MjQ4WhgPMjI5NTA2MDcyMjQyNDhaMIGEMQswCQYDVQQGEwJVUzELMAkGA1UE\nCAwCVFgxEzARBgNVBAcMClJpY2hhcmRzb24xDzANBgNVBAoMBkhlZGVyYTEPMA0G\nA1UECwwGSGVkZXJhMRAwDgYDVQQDDAcwMDAwMDA0MR8wHQYJKoZIhvcNAQkBFhBh\nZG1pbkBoZWRlcmEuY29tMHYwEAYHKoZIzj0CAQYFK4EEACIDYgAE8Ee64Tbu53i/\nKsuLOJG3GQ4e9gQ+9BtEy7U8kfFzRHh6Ejn7LOW38ZdKX1HP4zXuUusjNvytqDvr\n7eclitqnegcEOkIeFK3wQwBoNILuq+r4LRVi19V+AIcl5w3qkJvIo1QwUjAPBgNV\nHREECDAGhwR/AAABMAsGA1UdDwQEAwIEsDATBgNVHSUEDDAKBggrBgEFBQcDATAd\nBgNVHQ4EFgQU2tbfu7hd7USgbS2WsG/6BduKEAMwCgYIKoZIzj0EAwMDaAAwZQIw\nRw/BOLoScmU7P/1JnNPsGarmnvcuJrokAv1wk6j8s5LGuQHReX+d+O3RPLggwcAY\nAjEAjoZnt9simul4cVcVy4G/0f39atanUva17gyzlYXEYx7B6UloxLeEcZhlbBf8\nGjRf\n-----END CERTIFICATE-----\n`,\n    \"0.0.8\": ``,\n    \"0.0.9\": ``,\n    \"0.0.10\": `-----BEGIN CERTIFICATE-----\nMIICnzCCAiWgAwIBAgIUNauEDBCmP9igXLWtRpzkQqIGo/wwCgYIKoZIzj0EAwMw\ngYQxCzAJBgNVBAYTAlVTMQswCQYDVQQIDAJUWDETMBEGA1UEBwwKUmljaGFyZHNv\nbjEPMA0GA1UECgwGSGVkZXJhMQ8wDQYDVQQLDAZIZWRlcmExEDAOBgNVBAMMBzAw\nMDAwMDcxHzAdBgkqhkiG9w0BCQEWEGFkbWluQGhlZGVyYS5jb20wIBcNMjEwODIz\nMjI0MjQ5WhgPMjI5NTA2MDcyMjQyNDlaMIGEMQswCQYDVQQGEwJVUzELMAkGA1UE\nCAwCVFgxEzARBgNVBAcMClJpY2hhcmRzb24xDzANBgNVBAoMBkhlZGVyYTEPMA0G\nA1UECwwGSGVkZXJhMRAwDgYDVQQDDAcwMDAwMDA3MR8wHQYJKoZIhvcNAQkBFhBh\nZG1pbkBoZWRlcmEuY29tMHYwEAYHKoZIzj0CAQYFK4EEACIDYgAEjbkoJBshQXUy\nqm5K8ldpTDR94Wk8iEM7QwHfceIxK5pPgaVGRkoJyVLSK5LMH4jyaIHUrtA0lIBQ\no0MsYkq7TOOm7+vo1Yrd8EMbu5StMb3gsXUrj7E/SBKIxULak6hCo1QwUjAPBgNV\nHREECDAGhwR/AAABMAsGA1UdDwQEAwIEsDATBgNVHSUEDDAKBggrBgEFBQcDATAd\nBgNVHQ4EFgQUyKHMzIBPRV/mrgG7tIjzOiw2xbUwCgYIKoZIzj0EAwMDaAAwZQIx\nANsigVtLgTdKWBPVJPstWA0H8yihf0/dmM3GO4qp5keGTWz/O3tnom4iDB6eSrcA\njwIwU82Dh+Wxl3kAD3YJH5VhlfHTm1rPlJETBHZgvPBOYqippao6+WZFEpn2/IDC\nNTjn\n-----END CERTIFICATE-----\n`,\n    \"0.0.11\": `-----BEGIN CERTIFICATE-----\nMIICnjCCAiWgAwIBAgIUWtnJm2kswnXYu7/S5BnnTQiDRcUwCgYIKoZIzj0EAwMw\ngYQxCzAJBgNVBAYTAlVTMQswCQYDVQQIDAJUWDETMBEGA1UEBwwKUmljaGFyZHNv\nbjEPMA0GA1UECgwGSGVkZXJhMQ8wDQYDVQQLDAZIZWRlcmExEDAOBgNVBAMMBzAw\nMDAwMDgxHzAdBgkqhkiG9w0BCQEWEGFkbWluQGhlZGVyYS5jb20wIBcNMjEwODIz\nMjI0MjUwWhgPMjI5NTA2MDcyMjQyNTBaMIGEMQswCQYDVQQGEwJVUzELMAkGA1UE\nCAwCVFgxEzARBgNVBAcMClJpY2hhcmRzb24xDzANBgNVBAoMBkhlZGVyYTEPMA0G\nA1UECwwGSGVkZXJhMRAwDgYDVQQDDAcwMDAwMDA4MR8wHQYJKoZIhvcNAQkBFhBh\nZG1pbkBoZWRlcmEuY29tMHYwEAYHKoZIzj0CAQYFK4EEACIDYgAEjY9Rl+s00xFV\ntdTpAixLR4kJIGLfSLOdm+ofU/KuKMRSz5x1ORhIicppKZK24U5WLGXQU1fKLvxX\nOmqwqL+6oAONmiHszqVdhWne4QPUba0yw7rf1/OI+IFF1HRK3shQo1QwUjAPBgNV\nHREECDAGhwR/AAABMAsGA1UdDwQEAwIEsDATBgNVHSUEDDAKBggrBgEFBQcDATAd\nBgNVHQ4EFgQUb/htoTodbq5hjP5RNlQ0rkKwWB0wCgYIKoZIzj0EAwMDZwAwZAIw\nbO+9yArr21XKXjYHPadEAYINDxgXEC3W8e3X6MJsHCIZITddWWOyXRNFhz504vN0\nAjB8aBuhrKcg1b4CrQDZQcosyVPUGIZKkXdQFfbVdivKrGZvqLS+GdPLd3v2MmHY\norA=\n-----END CERTIFICATE-----\n`,\n    \"0.0.12\": `-----BEGIN CERTIFICATE-----\nMIICoDCCAiWgAwIBAgIUHBsegV0bKtwpHRoOnnhbK7CTHxMwCgYIKoZIzj0EAwMw\ngYQxCzAJBgNVBAYTAlVTMQswCQYDVQQIDAJUWDETMBEGA1UEBwwKUmljaGFyZHNv\nbjEPMA0GA1UECgwGSGVkZXJhMQ8wDQYDVQQLDAZIZWRlcmExEDAOBgNVBAMMBzAw\nMDAwMDkxHzAdBgkqhkiG9w0BCQEWEGFkbWluQGhlZGVyYS5jb20wIBcNMjEwODIz\nMjI0MjUwWhgPMjI5NTA2MDcyMjQyNTBaMIGEMQswCQYDVQQGEwJVUzELMAkGA1UE\nCAwCVFgxEzARBgNVBAcMClJpY2hhcmRzb24xDzANBgNVBAoMBkhlZGVyYTEPMA0G\nA1UECwwGSGVkZXJhMRAwDgYDVQQDDAcwMDAwMDA5MR8wHQYJKoZIhvcNAQkBFhBh\nZG1pbkBoZWRlcmEuY29tMHYwEAYHKoZIzj0CAQYFK4EEACIDYgAEK+ZAs/00RXaj\nbuQJJy4zwr/YTj9h5V+vbY7sq9Z1RByEwTRRQOI3OuzzMq1EWKkVJKF/QF5b4yda\nx6W9O/NT4EjBXH5XR5X1V6h7aT01YBqsxgMxuUP7kw9K+fW4k6Zao1QwUjAPBgNV\nHREECDAGhwR/AAABMAsGA1UdDwQEAwIEsDATBgNVHSUEDDAKBggrBgEFBQcDATAd\nBgNVHQ4EFgQUKbecoYirLjf2O2oPkoggEE2P7FcwCgYIKoZIzj0EAwMDaQAwZgIx\nAP67wsVOkeFo/9QRo+PnZhzEvjOZ/+IUoUhimdljcVwn79tzNP+obf7VW3Oq1wH7\n4wIxAL65+WmMTMoI2cN7TCiL7G/W2ChDsASeHfaP/4e4ZViNONWotlY9i9aS3Kwt\nLTea1Q==\n-----END CERTIFICATE-----\n`,\n    \"0.0.13\": `-----BEGIN CERTIFICATE-----\nMIICoDCCAiegAwIBAgIUBNxMZRKru9jzFA8zsOAI4xkMFCMwCgYIKoZIzj0EAwMw\ngYUxCzAJBgNVBAYTAlVTMQswCQYDVQQIDAJUWDETMBEGA1UEBwwKUmljaGFyZHNv\nbjEPMA0GA1UECgwGSGVkZXJhMQ8wDQYDVQQLDAZIZWRlcmExETAPBgNVBAMMCDAw\nMDAwMDEwMR8wHQYJKoZIhvcNAQkBFhBhZG1pbkBoZWRlcmEuY29tMCAXDTIxMDgy\nMzIyNDI1MFoYDzIyOTUwNjA3MjI0MjUwWjCBhTELMAkGA1UEBhMCVVMxCzAJBgNV\nBAgMAlRYMRMwEQYDVQQHDApSaWNoYXJkc29uMQ8wDQYDVQQKDAZIZWRlcmExDzAN\nBgNVBAsMBkhlZGVyYTERMA8GA1UEAwwIMDAwMDAwMTAxHzAdBgkqhkiG9w0BCQEW\nEGFkbWluQGhlZGVyYS5jb20wdjAQBgcqhkjOPQIBBgUrgQQAIgNiAAShUi9sglwb\n0U8QUrGOXJuHRXA9HP8RypkgNBwNRs1YcmPLcuwK70unWlkB81M44IQ7z/dG/0cW\nhfFdRI5x4jAeiUFivmWmMLT6lJMPxJ0BkWTGVFVwI3SKcgSvHP9pNS2jVDBSMA8G\nA1UdEQQIMAaHBH8AAAEwCwYDVR0PBAQDAgSwMBMGA1UdJQQMMAoGCCsGAQUFBwMB\nMB0GA1UdDgQWBBSqIMCDzCKKwJJLCXhu9YJYPw6lsDAKBggqhkjOPQQDAwNnADBk\nAjBl0bJG2A3443ybvrkKjWu8do6nDSR08/M49+19QfA1aDw0nb2sdCOE+xNitpQ9\n7ngCMGuQHmnKA2EyOIVpNl2EtRoG+vdmLJQaoukhmCWjkGrQHkai473tGa9cRZ/8\n+RZFzw==\n-----END CERTIFICATE-----\n`,\n    \"0.0.14\": `-----BEGIN CERTIFICATE-----\nMIICoTCCAiegAwIBAgIUJcQrEmPlIh0KWwiC2X6lZ/OdNs8wCgYIKoZIzj0EAwMw\ngYUxCzAJBgNVBAYTAlVTMQswCQYDVQQIDAJUWDETMBEGA1UEBwwKUmljaGFyZHNv\nbjEPMA0GA1UECgwGSGVkZXJhMQ8wDQYDVQQLDAZIZWRlcmExETAPBgNVBAMMCDAw\nMDAwMDExMR8wHQYJKoZIhvcNAQkBFhBhZG1pbkBoZWRlcmEuY29tMCAXDTIxMDgy\nMzIyNDI1MVoYDzIyOTUwNjA3MjI0MjUxWjCBhTELMAkGA1UEBhMCVVMxCzAJBgNV\nBAgMAlRYMRMwEQYDVQQHDApSaWNoYXJkc29uMQ8wDQYDVQQKDAZIZWRlcmExDzAN\nBgNVBAsMBkhlZGVyYTERMA8GA1UEAwwIMDAwMDAwMTExHzAdBgkqhkiG9w0BCQEW\nEGFkbWluQGhlZGVyYS5jb20wdjAQBgcqhkjOPQIBBgUrgQQAIgNiAASxRizKJSbB\nHmG2amvTHLCyExJngCh42agaFkv5Ab9mZYbqZPe0nUn/8RlVAvEiRNggCMYXC6MU\ne4J6D1aeLhYaa0UY8Fmxd20NUjAOWhJgUXds4ILMMVG+pevofeC8AsujVDBSMA8G\nA1UdEQQIMAaHBH8AAAEwCwYDVR0PBAQDAgSwMBMGA1UdJQQMMAoGCCsGAQUFBwMB\nMB0GA1UdDgQWBBS2Ic+LU/6Wssns4Yyf3N6E666xDzAKBggqhkjOPQQDAwNoADBl\nAjAH0JMX48GD6vThA6FUsVnJmBID376PRZgxhuZvn9C0HawvNjZVQTkpzpYCwmia\ndO4CMQCotakNxyiOxu/BbnPx6ld5+dqVCugsfqClhUhy8ROpNHfKxp3rW7HopowT\nWiMlIyI=\n-----END CERTIFICATE-----\n`,\n    \"0.0.15\": `-----BEGIN CERTIFICATE-----\nMIICoDCCAiegAwIBAgIUSFFNFv1iquxd5txlWA3PlkNju2EwCgYIKoZIzj0EAwMw\ngYUxCzAJBgNVBAYTAlVTMQswCQYDVQQIDAJUWDETMBEGA1UEBwwKUmljaGFyZHNv\nbjEPMA0GA1UECgwGSGVkZXJhMQ8wDQYDVQQLDAZIZWRlcmExETAPBgNVBAMMCDAw\nMDAwMDEyMR8wHQYJKoZIhvcNAQkBFhBhZG1pbkBoZWRlcmEuY29tMCAXDTIxMDgy\nMzIyNDI1MVoYDzIyOTUwNjA3MjI0MjUxWjCBhTELMAkGA1UEBhMCVVMxCzAJBgNV\nBAgMAlRYMRMwEQYDVQQHDApSaWNoYXJkc29uMQ8wDQYDVQQKDAZIZWRlcmExDzAN\nBgNVBAsMBkhlZGVyYTERMA8GA1UEAwwIMDAwMDAwMTIxHzAdBgkqhkiG9w0BCQEW\nEGFkbWluQGhlZGVyYS5jb20wdjAQBgcqhkjOPQIBBgUrgQQAIgNiAAQus3nAPZkb\nja4Efo7iD4s8NLsFwEwQXQBgBGIJwtA2JRgLyXeWpuu125ib6qJzT8CHvQZhel3b\ncwYWi4f2JpabMDepHELLxwZ9fILnAQ8GiHlzhrVq2NI15DI84dXVe4OjVDBSMA8G\nA1UdEQQIMAaHBH8AAAEwCwYDVR0PBAQDAgSwMBMGA1UdJQQMMAoGCCsGAQUFBwMB\nMB0GA1UdDgQWBBSEO/JFC5/fDcT2gtipDMYMMTd96DAKBggqhkjOPQQDAwNnADBk\nAjBalAU47XQL4ziHD8lj21pcp3+R5FKzn96HclMT/vraknCT1Sl+vCf6EYsqmi6Z\n+RwCMDpxL6P6OMqyE+HzAeYQ4Fa7MYEQfZGMjka4zxetBLvIpwUCT4EAO8gv9GoU\nwCBUzQ==\n-----END CERTIFICATE-----\n`,\n    \"0.0.16\": `-----BEGIN CERTIFICATE-----\nMIICoDCCAiegAwIBAgIUdnkil4P+VthVMnqygVwGKLt7VfAwCgYIKoZIzj0EAwMw\ngYUxCzAJBgNVBAYTAlVTMQswCQYDVQQIDAJUWDETMBEGA1UEBwwKUmljaGFyZHNv\nbjEPMA0GA1UECgwGSGVkZXJhMQ8wDQYDVQQLDAZIZWRlcmExETAPBgNVBAMMCDAw\nMDAwMDEzMR8wHQYJKoZIhvcNAQkBFhBhZG1pbkBoZWRlcmEuY29tMCAXDTIxMDgy\nMzIyNDI1MVoYDzIyOTUwNjA3MjI0MjUxWjCBhTELMAkGA1UEBhMCVVMxCzAJBgNV\nBAgMAlRYMRMwEQYDVQQHDApSaWNoYXJkc29uMQ8wDQYDVQQKDAZIZWRlcmExDzAN\nBgNVBAsMBkhlZGVyYTERMA8GA1UEAwwIMDAwMDAwMTMxHzAdBgkqhkiG9w0BCQEW\nEGFkbWluQGhlZGVyYS5jb20wdjAQBgcqhkjOPQIBBgUrgQQAIgNiAARUdz9ig/iA\nhEAth2YinHKY6WM63BAxUVItzgk65l1T4wTzwoK4XEwclY5vIeFmZy2e0s95lWgq\nSI68VS9gmJ3xp8Q9wOel/bvuF2tvNZmF393TeoNQQVHrQM1yJAx+nPyjVDBSMA8G\nA1UdEQQIMAaHBH8AAAEwCwYDVR0PBAQDAgSwMBMGA1UdJQQMMAoGCCsGAQUFBwMB\nMB0GA1UdDgQWBBTBFdNwHKSRDo6CxfA1aglY0N8joTAKBggqhkjOPQQDAwNnADBk\nAjAqPIel58Rcl2kDxZxJPD9mK9xW4TU+d2NuP3n140TQ6nPlw1OwCPI7a4i3wfEe\n08ICMBbrpNRdFZcvy76KoLPfTPvqbtWWaR/0tLZg4Rjj3x7SYgUg3vrVDmodHGkb\n4T2Raw==\n-----END CERTIFICATE-----\n`,\n    \"0.0.17\": `-----BEGIN CERTIFICATE-----\nMIICoDCCAiegAwIBAgIUDg+G4Ep+KEmIo+nCOY8DjFX60swwCgYIKoZIzj0EAwMw\ngYUxCzAJBgNVBAYTAlVTMQswCQYDVQQIDAJUWDETMBEGA1UEBwwKUmljaGFyZHNv\nbjEPMA0GA1UECgwGSGVkZXJhMQ8wDQYDVQQLDAZIZWRlcmExETAPBgNVBAMMCDAw\nMDAwMDE0MR8wHQYJKoZIhvcNAQkBFhBhZG1pbkBoZWRlcmEuY29tMCAXDTIxMDgy\nMzIyNDI1MloYDzIyOTUwNjA3MjI0MjUyWjCBhTELMAkGA1UEBhMCVVMxCzAJBgNV\nBAgMAlRYMRMwEQYDVQQHDApSaWNoYXJkc29uMQ8wDQYDVQQKDAZIZWRlcmExDzAN\nBgNVBAsMBkhlZGVyYTERMA8GA1UEAwwIMDAwMDAwMTQxHzAdBgkqhkiG9w0BCQEW\nEGFkbWluQGhlZGVyYS5jb20wdjAQBgcqhkjOPQIBBgUrgQQAIgNiAASCQRL5xUUh\n1bsTXRPAf/qVFWEOxsJTiMlF3+UJ4MajWE5zmc2QNIzqj7NE24z3fNxgjViNK/8+\noBNQeqXfyJ/4etNMzTyG4JTsvWRAQ3aR1J4WDbfwpcgw6AIOKq9OLP6jVDBSMA8G\nA1UdEQQIMAaHBH8AAAEwCwYDVR0PBAQDAgSwMBMGA1UdJQQMMAoGCCsGAQUFBwMB\nMB0GA1UdDgQWBBQB9V2fygf48zyyVL3bnAxCLDUV9zAKBggqhkjOPQQDAwNnADBk\nAjBonlThjjvi3fg7ODQcatPHBkp8Yon/p1ukm3YzYA3kitqroXU7BkmwRae2fbqD\nTTICMHI+fAy+xWGwXAFNcvNTop11IIoszcgJJY+1Mc2Q/USk3pP6iezta+rvnaWu\n7JySHg==\n-----END CERTIFICATE-----\n`,\n    \"0.0.18\": `-----BEGIN CERTIFICATE-----\nMIICojCCAiegAwIBAgIUBvI2Vq6O8yXNzbQlj6uQOdpd1lIwCgYIKoZIzj0EAwMw\ngYUxCzAJBgNVBAYTAlVTMQswCQYDVQQIDAJUWDETMBEGA1UEBwwKUmljaGFyZHNv\nbjEPMA0GA1UECgwGSGVkZXJhMQ8wDQYDVQQLDAZIZWRlcmExETAPBgNVBAMMCDAw\nMDAwMDE1MR8wHQYJKoZIhvcNAQkBFhBhZG1pbkBoZWRlcmEuY29tMCAXDTIxMDgy\nMzIyNDI1MloYDzIyOTUwNjA3MjI0MjUyWjCBhTELMAkGA1UEBhMCVVMxCzAJBgNV\nBAgMAlRYMRMwEQYDVQQHDApSaWNoYXJkc29uMQ8wDQYDVQQKDAZIZWRlcmExDzAN\nBgNVBAsMBkhlZGVyYTERMA8GA1UEAwwIMDAwMDAwMTUxHzAdBgkqhkiG9w0BCQEW\nEGFkbWluQGhlZGVyYS5jb20wdjAQBgcqhkjOPQIBBgUrgQQAIgNiAAR+jFDSzCdn\nmMQpgz/vrmD/xioMioumUmyLAkB+voTNsMAOtiaDVbvJty3b4SJETv5tuZyaF5Gb\nQAYuKsP7X8siCCVLZC9i9nCg46NHtuQkEmw1pzUUDmYFDfSV2tWedNqjVDBSMA8G\nA1UdEQQIMAaHBH8AAAEwCwYDVR0PBAQDAgSwMBMGA1UdJQQMMAoGCCsGAQUFBwMB\nMB0GA1UdDgQWBBSqvCmoaVEp2d9WPctby+ooPMGmvTAKBggqhkjOPQQDAwNpADBm\nAjEA9fQ2OFZa7fAQGGYydfVaUF0ObxKj3T+hyl0jiCKLe+hyxJSrXCFS2BM71UiG\nZMVxAjEAmCzESBzTVvl4Uv3TyActGTijTCqTNpN3gJmQbZYjKVtqf8Wxj9WeH0pM\nE8BlA/qE\n-----END CERTIFICATE-----\n`,\n    \"0.0.19\": `-----BEGIN CERTIFICATE-----\nMIICojCCAiegAwIBAgIUZBwp7UPLJkDgngbUIx5xjbAn+7YwCgYIKoZIzj0EAwMw\ngYUxCzAJBgNVBAYTAlVTMQswCQYDVQQIDAJUWDETMBEGA1UEBwwKUmljaGFyZHNv\nbjEPMA0GA1UECgwGSGVkZXJhMQ8wDQYDVQQLDAZIZWRlcmExETAPBgNVBAMMCDAw\nMDAwMDE2MR8wHQYJKoZIhvcNAQkBFhBhZG1pbkBoZWRlcmEuY29tMCAXDTIxMDgy\nMzIyNDI1M1oYDzIyOTUwNjA3MjI0MjUzWjCBhTELMAkGA1UEBhMCVVMxCzAJBgNV\nBAgMAlRYMRMwEQYDVQQHDApSaWNoYXJkc29uMQ8wDQYDVQQKDAZIZWRlcmExDzAN\nBgNVBAsMBkhlZGVyYTERMA8GA1UEAwwIMDAwMDAwMTYxHzAdBgkqhkiG9w0BCQEW\nEGFkbWluQGhlZGVyYS5jb20wdjAQBgcqhkjOPQIBBgUrgQQAIgNiAASCVYu2uF3T\nkCkyRP0FfXVyyTA1z8DFqCKGrcODgGJuVAk59H6u8FIRsNipkb3BXFI0xGccok5X\nT+t5bMaGDHYJ4fjU78UtPNmankQ5HoiMRJpy7Vn8mzizUzUqGpnhu6GjVDBSMA8G\nA1UdEQQIMAaHBH8AAAEwCwYDVR0PBAQDAgSwMBMGA1UdJQQMMAoGCCsGAQUFBwMB\nMB0GA1UdDgQWBBQzE6RGn4YlIbdrl0niKWTtJzfXoTAKBggqhkjOPQQDAwNpADBm\nAjEAobnXnwlNGNWoHscbl/ytUBSyjC7V11sLYJqtORSRX3k2+bFGsg4ltmOVjTdd\nlXatAjEA/Ja3jufmdruqfLa6qigXuYI00YaI96sOwNhdHlnksYfqF41nDe4BsSW6\neQ6N5M9d\n-----END CERTIFICATE-----\n`,\n    \"0.0.20\": `-----BEGIN CERTIFICATE-----\nMIICoTCCAiegAwIBAgIUE1ZRB5n+Yby+Mwgb2xAcVfTZ53kwCgYIKoZIzj0EAwMw\ngYUxCzAJBgNVBAYTAlVTMQswCQYDVQQIDAJUWDETMBEGA1UEBwwKUmljaGFyZHNv\nbjEPMA0GA1UECgwGSGVkZXJhMQ8wDQYDVQQLDAZIZWRlcmExETAPBgNVBAMMCDAw\nMDAwMDE3MR8wHQYJKoZIhvcNAQkBFhBhZG1pbkBoZWRlcmEuY29tMCAXDTIxMDgy\nMzIyNDI1M1oYDzIyOTUwNjA3MjI0MjUzWjCBhTELMAkGA1UEBhMCVVMxCzAJBgNV\nBAgMAlRYMRMwEQYDVQQHDApSaWNoYXJkc29uMQ8wDQYDVQQKDAZIZWRlcmExDzAN\nBgNVBAsMBkhlZGVyYTERMA8GA1UEAwwIMDAwMDAwMTcxHzAdBgkqhkiG9w0BCQEW\nEGFkbWluQGhlZGVyYS5jb20wdjAQBgcqhkjOPQIBBgUrgQQAIgNiAAR0OfTmHjxT\nkBiU3GMa/bTvlTswCDAuFQGIIpMWHaf6V4ighzmn20jCg0AVFStb2q7YLRr4HUx8\nToMzsd7/yjl74BwJgfZnL75T/JInwyMgOBiCTXEf6qVDvhNzL4QJuVujVDBSMA8G\nA1UdEQQIMAaHBH8AAAEwCwYDVR0PBAQDAgSwMBMGA1UdJQQMMAoGCCsGAQUFBwMB\nMB0GA1UdDgQWBBQFKRUUmdFcDFQzBN9XqMvLgPd7NzAKBggqhkjOPQQDAwNoADBl\nAjEA5MUUXSehY3KVIv/2LMgrqo1kPiV39fwYuLSnsMJ67wK8yN1NAkkycg6q2K6g\nrBIvAjB3J3a40TINOZTYG+eQs+MSWyfANJLRuJTEOorXzMWM6+05+JYhPnLA8hke\nCRfzmSw=\n-----END CERTIFICATE-----\n`,\n};\n", "import ManagedNode from \"./ManagedNode.js\";\nimport { _ledgerIdToNetworkName } from \"./NetworkName.js\";\nimport { PREVIEWNET_CERTS, TESTNET_CERTS, MAINNET_CERTS } from \"./NodeCerts.js\";\n\n/**\n * @typedef {import(\"./account/AccountId.js\").default} AccountId\n * @typedef {import(\"./address_book/NodeAddress.js\").default} NodeAddress\n * @typedef {import(\"./channel/Channel.js\").default} Channel\n * @typedef {import(\"./ManagedNodeAddress.js\").default} ManagedNodeAddress\n */\n\n/**\n * @typedef {object} NewNode\n * @property {AccountId} accountId\n * @property {string} address\n * @property {(address: string, cert?: string) => Channel} channelInitFunction\n */\n\n/**\n * @typedef {object} CloneNode\n * @property {Node} node\n * @property {ManagedNodeAddress} address\n */\n\n/**\n * @augments {ManagedNode<Channel>}\n */\nexport default class Node extends ManagedNode {\n    /**\n     * @param {object} props\n     * @param {NewNode=} [props.newNode]\n     * @param {CloneNode=} [props.cloneNode]\n     */\n    constructor(props = {}) {\n        super(props);\n\n        if (props.newNode != null) {\n            /** @type {AccountId} */\n            this._accountId = props.newNode.accountId;\n\n            /** @type {NodeAddress | null} */\n            this._nodeAddress = null;\n        } else if (props.cloneNode != null) {\n            /** @type {AccountId} */\n            this._accountId = props.cloneNode.node._accountId;\n\n            /** @type {NodeAddress | null} */\n            this._nodeAddress = props.cloneNode.node._nodeAddress;\n        } else {\n            throw new Error(`failed to create node: ${JSON.stringify(props)}`);\n        }\n    }\n\n    /**\n     * @returns {string}\n     */\n    getKey() {\n        return this._accountId.toString();\n    }\n\n    /**\n     * @returns {ManagedNode<Channel>}\n     */\n    toInsecure() {\n        return /** @type {this} */ (\n            new Node({\n                cloneNode: { node: this, address: this._address.toInsecure() },\n            })\n        );\n    }\n\n    /**\n     * @returns {ManagedNode<Channel>}\n     */\n    toSecure() {\n        return /** @type {this} */ (\n            new Node({\n                cloneNode: { node: this, address: this._address.toSecure() },\n            })\n        );\n    }\n\n    /**\n     * @param {string} ledgerId\n     * @returns {this}\n     */\n    setCert(ledgerId) {\n        const networkName = _ledgerIdToNetworkName(ledgerId);\n\n        switch (networkName) {\n            case \"previewnet\":\n                this._cert = PREVIEWNET_CERTS[this._accountId.toString()];\n                break;\n            case \"testnet\":\n                this._cert = TESTNET_CERTS[this._accountId.toString()];\n                break;\n            case \"mainnet\":\n                this._cert = MAINNET_CERTS[this._accountId.toString()];\n                break;\n        }\n\n        return this;\n    }\n\n    /**\n     * @returns {AccountId}\n     */\n    get accountId() {\n        return this._accountId;\n    }\n\n    /**\n     * @returns {NodeAddress | null}\n     */\n    get nodeAddress() {\n        return this._nodeAddress;\n    }\n\n    /**\n     * @param {NodeAddress} nodeAddress\n     * @returns {this}\n     */\n    setNodeAddress(nodeAddress) {\n        this._nodeAddress = nodeAddress;\n        return this;\n    }\n}\n", "export default class IPv4AddressPart {\n    /**\n     * @param {object} props\n     * @param {number} [props.left]\n     * @param {number} [props.right]\n     */\n    constructor(props = {}) {\n        /**\n         * @type {number | null}\n         */\n        this._left = null;\n\n        if (props.left != null) {\n            this.setLeft(props.left);\n        }\n\n        /**\n         * @type {number | null}\n         */\n        this._right = null;\n\n        if (props.right != null) {\n            this.setRight(props.right);\n        }\n    }\n\n    /**\n     * @returns {?number}\n     */\n    get left() {\n        return this._left;\n    }\n\n    /**\n     * @param {number} part\n     * @returns {this}\n     */\n    setLeft(part) {\n        this._left = part;\n        return this;\n    }\n\n    /**\n     * @returns {?number}\n     */\n    get right() {\n        return this._right;\n    }\n\n    /**\n     * @param {number} part\n     * @returns {this}\n     */\n    setRight(part) {\n        this._right = part;\n        return this;\n    }\n\n    /**\n     * @returns {string}\n     */\n    toString() {\n        if (this._left != null && this._right != null) {\n            return `${this._left.toString()}.${this._right.toString()}`;\n        } else {\n            return \"\";\n        }\n    }\n}\n", "import IPv4AddressPart from \"./IPv4AddressPart.js\";\n\nexport default class IPv4Address {\n    /**\n     * @param {object} props\n     * @param {IPv4AddressPart} [props.network]\n     * @param {IPv4AddressPart} [props.host]\n     */\n    constructor(props = {}) {\n        /**\n         * @type {IPv4AddressPart | null}\n         */\n        this._network = null;\n\n        if (props.network != null) {\n            this.setNetwork(props.network);\n        }\n\n        /**\n         * @type {IPv4AddressPart | null}\n         */\n        this._host = null;\n\n        if (props.host != null) {\n            this.setHost(props.host);\n        }\n    }\n\n    /**\n     * @returns {?IPv4AddressPart}\n     */\n    get newtork() {\n        return this._network;\n    }\n\n    /**\n     * @param {IPv4AddressPart} part\n     * @returns {this}\n     */\n    setNetwork(part) {\n        this._network = part;\n        return this;\n    }\n\n    /**\n     * @returns {?IPv4AddressPart}\n     */\n    get host() {\n        return this._host;\n    }\n\n    /**\n     * @param {IPv4AddressPart} part\n     * @returns {this}\n     */\n    setHost(part) {\n        this._host = part;\n        return this;\n    }\n\n    /**\n     * @internal\n     * @param {Uint8Array} bytes\n     * @returns {IPv4Address}\n     */\n    static _fromProtobuf(bytes) {\n        return new IPv4Address({\n            network: new IPv4AddressPart().setLeft(bytes[0]).setRight(bytes[1]),\n            host: new IPv4AddressPart().setLeft(bytes[2]).setRight(bytes[3]),\n        });\n    }\n\n    /**\n     * @returns {Uint8Array}\n     */\n    _toProtobuf() {\n        return Uint8Array.of(\n            this._network != null && this._network._left != null\n                ? this._network._left\n                : 0,\n            this._network != null && this._network.right != null\n                ? this._network.right\n                : 0,\n            this._host != null && this._host.left != null ? this._host.left : 0,\n            this._host != null && this._host.right != null\n                ? this._host.right\n                : 0\n        );\n    }\n\n    /**\n     * @returns {string}\n     */\n    toString() {\n        if (this._network != null && this._host != null) {\n            return `${this._network.toString()}.${this._host.toString()}`;\n        } else {\n            return \"\";\n        }\n    }\n}\n", "import IPv4Address from \"./IPv4Address.js\";\n\n/**\n * @namespace proto\n * @typedef {import(\"@hashgraph/proto\").IServiceEndpoint} proto.IServiceEndpoint\n */\n\n/**\n * @typedef {object} EndPointJson\n * @property {string | null} address\n * @property {string | null} port\n */\n\nexport default class EndPoint {\n    /**\n     * @param {object} props\n     * @param {IPv4Address} [props.address]\n     * @param {number} [props.port]\n     */\n    constructor(props = {}) {\n        /**\n         * @type {IPv4Address | null}\n         */\n        this._address = null;\n\n        if (props.address != null) {\n            this.setAddress(props.address);\n        }\n\n        /**\n         * @type {number | null}\n         */\n        this._port = null;\n\n        if (props.port != null) {\n            this.setPort(props.port);\n        }\n    }\n\n    /**\n     * @returns {?IPv4Address}\n     */\n    get address() {\n        return this.address;\n    }\n\n    /**\n     * @param {IPv4Address} address\n     * @returns {this}\n     */\n    setAddress(address) {\n        this._address = address;\n        return this;\n    }\n\n    /**\n     * @returns {?number}\n     */\n    get port() {\n        return this._port;\n    }\n\n    /**\n     * @param {number} port\n     * @returns {this}\n     */\n    setPort(port) {\n        this._port = port;\n        return this;\n    }\n\n    /**\n     * @internal\n     * @param {proto.IServiceEndpoint} endpoint\n     * @returns {EndPoint}\n     */\n    static _fromProtobuf(endpoint) {\n        return new EndPoint({\n            address:\n                endpoint.ipAddressV4 != null\n                    ? IPv4Address._fromProtobuf(endpoint.ipAddressV4)\n                    : undefined,\n            port: endpoint.port != null ? endpoint.port : undefined,\n        });\n    }\n\n    /**\n     * @returns {proto.IServiceEndpoint}\n     */\n    _toProtobuf() {\n        return {\n            ipAddressV4:\n                this._address != null ? this._address._toProtobuf() : null,\n            port: this._port,\n        };\n    }\n\n    /**\n     * @returns {string}\n     */\n    toString() {\n        return JSON.stringify(this.toJSON());\n    }\n\n    /**\n     * @returns {EndPointJson}\n     */\n    toJSON() {\n        return {\n            address: this._address != null ? this._address.toString() : null,\n            port: this._port != null ? this._port.toString() : null,\n        };\n    }\n}\n", "import AccountId from \"../account/AccountId.js\";\nimport Endpoint from \"./Endpoint.js\";\nimport * as utf8 from \"../encoding/utf8.js\";\n\n/**\n * @namespace proto\n * @typedef {import(\"@hashgraph/proto\").INodeAddress} proto.INodeAddress\n */\n\n/**\n * @typedef {import(\"./Endpoint.js\").EndPointJson} EndpointJson\n * @typedef {import(\"long\").Long} Long\n */\n\n/**\n * @typedef {object} NodeAddressJson\n * @property {string | null} publicKey\n * @property {string | null} nodeId\n * @property {string | null} accountId\n * @property {string | null} certHash\n * @property {EndpointJson[] | null} addresses\n * @property {string | null} description\n * @property {string | null} stake\n */\n\nexport default class NodeAddress {\n    /**\n     * @param {object} props\n     * @param {string} [props.publicKey]\n     * @param {Long} [props.nodeId]\n     * @param {AccountId | string} [props.accountId]\n     * @param {Uint8Array} [props.certHash]\n     * @param {Endpoint[]} [props.addresses]\n     * @param {string} [props.description]\n     * @param {Long} [props.stake]\n     */\n    constructor(props = {}) {\n        /**\n         * @type {string | null}\n         */\n        this._publicKey = null;\n\n        if (props.publicKey != null) {\n            this.setPublicKey(props.publicKey);\n        }\n\n        /**\n         * @type {Long |null}\n         */\n        this._nodeId = null;\n\n        if (props.nodeId != null) {\n            this.setNodeId(props.nodeId);\n        }\n\n        /**\n         * @type {AccountId | null}\n         */\n        this._accountId = null;\n\n        if (props.accountId != null) {\n            this.setAccountId(props.accountId);\n        }\n\n        /**\n         * @type {Uint8Array | null}\n         */\n        this._certHash = null;\n\n        if (props.certHash != null) {\n            this.setCertHash(props.certHash);\n        }\n\n        /**\n         * @type {Endpoint[]}\n         */\n        this._addresses = [];\n\n        if (props.addresses != null) {\n            this.setAddresses(props.addresses);\n        }\n\n        /**\n         * @type {string | null}\n         */\n        this._description = null;\n\n        if (props.description != null) {\n            this.setDescription(props.description);\n        }\n\n        /**\n         * @type {Long | null}\n         */\n        this._stake = null;\n\n        if (props.stake != null) {\n            this.setStake(props.stake);\n        }\n    }\n\n    /**\n     * @returns {?string}\n     */\n    get publicKey() {\n        return this._publicKey;\n    }\n\n    /**\n     * @param {string} publicKey\n     * @returns {this}\n     */\n    setPublicKey(publicKey) {\n        this._publicKey = publicKey;\n        return this;\n    }\n\n    /**\n     * @returns {?Long}\n     */\n    get nodeId() {\n        return this._nodeId;\n    }\n\n    /**\n     * @param {Long} nodeId\n     * @returns {this}\n     */\n    setNodeId(nodeId) {\n        this._nodeId = nodeId;\n        return this;\n    }\n\n    /**\n     * @returns {?AccountId}\n     */\n    get accountId() {\n        return this._accountId;\n    }\n\n    /**\n     * @param {AccountId | string} accountId\n     * @returns {this}\n     */\n    setAccountId(accountId) {\n        this._accountId =\n            typeof accountId === \"string\"\n                ? AccountId.fromString(accountId)\n                : accountId.clone();\n        return this;\n    }\n\n    /**\n     * @returns {?Uint8Array}\n     */\n    get certHash() {\n        return this._certHash;\n    }\n\n    /**\n     * @param {Uint8Array} certHash\n     * @returns {this}\n     */\n    setCertHash(certHash) {\n        this._certHash = certHash;\n        return this;\n    }\n\n    /**\n     * @returns {Endpoint[]}\n     */\n    get addresses() {\n        return this._addresses;\n    }\n\n    /**\n     * @param {Endpoint[]} addresses\n     * @returns {this}\n     */\n    setAddresses(addresses) {\n        this._addresses = addresses;\n        return this;\n    }\n\n    /**\n     * @returns {?string}\n     */\n    get description() {\n        return this._description;\n    }\n\n    /**\n     * @param {string} description\n     * @returns {this}\n     */\n    setDescription(description) {\n        this._description = description;\n        return this;\n    }\n\n    /**\n     * @returns {?Long}\n     */\n    get stake() {\n        return this._stake;\n    }\n\n    /**\n     * @param {Long} stake\n     * @returns {this}\n     */\n    setStake(stake) {\n        this._stake = stake;\n        return this;\n    }\n\n    /**\n     * @internal\n     * @param {proto.INodeAddress} nodeAddress\n     * @returns {NodeAddress}\n     */\n    static _fromProtobuf(nodeAddress) {\n        return new NodeAddress({\n            publicKey:\n                nodeAddress.RSA_PubKey != null\n                    ? nodeAddress.RSA_PubKey\n                    : undefined,\n            nodeId: nodeAddress.nodeId != null ? nodeAddress.nodeId : undefined,\n            accountId:\n                nodeAddress.nodeAccountId != null\n                    ? AccountId._fromProtobuf(nodeAddress.nodeAccountId)\n                    : undefined,\n            certHash:\n                nodeAddress.nodeCertHash != null\n                    ? nodeAddress.nodeCertHash\n                    : undefined,\n            addresses:\n                nodeAddress.serviceEndpoint != null\n                    ? nodeAddress.serviceEndpoint.map((address) =>\n                          Endpoint._fromProtobuf(address)\n                      )\n                    : undefined,\n            description:\n                nodeAddress.description != null\n                    ? nodeAddress.description\n                    : undefined,\n            stake: nodeAddress.stake != null ? nodeAddress.stake : undefined,\n        });\n    }\n\n    /**\n     * @returns {proto.INodeAddress}\n     */\n    _toProtobuf() {\n        return {\n            RSA_PubKey: this._publicKey,\n            nodeId: this._nodeId,\n            nodeAccountId:\n                this._accountId != null ? this._accountId._toProtobuf() : null,\n            nodeCertHash: this._certHash,\n            serviceEndpoint: this._addresses.map((address) =>\n                address._toProtobuf()\n            ),\n            description: this._description,\n            stake: this._stake,\n        };\n    }\n\n    /**\n     * @returns {string}\n     */\n    toString() {\n        return JSON.stringify(this.toJSON());\n    }\n\n    /**\n     * @returns {NodeAddressJson}\n     */\n    toJSON() {\n        return {\n            publicKey: this._publicKey,\n            nodeId: this._nodeId != null ? this._nodeId.toString() : null,\n            accountId:\n                this._accountId != null ? this._accountId.toString() : null,\n            certHash:\n                this._certHash != null ? utf8.decode(this._certHash) : null,\n            addresses: this._addresses.map((address) => address.toJSON()),\n            description: this._description,\n            stake: this._stake != null ? this._stake.toString() : null,\n        };\n    }\n}\n", "import NodeAddress from \"./NodeAddress.js\";\n\n/**\n * @namespace proto\n * @typedef {import(\"@hashgraph/proto\").INodeAddressBook} proto.INodeAddressBook\n */\n\n/**\n * @typedef {import(\"./NodeAddress.js\").NodeAddressJson} NodeAddressJson\n */\n\n/**\n * @typedef {object} NodeAddressBookJson\n * @property {NodeAddressJson[]} nodeAddresses\n */\n\nexport default class NodeAddressBook {\n    /**\n     * @param {object} props\n     * @param {NodeAddress[]} [props.nodeAddresses]\n     */\n    constructor(props = {}) {\n        /**\n         * @type {NodeAddress[]}\n         */\n        this._nodeAddresses = [];\n\n        if (props.nodeAddresses != null) {\n            this.setNodeAddresses(props.nodeAddresses);\n        }\n    }\n\n    /**\n     * @returns {NodeAddress[]}\n     */\n    get nodeAddresses() {\n        return this._nodeAddresses;\n    }\n\n    /**\n     * @param {NodeAddress[]} nodeAddresses\n     * @returns {this}\n     */\n    setNodeAddresses(nodeAddresses) {\n        this._nodeAddresses = nodeAddresses;\n        return this;\n    }\n\n    /**\n     * @internal\n     * @param {proto.INodeAddressBook} nodeAddressBook\n     * @returns {NodeAddressBook}\n     */\n    static _fromProtobuf(nodeAddressBook) {\n        return new NodeAddressBook({\n            nodeAddresses:\n                nodeAddressBook.nodeAddress != null\n                    ? nodeAddressBook.nodeAddress.map((nodeAddress) =>\n                          NodeAddress._fromProtobuf(nodeAddress)\n                      )\n                    : undefined,\n        });\n    }\n\n    /**\n     * @returns {proto.INodeAddressBook}\n     */\n    _toProtobuf() {\n        return {\n            nodeAddress: this._nodeAddresses.map((nodeAddress) =>\n                nodeAddress._toProtobuf()\n            ),\n        };\n    }\n\n    /**\n     * @returns {string}\n     */\n    toString() {\n        return JSON.stringify(this.toJSON());\n    }\n\n    /**\n     * @returns {NodeAddressBookJson}\n     */\n    toJSON() {\n        return {\n            nodeAddresses: this._nodeAddresses.map((nodeAddress) =>\n                nodeAddress.toJSON()\n            ),\n        };\n    }\n}\n", "import NodeAddressBook from \"./NodeAddressBook.js\";\nimport * as hex from \"../encoding/hex.js\";\nimport * as proto from \"@hashgraph/proto\";\n\nexport const PREVIEWNET_ADDRESS_BOOK = NodeAddressBook._fromProtobuf(\n    proto.NodeAddressBook.decode(\n        hex.decode(\n            \"\"\n        )\n    )\n);\nexport const TESTNET_ADDRESS_BOOK = NodeAddressBook._fromProtobuf(\n    proto.NodeAddressBook.decode(\n        hex.decode(\n            \"0a7f0a0c33342e39342e3130362e363110a388031a05302e302e33320218033a606131373165336261383334373637343761656232653261633464306531313563616161623931383230336230646665316364656162343433343338666332383961626338626138613661666638336462356631623333343034366461383863380a80010a0d35302e31382e3133322e32313110a388031a05302e302e33320218033a606131373165336261383334373637343761656232653261633464306531313563616161623931383230336230646665316364656162343433343338666332383961626338626138613661666638336462356631623333343034366461383863380a81010a0e3133382e39312e3134322e32313910a388031a05302e302e33320218033a606131373165336261383334373637343761656232653261633464306531313563616161623931383230336230646665316364656162343433343338666332383961626338626138613661666638336462356631623333343034366461383863380a82010a0d33352e3233372e3131392e353510a388031a05302e302e342801320218043a603734303964656332653439346236323765653439633639623239346265316365616562636133666463616633363738396538386663376435623065656635353631663532623832643335313931613339633266626564363032373236373136360a7f0a0a332e3231322e362e313310a388031a05302e302e342801320218043a603734303964656332653439346236323765653439633639623239346265316365616562636133666463616633363738396538386663376435623065656635353631663532623832643335313931613339633266626564363032373236373136360a82010a0d35322e3136382e37362e32343110a388031a05302e302e342801320218043a603734303964656332653439346236323765653439633639623239346265316365616562636133666463616633363738396538386663376435623065656635353631663532623832643335313931613339633266626564363032373236373136360a82010a0d33352e3234352e32372e31393310a388031a05302e302e352802320218053a603962313431363538346134613338306262383661366337643732303764386165646462633362363365613330353939383235356263653833353162613462356463613532633932383261353461366265643630646536336365303361616132340a80010a0b35322e32302e31382e383610a388031a05302e302e352802320218053a603962313431363538346134613338306262383661366337643732303764386165646462633362363365613330353939383235356263653833353162613462356463613532633932383261353461366265643630646536336365303361616132340a81010a0c34302e37392e38332e31323410a388031a05302e302e352802320218053a603962313431363538346134613338306262383661366337643732303764386165646462633362363365613330353939383235356263653833353162613462356463613532633932383261353461366265643630646536336365303361616132340a82010a0d33342e38332e3131322e31313610a388031a05302e302e362803320218063a603634383636383562346536653063623936333437326330316665393939333166643965346334343838376261383334323361653766656564323264363438343834636638613362633563636361366133373338376266393664333836373238300a81010a0c35342e37302e3139322e333310a388031a05302e302e362803320218063a603634383636383562346536653063623936333437326330316665393939333166643965346334343838376261383334323361653766656564323264363438343834636638613362633563636361366133373338376266393664333836373238300a81010a0c35322e3138332e34352e363510a388031a05302e302e362803320218063a603634383636383562346536653063623936333437326330316665393939333166643965346334343838376261383334323361653766656564323264363438343834636638613362633563636361366133373338376266393664333836373238300a80010a0b33342e39342e3136302e3410a388031a05302e302e372804320218073a603339653930393931356138353238303330313534613663373730393530633762343737376261343031333537633065363138373635343231356363323061616363646438653566663239653963346439356366343130316661363862653435630a83010a0e35342e3137362e3139392e31303910a388031a05302e302e372804320218073a603339653930393931356138353238303330313534613663373730393530633762343737376261343031333537633065363138373635343231356363323061616363646438653566663239653963346439356366343130316661363862653435630a82010a0d31332e36342e3138312e31333610a388031a05302e302e372804320218073a603339653930393931356138353238303330313534613663373730393530633762343737376261343031333537633065363138373635343231356363323061616363646438653566663239653963346439356366343130316661363862653435630a83010a0e33342e3130362e3130322e32313810a388031a05302e302e382805320218083a606134343837346137616131623337373431613037316164616165373866623135326236393664316335386438646566626531643832333034353332613063303139656539366363313964373536383635373864333961316536633331613165650a82010a0d33352e3135352e34392e31343710a388031a05302e302e382805320218083a606134343837346137616131623337373431613037316164616165373866623135326236393664316335386438646566626531643832333034353332613063303139656539366363313964373536383635373864333961316536633331613165650a81010a0c31332e37382e3233382e333210a388031a05302e302e382805320218083a606134343837346137616131623337373431613037316164616165373866623135326236393664316335386438646566626531643832333034353332613063303139656539366363313964373536383635373864333961316536633331613165650a83010a0e33342e3133332e3139372e32333010a388031a05302e302e392806320218093a603639383332613733613336303265386431666265356164353864316332363337613162363732643731656538376166313064623634386562393161666232323832353362316634376535376433643461343466663534376233333934616132320a82010a0d35322e31342e3235322e32303710a388031a05302e302e392806320218093a603639383332613733613336303265386431666265356164353864316332363337613162363732643731656538376166313064623634386562393161666232323832353362316634376535376433643461343466663534376233333934616132320a82010a0d35322e3136352e31372e32333110a388031a05302e302e392806320218093a60363938333261373361333630326538643166626535616435386431633236333761316236373264373165653837616631306462363438656239316166623232383235336231663437653537643364346134346666353437623333393461613232\"\n        )\n    )\n);\nexport const MAINNET_ADDRESS_BOOK = NodeAddressBook._fromProtobuf(\n    proto.NodeAddressBook.decode(\n        hex.decode(\n            \"\"\n        )\n    )\n);\n", "import { _ledgerIdToNetworkName, _ledgerIdToLedgerId } from \"../NetworkName.js\";\n// import {\n//     PREVIEWNET_ADDRESS_BOOK,\n//     TESTNET_ADDRESS_BOOK,\n//     MAINNET_ADDRESS_BOOK,\n// } from \"../address_book/AddressBooks.js\";\n\n/**\n * @typedef {import(\"../channel/Channel.js\").default} Channel\n * @typedef {import(\"../channel/MirrorChannel.js\").default} MirrorChannel\n * @typedef {import(\"../Node.js\").default} Node\n * @typedef {import(\"../MirrorNode.js\").default} MirrorNode\n * @typedef {import(\"../address_book/NodeAddressBook.js\").default} NodeAddressBook\n */\n\n/**\n * @typedef {import(\"./Client.js\").NetworkName} NetworkName\n */\n\n/**\n * @template {Channel | MirrorChannel} ChannelT\n * @typedef {import(\"../ManagedNode.js\").default<ChannelT>} ManagedNode\n */\n\n/**\n * @template {Channel | MirrorChannel} ChannelT\n * @template {ManagedNode<ChannelT>} NetworkNodeT\n * @template {{ toString: () => string }} KeyT\n */\nexport default class MangedNetwork {\n    /**\n     * @param {(address: string) => ChannelT} createNetworkChannel\n     */\n    constructor(createNetworkChannel) {\n        /**\n         * Map of node account ID (as a string)\n         * to the node URL.\n         *\n         * @internal\n         * @type {Map<string, NetworkNodeT[]>}\n         */\n        // eslint-disable-next-line @typescript-eslint/no-unsafe-assignment\n        this._network = new Map();\n\n        /**\n         * List of node account IDs.\n         *\n         * @protected\n         * @type {NetworkNodeT[]}\n         */\n        this._nodes = [];\n\n        /** @type {(address: string, cert?: string) => ChannelT} */\n        this._createNetworkChannel = createNetworkChannel;\n\n        /** @type {string | null} */\n        this._ledgerId = null;\n\n        /** @type {number} */\n        this._minBackoff = 250;\n\n        /** @type {number} */\n        this._maxNodeAttempts = -1;\n\n        this._transportSecurity = false;\n    }\n\n    /**\n     * @returns {boolean}\n     */\n    isTransportSecurity() {\n        return this._transportSecurity;\n    }\n\n    /**\n     * @param {boolean} transportSecurity\n     * @returns {this}\n     */\n    setTransportSecurity(transportSecurity) {\n        if (this._transportSecurity != transportSecurity) {\n            this._network.clear();\n\n            for (let i = 0; i < this._nodes.length; i++) {\n                let node = this._nodes[i];\n                node.close();\n\n                node = /** @type {NetworkNodeT} */ (\n                    transportSecurity\n                        ? node\n                              .toSecure()\n                              .setCert(\n                                  this._ledgerId != null ? this._ledgerId : \"\"\n                              )\n                        : node.toInsecure()\n                );\n                this._nodes[i] = node;\n\n                const nodes =\n                    this._network.get(node.getKey()) != null\n                        ? /** @type {NetworkNodeT[]} */ (\n                              this._network.get(node.getKey())\n                          )\n                        : [];\n                nodes.push(node);\n                this._network.set(node.getKey(), nodes);\n            }\n        }\n\n        this._transportSecurity = transportSecurity;\n        return this;\n    }\n\n    /**\n     * @param {NetworkName} networkName\n     * @returns {this}\n     */\n    setNetworkName(networkName) {\n        this._ledgerId = _ledgerIdToLedgerId(networkName);\n        return this;\n    }\n\n    /**\n     * @returns {string | null}\n     */\n    get networkName() {\n        return this._ledgerId != null\n            ? _ledgerIdToNetworkName(this._ledgerId)\n            : null;\n    }\n\n    /**\n     * @abstract\n     * @param {[string, KeyT]} entry\n     * @returns {NetworkNodeT}\n     */\n    // eslint-disable-next-line @typescript-eslint/no-unused-vars\n    _createNodeFromNetworkEntry(entry) {\n        throw new Error(\"not implemented\");\n    }\n\n    /**\n     * @abstract\n     * @param {Map<string, KeyT>} network\n     * @returns {number[]}\n     */\n    // eslint-disable-next-line @typescript-eslint/no-unused-vars\n    _getNodesToRemove(network) {\n        throw new Error(\"not implemented\");\n    }\n\n    _removeDeadNodes() {\n        if (this._maxNodeAttempts > 0) {\n            for (let i = this._nodes.length - 1; i >= 0; i--) {\n                const node = this._nodes[i];\n\n                if (node._attempts < this._maxNodeAttempts) {\n                    continue;\n                }\n\n                this._closeNode(i);\n            }\n        }\n    }\n\n    /**\n     * @param {number} count\n     * @returns {NetworkNodeT[]}\n     */\n    _getNumberOfMostHealthyNodes(count) {\n        this._removeDeadNodes();\n        this._nodes.sort((a, b) => a.compare(b));\n\n        for (const [, value] of this._network) {\n            // eslint-disable-next-line ie11/no-loop-func\n            value.sort((a, b) => a.compare(b));\n        }\n\n        /** @type {NetworkNodeT[]} */\n        const nodes = [];\n        const keys = new Set();\n\n        for (const node of this._nodes) {\n            if (keys.size >= count) {\n                break;\n            }\n\n            if (!keys.has(node.getKey())) {\n                nodes.push(node);\n            }\n        }\n\n        return nodes;\n    }\n\n    /**\n     * @param {number} i\n     */\n    _closeNode(i) {\n        const node = this._nodes[i];\n\n        node.close();\n        this._removeNodeFromNetwork(node);\n        this._nodes.splice(i, 1);\n    }\n\n    /**\n     * @param {NetworkNodeT} node\n     */\n    _removeNodeFromNetwork(node) {\n        const network = /** @type {NetworkNodeT[]} */ (\n            this._network.get(node.getKey())\n        );\n\n        for (let j = 0; j < network.length; j++) {\n            if (network[j] === node) {\n                network.splice(j, 1);\n                break;\n            }\n        }\n\n        if (network.length === 0) {\n            this._network.delete(node.getKey());\n        }\n    }\n\n    /**\n     * @param {Map<string, KeyT>} network\n     * @returns {this}\n     */\n    _setNetwork(network) {\n        // Remove nodes that are not in the new network\n        for (const i of this._getNodesToRemove(network)) {\n            this._closeNode(i);\n        }\n\n        // Add new nodes\n        for (const [key, value] of network) {\n            const node = this._createNodeFromNetworkEntry([key, value]);\n\n            this._nodes.push(node);\n\n            const network = this._network.has(node.getKey())\n                ? /** @type {NetworkNodeT[]} */ (\n                      this._network.get(node.getKey())\n                  )\n                : [];\n            network.push(node);\n            this._network.set(node.getKey(), network);\n        }\n\n        shuffle(this._nodes);\n        for (const [, value] of this._network) {\n            shuffle(value);\n        }\n\n        this._ledgerId = null;\n        return this;\n    }\n\n    /**\n     * @returns {number}\n     */\n    get maxNodeAttempts() {\n        return this._maxNodeAttempts;\n    }\n\n    /**\n     * @param {number} maxNodeAttempts\n     * @returns {this}\n     */\n    setMaxNodeAttempts(maxNodeAttempts) {\n        this._maxNodeAttempts = maxNodeAttempts;\n        return this;\n    }\n\n    /**\n     * @returns {number}\n     */\n    get minBackoff() {\n        return this._minBackoff;\n    }\n\n    /**\n     * @param {number} minBackoff\n     * @returns {this}\n     */\n    setMinBackoff(minBackoff) {\n        this._minBackoff = minBackoff;\n        for (const node of this._nodes) {\n            node.setMinBackoff(minBackoff);\n        }\n        return this;\n    }\n\n    /**\n     * @param {KeyT} key\n     * @returns {NetworkNodeT}\n     */\n    getNode(key) {\n        return /** @type {NetworkNodeT[]} */ (\n            this._network.get(key.toString())\n        )[0];\n    }\n\n    close() {\n        for (const node of this._nodes) {\n            node.close();\n        }\n\n        this._network.clear();\n        this._nodes = [];\n    }\n}\n\n/**\n * https://stackoverflow.com/questions/2450954/how-to-randomize-shuffle-a-javascript-array\n *\n * @template T\n * @param {Array<T>} array\n */\nfunction shuffle(array) {\n    var currentIndex = array.length,\n        temporaryValue,\n        randomIndex;\n\n    // While there remain elements to shuffle...\n    while (0 !== currentIndex) {\n        // Pick a remaining element...\n        randomIndex = Math.floor(Math.random() * currentIndex);\n        currentIndex -= 1;\n\n        // And swap it with the current element.\n        temporaryValue = array[currentIndex];\n        array[currentIndex] = array[randomIndex];\n        array[randomIndex] = temporaryValue;\n    }\n}\n", "import AccountId from \"../account/AccountId.js\";\nimport Node from \"../Node.js\";\nimport { _ledgerIdToNetworkName } from \"../NetworkName.js\";\nimport {\n    PREVIEWNET_ADDRESS_BOOK,\n    TESTNET_ADDRESS_BOOK,\n    MAINNET_ADDRESS_BOOK,\n} from \"../address_book/AddressBooks.js\";\nimport ManagedNetwork from \"./ManagedNetwork.js\";\n\n/**\n * @typedef {import(\"../channel/Channel.js\").default} Channel\n * @typedef {import(\"../address_book/NodeAddressBook.js\").default} NodeAddressBook\n */\n\n/**\n * @typedef {import(\"./Client.js\").NetworkName} NetworkName\n */\n\n/**\n * @augments {ManagedNetwork<Channel, Node, AccountId>}\n */\nexport default class Network extends ManagedNetwork {\n    /**\n     * @param {(address: string) => Channel} createNetworkChannel\n     */\n    constructor(createNetworkChannel) {\n        super(createNetworkChannel);\n\n        this._maxNodesPerTransaction = -1;\n\n        /** @type {NodeAddressBook | null} */\n        this._addressBook = null;\n    }\n\n    /**\n     * @param {{[key: string]: (string | AccountId)}} network\n     */\n    setNetwork(network) {\n        this._setNetwork(\n            // eslint-disable-next-line ie11/no-collection-args\n            new Map(\n                // eslint-disable-next-line ie11/no-collection-args\n                Object.entries(network).map(([key, value]) => {\n                    return [\n                        key,\n                        typeof value === \"string\"\n                            ? AccountId.fromString(value)\n                            : value,\n                    ];\n                })\n            )\n        );\n    }\n\n    /**\n     * @returns {{[key: string]: (string | AccountId)}}\n     */\n    get network() {\n        /**\n         * @type {{[key: string]: (string | AccountId)}}\n         */\n        var n = {};\n\n        // eslint-disable-next-line @typescript-eslint/no-unused-vars\n        for (const node of this._nodes) {\n            n[node.address.toString()] = node.accountId;\n        }\n\n        return n;\n    }\n\n    /**\n     * @param {NetworkName} networkName\n     * @returns {this}\n     */\n    // eslint-disable-next-line @typescript-eslint/no-unused-vars\n    setNetworkName(networkName) {\n        super.setNetworkName(networkName);\n\n        switch (networkName) {\n            case \"mainnet\":\n                this._addressBook = MAINNET_ADDRESS_BOOK;\n                break;\n            case \"testnet\":\n                this._addressBook = TESTNET_ADDRESS_BOOK;\n                break;\n            case \"previewnet\":\n                this._addressBook = PREVIEWNET_ADDRESS_BOOK;\n                break;\n        }\n\n        if (this._addressBook != null) {\n            for (const node of this._nodes) {\n                for (const address of this._addressBook.nodeAddresses) {\n                    if (\n                        address.accountId != null &&\n                        address.accountId.toString() ===\n                            node.accountId.toString()\n                    ) {\n                        node.setNodeAddress(address);\n                    }\n                }\n            }\n        }\n\n        return this;\n    }\n\n    /**\n     * @returns {string | null}\n     */\n    get networkName() {\n        return this._ledgerId != null\n            ? _ledgerIdToNetworkName(this._ledgerId)\n            : null;\n    }\n\n    /**\n     * @abstract\n     * @param {[string, (string | AccountId)]} entry\n     * @returns {Node}\n     */\n    _createNodeFromNetworkEntry(entry) {\n        const accountId =\n            typeof entry[1] === \"string\"\n                ? AccountId.fromString(entry[1])\n                : entry[1];\n\n        return new Node({\n            newNode: {\n                address: entry[0],\n                accountId,\n                channelInitFunction: this._createNetworkChannel,\n            },\n        }).setMinBackoff(this._minBackoff);\n    }\n\n    /**\n     * @abstract\n     * @param {Map<string, AccountId>} network\n     * @returns {number[]}\n     */\n    _getNodesToRemove(network) {\n        const indexes = [];\n\n        for (let i = this._nodes.length - 1; i >= 0; i--) {\n            const node = this._nodes[i];\n            const accountId = network.get(node.address.toString());\n\n            if (\n                accountId == null ||\n                accountId.toString() !== node.accountId.toString()\n            ) {\n                indexes.push(i);\n            }\n        }\n\n        return indexes;\n    }\n\n    /**\n     * @abstract\n     * @param {[string, (string | AccountId)]} entry\n     * @returns {boolean}\n     */\n    _checkNetworkContainsEntry(entry) {\n        for (const node of this._nodes) {\n            if (node.address.toString() === entry[0]) {\n                return true;\n            }\n        }\n\n        return false;\n    }\n\n    /**\n     * @returns {number}\n     */\n    get maxNodesPerTransaction() {\n        return this._maxNodesPerTransaction;\n    }\n\n    /**\n     * @param {number} maxNodesPerTransaction\n     * @returns {this}\n     */\n    setMaxNodesPerTransaction(maxNodesPerTransaction) {\n        this._maxNodesPerTransaction = maxNodesPerTransaction;\n        return this;\n    }\n\n    /**\n     * @returns {number}\n     */\n    get maxNodeAttempts() {\n        return this._maxNodeAttempts;\n    }\n\n    /**\n     * @param {number} maxNodeAttempts\n     * @returns {this}\n     */\n    setMaxNodeAttempts(maxNodeAttempts) {\n        this._maxNodeAttempts = maxNodeAttempts;\n        return this;\n    }\n\n    /**\n     * @returns {number}\n     */\n    get minBackoff() {\n        return this._minBackoff;\n    }\n\n    /**\n     * @param {number} minBackoff\n     * @returns {this}\n     */\n    setMinBackoff(minBackoff) {\n        this._minBackoff = minBackoff;\n        for (const node of this._nodes) {\n            node.setMinBackoff(minBackoff);\n        }\n        return this;\n    }\n\n    /**\n     * @internal\n     * @returns {number}\n     */\n    getNumberOfNodesForTransaction() {\n        if (this._maxNodesPerTransaction > 0) {\n            return this._maxNodesPerTransaction;\n        }\n\n        return (this._nodes.length + 3 - 1) / 3;\n    }\n\n    /**\n     * @internal\n     * @returns {AccountId[]}\n     */\n    getNodeAccountIdsForExecute() {\n        return this._getNumberOfMostHealthyNodes(\n            this.getNumberOfNodesForTransaction()\n        ).map((node) => node.accountId);\n    }\n}\n", "import ManagedNode from \"./ManagedNode.js\";\n\n/**\n * @typedef {import(\"./channel/MirrorChannel.js\").default} MirrorChannel\n * @typedef {import(\"./ManagedNodeAddress.js\").default} ManagedNodeAddress\n */\n\n/**\n * @typedef {object} NewNode\n * @property {string} address\n * @property {(address: string, cert?: string) => MirrorChannel} channelInitFunction\n */\n\n/**\n * @typedef {object} CloneNode\n * @property {MirrorNode} node\n * @property {ManagedNodeAddress} address\n */\n\n/**\n * @augments {ManagedNode<MirrorChannel>}\n */\nexport default class MirrorNode extends ManagedNode {\n    /**\n     * @param {object} props\n     * @param {NewNode=} [props.newNode]\n     * @param {CloneNode=} [props.cloneNode]\n     */\n    constructor(props = {}) {\n        super(props);\n    }\n\n    /**\n     * @returns {string}\n     */\n    getKey() {\n        return this._address.toString();\n    }\n\n    /**\n     * @returns {MirrorNode}\n     */\n    toInsecure() {\n        return new MirrorNode({\n            cloneNode: { node: this, address: this._address.toInsecure() },\n        });\n    }\n\n    /**\n     * @returns {MirrorNode}\n     */\n    toSecure() {\n        return new MirrorNode({\n            cloneNode: { node: this, address: this._address.toSecure() },\n        });\n    }\n}\n", "import MirrorNode from \"../MirrorNode.js\";\nimport ManagedNetwork from \"./ManagedNetwork.js\";\n\n/**\n * @typedef {import(\"../channel/MirrorChannel.js\").default} MirrorChannel\n */\n\n/**\n * @typedef {import(\"./Client.js\").NetworkName} NetworkName\n * @augments {ManagedNetwork<MirrorChannel, MirrorNode, string>}\n */\nexport default class MirrorNetwork extends ManagedNetwork {\n    /**\n     * @param {(address: string) => MirrorChannel} channelInitFunction\n     */\n    constructor(channelInitFunction) {\n        super(channelInitFunction);\n    }\n\n    /**\n     * @param {string[]} network\n     */\n    setNetwork(network) {\n        // eslint-disable-next-line ie11/no-collection-args\n        this._setNetwork(new Map(network.map((address) => [address, address])));\n    }\n\n    /**\n     * @returns {string[]}\n     */\n    get network() {\n        /**\n         * @type {string[]}\n         */\n        var n = [];\n\n        // eslint-disable-next-line @typescript-eslint/no-unused-vars\n        for (const node of this._nodes) {\n            n.push(node.address.toString());\n        }\n\n        return n;\n    }\n\n    /**\n     * @abstract\n     * @param {[string, string]} entry\n     * @returns {MirrorNode}\n     */\n    _createNodeFromNetworkEntry(entry) {\n        return new MirrorNode({\n            newNode: {\n                address: entry[1],\n                channelInitFunction: this._createNetworkChannel,\n            },\n        }).setMinBackoff(this._minBackoff);\n    }\n\n    /**\n     * @abstract\n     * @param {Map<string, string>} network\n     * @returns {number[]}\n     */\n    _getNodesToRemove(network) {\n        const indexes = [];\n\n        const values = Object.values(network);\n\n        for (let i = this._nodes.length - 1; i >= 0; i--) {\n            const node = this._nodes[i];\n\n            if (!values.includes(node.address.toString())) {\n                indexes.push(i);\n            }\n        }\n\n        return indexes;\n    }\n\n    /**\n     * @returns {MirrorNode}\n     */\n    getNextMirrorNode() {\n        if (this._createNetworkChannel == null) {\n            throw new Error(\"mirror network not supported on browser\");\n        }\n\n        return this._getNumberOfMostHealthyNodes(1)[0];\n    }\n}\n", "import AccountId from \"../account/AccountId.js\";\nimport AccountBalanceQuery from \"../account/AccountBalanceQuery.js\";\nimport Hbar from \"../Hbar.js\";\nimport Network from \"./Network.js\";\nimport MirrorNetwork from \"./MirrorNetwork.js\";\nimport PublicKey from \"../PublicKey.js\";\nimport PrivateKey from \"../PrivateKey.js\";\n\n/**\n * @typedef {import(\"../channel/Channel.js\").default} Channel\n * @typedef {import(\"../channel/MirrorChannel.js\").default} MirrorChannel\n */\n\n/**\n * @typedef {\"mainnet\" | \"testnet\" | \"previewnet\"} NetworkName\n */\n\n/**\n * @typedef {object} Operator\n * @property {string | PrivateKey} privateKey\n * @property {string | AccountId} accountId\n */\n\n/**\n * @typedef {object} ClientOperator\n * @property {PublicKey} publicKey\n * @property {AccountId} accountId\n * @property {(message: Uint8Array) => Promise<Uint8Array>} transactionSigner\n */\n\n/**\n * @typedef {object} ClientConfiguration\n * @property {{[key: string]: (string | AccountId)} | NetworkName} network\n * @property {string[] | NetworkName | string} [mirrorNetwork]\n * @property {Operator} [operator]\n */\n\n/**\n * @abstract\n * @template {Channel} ChannelT\n * @template {MirrorChannel} MirrorChannelT\n */\nexport default class Client {\n    /**\n     * @protected\n     * @hideconstructor\n     * @param {ClientConfiguration} [props]\n     */\n    constructor(props) {\n        /**\n         * List of mirror network URLs.\n         *\n         * @internal\n         * @type {MirrorNetwork}\n         */\n        this._mirrorNetwork = new MirrorNetwork(\n            this._createMirrorNetworkChannel()\n        );\n\n        /**\n         * Map of node account ID (as a string)\n         * to the node URL.\n         *\n         * @internal\n         * @type {Network}\n         */\n        this._network = new Network(this._createNetworkChannel());\n\n        /**\n         * @internal\n         * @type {?ClientOperator}\n         */\n        this._operator = null;\n\n        /**\n         * @private\n         * @type {Hbar}\n         */\n        this._maxTransactionFee = new Hbar(2);\n\n        /**\n         * @private\n         * @type {Hbar}\n         */\n        this._maxQueryPayment = new Hbar(1);\n\n        if (props != null) {\n            if (props.operator != null) {\n                this.setOperator(\n                    props.operator.accountId,\n                    props.operator.privateKey\n                );\n            }\n        }\n\n        this._signOnDemand = false;\n\n        this._autoValidateChecksums = false;\n\n        /** @type {number | null} */\n        this._maxAttempts = null;\n\n        /** @type {number} */\n        this._minBackoff = 250;\n\n        /** @type {number} */\n        this._maxBackoff = 8000;\n    }\n\n    /**\n     * @param {NetworkName} networkName\n     * @returns {this}\n     */\n    // eslint-disable-next-line @typescript-eslint/no-unused-vars\n    setNetworkName(networkName) {\n        this._network.setNetworkName(networkName);\n        return this;\n    }\n\n    /**\n     * @returns {string | null}\n     */\n    get networkName() {\n        return this._network.networkName;\n    }\n\n    /**\n     * @param {{[key: string]: (string | AccountId)} | NetworkName} network\n     * @returns {void}\n     */\n    // eslint-disable-next-line @typescript-eslint/no-unused-vars\n    setNetwork(network) {\n        throw new Error(\"not implemented\");\n    }\n\n    /**\n     * @returns {{[key: string]: (string | AccountId)}}\n     */\n    get network() {\n        return this._network.network;\n    }\n\n    /**\n     * @param {string[] | string | NetworkName} mirrorNetwork\n     * @returns {void}\n     */\n    // eslint-disable-next-line @typescript-eslint/no-unused-vars\n    setMirrorNetwork(mirrorNetwork) {\n        throw new Error(\"not implemented\");\n    }\n\n    /**\n     * @returns {string[]}\n     */\n    get mirrorNetwork() {\n        return this._mirrorNetwork.network;\n    }\n\n    /**\n     * @param {boolean} signOnDemand\n     */\n    setSignOnDemand(signOnDemand) {\n        this._signOnDemand = signOnDemand;\n    }\n\n    /**\n     * @returns {boolean}\n     */\n    isTransportSecurity() {\n        return this._network.isTransportSecurity();\n    }\n\n    /**\n     * @param {boolean} transportSecurity\n     * @returns {this}\n     */\n    setTransportSecurity(transportSecurity) {\n        this._network.setTransportSecurity(transportSecurity);\n        return this;\n    }\n\n    /**\n     * Set the account that will, by default, pay for transactions and queries built with this client.\n     *\n     * @param {AccountId | string} accountId\n     * @param {PrivateKey | string} privateKey\n     * @returns {this}\n     */\n    setOperator(accountId, privateKey) {\n        const key =\n            typeof privateKey === \"string\"\n                ? PrivateKey.fromString(privateKey)\n                : privateKey;\n\n        return this.setOperatorWith(accountId, key.publicKey, (message) =>\n            Promise.resolve(key.sign(message))\n        );\n    }\n\n    /**\n     * Sets the account that will, by default, pay for transactions and queries built with\n     * this client.\n     *\n     * @param {AccountId | string} accountId\n     * @param {PublicKey | string} publicKey\n     * @param {(message: Uint8Array) => Promise<Uint8Array>} transactionSigner\n     * @returns {this}\n     */\n    setOperatorWith(accountId, publicKey, transactionSigner) {\n        const accountId_ =\n            accountId instanceof AccountId\n                ? accountId\n                : AccountId.fromString(accountId);\n\n        if (this._network._ledgerId != null) {\n            accountId_.validateChecksum(this);\n        }\n\n        this._operator = {\n            transactionSigner,\n\n            accountId: accountId_,\n\n            publicKey:\n                publicKey instanceof PublicKey\n                    ? publicKey\n                    : PublicKey.fromString(publicKey),\n        };\n\n        return this;\n    }\n\n    /**\n     * @param {boolean} value\n     * @returns {this}\n     */\n    setAutoValidateChecksums(value) {\n        this._autoValidateChecksums = value;\n        return this;\n    }\n\n    /**\n     * @returns {boolean}\n     */\n    isAutoValidateChecksumsEnabled() {\n        return this._autoValidateChecksums;\n    }\n\n    /**\n     * @returns {?AccountId}\n     */\n    get operatorAccountId() {\n        return this._operator != null ? this._operator.accountId : null;\n    }\n\n    /**\n     * @returns {?PublicKey}\n     */\n    get operatorPublicKey() {\n        return this._operator != null ? this._operator.publicKey : null;\n    }\n\n    /**\n     * @returns {Hbar}\n     */\n    get maxTransactionFee() {\n        return this._maxTransactionFee;\n    }\n\n    /**\n     * Set the maximum fee to be paid for transactions\n     * executed by this client.\n     *\n     * @param {Hbar} maxTransactionFee\n     * @returns {this}\n     */\n    setMaxTransactionFee(maxTransactionFee) {\n        this._maxTransactionFee = maxTransactionFee;\n        return this;\n    }\n\n    /**\n     * @returns {Hbar}\n     */\n    get maxQueryPayment() {\n        return this._maxQueryPayment;\n    }\n\n    /**\n     * Set the maximum payment allowable for queries.\n     *\n     * @param {Hbar} maxQueryPayment\n     * @returns {Client<ChannelT, MirrorChannelT>}\n     */\n    setMaxQueryPayment(maxQueryPayment) {\n        this._maxQueryPayment = maxQueryPayment;\n        return this;\n    }\n\n    /**\n     * @returns {number}\n     */\n    get maxAttempts() {\n        return this._maxAttempts != null ? this._maxAttempts : 10;\n    }\n\n    /**\n     * @param {number} maxAttempts\n     * @returns {this}\n     */\n    setMaxAttempts(maxAttempts) {\n        this._maxAttempts = maxAttempts;\n        return this;\n    }\n\n    /**\n     * @returns {number}\n     */\n    get maxNodeAttempts() {\n        return this._network.maxNodeAttempts;\n    }\n\n    /**\n     * @param {number} maxNodeAttempts\n     * @returns {this}\n     */\n    setMaxNodeAttempts(maxNodeAttempts) {\n        this._network.setMaxNodeAttempts(maxNodeAttempts);\n        return this;\n    }\n\n    /**\n     * @returns {number}\n     */\n    get nodeWaitTime() {\n        return this._network.minBackoff;\n    }\n\n    /**\n     * @param {number} nodeWaitTime\n     * @returns {this}\n     */\n    setNodeWaitTime(nodeWaitTime) {\n        this._network.setMinBackoff(nodeWaitTime);\n        return this;\n    }\n\n    /**\n     * @returns {number}\n     */\n    get maxNodesPerTransaction() {\n        return this._network.maxNodesPerTransaction;\n    }\n\n    /**\n     * @param {number} maxNodesPerTransaction\n     * @returns {this}\n     */\n    setMaxNodesPerTransaction(maxNodesPerTransaction) {\n        this._network.setMaxNodesPerTransaction(maxNodesPerTransaction);\n        return this;\n    }\n\n    /**\n     * @param {?number} minBackoff\n     * @returns {this}\n     */\n    setMinBackoff(minBackoff) {\n        if (minBackoff == null) {\n            throw new Error(\"minBackoff cannot be null.\");\n        }\n        if (minBackoff > this._maxBackoff) {\n            throw new Error(\"minBackoff cannot be larger than maxBackoff.\");\n        }\n        this._minBackoff = minBackoff;\n        return this;\n    }\n\n    /**\n     * @returns {number}\n     */\n    get minBackoff() {\n        return this._minBackoff;\n    }\n\n    /**\n     * @param {?number} maxBackoff\n     * @returns {this}\n     */\n    setMaxBackoff(maxBackoff) {\n        if (maxBackoff == null) {\n            throw new Error(\"maxBackoff cannot be null.\");\n        } else if (maxBackoff < this._minBackoff) {\n            throw new Error(\"maxBackoff cannot be smaller than minBackoff.\");\n        }\n        this._maxBackoff = maxBackoff;\n        return this;\n    }\n\n    /**\n     * @returns {number}\n     */\n    get maxBackoff() {\n        return this._maxBackoff;\n    }\n\n    /**\n     * @param {AccountId | string} accountId\n     */\n    async ping(accountId) {\n        try {\n            await new AccountBalanceQuery({ accountId })\n                .setNodeAccountIds([\n                    accountId instanceof AccountId\n                        ? accountId\n                        : AccountId.fromString(accountId),\n                ])\n                .execute(this);\n        } catch (_) {\n            // Do nothing\n        }\n    }\n\n    async pingAll() {\n        for (const nodeAccountId of Object.values(this._network.network)) {\n            await this.ping(nodeAccountId);\n        }\n    }\n\n    /**\n     * @returns {void}\n     */\n    close() {\n        this._network.close();\n        this._mirrorNetwork.close();\n    }\n\n    /**\n     * @abstract\n     * @returns {(address: string) => ChannelT}\n     */\n    _createNetworkChannel() {\n        throw new Error(\"not implemented\");\n    }\n\n    /**\n     * @abstract\n     * @returns {(address: string) => MirrorChannelT}\n     */\n    _createMirrorNetworkChannel() {\n        throw new Error(\"not implemented\");\n    }\n}\n", "import {\n    CryptoService,\n    SmartContractService,\n    FileService,\n    ConsensusService,\n    NetworkService,\n    FreezeService,\n    TokenService,\n    ScheduleService,\n} from \"@hashgraph/proto\";\nimport * as utf8 from \"../encoding/utf8.js\";\n\n/**\n * @internal\n * @abstract\n */\nexport default class Channel {\n    /**\n     * @protected\n     */\n    constructor() {\n        /**\n         * @protected\n         * @type {?CryptoService}\n         */\n        this._crypto = null;\n\n        /**\n         * @protected\n         * @type {?SmartContractService}\n         */\n        this._smartContract = null;\n\n        /**\n         * @protected\n         * @type {?FileService}\n         */\n        this._file = null;\n\n        /**\n         * @protected\n         * @type {?ConsensusService}\n         */\n        this._consensus = null;\n\n        /**\n         * @protected\n         * @type {?FreezeService}\n         */\n        this._freeze = null;\n\n        /**\n         * @protected\n         * @type {?NetworkService}\n         */\n        this._network = null;\n\n        /**\n         * @protected\n         * @type {?TokenService}\n         */\n        this._token = null;\n\n        /**\n         * @protected\n         * @type {?ScheduleService}\n         */\n        this._schedule = null;\n    }\n\n    /**\n     * @abstract\n     * @returns {void}\n     */\n    close() {\n        throw new Error(\"not implemented\");\n    }\n\n    /**\n     * @returns {CryptoService}\n     */\n    get crypto() {\n        if (this._crypto != null) {\n            return this._crypto;\n        }\n\n        this._crypto = CryptoService.create(\n            this._createUnaryClient(\"CryptoService\")\n        );\n\n        return this._crypto;\n    }\n\n    /**\n     * @returns {SmartContractService}\n     */\n    get smartContract() {\n        if (this._smartContract != null) {\n            return this._smartContract;\n        }\n\n        this._smartContract = SmartContractService.create(\n            this._createUnaryClient(\"SmartContractService\")\n        );\n\n        return this._smartContract;\n    }\n\n    /**\n     * @returns {FileService}\n     */\n    get file() {\n        if (this._file != null) {\n            return this._file;\n        }\n\n        this._file = FileService.create(this._createUnaryClient(\"FileService\"));\n\n        return this._file;\n    }\n\n    /**\n     * @returns {ConsensusService}\n     */\n    get consensus() {\n        if (this._consensus != null) {\n            return this._consensus;\n        }\n\n        this._consensus = ConsensusService.create(\n            this._createUnaryClient(\"ConsensusService\")\n        );\n\n        return this._consensus;\n    }\n\n    /**\n     * @returns {FreezeService}\n     */\n    get freeze() {\n        if (this._freeze != null) {\n            return this._freeze;\n        }\n\n        this._freeze = FreezeService.create(\n            this._createUnaryClient(\"FreezeService\")\n        );\n\n        return this._freeze;\n    }\n\n    /**\n     * @returns {NetworkService}\n     */\n    get network() {\n        if (this._network != null) {\n            return this._network;\n        }\n\n        this._network = NetworkService.create(\n            this._createUnaryClient(\"NetworkService\")\n        );\n\n        return this._network;\n    }\n\n    /**\n     * @returns {TokenService}\n     */\n    get token() {\n        if (this._token != null) {\n            return this._token;\n        }\n\n        this._token = TokenService.create(\n            this._createUnaryClient(\"TokenService\")\n        );\n\n        return this._token;\n    }\n\n    /**\n     * @returns {ScheduleService}\n     */\n    get schedule() {\n        if (this._schedule != null) {\n            return this._schedule;\n        }\n\n        this._schedule = ScheduleService.create(\n            this._createUnaryClient(\"ScheduleService\")\n        );\n\n        return this._schedule;\n    }\n\n    /**\n     * @abstract\n     * @protected\n     * @param {string} serviceName\n     * @returns {import(\"protobufjs\").RPCImpl}\n     */\n    // eslint-disable-next-line @typescript-eslint/no-unused-vars\n    _createUnaryClient(serviceName) {\n        throw new Error(\"not implemented\");\n    }\n}\n\n// grpc-web+proto is a series of data or trailer frames\n\n// a frame is identified by a single byte (0 = data or 1 = trailer) followed by 4 bytes for the\n// length of the frame, followed by the frame data\n\n/**\n * @param {Uint8Array} data\n * @returns {ArrayBuffer}\n */\nexport function encodeRequest(data) {\n    // for our requests, we want to transfer a single data frame\n\n    const frame = new ArrayBuffer(data.byteLength + 5);\n\n    // the frame type (data) is zero and can be left default-initialized\n\n    // the length of the frame data\n    new DataView(frame, 1, 4).setUint32(0, data.length);\n\n    // copy in the frame data\n    new Uint8Array(frame, 5).set(data);\n\n    return frame;\n}\n\n/**\n * @param {ArrayBuffer} data\n * @param {number} byteOffset\n * @param {number} byteLength\n * @returns {Uint8Array}\n */\nexport function decodeUnaryResponse(\n    data,\n    byteOffset = 0,\n    byteLength = data.byteLength\n) {\n    const dataView = new DataView(data, byteOffset, byteLength);\n    let dataOffset = 0;\n\n    /** @type {?Uint8Array} */\n    let unaryResponse = null;\n\n    // 0 = successful\n    let status = 0;\n\n    while (dataOffset < dataView.byteLength) {\n        const frameByte = dataView.getUint8(dataOffset + 0);\n        const frameType = frameByte >> 7;\n        const frameByteLength = dataView.getUint32(dataOffset + 1);\n        const frameOffset = dataOffset + 5; // offset from the start of the dataView\n        if (frameOffset + frameByteLength > dataView.byteLength) {\n            throw new Error(\"(BUG) unexpected frame length past the boundary\");\n        }\n        const frameData = new Uint8Array(\n            data,\n            dataView.byteOffset + frameOffset,\n            frameByteLength\n        );\n\n        if (frameType === 0) {\n            if (unaryResponse != null) {\n                throw new Error(\n                    \"(BUG) unexpectedly received more than one data frame\"\n                );\n            }\n\n            unaryResponse = frameData;\n        } else if (frameType === 1) {\n            const trailer = utf8.decode(frameData);\n            const [trailerName, trailerValue] = trailer.split(\":\");\n\n            if (trailerName === \"grpc-status\") {\n                status = parseInt(trailerValue);\n            } else {\n                throw new Error(`(BUG) unhandled trailer, ${trailer}`);\n            }\n        } else {\n            throw new Error(`(BUG) unexpected frame type: ${frameType}`);\n        }\n\n        dataOffset += frameByteLength + 5;\n    }\n\n    if (status !== 0) {\n        throw new Error(`(BUG) unhandled grpc-status: ${status}`);\n    }\n\n    if (unaryResponse == null) {\n        throw new Error(\"(BUG) unexpectedly received no response\");\n    }\n\n    return unaryResponse;\n}\n", "import Channel, { encodeRequest, decodeUnaryResponse } from \"./Channel.js\";\n\nexport default class WebChannel extends Channel {\n    /**\n     * @param {string} address\n     */\n    constructor(address) {\n        super();\n\n        /**\n         * @type {string}\n         * @private\n         */\n        this._address = address;\n    }\n\n    /**\n     * @override\n     * @returns {void}\n     */\n    close() {\n        // do nothing\n    }\n\n    /**\n     * @override\n     * @protected\n     * @param {string} serviceName\n     * @returns {import(\"protobufjs\").RPCImpl}\n     */\n    _createUnaryClient(serviceName) {\n        return async (method, requestData, callback) => {\n            const response = await fetch(\n                `${this._address}/proto.${serviceName}/${method.name}`,\n                {\n                    method: \"POST\",\n                    headers: {\n                        \"content-type\": \"application/grpc-web+proto\",\n                        \"x-user-agent\": \"hedera-sdk-js/v2\",\n                        \"x-grpc-web\": \"1\",\n                    },\n                    body: encodeRequest(requestData),\n                }\n            );\n\n            const responseBuffer = await response.arrayBuffer();\n            const unaryResponse = decodeUnaryResponse(responseBuffer);\n\n            callback(null, unaryResponse);\n        };\n    }\n}\n", "import Client from \"./Client.js\";\nimport WebChannel from \"../channel/WebChannel.js\";\nimport AccountId from \"../account/AccountId.js\";\n\n/**\n * @typedef {import(\"./Client.js\").ClientConfiguration} ClientConfiguration\n * @typedef {import(\"./Client.js\").NetworkName} NetworkName\n */\n\nexport const Network = {\n    /**\n     * @param {string} name\n     * @returns {{[key: string]: (string | AccountId)}}\n     */\n    fromName(name) {\n        switch (name) {\n            case \"mainnet\":\n                return Network.MAINNET;\n\n            case \"testnet\":\n                return Network.TESTNET;\n\n            case \"previewnet\":\n                return Network.PREVIEWNET;\n\n            default:\n                throw new Error(`unknown network name: ${name}`);\n        }\n    },\n\n    MAINNET: {\n        \"https://grpc-web.myhbarwallet.com\": new AccountId(3),\n    },\n\n    TESTNET: {\n        \"https://grpc-web.testnet.myhbarwallet.com\": new AccountId(3),\n    },\n\n    PREVIEWNET: {\n        \"https://grpc-web.previewnet.myhbarwallet.com\": new AccountId(3),\n    },\n};\n\n/**\n * @augments {Client<WebChannel, *>}\n */\nexport default class WebClient extends Client {\n    /**\n     * @param {ClientConfiguration} [props]\n     */\n    constructor(props) {\n        super(props);\n\n        if (props != null) {\n            if (typeof props.network === \"string\") {\n                switch (props.network) {\n                    case \"mainnet\":\n                        this.setNetwork(Network.MAINNET);\n                        this.setNetworkName(\"mainnet\");\n                        break;\n\n                    case \"testnet\":\n                        this.setNetwork(Network.TESTNET);\n                        this.setNetworkName(\"testnet\");\n                        break;\n\n                    case \"previewnet\":\n                        this.setNetwork(Network.PREVIEWNET);\n                        this.setNetworkName(\"previewnet\");\n                        break;\n\n                    default:\n                        throw new Error(\n                            // eslint-disable-next-line @typescript-eslint/restrict-template-expressions\n                            `unknown network: ${props.network}`\n                        );\n                }\n            } else if (props.network != null) {\n                this.setNetwork(props.network);\n            }\n        }\n    }\n\n    /**\n     * @param {string | ClientConfiguration} data\n     * @returns {WebClient}\n     */\n    static fromConfig(data) {\n        return new WebClient(\n            typeof data === \"string\" ? JSON.parse(data) : data\n        );\n    }\n\n    /**\n     * Construct a client for a specific network.\n     *\n     * It is the responsibility of the caller to ensure that all nodes in the map are part of the\n     * same Hedera network. Failure to do so will result in undefined behavior.\n     *\n     * The client will load balance all requests to Hedera using a simple round-robin scheme to\n     * chose nodes to send transactions to. For one transaction, at most 1/3 of the nodes will be\n     * tried.\n     *\n     * @param {{[key: string]: (string | AccountId)} | import(\"./Client.js\").NetworkName} network\n     * @returns {WebClient}\n     */\n    static forNetwork(network) {\n        return new WebClient({ network });\n    }\n\n    /**\n     * @param {NetworkName} network\n     * @returns {WebClient}\n     */\n    static forName(network) {\n        return new WebClient({ network });\n    }\n\n    /**\n     * Construct a Hedera client pre-configured for Mainnet access.\n     *\n     * @returns {WebClient}\n     */\n    static forMainnet() {\n        return new WebClient({ network: \"mainnet\" });\n    }\n\n    /**\n     * Construct a Hedera client pre-configured for Testnet access.\n     *\n     * @returns {WebClient}\n     */\n    static forTestnet() {\n        return new WebClient({ network: \"testnet\" });\n    }\n\n    /**\n     * Construct a Hedera client pre-configured for Previewnet access.\n     *\n     * @returns {WebClient}\n     */\n    static forPreviewnet() {\n        return new WebClient({ network: \"previewnet\" });\n    }\n\n    /**\n     * @param {{[key: string]: (string | AccountId)} | NetworkName} network\n     * @returns {void}\n     */\n    setNetwork(network) {\n        if (typeof network === \"string\") {\n            switch (network) {\n                case \"previewnet\":\n                    this._network.setNetwork(Network.PREVIEWNET);\n                    break;\n                case \"testnet\":\n                    this._network.setNetwork(Network.TESTNET);\n                    break;\n                case \"mainnet\":\n                    this._network.setNetwork(Network.MAINNET);\n            }\n        } else {\n            this._network.setNetwork(network);\n        }\n    }\n\n    /**\n     * @param {string[] | string | NetworkName} mirrorNetwork\n     * @returns {this}\n     */\n    // eslint-disable-next-line @typescript-eslint/no-unused-vars\n    setMirrorNetwork(mirrorNetwork) {\n        if (typeof mirrorNetwork === \"string\") {\n            this._mirrorNetwork.setNetwork([]);\n        } else {\n            this._mirrorNetwork.setNetwork(mirrorNetwork);\n        }\n\n        return this;\n    }\n\n    /**\n     * @override\n     * @returns {(address: string) => WebChannel}\n     */\n    _createNetworkChannel() {\n        return (address) => new WebChannel(address);\n    }\n\n    /**\n     * @override\n     * @returns {(address: string) => *}\n     */\n    _createMirrorNetworkChannel() {\n        return () => {\n            throw new Error(\"mirror support is not supported in browsers\");\n        };\n    }\n}\n"],
  "mappings": "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V,cAAM,IAAI;AACV,cAAM,IAAI;AACV,cAAM,IAAI;AACV,eAAO,IAAI;AACX,eAAO,IAAI;AACX,eAAO,IAAI;AACX,eAAO,IAAI;AACX,eAAO,IAAI;AACX,eAAO,IAAI;AACX,YAAI,EAAE;AACN,cAAM,IAAI;AACV,cAAM,IAAI;AACV,cAAM,IAAI;AACV,cAAM,IAAI;AACV,cAAM,IAAI;AACV,cAAM,IAAI;AACV,cAAM,IAAI;AACV,cAAM,IAAI;AACV,cAAM,IAAI;AACV,eAAO,IAAI;AACX,eAAO,IAAI;AACX,eAAO,IAAI;AACX,eAAO,IAAI;AACX,eAAO,IAAI;AACX,eAAO,IAAI;AACX,eAAO,IAAI;AACX,YAAI,EAAE;AACN,cAAM,IAAI;AACV,cAAM,IAAI;AACV,cAAM,IAAI;AACV,cAAM,IAAI;AACV,cAAM,IAAI;AACV,cAAM,IAAI;AACV,cAAM,IAAI;AACV,cAAM,IAAI;AACV,eAAO,IAAI;AACX,eAAO,IAAI;AACX,eAAO,IAAI;AACX,eAAO,IAAI;AACX,eAAO,IAAI;AACX,eAAO,IAAI;AACX,eAAO,IAAI;AACX,eAAO,IAAI;AACX,YAAI,EAAE;AACN,cAAM,IAAI;AACV,cAAM,IAAI;AACV,cAAM,IAAI;AACV,cAAM,IAAI;AACV,cAAM,IAAI;AACV,cAAM,IAAI;AACV,cAAM,IAAI;AACV,eAAO,IAAI;AACX,eAAO,IAAI;AACX,eAAO,IAAI;AACX,eAAO,IAAI;AACX,eAAO,IAAI;AACX,eAAO,IAAI;AACX,eAAO,IAAI;AACX,eAAO,IAAI;AACX,eAAO,IAAI;AACX,YAAI,EAAE;AACN,cAAM,IAAI;AACV,cAAM,IAAI;AACV,cAAM,IAAI;AACV,cAAM,IAAI;AACV,cAAM,IAAI;AACV,cAAM,IAAI;AACV,eAAO,IAAI;AACX,eAAO,IAAI;AACX,eAAO,IAAI;AACX,eAAO,IAAI;AACX,eAAO,IAAI;AACX,eAAO,IAAI;AACX,eAAO,IAAI;AACX,eAAO,IAAI;AACX,eAAO,IAAI;AACX,eAAO,IAAI;AACX,YAAI,EAAE;AACN,cAAM,IAAI;AACV,cAAM,IAAI;AACV,cAAM,IAAI;AACV,cAAM,IAAI;AACV,cAAM,IAAI;AACV,eAAO,IAAI;AACX,eAAO,IAAI;AACX,eAAO,IAAI;AACX,eAAO,IAAI;AACX,eAAO,IAAI;AACX,eAAO,IAAI;AACX,eAAO,IAAI;AACX,eAAO,IAAI;AACX,eAAO,IAAI;AACX,eAAO,IAAI;AACX,eAAO,IAAI;AACX,YAAI,EAAE;AACN,cAAM,IAAI;AACV,cAAM,IAAI;AACV,cAAM,IAAI;AACV,cAAM,IAAI;AACV,eAAO,IAAI;AACX,eAAO,IAAI;AACX,eAAO,IAAI;AACX,eAAO,IAAI;AACX,eAAO,IAAI;AACX,eAAO,IAAI;AACX,eAAO,IAAI;AACX,eAAO,IAAI;AACX,eAAO,IAAI;AACX,eAAO,IAAI;AACX,eAAO,IAAI;AACX,eAAO,IAAI;AACX,YAAI,EAAE;AACN,cAAM,IAAI;AACV,cAAM,IAAI;AACV,cAAM,IAAI;AACV,eAAO,IAAI;AACX,eAAO,IAAI;AACX,eAAO,IAAI;AACX,eAAO,IAAI;AACX,eAAO,IAAI;AACX,eAAO,IAAI;AACX,eAAO,IAAI;AACX,eAAO,IAAI;AACX,eAAO,IAAI;AACX,eAAO,IAAI;AACX,eAAO,IAAI;AACX,eAAO,IAAI;AACX,eAAO,IAAI;AACX,YAAI,EAAE;AACN,cAAM,IAAI;AACV,cAAM,IAAI;AACV,eAAO,IAAI;AACX,eAAO,IAAI;AACX,eAAO,IAAI;AACX,eAAO,IAAI;AACX,eAAO,IAAI;AACX,eAAO,IAAI;AACX,eAAO,IAAI;AACX,eAAO,IAAI;AACX,eAAO,IAAI;AACX,eAAO,IAAI;AACX,eAAO,IAAI;AACX,eAAO,IAAI;AACX,eAAO,IAAI;AACX,eAAO,IAAI;AACX,YAAI,EAAE;AACN,cAAM,IAAI;AACV,eAAO,IAAI;AACX,eAAO,IAAI;AACX,eAAO,IAAI;AACX,eAAO,IAAI;AACX,eAAO,IAAI;AACX,eAAO,IAAI;AACX,eAAO,IAAI;AACX,eAAO,IAAI;AACX,eAAO,IAAI;AACX,eAAO,IAAI;AACX,eAAO,IAAI;AACX,eAAO,IAAI;AACX,eAAO,IAAI;AACX,eAAO,IAAI;AACX,eAAO,IAAI;AACX,YAAI,EAAE;AACN,eAAO,IAAI;AACX,eAAO,IAAI;AACX,eAAO,IAAI;AACX,eAAO,IAAI;AACX,eAAO,IAAI;AACX,eAAO,IAAI;AACX,eAAO,IAAI;AACX,eAAO,IAAI;AACX,eAAO,IAAI;AACX,eAAO,IAAI;AACX,eAAO,IAAI;AACX,eAAO,IAAI;AACX,eAAO,IAAI;AACX,eAAO,IAAI;AACX,eAAO,IAAI;AACX,eAAO,IAAI;AACX,YAAI,EAAE;AACN,eAAO,IAAI;AACX,eAAO,IAAI;AACX,eAAO,IAAI;AACX,eAAO,IAAI;AACX,eAAO,IAAI;AACX,eAAO,IAAI;AACX,eAAO,IAAI;AACX,eAAO,IAAI;AACX,eAAO,IAAI;AACX,eAAO,IAAI;AACX,eAAO,IAAI;AACX,eAAO,IAAI;AACX,eAAO,IAAI;AACX,eAAO,IAAI;AACX,eAAO,IAAI;AACX,eAAO,IAAI;AACX,YAAI,EAAE;AACN,eAAO,IAAI;AACX,eAAO,IAAI;AACX,eAAO,IAAI;AACX,eAAO,IAAI;AACX,eAAO,IAAI;AACX,eAAO,IAAI;AACX,eAAO,IAAI;AACX,eAAO,IAAI;AACX,eAAO,IAAI;AACX,eAAO,IAAI;AACX,eAAO,IAAI;AACX,eAAO,IAAI;AACX,eAAO,IAAI;AACX,eAAO,IAAI;AACX,eAAO,IAAI;AACX,eAAO,IAAI;AACX,YAAI,EAAE;AACN,eAAO,IAAI;AACX,eAAO,IAAI;AACX,eAAO,IAAI;AACX,eAAO,IAAI;AACX,eAAO,IAAI;AACX,eAAO,IAAI;AACX,eAAO,IAAI;AACX,eAAO,IAAI;AACX,eAAO,IAAI;AACX,eAAO,IAAI;AACX,eAAO,IAAI;AACX,eAAO,IAAI;AACX,eAAO,IAAI;AACX,eAAO,IAAI;AACX,eAAO,IAAI;AACX,eAAO,IAAI;AACX,YAAI,EAAE;AACN,eAAO,IAAI;AACX,eAAO,IAAI;AACX,eAAO,IAAI;AACX,eAAO,IAAI;AACX,eAAO,IAAI;AACX,eAAO,IAAI;AACX,eAAO,IAAI;AACX,eAAO,IAAI;AACX,eAAO,IAAI;AAC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G;AAAA,MACrD;AAAA,MAAG;AAAA,MAAG;AAAA,MAAG;AAAA,MAAI;AAAA,MAAI;AAAA,MAAG;AAAA,MAAG;AAAA,MAAI;AAAA,MAAG;AAAA,MAAI;AAAA,MAAI;AAAA,MAAG;AAAA,MAAI;AAAA,MAAG;AAAA,MAAI;AAAA,MACpD;AAAA,MAAI;AAAA,MAAI;AAAA,MAAG;AAAA,MAAG;AAAA,MAAI;AAAA,MAAG;AAAA,MAAI;AAAA,MAAI;AAAA,MAAI;AAAA,MAAG;AAAA,MAAI;AAAA,MAAG;AAAA,MAAG;AAAA,MAAI;AAAA,MAAG;AAAA,MACrD;AAAA,MAAI;AAAA,MAAI;AAAA,MAAI;AAAA,MAAI;AAAA,MAAI;AAAA,MAAI;AAAA,MAAG;AAAA,MAAG;AAAA,MAAG;AAAA,MAAI;AAAA,MAAG;AAAA,MAAG;AAAA,MAAG;AAAA,MAAG;AAAA,MAAG;AAAA,MACpD;AAAA,MAAG;AAAA,MAAI;AAAA,MAAG;AAAA,MAAI;AAAA,MAAG;AAAA,MAAG;AAAA,MAAI;AAAA,MAAI;AAAA,MAAG;AAAA,MAAI;AAAA,MAAI;AAAA,MAAI;AAAA,MAAI;AAAA,MAAG;AAAA,MAAG;AAAA;AAGvD,QAAI,KAAK;AAAA,MACP;AAAA,MAAG;AAAA,MAAG;AAAA,MAAG;AAAA,MAAI;AAAA,MAAI;AAAA,MAAI;AAAA,MAAI;AAAA,MAAG;AAAA,MAAG;AAAA,MAAG;AAAA,MAAG;AAAA,MAAI;AAAA,MAAI;AAAA,MAAI;AAAA,MAAI;AAAA,MACrD;AAAA,MAAG;AAAA,MAAI;AAAA,MAAI;AAAA,MAAG;AAAA,MAAI;AAAA,MAAG;AAAA,MAAG;AAAA,MAAI;AAAA,MAAG;AAAA,MAAG;AAAA,MAAI;AAAA,MAAG;AAAA,MAAG;AAAA,MAAI;AAAA,MAAI;AAAA,MACpD;AAAA,MAAG;AAAA,MAAG;AAAA,MAAI;AAAA,MAAI;AAAA,MAAG;AAAA,MAAG;AAAA,MAAG;AAAA,MAAI;AAAA,MAAI;AAAA,MAAI;AAAA,MAAG;AAAA,MAAI;AAAA,MAAI;AAAA,MAAI;AAAA,MAAG;AAAA,MACrD;AAAA,MAAI;AAAA,MAAG;AAAA,MAAG;AAAA,MAAI;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AAA,YACE;AAAA,YACA;AAAA;AAAA,UAEF;AAAA,YACE;AAAA,YACA;AAAA;AAAA,UAEF;AAAA,YACE;AAAA,YACA;AAAA;AAAA,UAEF;AAAA,YACE;AAAA,YACA;AAAA;AAAA,UAEF;AAAA,YACE;AAAA,YACA;AAAA;AAAA,UAEF;AAAA,YACE;AAAA,YACA;AAAA;AAAA,UAEF;AAAA,YACE;AAAA,YACA;AAAA;AAAA,UAEF;AAAA,YACE;AAAA,YACA;AAAA;AAAA,UAEF;AAAA,YACE;AAAA,YACA;AAAA;AAAA,UAEF;AAAA,YACE;AAAA,YACA;AAAA;AAAA,UAEF;AAAA,YACE;AAAA,YACA;AAAA;AAAA,UAEF;AAAA,YACE;AAAA,YACA;AAAA;AAAA,UAEF;AAAA,YACE;AAAA,YACA;AAAA;AAAA,UAEF;AAAA,YACE;AAAA,YACA;AAAA;AAAA,UAEF;AAAA,YACE;AAAA,YACA;AAAA;AAAA,UAEF;AAAA,YACE;AAAA,YACA;AAAA;AAAA,UAEF;AAAA,YACE;AAAA,YACA;AAAA;AAAA,UAEF;AAAA,YACE;AAAA,YACA;AAAA;AAAA,UAEF;AAAA,YACE;AAAA,YACA;AAAA;AAAA,UAEF;AAAA,YACE;AAAA,YACA;AAAA;AAAA,UAEF;AAAA,YACE;AAAA,YACA;AAAA;AAAA,UAEF;AAAA,YACE;AAAA,YACA;AAAA;AAAA,UAEF;AAAA,YACE;AAAA,YACA;AAAA;AAAA,UAEF;AAAA,YACE;AAAA,YACA;AAAA;AAAA,UAEF;AAAA,YACE;AAAA,YACA;AAAA;AAAA,UAEF;AAAA,YACE;AAAA,YACA;AAAA;AAAA,UAEF;AAAA,YACE;AAAA,YACA;AAAA;AAAA,UAEF;AAAA,YACE;AAAA,YACA;AAAA;AAAA,UAEF;AAAA,YACE;AAAA,YACA;AAAA;AAAA,UAEF;AAAA,YACE;AAAA,YACA;AAAA;AAAA,UAEF;AAAA,YACE;AAAA,YACA;AAAA;AAAA,UAEF;AAAA,YACE;AAAA,YACA;AAAA;AAAA,UAEF;AAAA,YACE;AAAA,YACA;AAAA;AAAA,UAEF;AAAA,YACE;AAAA,YACA;AAAA;AAAA,UAEF;AAAA,YACE;AAAA,YACA;AAAA;AAAA,UAEF;AAAA,YACE;AAAA,YACA;AAAA;AAAA,UAEF;AAAA,YACE;AAAA,YACA;AAAA;AAAA,UAEF;AAAA,YACE;AAAA,YACA;AAAA;AAAA;AAAA;AAAA,MAIN,KAAK;AAAA,QACH,KAAK;AAAA,QACL,QAAQ;AAAA,UACN;AAAA,YACE;AAAA,YACA;AAAA;AAAA,UAEF;AAAA,YACE;AAAA,YACA;AAAA;AAAA,UAEF;AAAA,YACE;AAAA,YACA;AAAA;AAAA,UAEF;AAAA,YACE;AAAA,YACA;AAAA;AAAA,UAEF;AAAA,YACE;AAAA,YACA;AAAA;AAAA,UAEF;AAAA,YACE;AAAA,YACA;AAAA;AAAA,UAEF;AAAA,YACE;AAAA,YACA;AAAA;AAAA,UAEF;AAAA,YACE;AAAA,YACA;AAAA;AAAA,UAEF;AAAA,YACE;AAAA,YACA;AAAA;AAAA,UAEF;AAAA,YACE;AAAA,YACA;AAAA;AAAA,UAEF;AAAA,YACE;AAAA,YACA;AAAA;AAAA,UAEF;AAAA,YACE;AAAA,YACA;AAAA;AAAA,UAEF;AAAA,YACE;AAAA,YACA;AAAA;AAAA,UAEF;AAAA,YACE;AAAA,YACA;AAAA;AAAA,UAEF;AAAA,YACE;AAAA,YACA;AAAA;AAAA,UAEF;AAAA,YACE;AAAA,YACA;AAAA;AAAA,UAEF;AAAA,YACE;AAAA,YACA;AAAA;AAAA,UAEF;AAAA,YACE;AAAA,YACA;AAAA;AAAA,UAEF;AAAA,YACE;AAAA,YACA;AAAA;AAAA,UAEF;AAAA,YACE;AAAA,YACA;AAAA;AAAA,UAEF;AAAA,YACE;AAAA,YACA;AAAA;AAAA,UAEF;AAAA,YACE;AAAA,YACA;AAAA;AAAA,UAEF;AAAA,YACE;AAAA,YACA;AAAA;AAAA,UAEF;AAAA,YACE;AAAA,YACA;AAAA;AAAA,UAEF;AAAA,YACE;AAAA,YACA;AAAA;AAAA,UAEF;AAAA,YACE;AAAA,YACA;AAAA;AAAA,UAEF;AAAA,YACE;AAAA,YACA;AAAA;AAAA,UAEF;AAAA,YACE;AAAA,YACA;AAAA;AAAA,UAEF;AAAA,YACE;AAAA,YACA;AAAA;AAAA,UAEF;AAAA,YACE;AAAA,YACA;AAAA;AAAA,UAEF;AAAA,YACE;AAAA,YACA;AAAA;AAAA,UAEF;AAAA,YACE;AAAA,YACA;AAAA;AAAA,UAEF;AAAA,YACE;AAAA,YACA;AAAA;AAAA,UAEF;AAAA,YACE;AAAA,YACA;AAAA;AAAA,UAEF;AAAA,YACE;AAAA,YACA;AAAA;AAAA,UAEF;AAAA,YACE;AAAA,YACA;AAAA;AAAA,UAEF;AAAA,YACE;AAAA,YACA;AAAA;AAAA,UAEF;AAAA,YACE;AAAA,YACA;AAAA;AAAA,UAEF;AAAA,YACE;AAAA,YACA;AAAA;AAAA,UAEF;AAAA,YACE;AAAA,YACA;AAAA;AAAA,UAEF;AAAA,YACE;AAAA,YACA;AAAA;AAAA,UAEF;AAAA,YACE;AAAA,YACA;AAAA;AAAA,UAEF;AAAA,YACE;AAAA,YACA;AAAA;AAAA,UAEF;AAAA,YACE;AAAA,YACA;AAAA;AAAA,UAEF;AAAA,YACE;AAAA,YACA;AAAA;AAAA,UAEF;AAAA,YACE;AAAA,YACA;AAAA;AAAA,UAEF;AAAA,YACE;AAAA,YACA;AAAA;AAAA,UAEF;AAAA,YACE;AAAA,YACA;AAAA;AAAA,UAEF;AAAA,YACE;AAAA,YACA;AAAA;AAAA,UAEF;AAAA,YACE;AAAA,YACA;AAAA;AAAA,UAEF;AAAA,YACE;AAAA,YACA;AAAA;AAAA,UAEF;AAAA,YACE;AAAA,YACA;AAAA;AAAA,UAEF;AAAA,YACE;AAAA,YACA;AAAA;AAAA,UAEF;AAAA,YACE;AAAA,YACA;AAAA;AAAA,UAEF;AAAA,YACE;AAAA,YACA;AAAA;AAAA,UAEF;AAAA,YACE;AAAA,YACA;AAAA;AAAA,UAEF;AAAA,YACE;AAAA,YACA;AAAA;AAAA,UAEF;AAAA,YACE;AAAA,YACA;AAAA;AAAA,UAEF;AAAA,YACE;AAAA,YACA;AAAA;AAAA,UAEF;AAAA,YACE;AAAA,YACA;AAAA;AAAA,UAEF;AAAA,YACE;AAAA,YACA;AAAA;AAAA,UAEF;AAAA,YACE;AAAA,YACA;AAAA;AAAA,UAEF;AAAA,YACE;AAAA,YACA;AAAA;AAAA,UAEF;AAAA,YACE;AAAA,YACA;AAAA;AAAA,UAEF;AAAA,YACE;AAAA,YACA;AAAA;AAAA,UAEF;AAAA,YACE;AAAA,YACA;AAAA;AAAA,UAEF;AAAA,YACE;AAAA,YACA;AAAA;AAAA,UAEF;AAAA,YACE;AAAA,YACA;AAAA;AAAA,UAEF;AAAA,YACE;AAAA,YACA;AAAA;AAAA,UAEF;AAAA,YACE;AAAA,YACA;AAAA;AAAA,UAEF;AAAA,YACE;AAAA,YACA;AAAA;AAAA,UAEF;AAAA,YACE;AAAA,YACA;AAAA;AAAA,UAEF;AAAA,YACE;AAAA,YACA;AAAA;AAAA,UAEF;AAAA,YACE;AAAA,YACA;AAAA;AAAA,UAEF;AAAA,YACE;AAAA,YACA;AAAA;AAAA,UAEF;AAAA,YACE;AAAA,YACA;AAAA;AAAA,UAEF;AAAA,YACE;AAAA,YACA;AAAA;AAAA,UAEF;AAAA,YACE;AAAA,YACA;AAAA;AAAA,UAEF;AAAA,YACE;AAAA,YACA;AAAA;AAAA,UAEF;AAAA,YACE;AAAA,YACA;AAAA;AAAA,UAEF;AAAA,YACE;AAAA,YACA;AAAA;AAAA,UAEF;AAAA,YACE;AAAA,YACA;AAAA;AAAA,UAEF;AAAA,YACE;AAAA,YACA;AAAA;AAAA,UAEF;AAAA,YACE;AAAA,YACA;AAAA;AAAA,UAEF;AAAA,YACE;AAAA,YACA;AAAA;AAAA,UAEF;AAAA,YACE;AAAA,YACA;AAAA;AAAA,UAEF;AAAA,YACE;AAAA,YACA;AAAA;AAAA,UAEF;AAAA,YACE;AAAA,YACA;AAAA;AAAA,UAEF;AAAA,YACE;AAAA,YACA;AAAA;AAAA,UAEF;AAAA,YACE;AAAA,YACA;AAAA;AAAA,UAEF;AAAA,YACE;AAAA,YACA;AAAA;AAAA,UAEF;AAAA,YACE;AAAA,YACA;AAAA;AAAA,UAEF;AAAA,YACE;AAAA,YACA;AAAA;AAAA,UAEF;AAAA,YACE;AAAA,YACA;AAAA;AAAA,UAEF;AAAA,YACE;AAAA,YACA;AAAA;AAAA,UAEF;AAAA,YACE;AAAA,YACA;AAAA;AAAA,UAEF;AAAA,YACE;AAAA,YACA;AAAA;AAAA,UAEF;AAAA,YACE;AAAA,YACA;A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,MAAO,CAAC,MAAM;AACtB,MAAE,MAAM,MAAO,CAAC,MAAM;AACtB,MAAE,MAAM,MAAO,CAAC,MAAM;AACtB,MAAE,MAAM,MAAO,CAAC,MAAM;AACtB,MAAE,MAAM,MAAO,CAAC,MAAM;AACtB,MAAE,MAAM,MAAO,CAAC,MAAM;AACtB,MAAE,MAAM,MAAO,CAAC,MAAM;AACtB,MAAE,KAAK,KAAM,CAAC,KAAK;AACnB,MAAE,KAAK,KAAM,CAAC,KAAK;AACnB,MAAE,MAAM,MAAO,CAAC,MAAM;AACtB,MAAE,MAAM,MAAO,CAAC,MAAM;AACtB,MAAE,MAAM,MAAO,CAAC,MAAM;AACtB,MAAE,MAAM,MAAO,CAAC,MAAM;AACtB,MAAE,MAAM,MAAO,CAAC,MAAM;AACtB,MAAE,MAAM,MAAO,CAAC,MAAM;AACtB,MAAE,MAAM,MAAO,CAAC,MAAM;AACtB,MAAE,MAAM,MAAO,CAAC,MAAM;AACtB,MAAE,KAAK,KAAM,CAAC,KAAK;AACnB,MAAE,KAAK,KAAM,CAAC,KAAK;AACnB,MAAE,MAAM,MAAO,CAAC,MAAM;AACtB,MAAE,MAAM,MAAO,CAAC,MAAM;AACtB,MAAE,MAAM,MAAO,CAAC,MAAM;AACtB,MAAE,MAAM,MAAO,CAAC,MAAM;AACtB,MAAE,MAAM,MAAO,CAAC,MAAM;AACtB,MAAE,MAAM,MAAO,CAAC,MAAM;AACtB,MAAE,MAAM,MAAO,CAAC,MAAM;AACtB,MAAE,MAAM,MAAO,CAAC,MAAM;AACtB,MAAE,KAAK,KAAM,CAAC,KAAK;AACnB,MAAE,KAAK,KAAM,CAAC,KAAK;AACnB,MAAE,MAAM,MAAO,CAAC,MAAM;AACtB,MAAE,MAAM,MAAO,CAAC,MAAM;AACtB,MAAE,MAAM,MAAO,CAAC,MAAM;AACtB,MAAE,MAAM,MAAO,CAAC,MAAM;AACtB,MAAE,MAAM,MAAO,CAAC,MAAM;AACtB,MAAE,MAAM,MAAO,CAAC,MAAM;AACtB,MAAE,MAAM,MAAO,CAAC,MAAM;AACtB,MAAE,MAAM,MAAO,CAAC,MAAM;AACtB,MAAE,KAAK,KAAM,CAAC,KAAK;AACnB,MAAE,KAAK,KAAM,CAAC,KAAK;AACnB,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AA,WACN,OAAO;AACR,eAAO;AAAA,WACN,OAAO;AACR,eAAO;AAAA,WACN,OAAO;AACR,eAAO;AAAA,WACN,OAAO;AACR,eAAO;AAAA,WACN,OAAO;AACR,eAAO;AAAA,WACN,OAAO;AACR,eAAO;AAAA,WACN,OAAO;AACR,eAAO;AAAA,WACN,OAAO;AACR,eAAO;AAAA,WACN,OAAO;AACR,eAAO;AAAA,WACN,OAAO;AACR,eAAO;AAAA,WACN,OAAO;AACR,eAAO;AAAA,WACN,OAAO;AACR,eAAO;AAAA,WACN,OAAO;AACR,eAAO;AAAA,WACN,OAAO;AACR,eAAO;AAAA,WACN,OAAO;AACR,eAAO;AAAA,WACN,OAAO;AACR,eAAO;AAAA,WACN,OAAO;AACR,eAAO;AAAA,WACN,OAAO;AACR,eAAO;AAAA,WACN,OAAO;AACR,eAAO;AAAA,WACN,OAAO;AACR,eAAO;AAAA,WACN,OAAO;AACR,eAAO;AAAA,WACN,OAAO;AACR,eAAO;AAAA,WACN,OAAO;AACR,eAAO;AAAA,WACN,OAAO;AACR,eAAO;AAAA,WACN,OAAO;AACR,eAAO;AAAA,WACN,OAAO;AACR,eAAO;AAAA,WACN,OAAO;AACR,eAAO;AAAA,WACN,OAAO;AACR,eAAO;AAAA,WACN,OAAO;AACR,eAAO;AAAA,WACN,OAAO;AACR,eAAO;AAAA,WACN,OAAO;AACR,eAAO;AAAA,WACN,OAAO;AACR,eAAO;AAAA,WACN,OAAO;AACR,eAAO;AAAA,WACN,OAAO;AACR,eAAO;AAAA,WACN,OAAO;AACR,eAAO;AAAA,WACN,OAAO;AACR,eAAO;AAAA,WACN,OAAO;AACR,eAAO;AAAA,WACN,OAAO;AACR,eAAO;AAAA,WACN,OAAO;AACR,eAAO;AAAA,WACN,OAAO;AACR,eAAO;AAAA,WACN,OAAO;AACR,eAAO;AAAA,WACN,OAAO;AACR,eAAO;AAAA,WACN,OAAO;AACR,eAAO;AAAA,WACN,OAAO;AACR,eAAO;AAAA,WACN,OAAO;AACR,eAAO;AAAA,WACN,OAAO;AACR,eAAO;AAAA,WACN,OAAO;AACR,eAAO;AAAA,WACN,OAAO;AACR,eAAO;AAAA,WACN,OAAO;AACR,eAAO;AAAA,WACN,OAAO;AACR,eAAO;AAAA,WACN,OAAO;AACR,eAAO;AAAA,WACN,OAAO;AACR,eAAO;AAAA,WACN,OAAO;AACR,eAAO;AAAA,WACN,OAAO;AACR,eAAO;AAAA,WACN,OAAO;AACR,eAAO;AAAA,WACN,OAAO;AACR,eAAO;AAAA,WACN,OAAO;AACR,eAAO;AAAA,WACN,OAAO;AACR,eAAO;AAAA,WACN,OAAO;AACR,eAAO;AAAA,WACN,OAAO;AACR,eAAO;AAAA,WACN,OAAO;AACR,eAAO;AAAA,WACN,OAAO;AACR,eAAO;AAAA,WACN,OAAO;AACR,eAAO;AAAA,WACN,OAAO;AACR,eAAO;AAAA,WACN,OAAO;AACR,eAAO;AAAA,WACN,OAAO;AACR,eAAO;AAAA,WACN,OAAO;AACR,eAAO;AAAA,WACN,OAAO;AACR,eAAO;AAAA,WACN,OAAO;AACR,eAAO;AAAA,WACN,OAAO;AACR,eAAO;AAAA,WACN,OAAO;AACR,eAAO;AAAA,WACN,OAAO;AACR,eAAO;AAAA,WACN,OAAO;AACR,eAAO;AAAA,WACN,OAAO;AACR,eAAO;AAAA,WACN,OAAO;AACR,eAAO;AAAA,WACN,OAAO;AACR,eAAO;AAAA,WACN,OAAO;AACR,eAAO;AAAA,WACN,OAAO;AACR,eAAO;AAAA,WACN,OAAO;AACR,eAAO;AAAA,WACN,OAAO;AACR,eAAO;AAAA,WACN,OAAO;AACR,eAAO;AAAA,WACN,OAAO;AACR,eAAO;AAAA,WACN,OAAO;AACR,eAAO;AAAA,WACN,OAAO;AACR,eAAO;AAAA,WACN,OAAO;AACR,eAAO;AAAA,WACN,OAAO;AACR,eAAO;AAAA,WACN,OAAO;AACR,eAAO;AAAA,WACN,OAAO;AACR,eAAO;AAAA,WACN,OAAO;AACR,eAAO;AAAA,WACN,OAAO;AACR,eAAO;AAAA,WACN,OAAO;AACR,eAAO;AAAA,WACN,OAAO;AACR,eAAO;AAAA,WACN,OAAO;AACR,eAAO;AAAA,WACN,OAAO;AACR,eAAO;AAAA,WACN,OAAO;AACR,eAAO;AAAA,WACN,OAAO;AACR,eAAO;AAAA,WACN,OAAO;AACR,eAAO;AAAA,WACN,OAAO;AACR,eAAO;AAAA,WACN,OAAO;AACR,eAAO;AAAA,WACN,OAAO;AACR,eAAO;AAAA,WACN,OAAO;AACR,eAAO;AAAA,WACN,OAAO;AACR,eAAO;AAAA,WACN,OAAO;AACR,eAAO;AAAA,WACN,OAAO;AACR,eAAO;AAAA,WACN,OAAO;AACR,eAAO;AAAA,WACN,OAAO;AACR,eAAO;AAAA,WACN,OAAO;AACR,eAAO;AAAA,WACN,OAAO;AACR,eAAO;AAAA,WACN,OAAO;AACR,eAAO;AAAA,WACN,OAAO;AACR,eAAO;AAAA,WACN,OAAO;AACR,eAAO;AAAA,WACN,OAAO;AACR,eAAO;AAAA,WACN,OAAO;AACR,eAAO;AAAA,WACN,OAAO;AACR,eAAO;AAAA,WACN,OAAO;AACR,eAAO;AAAA,WACN,OAAO;AACR,eAAO;AAAA,WACN,OAAO;AACR,eAAO;AAAA,WACN,OAAO;AACR,eAAO;AAAA,WACN,OAAO;AACR,eAAO;AAAA,WACN,OAAO;AACR,eAAO;AAAA,WACN,OAAO;AACR,eAAO;AAAA,WACN,OAAO;AACR,eAAO;AAAA,WACN,OAAO;AACR,eAAO;AAAA,WACN,OAAO;AACR,eAAO;AAAA,WACN,OAAO;AACR,eAAO;AAAA,WACN,OAAO;AACR,eAAO;AAAA,WACN,OAAO;AACR,eAAO;AAAA,WACN,OAAO;AACR,eAAO;AAAA,WACN,OAAO;AACR,eAAO;AAAA,WACN,OAAO;AACR,eAAO;AAAA,WACN,OAAO;AACR,eAAO;AAAA,WACN,OAAO;AACR,eAAO;AAAA,WACN,OAAO;AACR,eAAO;AAAA,WACN,OAAO;AACR,eAAO;AAAA,WACN,OAAO;AACR,eAAO;AAAA,WACN,OAAO;AACR,eAAO;AAAA,WACN,OAAO;AACR,eAAO;AAAA,WACN,OAAO;AACR,eAAO;AAAA,WACN,OAAO;AACR,eAAO;AAAA,WACN,OAAO;AACR,eAAO;AAAA,WACN,OAAO;AACR,eAAO;AAAA,WACN,OAAO;AACR,eAAO;AAAA,WACN,OAAO;AACR,eAAO;AAAA,WACN,OAAO;AACR,eAAO;AAAA,WACN,OAAO;AACR,eAAO;AAAA,WACN,OAAO;AACR,eAAO;AAAA,WACN,OAAO;AACR,eAAO;AAAA,WACN,OAAO;AACR,eAAO;AAAA,WACN,OAAO;AACR,eAAO;AAAA,WACN,OAAO;AACR,eAAO;AAAA,WACN,OAAO;AACR,eAAO;AAAA,WACN,OAAO;AACR,eAAO;AAAA,WACN,OAAO;AACR,eAAO;AAAA,WACN,OAAO;AACR,eAAO;AAAA,WACN,OAAO;AACR,eAAO;AAAA,WACN,OAAO;AACR,eAAO;AAAA,WACN,OAAO;AACR,eAAO;AAAA,WACN,OAAO;AACR,eAAO;AAAA,WACN,OAAO;AACR,eAAO;AAAA,WACN,OAAO;AACR,eAAO;AAAA,WACN,OAAO;AACR,eAAO;AAAA,WACN,OAAO;AACR,eAAO;AAAA,WACN,OAAO;AACR,eAAO;AAAA,WACN,OAAO;AACR,eAAO;AAAA,WACN,OAAO;AACR,eAAO;AAAA,WACN,OAAO;AACR,eAAO;AAAA,WACN,OAAO;AACR,eAAO;AAAA,WACN,OAAO;AACR,eAAO;AAAA,WACN,OAAO;AACR,eAAO;AAAA,WACN,OAAO;AACR,eAAO;AAAA,WACN,OAAO;AACR,eAAO;AAAA,WACN,OAAO;AACR,eAAO;AAAA,WACN,OAAO;AACR,eAAO;AAAA,WACN,OAAO;AACR,eAAO;AAAA,WACN,OAAO;AACR,eAAO;AAAA,WACN,OAAO;AACR,eAAO;AAAA,WACN,OAAO;AACR,eAAO;AAAA,WACN,OAAO;AACR,eAAO;AAAA,WACN,OAAO;AACR,eAAO;AAAA,WACN,OAAO;AACR,eAAO;AAAA,WACN,OAAO;AACR,eAAO;AAAA,WACN,OAAO;AACR,eAAO;AAAA,WACN,OAAO;AACR,eAAO;AAAA,WACN,OAAO;AACR,eAAO;AAAA,WACN,OAAO;AACR,eAAO;AAAA,WACN,OAAO;AACR,eAAO;AAAA,WACN,OAAO;AACR,eAAO;AAAA,WACN,OAAO;AACR,eAAO;AAAA,WACN,OAAO;AACR,eAAO;AAAA,WACN,OAAO;AACR,eAAO;AAAA,WACN,OAAO;AACR,eAAO;AAAA,WACN,OAAO;AACR,eAAO;AAAA,WACN,OAAO;AACR,eAAO;AAAA,WACN,OAAO;AACR,eAAO;AAAA,WACN,OAAO;AACR,eAAO;AAAA,WACN,OAAO;AACR,eAAO;AAAA,WACN,OAAO;AACR,eAAO;AAAA,WACN,OAAO;AACR,eAAO;AAAA,WACN,OAAO;AACR,eAAO;AAAA,WACN,OAAO;AACR,eAAO;AAAA,WACN,OAAO;AACR,eAAO;AAAA,WACN,OAAO;AACR,eAAO;AAAA,WACN,OAAO;AACR,eAAO;AAAA,WACN,OAAO;AACR,eAAO;AAAA,WACN,OAAO;AACR,eAAO;AAAA,WACN,OAAO;AACR,eAAO;AAAA,WACN,OAAO;AACR,eAAO;AAAA,WACN,OAAO;AACR,eAAO;AAAA,WACN,OAAO;AACR,eAAO;AAAA,WACN,OAAO;AACR,eAAO;AAAA,WACN,OAAO;AACR,eAAO;AAAA,WACN,OAAO;AACR,eAAO;AAAA,WACN,OAAO;AACR,eAAO;AAAA,WACN,OAAO;AACR,eAAO;AAAA,WACN,OAAO;AACR,eAAO;AAAA,WACN,OAAO;AACR,eAAO;AAAA,WACN,OAAO;AACR,eAAO;AAAA;AAEP,eAAO,YAAY,KAAK;AAAA;AAAA;AAAA,SAS7B,UAAU,MAAM;AACnB,YAAQ;AAAA,WACC;AACD,eAAO,OAAO;AAAA,WACb;AACD,eAAO,OAAO;AAAA,WACb;AACD,eAAO,OAAO;AAAA,WACb;AACD,eAAO,OAAO;AAAA,WACb;AACD,eAAO,OAAO;AAAA,WACb;AACD,eAAO,OAAO;AAAA,WACb;AACD,eAAO,OAAO;AAAA,WACb;AACD,eAAO,OAAO;AAAA,WACb;AACD,eAAO,OAAO;AAAA,WACb;AACD,eAAO,OAAO;AAAA,WACb;AACD,eAAO,OAAO;AAAA,WACb;AACD,eAAO,OAAO;AAAA,WACb;AACD,eAAO,OAAO;AAAA,WACb;AACD,eAAO,OAAO;AAAA,WACb;AACD,eAAO,OAAO;AAAA,WACb;AACD,eAAO,OAAO;AAAA,WACb;AACD,eAAO,OAAO;AAAA,WACb;AACD,eAAO,OAAO;AAAA,WACb;AACD,eAAO,OAAO;AAAA,WACb;AACD,eAAO,OAAO;AAAA,WACb;AACD,eAAO,OAAO;AAAA,WACb;AACD,eAAO,OAAO;AAAA,WACb;AACD,eAAO,OAAO;AAAA,WACb;AACD,eAAO,OAAO;AAAA,WACb;AACD,eAAO,OAAO;AAAA,WACb;AACD,eAAO,OAAO;AAAA,WACb;AACD,eAAO,OAAO;AAAA,WACb;AACD,eAAO,OAAO;AAAA,WACb;AACD,eAAO,OAAO;AAAA,WACb;AACD,eAAO,OAAO;AAAA,WACb;AACD,eAAO,OAAO;AAAA,WACb;AACD,eAAO,OAAO;AAAA,WACb;AACD,eAAO,OAAO;AAAA,WACb;AACD,eAAO,OAAO;AAAA,WACb;AACD,eAAO,OAAO;AAAA,WACb;AACD,eAAO,OAAO;AAAA,WACb;AACD,eAAO,OAAO;AAAA,WACb;AACD,eAAO,OAAO;AAAA,WACb;AACD,eAAO,OAAO;AAAA,WACb;AACD,eAAO,OAAO;AAAA,WACb;AACD,eAAO,OAAO;AAAA,WACb;AACD,eAAO,OAAO;AAAA,WACb;AACD,eAAO,OAAO;AAAA,WACb;AACD,eAAO,OAAO;AAAA,WACb;AACD,eAAO,OAAO;AAAA,WACb;AACD,eAAO,OAAO;AAAA,WACb;AACD,eAAO,OAAO;AAAA,WACb;AACD,eAAO,OAAO;AAAA,WACb;AACD,eAAO,OAAO;AAAA,WACb;AACD,eAAO,OAAO;AAAA,WACb;AACD,eAAO,OAAO;AAAA,WACb;AACD,eAAO,OAAO;AAAA,WACb;AACD,eAAO,OAAO;AAAA,WACb;AACD,eAAO,OAAO;AAAA,WACb;AACD,eAAO,OAAO;AAAA,WACb;AACD,eAAO,OAAO;AAAA,WACb;AACD,eAAO,OAAO;AAAA,WACb;AACD,eAAO,OAAO;AAAA,WACb;AACD,eAAO,OAAO;AAAA,WACb;AACD,eAAO,OAAO;AAAA,WACb;AACD,eAAO,OAAO;AAAA,WACb;AACD,eAAO,OAAO;AAAA,WACb;AACD,eAAO,OAAO;AAAA,WACb;AACD,eAAO,OAAO;AAAA,WACb;AACD,eAAO,OAAO;AAAA,WACb;AACD,eAAO,OAAO;AAAA,WACb;AACD,eAAO,OAAO;AAAA,WACb;AACD,eAAO,OAAO;AAAA,WACb;AACD,eAAO,OAAO;AAAA,WACb;AACD,eAAO,OAAO;AAAA,WACb;AACD,eAAO,OAAO;AAAA,WACb;AACD,eAAO,OAAO;AAAA,WACb;AACD,eAAO,OAAO;AAAA,WACb;AACD,eAAO,OAAO;AAAA,WACb;AACD,eAAO,OAAO;AAAA,WACb;AACD,eAAO,OAAO;AAAA,WACb;AACD,eAAO,OAAO;AAAA,WACb;AACD,eAAO,OAAO;AAAA,WACb;AACD,eAAO,OAAO;AAAA,WACb;AACD,eAAO,OAAO;AAAA,WACb;AACD,eAAO,OAAO;AAAA,WACb;AACD,eAAO,OAAO;AAAA,WACb;AACD,eAAO,OAAO;AAAA,WACb;AACD,eAAO,OAAO;AAAA,WACb;AACD,eAAO,OAAO;AAAA,WACb;AACD,eAAO,OAAO;AAAA,WACb;AACD,eAAO,OAAO;AAAA,WACb;AACD,eAAO,OAAO;AAAA,WACb;AACD,eAAO,OAAO;AAAA,WACb;AACD,eAAO,OAAO;AAAA,WACb;AACD,eAAO,OAAO;AAAA,WACb;AACD,eAAO,OAAO;AAAA,WACb;AACD,eAAO,OAAO;AAAA,WACb;AACD,eAAO,OAAO;AAAA,WACb;AACD,eAAO,OAAO;AAAA,WACb;AACD,eAAO,OAAO;AAAA,WACb;AACD,eAAO,OAAO;AAAA,WACb;AACD,eAAO,OAAO;AAAA,WACb;AACD,eAAO,OAAO;AAAA,WACb;AACD,eAAO,OAAO;AAAA,WACb;AACD,eAAO,OAAO;AAAA,WACb;AACD,eAAO,OAAO;AAAA,WACb;AACD,eAAO,OAAO;AAAA,WACb;AACD,eAAO,OAAO;AAAA,WACb;AACD,eAAO,OAAO;AAAA,WACb;AACD,eAAO,OAAO;AAAA,WACb;AACD,eAAO,OAAO;AAAA,WACb;AACD,eAAO,OAAO;AAAA,WACb;AACD,eAAO,OAAO;AAAA,WACb;AACD,eAAO,OAAO;AAAA,WACb;AACD,eAAO,OAAO;AAAA,WACb;AACD,eAAO,OAAO;AAAA,WACb;AACD,eAAO,OAAO;AAAA,WACb;AACD,eAAO,OAAO;AAAA,WACb;AACD,eAAO,OAAO;AAAA,WACb;AACD,eAAO,OAAO;AAAA,WACb;AACD,eAAO,OAAO;AAAA,WACb;AACD,eAAO,OAAO;AAAA,WACb;AACD,eAAO,OAAO;AAAA,WACb;AACD,eAAO,OAAO;AAAA,WACb;AACD,eAAO,OAAO;AAAA,WACb;AACD,eAAO,OAAO;AAAA,WACb;AACD,eAAO,OAAO;AAAA,WACb;AACD,eAAO,OAAO;AAAA,WACb;AACD,eAAO,OAAO;AAAA,WACb;AACD,eAAO,OAAO;AAAA,WACb;AACD,eAAO,OAAO;AAAA,WACb;AACD,eAAO,OAAO;AAAA,WACb;AACD,eAAO,OAAO;AAAA,WACb;AACD,eAAO,OAAO;AAAA,WACb;AACD,eAAO,OAAO;AAAA,WACb;AACD,eAAO,OAAO;AAAA,WACb;AACD,eAAO,OAAO;AAAA,WACb;AACD,eAAO,OAAO;AAAA,WACb;AACD,eAAO,OAAO;AAAA,WACb;AACD,eAAO,OAAO;AAAA,WACb;AACD,eAAO,OAAO;AAAA,WACb;AACD,eAAO,OAAO;AAAA,WACb;AACD,eAAO,OAAO;AAAA,WACb;AACD,eAAO,OAAO;AAAA,WACb;AACD,eAAO,OAAO;AAAA,WACb;AACD,eAAO,OAAO;AAAA,WACb;AACD,eAAO,OAAO;AAAA,WACb;AACD,eAAO,OAAO;AAAA,WACb;AACD,eAAO,OAAO;AAAA,WACb;AACD,eAAO,OAAO;AAAA,WACb;AACD,eAAO,OAAO;AAAA,WACb;AACD,eAAO,OAAO;AAAA,WACb;AACD,eAAO,OAAO;AAAA,WACb;AACD,eAAO,OAAO;AAAA,WACb;AACD,eAAO,OAAO;AAAA,WACb;AACD,eAAO,OAAO;AAAA,WACb;AACD,eAAO,OAAO;AAAA,WACb;AACD,eAAO,OAAO;AAAA,WACb;AACD,eAAO,OAAO;AAAA,WACb;AACD,eAAO,OAAO;AAAA,WACb;AACD,eAAO,OAAO;AAAA,WACb;AACD,eAAO,OAAO;AAAA,WACb;AACD,eAAO,OAAO;AAAA,WACb;AACD,eAAO,OAAO;AAAA,WACb;AACD,eAAO,OAAO;AAAA,WACb;AACD,eAAO,OAAO;AAAA,WACb;AACD,eAAO,OAAO;AAAA,WACb;AACD,eAAO,OAAO;AAAA,WACb;AACD,eAAO,OAAO;AAAA,WACb;AACD,eAAO,OAAO;AAAA,WACb;AACD,eAAO,OAAO;AAAA,WACb;AACD,eAAO,OAAO;AAAA,WACb;AACD,eAAO,OAAO;AAAA,WACb;AACD,eAAO,OAAO;AAAA,WACb;AACD,eAAO,OAAO;AAAA,WACb;AACD,eAAO,OAAO;AAAA,WACb;AACD,eAAO,OAAO;AAAA,WACb;AACD,eAAO,OAAO;AAAA,WACb;AACD,eAAO,OAAO;AAAA,WACb;AACD,eAAO,OAAO;AAAA,WACb;AACD,eAAO,OAAO;AAAA,WACb;AACD,eAAO,OAAO;AAAA,WACb;AACD,eAAO,OAAO;AAAA,WACb;AACD,eAAO,OAAO;AAAA,WACb;AACD,eAAO,OAAO;AAAA,WACb;AACD,eAAO,OAAO;AAAA,WACb;AACD,eAAO,OAAO;AAAA,WACb;AACD,eAAO,OAAO;AAAA,WACb;AACD,eAAO,OAAO;AAAA,WACb;AACD,eAAO,OAAO;AAAA,WACb;AACD,eAAO,OAAO;AAAA,WACb;AACD,eAAO,OAAO;AAAA,WACb;AACD,eAAO,OAAO;AAAA,WACb;AACD,eAAO,OAAO;AAAA,WACb;AACD,eAAO,OAAO;AAAA,WACb;AACD,eAAO,OAAO;AAAA,WACb;AACD,eAAO,OAAO;AAAA,WACb;AACD,eAAO,OAAO;AAAA,WACb;AACD,eAAO,OAAO;AAAA,WACb;AACD,eAAO,OAAO;AAAA,WACb;AACD,eAAO,OAAO;AAAA,WACb;AACD,eAAO,OAAO;AAAA,WACb;AACD,eAAO,OAAO;AAAA,WACb;AACD,eAAO,OAAO;AAAA,WACb;AACD,eAAO,OAAO;AAAA,WACb;AACD,eAAO,OAAO;AAAA,WACb;AACD,eAAO,OAAO;AAAA,WACb;AACD,eAAO,OAAO;AAAA,WACb;AACD,eAAO,OAAO;AAAA,WACb;AACD,eAAO,OAAO;AAAA,WACb;AACD,eAAO,OAAO;AAAA,WACb;AACD,eAAO,OAAO;AAAA,WACb;AACD,eAAO,OAAO;AAAA,WACb;AACD,eAAO,OAAO;AAAA,WACb;AACD,eAAO,OAAO;AAAA,WACb;AACD,eAAO,OAAO;AAAA,WACb;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KAAM,CAAC,KAAK;AACnB,MAAE,MAAM,MAAO,CAAC,MAAM;AACtB,MAAE,MAAM,MAAO,CAAC,MAAM;AACtB,MAAE,MAAM,MAAO,CAAC,MAAM;AACtB,MAAE,MAAM,MAAO,CAAC,MAAM;AACtB,MAAE,MAAM,MAAO,CAAC,MAAM;AACtB,MAAE,MAAM,MAAO,CAAC,MAAM;AACtB,MAAE,MAAM,MAAO,CAAC,MAAM;AACtB,MAAE,MAAM,MAAO,CAAC,MAAM;AACtB,MAAE,KAAK,KAAM,CAAC,KAAK;AACnB,MAAE,KAAK,KAAM,CAAC,KAAK;AACnB,MAAE,MAAM,MAAO,CAAC,MAAM;AACtB,MAAE,MAAM,MAAO,CAAC,MAAM;AACtB,MAAE,MAAM,MAAO,CAAC,MAAM;AACtB,MAAE,MAAM,MAAO,CAAC,MAAM;AACtB,MAAE,MAAM,MAAO,CAAC,MAAM;AACtB,MAAE,MAAM,MAAO,CAAC,MAAM;AACtB,MAAE,MAAM,MAAO,CAAC,MAAM;AACtB,MAAE,MAAM,MAAO,CAAC,MAAM;AACtB,MAAE,KAAK,KAAM,CAAC,KAAK;AACnB,MAAE,KAAK,KAAM,CAAC,KAAK;AACnB,MAAE,MAAM,MAAO,CAAC,MAAM;AACtB,MAAE,MAAM,MAAO,CAAC,MAAM;AACtB,MAAE,MAAM,MAAO,CAAC,MAAM;AACtB,MAAE,MAAM,MAAO,CAAC,MAAM;AACtB,MAAE,MAAM,MAAO,CAAC,MAAM;AACtB,MAAE,MAAM,MAAO,CAAC,MAAM;AACtB,MAAE,MAAM,MAAO,CAAC,MAAM;AACtB,MAAE,MAAM,MAAO,CAAC,MAAM;AACtB,MAAE,KAAK,KAAM,CAAC,KAAK;AACnB,MAAE,KAAK,KAAM,CAAC,KAAK;AACnB,MAAE,MAAM,MAAO,CAAC,MAAM;AACtB,MAAE,MAAM,MAAO,CAAC,MAAM;AACtB,MAAE,MAAM,MAAO,CAAC,MAAM;AACtB,MAAE,MAAM,MAAO,CAAC,MAAM;AACtB,MAAE,MAAM,MAAO,CAAC,MAAM;AACtB,MAAE,MAAM,MAAO,CAAC,MAAM;AACtB,MAAE,MAAM,MAAO,CAAC,MAAM;AACtB,MAAE,MAAM,MAAO,CAAC,MAAM;AAEtB,M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A;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAqBN,IAAM,gBAAgB;AAAA,EACzB,SAAS;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,EAkBT,SAAS;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,EAkBT,SAAS;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,EAkBT,SAAS;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,EAkBT,SAAS;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAqBN,IAAM,gBAAgB;AAAA,EACzB,SAAS;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,EAkBT,SAAS;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,EAkBT,SAAS;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,EAkBT,SAAS;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,EAkBT,SAAS;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,EAkBT,SAAS;AAAA,EACT,SAAS;AAAA,EACT,UAAU;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;A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",
  "names": []
}
