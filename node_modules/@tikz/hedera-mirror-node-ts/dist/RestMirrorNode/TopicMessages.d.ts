import { filterKeys } from "./helpers/filterKeys";
import { BaseMirrorClient, OptionalFilters } from "./";
import { HasMoreMirrorNode } from "./baseClasses/HasMoreMirrorNode";
interface ConsensusParams {
    [filterKeys.SEQUENCE_NUMBER]: OptionalFilters;
}
export declare class TopicMessages extends HasMoreMirrorNode<ConsensusParams, MessagesResponse> {
    protected url: string;
    private topicId?;
    protected params: Partial<ConsensusParams>;
    constructor(mirrorNodeClient: BaseMirrorClient, url: string, topicId?: string | undefined);
    static v1(mirrorNodeClient: BaseMirrorClient, topicId?: string): TopicMessages;
    sequenceNumber(val: ConsensusParams['sequencenumber']): this;
    setTopicId(val: string): this;
    get(): Promise<MessagesResponse>;
}
export interface MessagesResponse {
    links: Links;
    messages: Message[];
}
interface Message {
    consensus_timestamp: string;
    topic_id: string;
    message: string;
    running_hash: string;
    running_hash_version: number;
    sequence_number: number;
}
interface Links {
    next: string;
}
export {};
