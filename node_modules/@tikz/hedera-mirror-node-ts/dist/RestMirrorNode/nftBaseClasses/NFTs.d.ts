import { filterKeys, OptionalFilters, BaseMirrorClient, HasMoreMirrorNode } from "..";
interface NFTParams {
    [filterKeys.ACCOUNT_ID]: OptionalFilters;
}
export declare class NFTs extends HasMoreMirrorNode<NFTParams, NFTsResponse> {
    protected url: string;
    protected params: Partial<NFTParams>;
    private tokenId;
    constructor(mirrorClient: BaseMirrorClient, url: string, tokenId?: string);
    static v1(mirrorClient: BaseMirrorClient, tokenId?: string): NFTs;
    setAccountId(val: NFTParams['account.id']): this;
    setTokenId(val: string): this;
    get(): Promise<NFTsResponse>;
}
export interface NFTsResponse {
    nfts: NFT[];
    links: Links;
}
interface Links {
    next?: any;
}
export interface NFT {
    account_id: string;
    created_timestamp: string;
    deleted: boolean;
    metadata: string;
    modified_timestamp: string;
    serial_number: number;
    token_id: string;
}
export {};
