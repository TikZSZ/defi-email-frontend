"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
exports.HasMoreMirrorNode = void 0;
const __1 = require("..");
const BaseMirrorNode_1 = require("./BaseMirrorNode");
class HasMoreMirrorNode extends BaseMirrorNode_1.BaseMirrorNode {
    constructor() {
        super(...arguments);
        this.basicParams = {};
        this.fetch = async (url) => {
            var _a;
            const res = await this.mirrorClient.fetch(url, this.completeParams);
            this.nextLink = (_a = res.links) === null || _a === void 0 ? void 0 : _a.next;
            return res;
        };
    }
    order(order) {
        this.basicParams[__1.filterKeys.ORDER] = order;
        return this;
    }
    setLimit(limit) {
        this.basicParams[__1.filterKeys.LIMIT] = limit;
        return this;
    }
    timestamp(timestamp) {
        this.basicParams[__1.filterKeys.TIMESTAMP] = timestamp;
        return this;
    }
    get completeParams() {
        return Object.assign(Object.assign({}, this.basicParams), this.params);
    }
    async next() {
        var _a;
        if (!this.nextLink)
            return null;
        const res = await this.mirrorClient.fetch(this.nextLink, {});
        this.nextLink = (_a = res.links) === null || _a === void 0 ? void 0 : _a.next;
        return res;
    }
}
exports.HasMoreMirrorNode = HasMoreMirrorNode;
